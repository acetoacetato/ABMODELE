{"version":3,"file":"ej2-circulargauge.min.js","sources":["../../src/circular-gauge/utils/helper.js","../../src/circular-gauge/model/theme.js","../../src/circular-gauge/model/base.js","../../src/circular-gauge/axes/axis.js","../../src/circular-gauge/annotations/annotations.js","../../src/circular-gauge/model/constants.js","../../src/circular-gauge/user-interaction/tooltip.js","../../src/circular-gauge/axes/axis-renderer.js","../../src/circular-gauge/axes/pointer-renderer.js","../../src/circular-gauge/axes/axis-panel.js","../../src/circular-gauge/circular-gauge.js","../../src/global.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * Specifies Circular-Gauge Helper methods\n */\nimport { compile as templateComplier } from '@syncfusion/ej2-base';\nimport { merge } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\nimport { createElement, remove, setStyleAttribute } from '@syncfusion/ej2-base';\n/**\n * Function to measure the height and width of the text.\n * @param  {string} text\n * @param  {FontModel} font\n * @param  {string} id\n * @returns Size\n * @private\n */\nexport function measureText(text, font) {\n    var htmlObject = document.getElementById('gauge-measuretext');\n    if (htmlObject === null) {\n        htmlObject = createElement('text', { id: 'gauge-measuretext' });\n        document.body.appendChild(htmlObject);\n    }\n    var style = 'position: absolute; visibility: hidden;' +\n        ';left: 0; top: -100; white-space: nowrap;' + getFontStyle(font);\n    htmlObject.innerHTML = text;\n    htmlObject.setAttribute('style', style);\n    return new Size(htmlObject.clientWidth, htmlObject.clientHeight);\n}\n/**\n * Function to find number from string\n * * @returns number\n * @private\n */\nexport function toPixel(value, maxDimension) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (maxDimension / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Function to get the style from FontModel.\n * @returns string\n * @private\n */\nexport function getFontStyle(font) {\n    var style = '';\n    style = 'font-size:' + font.size +\n        '; font-style:' + font.fontStyle + '; font-weight:' + font.fontWeight +\n        '; font-family:' + font.fontFamily + ';opacity:' + font.opacity +\n        '; color:' + font.color + ';';\n    return style;\n}\n/**\n * Function to set style to the element.\n * @private\n */\nexport function setStyles(element, fill, border) {\n    setStyleAttribute(element, {\n        'stroke': border.color, 'stroke-width': border.width,\n        'fill': fill\n    });\n}\n/**\n * Function to measure the element rect.\n * @returns ClientRect\n * @private\n */\nexport function measureElementRect(element) {\n    var bounds;\n    document.body.appendChild(element);\n    bounds = element.getBoundingClientRect();\n    removeElement(element.id);\n    return bounds;\n}\n/**\n * Function to convert the number from string.\n * @returns number\n * @private\n */\nexport function stringToNumber(value, containerSize) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (containerSize / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Function to create the text element.\n * @returns Element\n * @private\n */\nexport function textElement(options, font, color, parent, styles) {\n    var renderOptions = {};\n    var htmlObject;\n    var renderer = new SvgRenderer('');\n    var style = styles + ' font-size:' + font.size + '; font-style:' + font.fontStyle +\n        ' ; font-weight:' + font.fontWeight + '; font-family:' + font.fontFamily + ';';\n    renderOptions = {\n        'id': options.id,\n        'x': options.x,\n        'y': options.y,\n        'fill': color,\n        'text-anchor': options.anchor,\n        'transform': options.transform,\n        'opacity': font.opacity,\n        'dominant-baseline': options.baseLine,\n        'style': style\n    };\n    htmlObject = renderer.createText(renderOptions, options.text);\n    parent.appendChild(htmlObject);\n    return htmlObject;\n}\n/**\n * Function to append the path to the element.\n * @returns Element\n * @private\n */\nexport function appendPath(options, element, gauge, functionName) {\n    functionName = functionName ? functionName : 'Path';\n    var htmlObject = gauge.renderer['draw' + functionName](options);\n    htmlObject.setAttribute('transform', options.transform);\n    htmlObject.setAttribute('style', options.style);\n    element.appendChild(htmlObject);\n    return htmlObject;\n}\n/**\n * Function to calculate the sum of array values.\n * @returns number\n * @private\n */\nexport function calculateSum(from, to, values) {\n    var sum = 0;\n    var length = values.length;\n    for (; from < length; from++) {\n        sum += values[from];\n    }\n    return sum;\n}\n/**\n * Function to calculate the value for linear animation effect\n * @param currentTime\n * @param startValue\n * @param endValue\n * @param duration\n * @private\n */\nexport function linear(currentTime, startValue, endValue, duration) {\n    return -endValue * Math.cos(currentTime / duration * (Math.PI / 2)) + endValue + startValue;\n}\n/**\n * Function to get the angle from value for circular gauge.\n * @returns number\n * @private\n */\nexport function getAngleFromValue(value, maximumValue, minimumValue, startAngle, endAngle, isClockWise) {\n    var angle;\n    endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n    startAngle -= 90;\n    endAngle -= 90;\n    if (isClockWise) {\n        angle = ((value - minimumValue) * (getDegree(startAngle, endAngle) / (maximumValue - minimumValue))) + startAngle;\n    }\n    else {\n        angle = endAngle - ((value - minimumValue) * (getDegree(startAngle, endAngle) / (maximumValue - minimumValue)));\n        angle = angle < 0 ? 360 + angle : angle;\n    }\n    angle = Math.round(angle) >= 360 ? (angle - 360) : Math.round(angle) < 0 ? (360 + angle) : angle;\n    return angle;\n}\n/**\n * Function to get the degree for circular gauge.\n * @returns number\n * @private\n */\nexport function getDegree(startAngle, endAngle) {\n    var degree = endAngle - startAngle;\n    return degree < 0 ? (degree + 360) : degree;\n}\n/**\n * Function to get the value from angle for circular gauge.\n * @returns number\n * @private\n */\nexport function getValueFromAngle(angle, maximumValue, minimumValue, startAngle, endAngle, isClockWise) {\n    endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n    angle = angle < startAngle ? (angle + 360) : angle;\n    if (isClockWise) {\n        return (((angle - startAngle) / getDegree(startAngle, endAngle)) * (maximumValue - minimumValue)) + minimumValue;\n    }\n    else {\n        return maximumValue - ((((angle - startAngle) / getDegree(startAngle, endAngle)) * (maximumValue - minimumValue)) + minimumValue);\n    }\n}\n/**\n * Function to check whether it's a complete circle for circular gauge.\n * @returns boolean\n * @private\n */\nexport function isCompleteAngle(startAngle, endAngle) {\n    var totalAngle = endAngle - startAngle;\n    totalAngle = totalAngle <= 0 ? (totalAngle + 360) : totalAngle;\n    return Math.floor(totalAngle / 360) !== 0;\n}\n/**\n * Function to get angle from location for circular gauge.\n * @returns number\n * @private\n */\nexport function getAngleFromLocation(center, point) {\n    var angle = Math.atan2((point.y - center.y), (point.x - center.x));\n    angle = Math.round((angle < 0 ? (6.283 + angle) : angle) * (180 / Math.PI)) - 270;\n    angle += angle < 0 ? 360 : 0;\n    return angle;\n}\n/**\n * Function to get the location from angle for circular gauge.\n * @returns GaugeLocation\n * @private\n */\nexport function getLocationFromAngle(degree, radius, center) {\n    var radian = (degree * Math.PI) / 180;\n    return new GaugeLocation(Math.cos(radian) * radius + center.x, Math.sin(radian) * radius + center.y);\n}\n/**\n * Function to get the path direction of the circular gauge.\n * @returns string\n * @private\n */\nexport function getPathArc(center, start, end, radius, startWidth, endWidth) {\n    end -= isCompleteAngle(start, end) ? 0.0001 : 0;\n    var degree = getDegree(start, end);\n    var startRadius = radius - startWidth;\n    var endRadius = radius - endWidth;\n    var arcRadius = radius - ((startWidth + endWidth) / 2);\n    if (startWidth !== undefined && endWidth !== undefined) {\n        return getRangePath(getLocationFromAngle(start, radius, center), getLocationFromAngle(end, radius, center), getLocationFromAngle(start, startRadius, center), getLocationFromAngle(end, endRadius, center), radius, arcRadius, arcRadius, (degree < 180) ? 0 : 1);\n    }\n    else {\n        return getCirclePath(getLocationFromAngle(start, radius, center), getLocationFromAngle(end, radius, center), radius, (degree < 180) ? 0 : 1);\n    }\n}\n/**\n * Function to get the range path direction of the circular gauge.\n * @returns string\n * @private\n */\nexport function getRangePath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y +\n        ' A ' + radius + ' ' + radius + ' 0 ' +\n        clockWise + ' 1 ' + end.x + ' ' + end.y +\n        ' L ' + innerEnd.x + ' ' + innerEnd.y +\n        ' A ' + endRadius + ' ' + startRadius + ' 0 ' +\n        clockWise + ' 0 ' + innerStart.x + ' ' + innerStart.y + ' Z';\n}\n/**\n * Function to get the rounded path direction of the circular gauge.\n * @returns string\n * @private\n */\nexport function getRoundedPathArc(center, actualStart, actualEnd, oldStart, oldEnd, radius, startWidth, endWidth) {\n    actualEnd -= isCompleteAngle(actualStart, actualEnd) ? 0.0001 : 0;\n    var degree = getDegree(actualStart, actualEnd);\n    var startRadius = radius - startWidth;\n    var endRadius = radius - endWidth;\n    var arcRadius = radius - ((startWidth + endWidth) / 2);\n    return getRoundedPath(getLocationFromAngle(actualStart, radius, center), getLocationFromAngle(actualEnd, radius, center), getLocationFromAngle(oldEnd, radius, center), getLocationFromAngle(oldEnd, endRadius, center), getLocationFromAngle(oldStart, radius, center), getLocationFromAngle(oldStart, startRadius, center), getLocationFromAngle(actualStart, startRadius, center), getLocationFromAngle(actualEnd, endRadius, center), radius, arcRadius, arcRadius, (degree < 180) ? 0 : 1);\n}\n/**\n * Function to get the rounded range path direction of the circular gauge.\n * @returns string\n * @private\n */\nexport function getRoundedPath(start, end, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart, innerStart, innerEnd, radius, startRadius, endRadius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y +\n        ' A ' + radius + ' ' + radius + ' 0 ' +\n        clockWise + ' 1 ' + end.x + ' ' + end.y +\n        ' C ' + outerOldEnd.x + ' ' + outerOldEnd.y + ' ' + innerOldEnd.x + ' ' +\n        innerOldEnd.y + ' ' + innerEnd.x + ' ' + innerEnd.y +\n        ' A ' + endRadius + ' ' + startRadius + ' 0 ' +\n        clockWise + ' 0 ' + innerStart.x + ' ' + innerStart.y +\n        ' C ' + innerOldStart.x + ' ' + innerOldStart.y + ' ' + outerOldStart.x + ' ' +\n        outerOldStart.y + ' ' + start.x + ' ' + start.y + ' Z';\n}\n/**\n * Function to calculate the complete path arc of the circular gauge.\n * @returns string\n * @private\n */\nexport function getCompleteArc(center, start, end, radius, innerRadius) {\n    end -= isCompleteAngle(start, end) ? 0.0001 : 0;\n    var degree = getDegree(start, end);\n    return getCompletePath(center, getLocationFromAngle(start, radius, center), getLocationFromAngle(end, radius, center), radius, getLocationFromAngle(start, innerRadius, center), getLocationFromAngle(end, innerRadius, center), innerRadius, (degree < 180) ? 0 : 1);\n}\n/**\n * Function to get the circular path direction of the circular gauge.\n * @returns string\n * @private\n */\nexport function getCirclePath(start, end, radius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' +\n        radius + ' 0 ' + clockWise + ' 1 ' + end.x + ' ' + end.y;\n}\n/**\n * Function to get the complete path direction of the circular gauge.\n * @returns string\n * @private\n */\nexport function getCompletePath(center, start, end, radius, innerStart, innerEnd, innerRadius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' + radius + ' 0 ' + clockWise +\n        ' 1 ' + end.x + ' ' + end.y + ' L ' + innerEnd.x + ' ' + innerEnd.y + ' A ' + innerRadius +\n        ' ' + innerRadius + ' 0 ' + clockWise + ',0 ' + innerStart.x + ' ' + innerStart.y + ' Z';\n}\n/**\n * Function to get element from id.\n * @returns Element\n * @private\n */\nexport function getElement(id) {\n    return document.getElementById(id);\n}\n/**\n * Function to compile the template function for circular gauge.\n * @returns Function\n * @private\n */\nexport function getTemplateFunction(template) {\n    var templateFn = null;\n    var e;\n    try {\n        if (document.querySelectorAll(template).length) {\n            if ((template.charAt(0) !== 'a' || template.charAt(0) !== 'A') && template.length !== 1) {\n                templateFn = templateComplier(document.querySelector(template).innerHTML.trim());\n            }\n        }\n    }\n    catch (e) {\n        templateFn = templateComplier(template);\n    }\n    return templateFn;\n}\n/**\n * Function to remove the element from id.\n * @private\n */\nexport function removeElement(id) {\n    var element = getElement(id);\n    if (element) {\n        remove(element);\n    }\n}\n/**\n * Function to get current point for circular gauge using element id.\n * @returns IVisiblePointer\n * @private\n */\nexport function getPointer(targetId, gauge) {\n    var tempString;\n    tempString = targetId.replace(gauge.element.id, '').split('_Axis_')[1];\n    return {\n        axisIndex: +tempString[0],\n        pointerIndex: +tempString[tempString.length - 1]\n    };\n}\nexport function getElementSize(template, gauge, parent) {\n    var elementSize;\n    var element;\n    var templateFn = getTemplateFunction(template);\n    var tooltipData = templateFn ? templateFn({}, null, null, gauge.element.id + 'Template') : [];\n    if (templateFn && tooltipData.length) {\n        element = gauge.createElement('div', { id: gauge.element.id + '_Measure_Element' });\n        gauge.element.appendChild(element);\n        var templateElement = templateFn({}, null, null, gauge.element.id + 'Template');\n        var templateLength = templateElement.length;\n        while (templateLength > 0) {\n            element.appendChild(templateElement[0]);\n            templateLength--;\n        }\n        parent.appendChild(element);\n        elementSize = new Size(parent.getBoundingClientRect().width, parent.getBoundingClientRect().height);\n        remove(element);\n    }\n    return elementSize;\n}\n/**\n * Function to get the mouse position\n * @param pageX\n * @param pageY\n * @param element\n */\nexport function getMousePosition(pageX, pageY, element) {\n    var elementRect = element.getBoundingClientRect();\n    var pageXOffset = element.ownerDocument.defaultView.pageXOffset;\n    var pageYOffset = element.ownerDocument.defaultView.pageYOffset;\n    var clientTop = element.ownerDocument.documentElement.clientTop;\n    var clientLeft = element.ownerDocument.documentElement.clientLeft;\n    var positionX = elementRect.left + pageXOffset - clientLeft;\n    var positionY = elementRect.top + pageYOffset - clientTop;\n    return new GaugeLocation((pageX - positionX), (pageY - positionY));\n}\n/**\n * Function to convert the label using formar for cirular gauge.\n * @returns string\n * @private\n */\nexport function getLabelFormat(format) {\n    var customLabelFormat = format && format.match('{value}') !== null;\n    var skeleton = customLabelFormat ? '' : format;\n    return skeleton;\n}\n/**\n * Function to calculate the marker shape for circular gauge.\n * @returns PathOption\n * @private\n */\nexport function calculateShapes(location, shape, size, url, options) {\n    var path;\n    var width = size.width;\n    var height = size.height;\n    var locX = location.x;\n    var locY = location.y;\n    var x = location.x + (-width / 2);\n    var y = location.y + (-height / 2);\n    switch (shape) {\n        case 'Circle':\n            merge(options, { 'rx': width / 2, 'ry': height / 2, 'cx': locX, 'cy': locY });\n            break;\n        case 'Diamond':\n            path = 'M' + ' ' + x + ' ' + locY + ' ' +\n                'L' + ' ' + locX + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + locY + ' ' +\n                'L' + ' ' + locX + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + locY + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'Rectangle':\n            path = 'M' + ' ' + x + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (locY + (-height / 2)) + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'Triangle':\n            path = 'M' + ' ' + locX + ' ' + locY + ' ' +\n                'L' + ' ' + (locX - height) + ' ' + (locY - (width / 2)) +\n                'L' + ' ' + (locX - height) + ' ' + (locY + (width / 2)) + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'InvertedTriangle':\n            path = 'M' + ' ' + locX + ' ' + locY + ' ' +\n                'L' + ' ' + (locX + height) + ' ' + (locY - (width / 2)) +\n                'L' + ' ' + (locX + height) + ' ' + (locY + (width / 2)) + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'Image':\n            merge(options, { 'href': url, 'height': height, 'width': width, x: x, y: y });\n            break;\n    }\n    return options;\n}\n/**\n * Function to get range color from value for circular gauge.\n * @returns string\n * @private\n */\nexport function getRangeColor(value, ranges, color) {\n    var min = 0;\n    var max = 0;\n    var currentRange = ranges.filter(function (range) {\n        min = Math.min(range.start, range.end);\n        max = Math.max(range.start, range.end);\n        return (value >= min && max >= value);\n    });\n    return currentRange.length ? currentRange[0].rangeColor : color;\n}\n/** @private */\nvar CustomizeOption = /** @class */ (function () {\n    function CustomizeOption(id) {\n        this.id = id;\n    }\n    return CustomizeOption;\n}());\nexport { CustomizeOption };\n/** @private */\nvar PathOption = /** @class */ (function (_super) {\n    __extends(PathOption, _super);\n    function PathOption(id, fill, width, color, opacity, dashArray, d, transform, style) {\n        if (transform === void 0) { transform = ''; }\n        if (style === void 0) { style = ''; }\n        var _this = _super.call(this, id) || this;\n        _this.opacity = opacity;\n        _this.fill = fill;\n        _this.stroke = color;\n        _this['stroke-width'] = width;\n        _this['stroke-dasharray'] = dashArray;\n        _this.d = d;\n        _this.transform = transform;\n        _this.style = style;\n        return _this;\n    }\n    return PathOption;\n}(CustomizeOption));\nexport { PathOption };\n/** @private */\nvar RectOption = /** @class */ (function (_super) {\n    __extends(RectOption, _super);\n    function RectOption(id, fill, border, opacity, rect) {\n        var _this = _super.call(this, id) || this;\n        _this.y = rect.y;\n        _this.x = rect.x;\n        _this.height = rect.height;\n        _this.width = rect.width;\n        _this.opacity = opacity;\n        _this.fill = fill;\n        _this.stroke = border.color;\n        _this['stroke-width'] = border.width;\n        return _this;\n    }\n    return RectOption;\n}(CustomizeOption));\nexport { RectOption };\n/**\n * Internal class size\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    return Size;\n}());\nexport { Size };\n/**\n * Internal use of circular gauge location\n */\nvar GaugeLocation = /** @class */ (function () {\n    function GaugeLocation(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    return GaugeLocation;\n}());\nexport { GaugeLocation };\n/** @private */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    return Rect;\n}());\nexport { Rect };\n/** @private */\nvar TextOption = /** @class */ (function (_super) {\n    __extends(TextOption, _super);\n    function TextOption(id, x, y, anchor, text, transform, baseLine) {\n        if (transform === void 0) { transform = ''; }\n        var _this = _super.call(this, id) || this;\n        _this.transform = '';\n        _this.baseLine = 'auto';\n        _this.x = x;\n        _this.y = y;\n        _this.anchor = anchor;\n        _this.text = text;\n        _this.transform = transform;\n        _this.baseLine = baseLine;\n        return _this;\n    }\n    return TextOption;\n}(CustomizeOption));\nexport { TextOption };\n/** @private */\nvar VisibleLabels = /** @class */ (function () {\n    function VisibleLabels(text, value, size) {\n        this.text = text;\n        this.value = value;\n        this.size = size;\n    }\n    return VisibleLabels;\n}());\nexport { VisibleLabels };\n","/**\n * Specifies gauge Themes\n */\nexport var Theme;\n(function (Theme) {\n    /** @private */\n    Theme.axisLabelFont = {\n        size: '12px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n})(Theme || (Theme = {}));\n/** @private */\nexport function getRangePalette(theme) {\n    var palette = ['#50c917', '#27d5ff', '#fcde0b', '#ffb133', '#ff5985'];\n    // switch (theme) {\n    //     case 'Material':\n    //         palette = ['#50c917', '#27d5ff', '#fcde0b', '#ffb133', '#ff5985'];\n    //         break;\n    //      case 'Fabric':\n    //         palette = ['#50c917', '#27d5ff', '#fcde0b', '#ffb133', '#ff5985'];\n    //         break;\n    // }\n    return palette;\n}\n/** @private */\nexport function getThemeStyle(theme) {\n    var style;\n    switch (theme.toLowerCase()) {\n        case 'materialdark':\n        case 'fabricdark':\n        case 'bootstrapdark':\n            style = {\n                backgroundColor: '#333232',\n                titleFontColor: '#ffffff',\n                tooltipFillColor: '#FFFFFF',\n                tooltipFontColor: '#000000',\n                labelColor: '#DADADA',\n                lineColor: '#C8C8C8',\n                majorTickColor: '#C8C8C8',\n                minorTickColor: '#9A9A9A',\n                pointerColor: '#9A9A9A',\n                capColor: '#9A9A9A',\n                needleColor: '#9A9A9A',\n                needleTailColor: '#9A9A9A'\n            };\n            break;\n        case 'highcontrast':\n            style = {\n                backgroundColor: '#000000',\n                titleFontColor: '#FFFFFF',\n                tooltipFillColor: '#ffffff',\n                tooltipFontColor: '#000000',\n                labelColor: '#FFFFFF',\n                lineColor: '#FFFFFF',\n                majorTickColor: '#FFFFFF',\n                minorTickColor: '#FFFFFF',\n                pointerColor: '#FFFFFF',\n                capColor: '#FFFFFF',\n                needleColor: '#FFFFFF',\n                needleTailColor: '#FFFFFF'\n            };\n            break;\n        case 'bootstrap4':\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#212529',\n                tooltipFillColor: '#000000',\n                tooltipFontColor: '#FFFFFF',\n                labelColor: '#212529',\n                lineColor: '#DEE2E6',\n                majorTickColor: '#ADB5BD',\n                minorTickColor: '#CED4DA',\n                pointerColor: '#6C757D',\n                capColor: '#6C757D',\n                needleColor: '#6C757D',\n                needleTailColor: '#6C757D',\n                fontFamily: 'HelveticaNeue-Medium',\n                fontSize: '16px',\n                labelFontFamily: 'HelveticaNeue',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 0.9\n            };\n            break;\n        default:\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#424242',\n                tooltipFillColor: '#363F4C',\n                tooltipFontColor: '#ffffff',\n                labelColor: '#212121',\n                lineColor: '#E0E0E0',\n                majorTickColor: '#9E9E9E',\n                minorTickColor: '#9E9E9E',\n                pointerColor: '#757575',\n                capColor: '#757575',\n                needleColor: '#757575',\n                needleTailColor: '#757575'\n            };\n            break;\n    }\n    return style;\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\n/**\n * Configures the borders in circular gauge.\n */\nvar Border = /** @class */ (function (_super) {\n    __extends(Border, _super);\n    function Border() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Border.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], Border.prototype, \"width\", void 0);\n    return Border;\n}(ChildProperty));\nexport { Border };\n/**\n * Configures the fonts in circular gauge.\n */\nvar Font = /** @class */ (function (_super) {\n    __extends(Font, _super);\n    function Font() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('16px')\n    ], Font.prototype, \"size\", void 0);\n    __decorate([\n        Property('')\n    ], Font.prototype, \"color\", void 0);\n    __decorate([\n        Property('segoe UI')\n    ], Font.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontWeight\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontStyle\", void 0);\n    __decorate([\n        Property(1)\n    ], Font.prototype, \"opacity\", void 0);\n    return Font;\n}(ChildProperty));\nexport { Font };\n/**\n * Configures the margin of circular gauge.\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Configures the tooltip in circular gauge.\n */\nvar TooltipSettings = /** @class */ (function (_super) {\n    __extends(TooltipSettings, _super);\n    function TooltipSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], TooltipSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Complex({ size: '13px' }, Font)\n    ], TooltipSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"format\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], TooltipSettings.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], TooltipSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(false)\n    ], TooltipSettings.prototype, \"showAtMousePosition\", void 0);\n    return TooltipSettings;\n}(ChildProperty));\nexport { TooltipSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\nimport { Font, Border } from '../model/base';\nimport { Theme } from '../model/theme';\n/**\n * Configures the axis line.\n */\nvar Line = /** @class */ (function (_super) {\n    __extends(Line, _super);\n    function Line() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(2)\n    ], Line.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], Line.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property(null)\n    ], Line.prototype, \"color\", void 0);\n    return Line;\n}(ChildProperty));\nexport { Line };\n/**\n * Configures the axis label.\n */\nvar Label = /** @class */ (function (_super) {\n    __extends(Label, _super);\n    function Label() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex(Theme.axisLabelFont, Font)\n    ], Label.prototype, \"font\", void 0);\n    __decorate([\n        Property('')\n    ], Label.prototype, \"format\", void 0);\n    __decorate([\n        Property('Inside')\n    ], Label.prototype, \"position\", void 0);\n    __decorate([\n        Property('None')\n    ], Label.prototype, \"hiddenLabel\", void 0);\n    __decorate([\n        Property(false)\n    ], Label.prototype, \"autoAngle\", void 0);\n    __decorate([\n        Property(false)\n    ], Label.prototype, \"useRangeColor\", void 0);\n    __decorate([\n        Property(0)\n    ], Label.prototype, \"offset\", void 0);\n    return Label;\n}(ChildProperty));\nexport { Label };\n/**\n * Configures the ranges of an axis.\n */\nvar Range = /** @class */ (function (_super) {\n    __extends(Range, _super);\n    function Range() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"start\", void 0);\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"end\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"radius\", void 0);\n    __decorate([\n        Property(10)\n    ], Range.prototype, \"startWidth\", void 0);\n    __decorate([\n        Property(10)\n    ], Range.prototype, \"endWidth\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"roundedCornerRadius\", void 0);\n    __decorate([\n        Property(1)\n    ], Range.prototype, \"opacity\", void 0);\n    return Range;\n}(ChildProperty));\nexport { Range };\n/**\n * Configures the major and minor tick lines of an axis.\n */\nvar Tick = /** @class */ (function (_super) {\n    __extends(Tick, _super);\n    function Tick() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(2)\n    ], Tick.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], Tick.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], Tick.prototype, \"interval\", void 0);\n    __decorate([\n        Property(0)\n    ], Tick.prototype, \"offset\", void 0);\n    __decorate([\n        Property(null)\n    ], Tick.prototype, \"color\", void 0);\n    __decorate([\n        Property('Inside')\n    ], Tick.prototype, \"position\", void 0);\n    __decorate([\n        Property(false)\n    ], Tick.prototype, \"useRangeColor\", void 0);\n    return Tick;\n}(ChildProperty));\nexport { Tick };\n/**\n * Configures the needle cap in pointer.\n */\nvar Cap = /** @class */ (function (_super) {\n    __extends(Cap, _super);\n    function Cap() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Cap.prototype, \"color\", void 0);\n    __decorate([\n        Complex({ color: null, width: 8 }, Border)\n    ], Cap.prototype, \"border\", void 0);\n    __decorate([\n        Property(8)\n    ], Cap.prototype, \"radius\", void 0);\n    return Cap;\n}(ChildProperty));\nexport { Cap };\n/**\n * Configures the back needle in pointers.\n */\nvar NeedleTail = /** @class */ (function (_super) {\n    __extends(NeedleTail, _super);\n    function NeedleTail() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], NeedleTail.prototype, \"color\", void 0);\n    __decorate([\n        Complex({ color: null, width: 0 }, Border)\n    ], NeedleTail.prototype, \"border\", void 0);\n    __decorate([\n        Property('0%')\n    ], NeedleTail.prototype, \"length\", void 0);\n    return NeedleTail;\n}(ChildProperty));\nexport { NeedleTail };\n/**\n * Configures the animation of pointers.\n */\nvar Animation = /** @class */ (function (_super) {\n    __extends(Animation, _super);\n    function Animation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], Animation.prototype, \"enable\", void 0);\n    __decorate([\n        Property(1000)\n    ], Animation.prototype, \"duration\", void 0);\n    return Animation;\n}(ChildProperty));\nexport { Animation };\n/**\n * ‘Annotation’ module is used to handle annotation action for an axis.\n */\nvar Annotation = /** @class */ (function (_super) {\n    __extends(Annotation, _super);\n    function Annotation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Annotation.prototype, \"content\", void 0);\n    __decorate([\n        Property(90)\n    ], Annotation.prototype, \"angle\", void 0);\n    __decorate([\n        Property('50%')\n    ], Annotation.prototype, \"radius\", void 0);\n    __decorate([\n        Property('-1')\n    ], Annotation.prototype, \"zIndex\", void 0);\n    __decorate([\n        Property(false)\n    ], Annotation.prototype, \"autoAngle\", void 0);\n    __decorate([\n        Complex({ size: '12px', color: '#686868' }, Font)\n    ], Annotation.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], Annotation.prototype, \"description\", void 0);\n    return Annotation;\n}(ChildProperty));\nexport { Annotation };\n/**\n * Configures the pointers of an axis.\n */\nvar Pointer = /** @class */ (function (_super) {\n    __extends(Pointer, _super);\n    function Pointer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"value\", void 0);\n    __decorate([\n        Property('Needle')\n    ], Pointer.prototype, \"type\", void 0);\n    __decorate([\n        Property(0)\n    ], Pointer.prototype, \"roundedCornerRadius\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"imageUrl\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"radius\", void 0);\n    __decorate([\n        Property(20)\n    ], Pointer.prototype, \"pointerWidth\", void 0);\n    __decorate([\n        Complex({}, Cap)\n    ], Pointer.prototype, \"cap\", void 0);\n    __decorate([\n        Complex({}, NeedleTail)\n    ], Pointer.prototype, \"needleTail\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"color\", void 0);\n    __decorate([\n        Complex({ color: '#DDDDDD', width: 0 }, Border)\n    ], Pointer.prototype, \"border\", void 0);\n    __decorate([\n        Complex(null, Animation)\n    ], Pointer.prototype, \"animation\", void 0);\n    __decorate([\n        Property('Circle')\n    ], Pointer.prototype, \"markerShape\", void 0);\n    __decorate([\n        Property(5)\n    ], Pointer.prototype, \"markerHeight\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"description\", void 0);\n    __decorate([\n        Property(5)\n    ], Pointer.prototype, \"markerWidth\", void 0);\n    return Pointer;\n}(ChildProperty));\nexport { Pointer };\n/**\n * Configures an axis in a gauge.\n */\nvar Axis = /** @class */ (function (_super) {\n    __extends(Axis, _super);\n    function Axis() {\n        /**\n         * Specifies the minimum value of an axis.\n         * @aspDefaultValueIgnore\n         * @default null\n         */\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** @private */\n        _this.visibleLabels = [];\n        return _this;\n    }\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"minimum\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"maximum\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"showLastLabel\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"roundingPlaces\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"radius\", void 0);\n    __decorate([\n        Complex({}, Line)\n    ], Axis.prototype, \"lineStyle\", void 0);\n    __decorate([\n        Collection([{}], Range)\n    ], Axis.prototype, \"ranges\", void 0);\n    __decorate([\n        Collection([{}], Pointer)\n    ], Axis.prototype, \"pointers\", void 0);\n    __decorate([\n        Collection([{}], Annotation)\n    ], Axis.prototype, \"annotations\", void 0);\n    __decorate([\n        Complex({ width: 2, height: 10 }, Tick)\n    ], Axis.prototype, \"majorTicks\", void 0);\n    __decorate([\n        Complex({ width: 2, height: 5 }, Tick)\n    ], Axis.prototype, \"minorTicks\", void 0);\n    __decorate([\n        Property(200)\n    ], Axis.prototype, \"startAngle\", void 0);\n    __decorate([\n        Property(160)\n    ], Axis.prototype, \"endAngle\", void 0);\n    __decorate([\n        Property('ClockWise')\n    ], Axis.prototype, \"direction\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"background\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"rangeGap\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"startAndEndRangeGap\", void 0);\n    __decorate([\n        Complex({}, Label)\n    ], Axis.prototype, \"labelStyle\", void 0);\n    return Axis;\n}(ChildProperty));\nexport { Axis };\n","import { stringToNumber, getLocationFromAngle, getFontStyle } from '../utils/helper';\nimport { getElement, getTemplateFunction, measureElementRect } from '../utils/helper';\nimport { annotationRender } from '../model/constants';\nimport { createElement, updateBlazorTemplate } from '@syncfusion/ej2-base';\n/**\n * Annotation Module handles the Annotation of the axis.\n */\nvar Annotations = /** @class */ (function () {\n    /**\n     * Constructor for Annotation module.\n     * @private.\n     */\n    function Annotations(gauge) {\n        this.gauge = gauge;\n        this.elementId = gauge.element.id;\n    }\n    /**\n     * Method to render the annotation for circular gauge.\n     */\n    //tslint:disable\n    Annotations.prototype.renderAnnotation = function (axis, index) {\n        var _this = this;\n        var width = this.gauge.availableSize.width;\n        var element = createElement('div', {\n            id: this.elementId + '_Annotations_' + index\n        });\n        var parentElement = getElement(this.elementId + '_Secondary_Element');\n        document.getElementById(this.elementId + '_Secondary_Element').style.width = width + 'px';\n        axis.annotations.map(function (annotation, annotationIndex) {\n            if (annotation.content !== null) {\n                _this.createTemplate(element, annotationIndex, index);\n            }\n        });\n        if (parentElement && element.childElementCount) {\n            parentElement.appendChild(element);\n            for (var i = 0; i < this.gauge.axes[index].annotations.length; i++) {\n                updateBlazorTemplate(this.gauge.element.id + '_Axis' + index + '_ContentTemplate' + i, 'ContentTemplate', this.gauge.axes[index].annotations[i]);\n            }\n        }\n    };\n    /**\n     * Method to create annotation template for circular gauge.\n     */\n    Annotations.prototype.createTemplate = function (element, annotationIndex, axisIndex) {\n        var _this = this;\n        var axis = this.gauge.axes[axisIndex];\n        var annotation = axis.annotations[annotationIndex];\n        var childElement = createElement('div', {\n            id: this.elementId + '_Axis_' + axisIndex + '_Annotation_' + annotationIndex,\n            styles: 'position: absolute; z-index:' + annotation.zIndex + ';transform:' +\n                (annotation.autoAngle ? 'rotate(' + (annotation.angle - 90) + 'deg)' : 'rotate(0deg)') + ';'\n        });\n        var argsData = {\n            cancel: false, name: annotationRender, content: annotation.content,\n            axis: axis, annotation: annotation, textStyle: annotation.textStyle\n        };\n        this.gauge.trigger('annotationRender', argsData, function (observedArgs) {\n            var templateFn;\n            var templateElement;\n            var blazor = 'Blazor';\n            if (!argsData.cancel) {\n                templateFn = getTemplateFunction(argsData.content);\n                if (templateFn && (!window[blazor] ? templateFn(axis, null, null, _this.gauge.element.id + '_Axis' + axisIndex + '_ContentTemplate' + annotationIndex).length : {})) {\n                    templateElement = Array.prototype.slice.call(templateFn(!window[blazor] ? axis : {}, null, null, _this.gauge.element.id + '_Axis' + axisIndex + '_ContentTemplate' + annotationIndex));\n                    var length_1 = templateElement.length;\n                    for (var i = 0; i < length_1; i++) {\n                        childElement.appendChild(templateElement[i]);\n                    }\n                }\n                else {\n                    childElement.appendChild(createElement('div', {\n                        innerHTML: argsData.content,\n                        styles: getFontStyle(argsData.textStyle)\n                    }));\n                }\n                _this.updateLocation(childElement, axis, annotation);\n                element.appendChild(childElement);\n            }\n        });\n    };\n    /**\n     * Method to update the annotation location for circular gauge.\n     */\n    Annotations.prototype.updateLocation = function (element, axis, annotation) {\n        var location = getLocationFromAngle(annotation.angle - 90, stringToNumber(annotation.radius, axis.currentRadius), this.gauge.midPoint);\n        var elementRect = measureElementRect(element);\n        element.style.left = (location.x - (elementRect.width / 2)) + 'px';\n        element.style.top = (location.y - (elementRect.height / 2)) + 'px';\n        element.setAttribute('aria-label', annotation.description || 'Annotation');\n    };\n    /**\n     * Get module name.\n     */\n    Annotations.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Annotations';\n    };\n    /**\n     * To destroy the annotation.\n     * @return {void}\n     * @private\n     */\n    Annotations.prototype.destroy = function (gauge) {\n        // Destroy method performed here\n    };\n    return Annotations;\n}());\nexport { Annotations };\n","/**\n * Specifies the gauge constant value\n */\n/** @private */\nexport var loaded = 'loaded';\n/** @private */\nexport var load = 'load';\n/** @private */\nexport var animationComplete = 'animationComplete';\n/** @private */\nexport var axisLabelRender = 'axisLabelRender';\n/** @private */\nexport var radiusCalculate = 'radiusCalculate';\n/** @private */\nexport var tooltipRender = 'tooltipRender';\n/** @private */\nexport var annotationRender = 'annotationRender';\n/** @private */\nexport var gaugeMouseMove = 'gaugeMouseMove';\n/** @private */\nexport var gaugeMouseLeave = 'gaugeMouseLeave';\n/** @private */\nexport var gaugeMouseDown = 'gaugeMouseDown';\n/** @private */\nexport var gaugeMouseUp = 'gaugeMouseUp';\n/** @private */\nexport var dragStart = 'dragStart';\n/** @private */\nexport var dragMove = 'dragMove';\n/** @private */\nexport var dragEnd = 'dragEnd';\n/** @private */\nexport var resized = 'resized';\n","import { Tooltip } from '@syncfusion/ej2-svg-base';\nimport { getPointer, Rect, getMousePosition, getElementSize } from '../utils/helper';\nimport { getAngleFromValue, getLabelFormat, getLocationFromAngle } from '../utils/helper';\nimport { Browser, createElement, remove, isNullOrUndefined, updateBlazorTemplate, resetBlazorTemplate } from '@syncfusion/ej2-base';\nimport { tooltipRender } from '../model/constants';\n/**\n * Tooltip Module handles the tooltip of the circular gauge\n */\nvar GaugeTooltip = /** @class */ (function () {\n    /**\n     * Constructor for Tooltip module.\n     * @private.\n     */\n    function GaugeTooltip(gauge) {\n        this.gauge = gauge;\n        this.tooltipId = this.gauge.element.id + '_CircularGauge_Tooltip';\n        this.tooltip = gauge.tooltip;\n        this.textStyle = this.tooltip.textStyle;\n        this.borderStyle = this.tooltip.border;\n        this.addEventListener();\n    }\n    /**\n     * Method to render the tooltip for circular gauge.\n     */\n    /* tslint:disable:no-string-literal */\n    /* tslint:disable:max-func-body-length */\n    GaugeTooltip.prototype.renderTooltip = function (e) {\n        var _this = this;\n        var pageX;\n        var pageY;\n        var target;\n        var touchArg;\n        var location;\n        var samePointerEle = false;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            target = touchArg.target;\n            pageX = touchArg.changedTouches[0].pageX;\n            pageY = touchArg.changedTouches[0].pageY;\n        }\n        else {\n            target = e.target;\n            pageX = e.pageX;\n            pageY = e.pageY;\n        }\n        if (target.id.indexOf('_Pointer_') >= 0) {\n            if (this.pointerEle !== null) {\n                samePointerEle = (this.pointerEle === target);\n            }\n            var svgRect_1 = this.gauge.svgObject.getBoundingClientRect();\n            var elementRect = this.gauge.element.getBoundingClientRect();\n            var axisRect_1 = document.getElementById(this.gauge.element.id + '_AxesCollection').getBoundingClientRect();\n            var rect_1 = new Rect(Math.abs(elementRect.left - svgRect_1.left), Math.abs(elementRect.top - svgRect_1.top), svgRect_1.width, svgRect_1.height);\n            var currentPointer = getPointer(target.id, this.gauge);\n            this.currentAxis = this.gauge.axes[currentPointer.axisIndex];\n            this.currentPointer = (this.currentAxis.pointers)[currentPointer.pointerIndex];\n            var angle_1 = getAngleFromValue(this.currentPointer.currentValue, this.currentAxis.visibleRange.max, this.currentAxis.visibleRange.min, this.currentAxis.startAngle, this.currentAxis.endAngle, this.currentAxis.direction === 'ClockWise') % 360;\n            var tooltipFormat = this.gauge.tooltip.format || this.currentAxis.labelStyle.format;\n            var customLabelFormat = tooltipFormat && tooltipFormat.match('{value}') !== null;\n            var format = this.gauge.intl.getNumberFormat({\n                format: getLabelFormat(tooltipFormat), useGrouping: this.gauge.useGroupingSeparator\n            });\n            if (document.getElementById(this.tooltipId)) {\n                this.tooltipEle = document.getElementById(this.tooltipId);\n            }\n            else {\n                this.tooltipEle = createElement('div', {\n                    id: this.tooltipId,\n                    className: 'EJ2-CircularGauge-Tooltip',\n                    styles: 'position: absolute;pointer-events:none;'\n                });\n                document.getElementById(this.gauge.element.id + '_Secondary_Element').appendChild(this.tooltipEle);\n            }\n            var roundValue = void 0;\n            roundValue = this.currentAxis.roundingPlaces ?\n                parseFloat(this.currentPointer.currentValue.toFixed(this.currentAxis.roundingPlaces)) :\n                this.currentPointer.currentValue;\n            var content_1 = customLabelFormat ?\n                tooltipFormat.replace(new RegExp('{value}', 'g'), format(roundValue)) :\n                format(roundValue);\n            location = getLocationFromAngle(angle_1, this.currentAxis.currentRadius, this.gauge.midPoint);\n            location.x = (this.tooltip.template && ((angle_1 >= 150 && angle_1 <= 250) || (angle_1 >= 330 && angle_1 <= 360) ||\n                (angle_1 >= 0 && angle_1 <= 45))) ? (location.x + 10) : location.x;\n            var tooltipArgs_1 = {\n                name: tooltipRender, cancel: false, content: content_1, location: location, axis: this.currentAxis,\n                tooltip: this.tooltip, pointer: this.currentPointer, event: e, gauge: this.gauge,\n                appendInBodyTag: false\n            };\n            this.gauge.trigger(tooltipRender, tooltipArgs_1, function (observedArgs) {\n                var template = tooltipArgs_1.tooltip.template;\n                if (template !== null && template.length === 1) {\n                    template = template[template[0]];\n                }\n                if (!_this.tooltip.showAtMousePosition) {\n                    if (template) {\n                        var elementSize = getElementSize(template, _this.gauge, _this.tooltipEle);\n                        _this.tooltipRect = Math.abs(axisRect_1.left - svgRect_1.left) > elementSize.width ?\n                            _this.findPosition(rect_1, angle_1, content_1, tooltipArgs_1.location) : rect_1;\n                    }\n                    else {\n                        _this.findPosition(rect_1, angle_1, content_1, tooltipArgs_1.location);\n                    }\n                }\n                else {\n                    tooltipArgs_1.location = getMousePosition(pageX, pageY, _this.gauge.svgObject);\n                    _this.tooltipRect = rect_1;\n                }\n                if (!tooltipArgs_1.cancel && !samePointerEle) {\n                    tooltipArgs_1.tooltip.textStyle.color = tooltipArgs_1.tooltip.textStyle.color || _this.gauge.themeStyle.tooltipFontColor;\n                    tooltipArgs_1.tooltip.textStyle.fontFamily = _this.gauge.themeStyle.fontFamily || tooltipArgs_1.tooltip.textStyle.fontFamily;\n                    tooltipArgs_1.tooltip.textStyle.opacity =\n                        _this.gauge.themeStyle.tooltipTextOpacity || tooltipArgs_1.tooltip.textStyle.opacity;\n                    _this.svgTooltip = new Tooltip({\n                        enable: true,\n                        data: { value: tooltipArgs_1.content },\n                        template: template,\n                        enableAnimation: tooltipArgs_1.tooltip.enableAnimation,\n                        content: [tooltipArgs_1.content],\n                        location: tooltipArgs_1.location,\n                        inverted: _this.arrowInverted,\n                        areaBounds: _this.tooltipRect,\n                        fill: tooltipArgs_1.tooltip.fill || _this.gauge.themeStyle.tooltipFillColor,\n                        textStyle: tooltipArgs_1.tooltip.textStyle,\n                        availableSize: _this.gauge.availableSize,\n                        border: tooltipArgs_1.tooltip.border\n                    });\n                    _this.svgTooltip.opacity = _this.gauge.themeStyle.tooltipFillOpacity || _this.svgTooltip.opacity;\n                    _this.svgTooltip.appendTo(_this.tooltipEle);\n                    if (_this.gauge.tooltip.template) {\n                        updateBlazorTemplate(_this.gauge.element.id + 'Template', 'Template');\n                    }\n                    if (template && Math.abs(pageY - _this.tooltipEle.getBoundingClientRect().top) <= 0) {\n                        _this.tooltipEle.style.top = (parseFloat(_this.tooltipEle.style.top) + 20) + 'px';\n                    }\n                    if (tooltipArgs_1.appendInBodyTag) {\n                        var bodyToolElement = document.getElementsByClassName('EJ2-CircularGauge-Tooltip e-control e-tooltip');\n                        if (!isNullOrUndefined(bodyToolElement)) {\n                            _this.removeTooltip();\n                        }\n                        document.body.appendChild(_this.tooltipEle);\n                        _this.tooltipEle.style.zIndex = '100000000001';\n                        var bounds = _this.tooltipEle.getBoundingClientRect();\n                        if (pageX + bounds['width'] <= window.innerWidth && bounds['x'] <= 0) {\n                            _this.tooltipEle.style.left = pageX + 20 + 'px';\n                            _this.tooltipEle.style.top = bounds['top'] + 20 + 'px';\n                        }\n                        else if (bounds['x'] <= 0 && pageX + bounds['width'] >= window.innerWidth) {\n                            _this.tooltipEle.style.left = pageX - bounds['width'] + 20 + 'px';\n                            _this.tooltipEle.style.top = bounds['top'] + 20 + 'px';\n                        }\n                    }\n                }\n            });\n        }\n        else {\n            this.removeTooltip();\n            if (this.gauge.tooltip.template) {\n                resetBlazorTemplate(this.gauge.element.id + 'Template', 'Template');\n            }\n        }\n    };\n    /**\n     * Method to find the position of the tooltip anchor for circular gauge.\n     */\n    GaugeTooltip.prototype.findPosition = function (rect, angle, text, location) {\n        var addLeft;\n        var addTop;\n        var addHeight;\n        var addWidth;\n        switch (true) {\n            case (angle >= 0 && angle < 45):\n                this.arrowInverted = true;\n                addLeft = (angle >= 15 && angle <= 30) ? location.y : 0;\n                this.tooltipRect = new Rect(rect.x, rect.y + addTop, rect.width, rect.height);\n                this.tooltipPosition = 'RightBottom';\n                break;\n            case (angle >= 45 && angle < 90):\n                this.arrowInverted = false;\n                this.tooltipRect = new Rect(rect.x, rect.y + location.y, rect.width, rect.height);\n                this.tooltipPosition = 'BottomRight';\n                break;\n            case (angle >= 90 && angle < 135):\n                this.arrowInverted = false;\n                this.tooltipRect = new Rect(rect.x, rect.y + location.y, rect.width, rect.height);\n                this.tooltipPosition = 'BottomLeft';\n                break;\n            case (angle >= 135 && angle < 180):\n                this.arrowInverted = true;\n                addTop = (angle >= 150 && angle <= 160) ? location.y : 0;\n                this.tooltipRect = new Rect(rect.x - rect.width, rect.y + addTop, rect.width, rect.height);\n                this.tooltipPosition = 'LeftBottom';\n                break;\n            case (angle >= 180 && angle < 225):\n                this.arrowInverted = true;\n                addHeight = (angle >= 200 && angle <= 225) ? Math.abs(rect.y - location.y) : rect.height;\n                this.tooltipRect = new Rect(rect.x - rect.width, rect.y, rect.width, addHeight);\n                this.tooltipPosition = 'LeftTop';\n                break;\n            case (angle >= 225 && angle < 270):\n                this.arrowInverted = false;\n                addWidth = (angle >= 250 && angle <= 290) ? rect.width : Math.abs(rect.x - location.x);\n                this.tooltipRect = new Rect(rect.x, rect.y, addWidth, rect.height);\n                this.tooltipPosition = 'TopLeft';\n                break;\n            case (angle >= 270 && angle < 315):\n                this.arrowInverted = false;\n                addLeft = (angle >= 270 && angle > 290) ? location.x : 0;\n                this.tooltipRect = new Rect(rect.x + addLeft, rect.y, rect.width, rect.height);\n                this.tooltipPosition = 'TopRight';\n                break;\n            case (angle >= 315 && angle <= 360):\n                this.arrowInverted = true;\n                addHeight = (angle >= 315 && angle <= 340) ? Math.abs(rect.y - location.y) : rect.height;\n                this.tooltipRect = new Rect(rect.x, rect.y, rect.width, addHeight);\n                this.tooltipPosition = 'RightTop';\n                break;\n        }\n        return this.tooltipRect;\n    };\n    GaugeTooltip.prototype.removeTooltip = function () {\n        if (document.getElementsByClassName('EJ2-CircularGauge-Tooltip').length > 0) {\n            var tooltip = document.getElementsByClassName('EJ2-CircularGauge-Tooltip')[0];\n            if (tooltip) {\n                remove(tooltip);\n            }\n            this.pointerEle = null;\n        }\n    };\n    GaugeTooltip.prototype.mouseUpHandler = function (e) {\n        this.renderTooltip(e);\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(this.removeTooltip.bind(this), 2000);\n    };\n    /**\n     * To bind events for tooltip module\n     */\n    GaugeTooltip.prototype.addEventListener = function () {\n        if (this.gauge.isDestroyed) {\n            return;\n        }\n        this.gauge.on(Browser.touchMoveEvent, this.renderTooltip, this);\n        this.gauge.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n    };\n    /**\n     * To unbind events for tooltip module\n     */\n    GaugeTooltip.prototype.removeEventListener = function () {\n        if (this.gauge.isDestroyed) {\n            return;\n        }\n        this.gauge.off(Browser.touchMoveEvent, this.renderTooltip);\n        this.gauge.off(Browser.touchEndEvent, this.mouseUpHandler);\n    };\n    /**\n     * Get module name.\n     */\n    GaugeTooltip.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Tooltip';\n    };\n    /**\n     * To destroy the tooltip.\n     * @return {void}\n     * @private\n     */\n    GaugeTooltip.prototype.destroy = function (gauge) {\n        // Destroy method performed here\n        this.removeEventListener();\n    };\n    return GaugeTooltip;\n}());\nexport { GaugeTooltip };\n","import { getLocationFromAngle, PathOption, stringToNumber, TextOption, textElement, appendPath, toPixel } from '../utils/helper';\nimport { getAngleFromValue, isCompleteAngle, getPathArc, getRoundedPathArc, getRangeColor } from '../utils/helper';\nimport { getRangePalette } from '../model/theme';\n/**\n * Specifies the Axis rendering for circular gauge\n */\nvar AxisRenderer = /** @class */ (function () {\n    /**\n     * Constructor for axis renderer.\n     * @private.\n     */\n    function AxisRenderer(gauge) {\n        this.gauge = gauge;\n    }\n    /**\n     * Method to render the axis element of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisOuterLine = function (axis, index, element, gauge) {\n        var background = axis.background;\n        this.setRangeColor(axis);\n        if (background !== null) {\n            appendPath(new PathOption(gauge.element.id + '_AxisOuterLine_' + index, background, 0, 'transparent', null, '0', getPathArc(gauge.midPoint, 0, 360, (Math.min(axis.rect.width, axis.rect.height) / 2)), '', 'pointer-events:none;'), element, gauge);\n        }\n    };\n    /**\n     * Method to render the axis line of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisLine = function (axis, index, element, gauge) {\n        var startAngle = axis.startAngle;\n        var endAngle = axis.endAngle;\n        var color = axis.lineStyle.color || this.gauge.themeStyle.lineColor;\n        if (axis.lineStyle.width > 0) {\n            startAngle = !isCompleteAngle(startAngle, endAngle) ? startAngle : [0, endAngle = 360][0];\n            appendPath(new PathOption(gauge.element.id + '_AxisLine_' + index, 'transparent', axis.lineStyle.width, color, null, axis.lineStyle.dashArray, getPathArc(gauge.midPoint, startAngle - 90, endAngle - 90, axis.currentRadius), '', 'pointer-events:none;'), element, gauge);\n        }\n    };\n    /**\n     * Method to render the axis labels of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisLabels = function (axis, index, element, gauge) {\n        var labelElement = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_Labels_' + index\n        });\n        var min = axis.visibleRange.min;\n        var max = axis.visibleRange.max;\n        var labelCollection = axis.visibleLabels;\n        var location;\n        var style = axis.labelStyle;\n        var anchor;\n        var angle;\n        var label;\n        var radius = axis.currentRadius;\n        var labelPadding = 10;\n        var color = style.font.color || this.gauge.themeStyle.labelColor;\n        if (style.position === 'Outside') {\n            radius += (axis.nearSize - (axis.maxLabelSize.height + axis.lineStyle.width / 2)) +\n                (labelPadding / 2);\n        }\n        else {\n            radius -= (axis.farSize - (axis.maxLabelSize.height + axis.lineStyle.width / 2) +\n                (style.autoAngle ? labelPadding : 0));\n        }\n        for (var i = 0, length_1 = labelCollection.length; i < length_1; i++) {\n            if ((i === 0 && style.hiddenLabel === 'First') ||\n                (i === (length_1 - 1) && style.hiddenLabel === 'Last')) {\n                continue;\n            }\n            label = labelCollection[i];\n            angle = Math.round(getAngleFromValue(label.value, max, min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise'));\n            location = getLocationFromAngle(angle, radius, gauge.midPoint);\n            anchor = this.findAnchor(location, style, angle, label);\n            style.font.fontFamily = this.gauge.themeStyle.labelFontFamily || style.font.fontFamily;\n            textElement(new TextOption(gauge.element.id + '_Axis_' + index + '_Label_' + i, location.x, location.y, anchor, label.text, style.autoAngle ? 'rotate(' + (angle + 90) + ',' + (location.x) + ',' + location.y + ')' : '', 'auto'), style.font, style.useRangeColor ? getRangeColor(label.value, axis.ranges, color) : color, labelElement, 'pointer-events:none;');\n        }\n        element.appendChild(labelElement);\n    };\n    /**\n     * Method to find the anchor of the axis label.\n     * @private\n     */\n    AxisRenderer.prototype.findAnchor = function (location, style, angle, label) {\n        if (style.autoAngle) {\n            return 'middle';\n        }\n        var anchor = style.position === 'Inside' ?\n            ((angle > 120 && angle < 240) ? 'start' : ((300 < angle || angle < 60) ? 'end' : 'middle')) :\n            ((angle > 120 && angle < 240) ? 'end' : ((300 < angle || angle < 60) ? 'start' : 'middle'));\n        location.y += style.position === 'Inside' ?\n            ((angle >= 240 && angle <= 300) ? (label.size.height / 2) :\n                (angle >= 60 && angle <= 120) ? 0 : label.size.height / 4) :\n            ((angle >= 240 && angle <= 300) ? 0 :\n                (angle >= 60 && angle <= 120) ? label.size.height / 2 : label.size.height / 4);\n        return anchor;\n    };\n    /**\n     * Method to render the axis minor tick lines of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawMinorTickLines = function (axis, index, element, gauge) {\n        var minorTickElements = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_MinorTickLines_' + index\n        });\n        var minorLineStyle = axis.minorTicks;\n        var minorInterval = minorLineStyle.interval !== null ?\n            minorLineStyle.interval : (axis.visibleRange.interval / 2);\n        var isRangeColor = minorLineStyle.useRangeColor;\n        var color = minorLineStyle.color || this.gauge.themeStyle.minorTickColor;\n        if (minorLineStyle.width && minorLineStyle.height && minorInterval) {\n            for (var i = axis.visibleRange.min, max = axis.visibleRange.max; i <= max; i += minorInterval) {\n                if (this.majorValues.indexOf(+i.toFixed(3)) < 0) {\n                    appendPath(new PathOption(gauge.element.id + '_Axis_Minor_TickLine_' + index + '_' + i, 'transparent', minorLineStyle.width, isRangeColor ? getRangeColor(i, axis.ranges, color) : color, null, '0', this.calculateTicks(i, minorLineStyle, axis), '', 'pointer-events:none;'), minorTickElements, gauge);\n                }\n            }\n            element.appendChild(minorTickElements);\n        }\n    };\n    /**\n     * Method to render the axis major tick lines of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawMajorTickLines = function (axis, index, element, gauge) {\n        var majorTickElements = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_MajorTickLines_' + index\n        });\n        var majorLineStyle = axis.majorTicks;\n        var isRangeColor = majorLineStyle.useRangeColor;\n        this.majorValues = [];\n        var color = majorLineStyle.color || this.gauge.themeStyle.majorTickColor;\n        if (majorLineStyle.width && majorLineStyle.height && axis.visibleRange.interval) {\n            for (var i = axis.visibleRange.min, max = axis.visibleRange.max, interval = axis.visibleRange.interval; i <= max; i += interval) {\n                this.majorValues.push(+i.toFixed(3));\n                appendPath(new PathOption(gauge.element.id + '_Axis_Major_TickLine_' + index + '_' + i, 'transparent', majorLineStyle.width, isRangeColor ? getRangeColor(i, axis.ranges, color) : color, null, '0', this.calculateTicks(i, majorLineStyle, axis), '', 'pointer-events:none;'), majorTickElements, gauge);\n            }\n            element.appendChild(majorTickElements);\n        }\n    };\n    /**\n     * Method to calcualte the tick elements for the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.calculateTicks = function (value, options, axis) {\n        var axisLineWidth = (axis.lineStyle.width / 2) + options.offset;\n        var isOutside = options.position === 'Outside';\n        var angle = getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n        var start = getLocationFromAngle(angle, axis.currentRadius +\n            (isOutside ? axisLineWidth : -axisLineWidth), this.gauge.midPoint);\n        var end = getLocationFromAngle(angle, axis.currentRadius +\n            (isOutside ? axisLineWidth : -axisLineWidth) +\n            (isOutside ? options.height : -options.height), this.gauge.midPoint);\n        return 'M ' + start.x + ' ' + start.y + ' L ' + end.x + ' ' + end.y + ' ';\n    };\n    /**\n     * Method to render the axis range of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisRange = function (axis, index, element, gauge) {\n        var _this = this;\n        var rangeElement = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_Ranges_' + index\n        });\n        var location = this.gauge.midPoint;\n        var startAngle;\n        var endAngle;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startValue;\n        var endValue;\n        var min = axis.visibleRange.min;\n        var max = axis.visibleRange.max;\n        var startWidth;\n        var endWidth;\n        var roundedStartAngle;\n        var roundedEndAngle;\n        var oldStart;\n        var oldEnd;\n        axis.ranges.map(function (range, rangeIndex) {\n            _this.calculateRangeRadius(axis, range);\n            startValue = Math.min(Math.max(range.start, min), range.end);\n            endValue = Math.min(Math.max(range.start, range.end), max);\n            startAngle = getAngleFromValue(startValue, max, min, axis.startAngle, axis.endAngle, isClockWise);\n            endAngle = getAngleFromValue(endValue, max, min, axis.startAngle, axis.endAngle, isClockWise);\n            var isAngleCross360 = (startAngle > endAngle);\n            if (axis.rangeGap != null && axis.rangeGap > 0) {\n                startAngle = (rangeIndex === 0 && !axis.startAndEndRangeGap) ? startAngle : startAngle + (axis.rangeGap / Math.PI);\n                endAngle = (rangeIndex === axis.ranges.length - 1 && !axis.startAndEndRangeGap) ? endAngle : endAngle -\n                    (axis.rangeGap / Math.PI);\n            }\n            if ((startValue !== endValue) && (isAngleCross360 ? startAngle < (endAngle + 360) : (startAngle < endAngle))) {\n                if (range.startWidth.length > 0) {\n                    startWidth = toPixel(range.startWidth, range.currentRadius);\n                }\n                else {\n                    startWidth = range.startWidth;\n                }\n                if (range.endWidth.length > 0) {\n                    endWidth = toPixel(range.endWidth, range.currentRadius);\n                }\n                else {\n                    endWidth = range.endWidth;\n                }\n                endAngle = isClockWise ? endAngle : [startAngle, startAngle = endAngle][0];\n                endWidth = isClockWise ? endWidth : [startWidth, startWidth = endWidth][0];\n                var radius = range.roundedCornerRadius;\n                var process = (radius * 0.25);\n                oldStart = ((((range.currentRadius - (startWidth / 2)) * ((startAngle * Math.PI) / 180) -\n                    (radius / process)) / (range.currentRadius - (startWidth / 2))) * 180) / Math.PI;\n                oldEnd = ((((range.currentRadius - (endWidth / 2)) * ((endAngle * Math.PI) / 180) +\n                    (radius / process)) / (range.currentRadius - (endWidth / 2))) * 180) / Math.PI;\n                roundedStartAngle = ((((range.currentRadius) * ((startAngle * Math.PI) / 180) +\n                    radius) / (range.currentRadius)) * 180) / Math.PI;\n                roundedEndAngle = ((((range.currentRadius) * ((endAngle * Math.PI) / 180) -\n                    radius) / (range.currentRadius)) * 180) / Math.PI;\n                if (range.roundedCornerRadius) {\n                    appendPath(new PathOption(gauge.element.id + '_Axis_' + index + '_Range_' + rangeIndex, range.rangeColor, 0, range.rangeColor, range.opacity, '0', getRoundedPathArc(location, Math.floor(roundedStartAngle), Math.ceil(roundedEndAngle), oldStart, oldEnd, range.currentRadius, startWidth, endWidth), '', 'pointer-events:none;'), rangeElement, gauge);\n                }\n                else {\n                    appendPath(new PathOption(gauge.element.id + '_Axis_' + index + '_Range_' + rangeIndex, range.rangeColor, 0, range.rangeColor, range.opacity, '0', getPathArc(gauge.midPoint, Math.floor(startAngle), Math.ceil(endAngle), range.currentRadius, startWidth, endWidth), '', 'pointer-events:none;'), rangeElement, gauge);\n                }\n            }\n        });\n        element.appendChild(rangeElement);\n    };\n    /**\n     * Method to calculate the radius of the axis range.\n     * @return {void}\n     */\n    AxisRenderer.prototype.calculateRangeRadius = function (axis, range) {\n        var radius = range.radius !== null ? range.radius : '100%';\n        range.currentRadius = stringToNumber(radius, axis.currentRadius);\n    };\n    /**\n     * Method to get the range color of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.setRangeColor = function (axis) {\n        var rangeColors = getRangePalette(this.gauge.theme);\n        axis.ranges.map(function (range, index) {\n            range.rangeColor = range.color ? range.color : rangeColors[index % rangeColors.length];\n        });\n    };\n    return AxisRenderer;\n}());\nexport { AxisRenderer };\n","import { stringToNumber, Size, calculateShapes, appendPath } from '../utils/helper';\nimport { getLocationFromAngle, PathOption } from '../utils/helper';\nimport { linear, getAngleFromValue, getCompleteArc, getRoundedPathArc } from '../utils/helper';\nimport { Animation, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { animationComplete } from '../model/constants';\n/**\n * Specifies the Axis rendering for circular gauge\n */\nvar PointerRenderer = /** @class */ (function () {\n    /**\n     * Constructor for pointer renderer.\n     * @private.\n     */\n    function PointerRenderer(gauge) {\n        this.gauge = gauge;\n    }\n    /**\n     * Method to render the axis pointers of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    PointerRenderer.prototype.drawPointers = function (axis, axisIndex, element, gauge, animate) {\n        var _this = this;\n        if (animate === void 0) { animate = true; }\n        var pointerElement = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_Pointers_' + axisIndex\n        });\n        var childElement;\n        var range;\n        axis.pointers.map(function (pointer, pointerIndex) {\n            range = axis.visibleRange;\n            pointer.pathElement = [];\n            _this.calculatePointerRadius(axis, pointer);\n            childElement = gauge.renderer.createGroup({\n                id: gauge.element.id + '_Axis_' + axisIndex + '_Pointer_' + pointerIndex\n            });\n            _this['draw' + pointer.type + 'Pointer'](axis, axisIndex, pointerIndex, childElement, gauge);\n            _this.setPointerValue(axis, pointer, pointer.currentValue);\n            pointerElement.appendChild(childElement);\n            if (animate) {\n                _this.doPointerAnimation(pointer, axis);\n            }\n        });\n        element.appendChild(pointerElement);\n    };\n    /**\n     * Measure the pointer length of the circular gauge.\n     * @return {void}\n     */\n    PointerRenderer.prototype.calculatePointerRadius = function (axis, pointer) {\n        var padding = 5;\n        pointer.currentRadius = pointer.radius === null ?\n            (axis.currentRadius - (axis.farSize + padding)) :\n            stringToNumber(pointer.radius, axis.currentRadius);\n    };\n    /**\n     * Method to render the needle pointer of the ciruclar gauge.\n     * @return {void}\n     */\n    PointerRenderer.prototype.drawNeedlePointer = function (axis, axisIndex, index, parentElement, gauge) {\n        var pointer = axis.pointers[index];\n        var pointerRadius;\n        var location;\n        var direction;\n        var mid = gauge.midPoint;\n        var width = pointer.pointerWidth / 2;\n        var rectDirection;\n        // To render the needle\n        location = getLocationFromAngle(0, pointer.currentRadius, mid);\n        var color = pointer.color || this.gauge.themeStyle.needleColor;\n        direction = 'M ' + mid.x + ' ' + (mid.y - width) + ' L ' + (location.x) + ' ' + mid.y +\n            ' L ' + (mid.x) + ' ' + (mid.y + width) + ' Z';\n        pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_Needle_' + index, color, pointer.border.width, pointer.border.color, null, '0', direction), parentElement, gauge));\n        pointerRadius = stringToNumber(pointer.needleTail.length, pointer.currentRadius);\n        // To render the rect element for touch\n        rectDirection = 'M ' + mid.x + ' ' + (mid.y - width) + ' L ' + (location.x) + ' ' + (mid.y - width) +\n            ' L ' + location.x + ' ' + (mid.y + width) + ' L ' + mid.x + ' ' + (mid.y + width);\n        // To render the needle tail\n        if (pointerRadius) {\n            location = getLocationFromAngle(180, pointerRadius, gauge.midPoint);\n            direction = 'M ' + mid.x + ' ' + (mid.y - width) +\n                ' L ' + (location.x) + ' ' + (mid.y - width) +\n                ' L ' + (location.x) + ' ' + (mid.y + width) +\n                ' L ' + (mid.x) + ' ' + (mid.y + width) + ' Z';\n            pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_NeedleTail_' + index, pointer.needleTail.color || this.gauge.themeStyle.needleTailColor, pointer.needleTail.border.width, pointer.needleTail.border.color, null, '0', direction), parentElement, gauge));\n            rectDirection += ' L ' + location.x + ' ' + (mid.y + width) + ' L ' + location.x + ' ' + (mid.y - width);\n        }\n        // To render the cap\n        var capcolor = pointer.cap.color || this.gauge.themeStyle.capColor;\n        if (pointer.cap.radius) {\n            pointer.pathElement.push(appendPath(calculateShapes(mid, 'Circle', new Size(pointer.cap.radius * 2, pointer.cap.radius * 2), '', new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_NeedleCap_' + index, capcolor, pointer.cap.border.width, pointer.cap.border.color, null, '0', '', '')), parentElement, gauge, 'Ellipse'));\n        }\n        pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_NeedleRect_' + index, 'transparent', 0, 'transpanret', null, '0', rectDirection + ' Z'), parentElement, gauge));\n    };\n    /**\n     * Method to set the pointer value of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    PointerRenderer.prototype.setPointerValue = function (axis, pointer, value) {\n        var location = this.gauge.midPoint;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startAngle = getAngleFromValue(axis.visibleRange.min, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var endAngle = getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        if (isClockWise) {\n            endAngle = startAngle === endAngle ? endAngle + 1 : endAngle;\n        }\n        else {\n            endAngle = startAngle === endAngle ? [startAngle, startAngle = endAngle - 1][0] : [startAngle, startAngle = endAngle][0];\n        }\n        var roundStartAngle;\n        var roundEndAngle;\n        var oldStartValue;\n        var oldEndValue;\n        var radius = pointer.roundedCornerRadius;\n        var minRadius = (radius * 0.25);\n        if (value <= minRadius) {\n            radius = value === 1 || 2 ? 8 : radius;\n            radius /= 2;\n            minRadius = radius * 0.25;\n        }\n        oldStartValue = ((((pointer.currentRadius - (pointer.pointerWidth / 2)) * ((startAngle * Math.PI) / 180) -\n            (radius / minRadius)) / (pointer.currentRadius - (pointer.pointerWidth / 2))) * 180) / Math.PI;\n        oldEndValue = ((((pointer.currentRadius - (pointer.pointerWidth / 2)) * ((endAngle * Math.PI) / 180) +\n            (radius / minRadius)) / (pointer.currentRadius - (pointer.pointerWidth / 2))) * 180) / Math.PI;\n        roundStartAngle = ((((pointer.currentRadius) * ((startAngle * Math.PI) / 180) +\n            radius) / (pointer.currentRadius)) * 180) / Math.PI;\n        roundEndAngle = ((((pointer.currentRadius) * ((endAngle * Math.PI) / 180) -\n            radius) / (pointer.currentRadius)) * 180) / Math.PI;\n        if (isNullOrUndefined(pointer.currentRadius)) {\n            this.calculatePointerRadius(axis, pointer);\n        }\n        pointer.pathElement.map(function (element) {\n            if (pointer.type === 'RangeBar') {\n                if (pointer.roundedCornerRadius && value) {\n                    element.setAttribute('d', getRoundedPathArc(location, Math.floor(roundStartAngle), Math.ceil(roundEndAngle), oldStartValue, oldEndValue, pointer.currentRadius, pointer.pointerWidth, pointer.pointerWidth));\n                    radius = 0;\n                }\n                else {\n                    element.setAttribute('d', getCompleteArc(location, startAngle, endAngle, pointer.currentRadius, (pointer.currentRadius - pointer.pointerWidth)));\n                }\n            }\n            else {\n                element.setAttribute('transform', 'rotate(' + getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise) + ',' + location.x + ',' + location.y + ')');\n            }\n            element.setAttribute('aria-label', pointer.description || 'Pointer:' + value.toString());\n        });\n    };\n    /**\n     * Method to render the marker pointer of the ciruclar gauge.\n     * @return {void}\n     */\n    PointerRenderer.prototype.drawMarkerPointer = function (axis, axisIndex, index, parentElement, gauge) {\n        var pointer = axis.pointers[index];\n        var location = getLocationFromAngle(0, pointer.currentRadius, gauge.midPoint);\n        pointer.pathElement.push(appendPath(calculateShapes(location, pointer.markerShape, new Size(pointer.markerWidth, pointer.markerHeight), pointer.imageUrl, new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_Marker_' + index, pointer.color || this.gauge.themeStyle.pointerColor, pointer.border.width, pointer.border.color, null, '0', '', '')), parentElement, gauge, pointer.markerShape === 'Circle' ? 'Ellipse' : (pointer.markerShape === 'Image' ? 'Image' : 'Path')));\n    };\n    /**\n     * Method to render the range bar pointer of the ciruclar gauge.\n     * @return {void}\n     */\n    PointerRenderer.prototype.drawRangeBarPointer = function (axis, axisIndex, index, parentElement, gauge) {\n        var pointer = axis.pointers[index];\n        pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_RangeBar_' + index, pointer.color || this.gauge.themeStyle.pointerColor, pointer.border.width, pointer.border.color, 1, '0', ''), parentElement, gauge));\n    };\n    /**\n     * Method to perform the animation of the pointer in circular gauge.\n     * @return {void}\n     */\n    PointerRenderer.prototype.doPointerAnimation = function (pointer, axis) {\n        var _this = this;\n        var startValue = axis.visibleRange.min;\n        var endValue = pointer.currentValue;\n        if (pointer.animation.enable && startValue !== endValue && this.gauge.animatePointer) {\n            pointer.pathElement.map(function (element) {\n                if (pointer.type === 'RangeBar') {\n                    _this.performRangeBarAnimation(element, startValue, endValue, axis, pointer, pointer.currentRadius, (pointer.currentRadius - pointer.pointerWidth));\n                }\n                else {\n                    _this.performNeedleAnimation(element, startValue, endValue, axis, pointer, pointer.currentRadius, (pointer.currentRadius - pointer.pointerWidth));\n                }\n            });\n        }\n    };\n    /**\n     * Perform the needle and marker pointer animation for circular gauge.\n     * @return {void}\n     * @private\n     */\n    PointerRenderer.prototype.performNeedleAnimation = function (element, start, end, axis, pointer, radius, innerRadius) {\n        var _this = this;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startAngle = getAngleFromValue(start, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var pointAngle = getAngleFromValue(end, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var endAngle = startAngle > pointAngle ? (pointAngle + 360) : pointAngle;\n        var sweepAngle;\n        new Animation({}).animate(element, {\n            duration: pointer.animation.duration,\n            progress: function (args) {\n                sweepAngle = (start < end || Math.round(startAngle) === Math.round(endAngle)) ?\n                    isClockWise ? (endAngle - startAngle) : (endAngle - startAngle - 360) :\n                    isClockWise ? (endAngle - startAngle - 360) : (endAngle - startAngle);\n                element.style.animation = 'None';\n                element.setAttribute('transform', 'rotate(' + linear(args.timeStamp, startAngle, sweepAngle, args.duration) + ',' +\n                    _this.gauge.midPoint.x.toString() + ',' + _this.gauge.midPoint.y.toString() + ')');\n            },\n            end: function (model) {\n                _this.setPointerValue(axis, pointer, end);\n                if (pointer.type === 'Marker' || (element.id.indexOf('_Pointer_NeedleCap') >= 0)) {\n                    _this.gauge.trigger(animationComplete, { axis: axis, pointer: pointer });\n                }\n            }\n        });\n    };\n    /**\n     * Perform the range bar pointer animation for circular gauge.\n     * @return {void}\n     * @private\n     */\n    PointerRenderer.prototype.performRangeBarAnimation = function (element, start, end, axis, pointer, radius, innerRadius) {\n        var _this = this;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startAngle = getAngleFromValue(start, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var minAngle = getAngleFromValue(axis.visibleRange.min, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var pointAngle = getAngleFromValue(end, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var roundRadius = pointer.roundedCornerRadius;\n        var sweepAngle;\n        var endAngle;\n        var oldStart;\n        var minRadius = (radius * 0.25);\n        if (roundRadius) {\n            minAngle = ((((pointer.currentRadius) * ((minAngle * Math.PI) / 180) +\n                roundRadius) / (pointer.currentRadius)) * 180) / Math.PI;\n            pointAngle = ((((pointer.currentRadius) * ((pointAngle * Math.PI) / 180) -\n                roundRadius) / (pointer.currentRadius)) * 180) / Math.PI;\n            oldStart = ((((pointer.currentRadius - (pointer.pointerWidth / 2)) * ((startAngle * Math.PI) / 180) -\n                (radius / minRadius)) / (pointer.currentRadius - (pointer.pointerWidth / 2))) * 180) / Math.PI;\n        }\n        endAngle = startAngle > pointAngle ? (pointAngle + 360) : pointAngle;\n        new Animation({}).animate(element, {\n            duration: pointer.animation.duration,\n            progress: function (arg) {\n                element.style.animation = 'None';\n                sweepAngle = (start < end || Math.round(startAngle) === Math.round(endAngle)) ?\n                    isClockWise ? (endAngle - startAngle) : (endAngle - startAngle - 360) :\n                    isClockWise ? (endAngle - startAngle - 360) : (endAngle - startAngle);\n                if (isClockWise) {\n                    if (!roundRadius) {\n                        element.setAttribute('d', getCompleteArc(_this.gauge.midPoint, minAngle, linear(arg.timeStamp, startAngle, sweepAngle, arg.duration) + 0.0001, radius, innerRadius));\n                    }\n                    else {\n                        element.setAttribute('d', getRoundedPathArc(_this.gauge.midPoint, Math.floor(minAngle), linear(arg.timeStamp, Math.floor(minAngle), sweepAngle, arg.duration) + 0.0001, oldStart, linear(arg.timeStamp, Math.floor(minAngle + (roundRadius / 2)), sweepAngle, arg.duration) + 0.0001, radius, pointer.pointerWidth, pointer.pointerWidth));\n                    }\n                }\n                else {\n                    if (!roundRadius) {\n                        element.setAttribute('d', getCompleteArc(_this.gauge.midPoint, linear(arg.timeStamp, startAngle, sweepAngle, arg.duration), minAngle + 0.0001, radius, innerRadius));\n                    }\n                    else {\n                        sweepAngle += roundRadius;\n                        element.setAttribute('d', getRoundedPathArc(_this.gauge.midPoint, linear(arg.timeStamp, Math.floor(oldStart), sweepAngle, arg.duration), Math.floor(oldStart) + 0.0001, linear(arg.timeStamp, Math.floor(minAngle - roundRadius - (roundRadius / 2)), sweepAngle, arg.duration), Math.floor(oldStart + (roundRadius / 2)) + 0.0001, radius, pointer.pointerWidth, pointer.pointerWidth));\n                    }\n                }\n            },\n            end: function (model) {\n                _this.setPointerValue(axis, pointer, end);\n                _this.gauge.trigger(animationComplete, _this.gauge.isBlazor ? {} : { axis: axis, pointer: pointer });\n            }\n        });\n    };\n    return PointerRenderer;\n}());\nexport { PointerRenderer };\n","import { createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { calculateSum, VisibleLabels, measureText, isCompleteAngle, getLocationFromAngle } from '../utils/helper';\nimport { Size, Rect, stringToNumber, getLabelFormat } from '../utils/helper';\nimport { axisLabelRender, radiusCalculate } from '../model/constants';\nimport { AxisRenderer } from './axis-renderer';\nimport { PointerRenderer } from './pointer-renderer';\n/**\n * Specifies the CircularGauge Axis Layout\n */\nvar labelPadding = 10;\nvar AxisLayoutPanel = /** @class */ (function () {\n    function AxisLayoutPanel(gauge) {\n        this.gauge = gauge;\n        this.axisRenderer = new AxisRenderer(gauge);\n        this.pointerRenderer = new PointerRenderer(gauge);\n    }\n    /**\n     * Measure the calculate the axis size and radius.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.measureAxis = function (rect) {\n        this.measureAxisSize(this.gauge, rect);\n        this.calculateAxesRadius();\n    };\n    /**\n     * Measure to calculate the axis radius of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateAxesRadius = function () {\n        var _this = this;\n        var totalRadius;\n        var currentRadius;\n        var rangeMaximumRadius = 0;\n        var xMarginDiff = this.gauge.margin.left + this.gauge.margin.right;\n        var yMarginDiff = this.gauge.margin.top + this.gauge.margin.bottom;\n        var _loop_1 = function (axis) {\n            totalRadius = (Math.min(axis.rect.width, axis.rect.height) / 2);\n            currentRadius = axis.radius != null ? stringToNumber(axis.radius, totalRadius) : totalRadius;\n            rangeMaximumRadius = Math.max.apply(Math, axis.ranges.map(function (value) {\n                return value.radius ?\n                    (value.radius.indexOf('%') < 0 ? 100 : parseInt(value.radius, 10)) : 0;\n            }));\n            currentRadius = (rangeMaximumRadius > 100 && axis.radius == null) ?\n                (currentRadius * 100) / rangeMaximumRadius : currentRadius;\n            axis.currentRadius = currentRadius - axis.nearSize;\n            if (this_1.gauge.moveToCenter && this_1.gauge.axes.length === 1 &&\n                isNullOrUndefined(this_1.gauge.centerX) && isNullOrUndefined(this_1.gauge.centerY)) {\n                var startAngle = void 0;\n                var endAngle = void 0;\n                startAngle = axis.startAngle;\n                startAngle = !isCompleteAngle(startAngle, axis.endAngle) ? startAngle : [0, endAngle = 360][0];\n                var startPoint = getLocationFromAngle(startAngle - 90, currentRadius, this_1.gauge.midPoint);\n                endAngle = axis.endAngle;\n                endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n                var endPoint = getLocationFromAngle(endAngle - 90, currentRadius, this_1.gauge.midPoint);\n                var xDiff = void 0;\n                var yDiff = void 0;\n                var startXDiff = void 0;\n                var endXDiff = void 0;\n                var startYDiff = void 0;\n                var endYDiff = void 0;\n                var newPoint = void 0;\n                if (startAngle > endAngle ? Math.abs(startAngle - endAngle) > 90 ? true : false : true) {\n                    if ((startAngle >= 270 && startAngle <= 360) && ((endAngle > 270 && endAngle <= 360) ||\n                        (endAngle >= 0 && endAngle <= 180))) {\n                        startXDiff = Math.abs(this_1.gauge.gaugeRect.x - Math.abs(startPoint.x - this_1.gauge.gaugeRect.x));\n                        newPoint = (endAngle <= 360 && endAngle >= 270) ? this_1.gauge.midPoint : (endAngle <= 90) ? endPoint :\n                            getLocationFromAngle(90 - 90, currentRadius, this_1.gauge.midPoint);\n                        endXDiff = Math.abs(newPoint.x - this_1.gauge.gaugeRect.width);\n                        startPoint = (endAngle <= 360 && endAngle >= 270) ? endPoint :\n                            getLocationFromAngle(360 - 90, currentRadius, this_1.gauge.midPoint);\n                        startYDiff = Math.abs(startPoint.y - this_1.gauge.gaugeRect.y);\n                        endPoint = (endAngle <= 360 && endAngle >= 270 || (endAngle >= 0 && endAngle < 90)) ?\n                            this_1.gauge.midPoint : (endAngle >= 90 && endAngle <= 180) ? endPoint :\n                            getLocationFromAngle(180 - 90, currentRadius, this_1.gauge.midPoint);\n                        endYDiff = Math.abs(endPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));\n                    }\n                    else if ((startAngle >= 0 && startAngle < 90) && (endAngle >= 0 && endAngle <= 270)) {\n                        startYDiff = Math.abs(startPoint.y - this_1.gauge.gaugeRect.y);\n                        newPoint = (endAngle >= 180) ? getLocationFromAngle(180 - 90, currentRadius, this_1.gauge.midPoint) :\n                            endPoint;\n                        endYDiff = Math.abs(newPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));\n                        startPoint = (endAngle >= 180) ? endPoint : this_1.gauge.midPoint;\n                        startXDiff = Math.abs(this_1.gauge.gaugeRect.x - Math.abs(startPoint.x - this_1.gauge.gaugeRect.x));\n                        endPoint = (endAngle >= 90) ? getLocationFromAngle(90 - 90, currentRadius, this_1.gauge.midPoint) : endPoint;\n                        endXDiff = Math.abs(endPoint.x - this_1.gauge.gaugeRect.width);\n                    }\n                    else if ((startAngle >= 90 && startAngle < 180) && (endAngle > 90 && endAngle <= 360)) {\n                        newPoint = (endAngle <= 180) ? this_1.gauge.midPoint : (endAngle >= 270) ?\n                            getLocationFromAngle(270 - 90, currentRadius, this_1.gauge.midPoint) : endPoint;\n                        startXDiff = Math.abs(newPoint.x - this_1.gauge.gaugeRect.x);\n                        endXDiff = Math.abs(startPoint.x - this_1.gauge.gaugeRect.width);\n                        startPoint = (endAngle > 270) ? getLocationFromAngle(endAngle - 90, currentRadius, this_1.gauge.midPoint) :\n                            this_1.gauge.midPoint;\n                        startYDiff = Math.abs(this_1.gauge.gaugeRect.y - startPoint.y);\n                        endPoint = (endAngle >= 180) ? getLocationFromAngle(180 - 90, currentRadius, this_1.gauge.midPoint) : endPoint;\n                        endYDiff = Math.abs(endPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));\n                    }\n                    else if ((startAngle >= 180 && startAngle <= 270) && ((endAngle <= 360 && endAngle >= 270) ||\n                        (endAngle <= 180 && endAngle >= 0))) {\n                        newPoint = (endAngle > 180 && endAngle < 270) ? endPoint :\n                            getLocationFromAngle(270 - 90, currentRadius, this_1.gauge.midPoint);\n                        startXDiff = Math.abs(this_1.gauge.gaugeRect.x - Math.abs(newPoint.x - this_1.gauge.gaugeRect.x));\n                        newPoint = (endAngle >= 180 && endAngle <= 360) ? this_1.gauge.midPoint : endPoint;\n                        endXDiff = Math.abs(newPoint.x - this_1.gauge.gaugeRect.width);\n                        newPoint = (endAngle > 180 && endAngle < 270) ? this_1.gauge.midPoint : (endAngle >= 270 && endAngle <= 360) ?\n                            endPoint : getLocationFromAngle(360 - 90, currentRadius, this_1.gauge.midPoint);\n                        startYDiff = Math.abs(newPoint.y - this_1.gauge.gaugeRect.y);\n                        endYDiff = Math.abs(startPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));\n                    }\n                    if ((!isNullOrUndefined(startXDiff) && !isNullOrUndefined(endXDiff) && !isNullOrUndefined(startYDiff) &&\n                        !isNullOrUndefined(endYDiff)) && ((startXDiff > 0 || endXDiff > 0) && (startYDiff > 0 || endYDiff > 0))) {\n                        xDiff = Math.abs((startXDiff + endXDiff) - xMarginDiff);\n                        yDiff = Math.abs((startYDiff + endYDiff) - yMarginDiff);\n                        this_1.gauge.midPoint.x = this_1.gauge.midPoint.x - (startXDiff / 2) + (endXDiff / 2);\n                        this_1.gauge.midPoint.y = this_1.gauge.midPoint.y - (startYDiff / 2) + (endYDiff / 2);\n                        totalRadius = (Math.min(this_1.gauge.gaugeRect.width, this_1.gauge.gaugeRect.height) / 2) +\n                            (Math.min(xDiff, yDiff) / 2);\n                        axis.currentRadius = (axis.radius != null ? stringToNumber(axis.radius, totalRadius) : totalRadius) - axis.nearSize;\n                    }\n                }\n            }\n            axis.visibleRange.interval = this_1.calculateNumericInterval(axis, axis.rect);\n            var args;\n            args = {\n                cancel: false, name: radiusCalculate, currentRadius: axis.currentRadius, gauge: this_1.gauge,\n                midPoint: this_1.gauge.midPoint, axis: axis\n            };\n            this_1.gauge.trigger('radiusCalculate', args, function (observedArgs) {\n                axis.currentRadius = args.currentRadius;\n                _this.gauge.midPoint = args.midPoint;\n            });\n            this_1.calculateVisibleLabels(axis);\n        };\n        var this_1 = this;\n        for (var _i = 0, _a = this.gauge.axes; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            _loop_1(axis);\n        }\n    };\n    /**\n     * Measure to calculate the axis size.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.measureAxisSize = function (gauge, rect) {\n        var _this = this;\n        var sum;\n        this.computeSize(gauge.axes, rect);\n        gauge.axes.map(function (axis, index) {\n            sum = calculateSum(index, _this.farSizes.length - 1, _this.farSizes);\n            axis.rect = new Rect(rect.x + sum, rect.y + sum, rect.width - (sum * 2), rect.height - (sum * 2));\n        });\n    };\n    /**\n     * Calculate the axis values of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateAxisValues = function (rect) {\n        for (var _i = 0, _a = this.gauge.axes; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            this.calculateVisibleRange(axis, rect);\n            this.calculateVisibleLabels(axis);\n        }\n    };\n    /**\n     * Calculate the visible range of an axis.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateVisibleRange = function (axis, rect) {\n        var interval = axis.majorTicks.interval;\n        var minimumValue = Math.min(axis.minimum === null ? 0 : axis.minimum, axis.maximum);\n        var maximumValue = Math.max(axis.minimum, axis.maximum === null ? 100 : axis.maximum);\n        axis.pointers.map(function (pointer) {\n            pointer.currentValue = pointer.value !== null ?\n                pointer.value < minimumValue ? minimumValue : pointer.value > maximumValue ? maximumValue : pointer.value\n                : minimumValue;\n            minimumValue = axis.minimum === null ? Math.min(pointer.currentValue, minimumValue) : minimumValue;\n            maximumValue = axis.maximum === null ? Math.max(pointer.currentValue, maximumValue) : maximumValue;\n        });\n        minimumValue = (minimumValue === maximumValue) ?\n            (interval !== null ? minimumValue - interval : minimumValue - 1) : minimumValue;\n        axis.visibleRange = { min: minimumValue, max: maximumValue, interval: interval };\n        axis.visibleRange.interval = this.calculateNumericInterval(axis, rect);\n    };\n    /**\n     * Calculate the numeric intervals of an axis range.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateNumericInterval = function (axis, rect) {\n        if (axis.majorTicks.interval !== null) {\n            return axis.majorTicks.interval;\n        }\n        var totalAngle = axis.endAngle - axis.startAngle;\n        totalAngle = totalAngle <= 0 ? (totalAngle + 360) : totalAngle;\n        return this.calculateNiceInterval(axis.visibleRange.max, axis.visibleRange.min, axis.currentRadius ? axis.currentRadius : (rect.width / 2), totalAngle);\n    };\n    /**\n     * Calculate the nice interval of an axis range.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateNiceInterval = function (maxValue, minValue, radius, degree) {\n        var delta = maxValue - minValue;\n        var circumference = 2 * Math.PI * radius * (degree / 360);\n        var desiredIntervalsCount = Math.max((circumference * ((0.533 * 3) / 100)), 1);\n        var niceInterval = delta / desiredIntervalsCount;\n        var minInterval = Math.pow(10, Math.floor(Math.log(niceInterval) / Math.log(10)));\n        for (var _i = 0, _a = [10, 5, 2, 1]; _i < _a.length; _i++) {\n            var interval = _a[_i];\n            var currentInterval = minInterval * interval;\n            if (desiredIntervalsCount < (delta / currentInterval)) {\n                break;\n            }\n            niceInterval = currentInterval;\n        }\n        return niceInterval;\n    };\n    /**\n     * Calculate the visible labels of an axis.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateVisibleLabels = function (axis) {\n        var style = axis.labelStyle;\n        var customLabelFormat = style.format && style.format.match('{value}') !== null;\n        var format = this.gauge.intl.getNumberFormat({\n            format: getLabelFormat(style.format), useGrouping: this.gauge.useGroupingSeparator\n        });\n        var argsData;\n        axis.visibleLabels = [];\n        var roundValue;\n        var _loop_2 = function (i, interval, max) {\n            roundValue = axis.roundingPlaces ? parseFloat(i.toFixed(axis.roundingPlaces)) : i;\n            argsData = {\n                cancel: false, name: axisLabelRender, axis: axis,\n                text: customLabelFormat ? style.format.replace(new RegExp('{value}', 'g'), format(roundValue)) :\n                    format(roundValue),\n                value: roundValue\n            };\n            this_2.gauge.trigger('axisLabelRender', argsData, function (observedArgs) {\n                if (!argsData.cancel) {\n                    axis.visibleLabels.push(new VisibleLabels(argsData.text, i));\n                }\n            });\n        };\n        var this_2 = this;\n        for (var i = axis.visibleRange.min, interval = axis.visibleRange.interval, max = axis.visibleRange.max; (i <= max && interval); i += interval) {\n            _loop_2(i, interval, max);\n        }\n        var lastLabel = axis.visibleLabels.length ? axis.visibleLabels[axis.visibleLabels.length - 1].value : null;\n        var maxVal = axis.visibleRange.max;\n        if (lastLabel !== maxVal && axis.showLastLabel === true) {\n            argsData = {\n                cancel: false, name: axisLabelRender, axis: axis,\n                text: customLabelFormat ? style.format.replace(new RegExp('{value}', 'g'), format(maxVal)) :\n                    format(maxVal),\n                value: maxVal\n            };\n            this.gauge.trigger('axisLabelRender', argsData, function (observedArgs) {\n                if (!argsData.cancel) {\n                    axis.visibleLabels.push(new VisibleLabels(argsData.text, maxVal));\n                }\n            });\n        }\n        this.getMaxLabelWidth(this.gauge, axis);\n    };\n    /**\n     * Measure the axes available size.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.computeSize = function (axes, rect) {\n        var lineSize;\n        var outerHeight;\n        var innerHeight;\n        var isMajorTickOutside;\n        var isMinorTickOutside;\n        var isLabelOutside;\n        var axisPadding = 5;\n        var majorTickOffset = 0;\n        var minorTickOffset = 0;\n        var labelOffset = 0;\n        this.farSizes = [];\n        this.calculateAxisValues(rect);\n        for (var _i = 0, axes_1 = axes; _i < axes_1.length; _i++) {\n            var axis = axes_1[_i];\n            lineSize = (axis.lineStyle.width / 2);\n            outerHeight = 0;\n            innerHeight = 0;\n            isMajorTickOutside = axis.majorTicks.position === 'Outside';\n            majorTickOffset = axis.majorTicks.offset;\n            isMinorTickOutside = axis.minorTicks.position === 'Outside';\n            minorTickOffset = axis.minorTicks.offset;\n            isLabelOutside = axis.labelStyle.position === 'Outside';\n            labelOffset = axis.labelStyle.offset;\n            // Calculating the outer space of the axis\n            outerHeight += !(isMajorTickOutside && isMinorTickOutside && isLabelOutside) ? axisPadding : 0;\n            outerHeight += (isMajorTickOutside ? (axis.majorTicks.height + lineSize) : 0) +\n                (isLabelOutside ? (axis.maxLabelSize.height + labelPadding + labelOffset) : 0) +\n                ((isMinorTickOutside && !isMajorTickOutside) ? (axis.minorTicks.height + lineSize) : 0) + lineSize;\n            outerHeight += (isMajorTickOutside && isMinorTickOutside) ? Math.max(majorTickOffset, minorTickOffset) :\n                (isMajorTickOutside ? majorTickOffset : isMinorTickOutside ? minorTickOffset : 0);\n            // Calculating the inner space of the axis\n            innerHeight += (!isMajorTickOutside ? (axis.majorTicks.height + lineSize) : 0) +\n                (!isLabelOutside ? (axis.maxLabelSize.height + labelPadding + labelOffset) : 0) +\n                ((!isMinorTickOutside && isMajorTickOutside) ? (axis.minorTicks.height + lineSize) : 0) + lineSize;\n            innerHeight += (!isMajorTickOutside && !isMinorTickOutside) ? Math.max(majorTickOffset, minorTickOffset) :\n                (!isMajorTickOutside ? majorTickOffset : !isMinorTickOutside ? minorTickOffset : 0);\n            if (this.farSizes[this.farSizes.length - 1]) {\n                this.farSizes[this.farSizes.length - 1] += (innerHeight + outerHeight);\n            }\n            axis.nearSize = outerHeight - axisPadding;\n            axis.farSize = innerHeight;\n            outerHeight = (this.gauge.axes.length === (this.farSizes.length + 1)) ? 0 : outerHeight;\n            this.farSizes.push(outerHeight);\n        }\n    };\n    /**\n     * To render the Axis element of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.renderAxes = function (animate) {\n        var _this = this;\n        if (animate === void 0) { animate = true; }\n        var gauge = this.gauge;\n        var renderer = this.axisRenderer;\n        var element;\n        var axesElements = gauge.renderer.createGroup({\n            'id': gauge.element.id + '_AxesCollection',\n            'clip-path': 'url(#' + gauge.element.id + '_GaugeAreaClipRect_' + ')'\n        });\n        // To append the secondary element for annotation and tooltip\n        gauge.element.appendChild(createElement('div', {\n            id: gauge.element.id + '_Secondary_Element',\n            styles: 'position: relative'\n        }));\n        gauge.axes.map(function (axis, index) {\n            element = gauge.renderer.createGroup({\n                id: gauge.element.id + '_Axis_Group_' + index\n            });\n            renderer.drawAxisOuterLine(axis, index, element, gauge);\n            renderer.drawAxisRange(axis, index, element, gauge);\n            renderer.drawAxisLine(axis, index, element, gauge);\n            renderer.drawMajorTickLines(axis, index, element, gauge);\n            renderer.drawMinorTickLines(axis, index, element, gauge);\n            renderer.drawAxisLabels(axis, index, element, gauge);\n            _this.pointerRenderer.drawPointers(axis, index, element, gauge, animate);\n            if (gauge.annotationsModule) {\n                gauge.annotationsModule.renderAnnotation(axis, index);\n            }\n            axesElements.appendChild(element);\n        });\n        // For append clip rect for axes\n        gauge.svgObject.appendChild(gauge.renderer.drawClipPath({\n            'id': gauge.element.id + '_GaugeAreaClipRect_',\n            'x': 0, 'y': 0,\n            'width': gauge.availableSize.width,\n            'height': gauge.availableSize.height,\n            'fill': 'transparent', 'stroke': 'transparent'\n        }));\n        gauge.svgObject.appendChild(axesElements);\n    };\n    /**\n     * Calculate maximum label width for the axis.\n     * @return {void}\n     */\n    AxisLayoutPanel.prototype.getMaxLabelWidth = function (gauge, axis) {\n        axis.maxLabelSize = new Size(0, 0);\n        for (var _i = 0, _a = axis.visibleLabels; _i < _a.length; _i++) {\n            var label = _a[_i];\n            label.size = measureText(label.text, axis.labelStyle.font);\n            axis.maxLabelSize.width = label.size.width > axis.maxLabelSize.width ?\n                label.size.width : axis.maxLabelSize.width;\n            axis.maxLabelSize.height = label.size.height > axis.maxLabelSize.height ?\n                label.size.height : axis.maxLabelSize.height;\n        }\n    };\n    return AxisLayoutPanel;\n}());\nexport { AxisLayoutPanel };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/**\n * Circular Gauge\n */\nimport { Property, NotifyPropertyChanges, Component } from '@syncfusion/ej2-base';\nimport { Complex, Browser, isNullOrUndefined, resetBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, Collection, Internationalization } from '@syncfusion/ej2-base';\nimport { remove, createElement } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\nimport { TextOption, textElement, RectOption, getAngleFromLocation, getValueFromAngle, removeElement } from './utils/helper';\nimport { Size, stringToNumber, measureText, Rect, GaugeLocation, getElement, getPointer, setStyles, toPixel } from './utils/helper';\nimport { getAngleFromValue, getPathArc } from './utils/helper';\nimport { Border, Margin, Font, TooltipSettings } from './model/base';\nimport { Axis } from './axes/axis';\nimport { Annotations } from './annotations/annotations';\nimport { GaugeTooltip } from './user-interaction/tooltip';\nimport { load, loaded, gaugeMouseMove, gaugeMouseLeave, gaugeMouseDown } from './model/constants';\nimport { gaugeMouseUp, dragEnd, dragMove, dragStart, resized } from './model/constants';\nimport { AxisLayoutPanel } from './axes/axis-panel';\nimport { getThemeStyle } from './model/theme';\n/**\n * Represents the Circular gauge control.\n * ```html\n * <div id=\"gauge\"/>\n * <script>\n *   var gaugeObj = new CircularGauge();\n *   gaugeObj.appendTo(\"#gauge\");\n * </script>\n * ```\n */\nvar CircularGauge = /** @class */ (function (_super) {\n    __extends(CircularGauge, _super);\n    /**\n     * Constructor for creating the widget\n     * @hidden\n     */\n    function CircularGauge(options, element) {\n        return _super.call(this, options, element) || this;\n    }\n    /**\n     *  To create svg object, renderer and binding events for the container.\n     */\n    CircularGauge.prototype.preRender = function () {\n        var blazor = 'Blazor';\n        this.isBlazor = window[blazor];\n        this.unWireEvents();\n        this.trigger(load, { gauge: this });\n        this.initPrivateVariable();\n        this.setCulture();\n        this.createSvg();\n        this.wireEvents();\n    };\n    /**\n     * To render the circular gauge elements\n     */\n    CircularGauge.prototype.render = function () {\n        this.setTheme();\n        this.calculateBounds();\n        this.renderElements();\n    };\n    CircularGauge.prototype.setTheme = function () {\n        this.themeStyle = getThemeStyle(this.theme);\n    };\n    /**\n     * Method to unbind events for circular gauge\n     */\n    CircularGauge.prototype.unWireEvents = function () {\n        EventHandler.remove(this.element, Browser.touchStartEvent, this.gaugeOnMouseDown);\n        EventHandler.remove(this.element, Browser.touchMoveEvent, this.mouseMove);\n        EventHandler.remove(this.element, Browser.touchEndEvent, this.mouseEnd);\n        EventHandler.remove(this.element, 'contextmenu', this.gaugeRightClick);\n        EventHandler.remove(this.element, (Browser.isPointer ? 'pointerleave' : 'mouseleave'), this.mouseLeave);\n        window.removeEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.gaugeResize);\n    };\n    /**\n     * Method to bind events for circular gauge\n     */\n    CircularGauge.prototype.wireEvents = function () {\n        /*! Bind the Event handler */\n        EventHandler.add(this.element, Browser.touchStartEvent, this.gaugeOnMouseDown, this);\n        EventHandler.add(this.element, Browser.touchMoveEvent, this.mouseMove, this);\n        EventHandler.add(this.element, Browser.touchEndEvent, this.mouseEnd, this);\n        EventHandler.add(this.element, 'contextmenu', this.gaugeRightClick, this);\n        EventHandler.add(this.element, (Browser.isPointer ? 'pointerleave' : 'mouseleave'), this.mouseLeave, this);\n        window.addEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.gaugeResize.bind(this));\n        /*! Apply the style for circular gauge */\n        this.setGaugeStyle(this.element);\n    };\n    /**\n     * Handles the mouse move.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.mouseMove = function (e) {\n        var _this = this;\n        var args = this.getMouseArgs(e, 'touchmove', gaugeMouseMove);\n        this.trigger('gaugeMouseMove', args, function (observedArgs) {\n            var dragArgs;\n            var dragBlazorArgs;\n            var tooltip = _this.tooltipModule;\n            if (!args.cancel) {\n                if (_this.enablePointerDrag && _this.activePointer) {\n                    var dragPointInd = parseInt(_this.activePointer.pathElement[0].id.slice(-1), 10);\n                    var dragAxisInd = parseInt(_this.activePointer.pathElement[0].id.match(/\\d/g)[0], 10);\n                    dragArgs = {\n                        axis: _this.activeAxis,\n                        pointer: _this.activePointer,\n                        previousValue: _this.activePointer.currentValue,\n                        name: dragMove,\n                        currentValue: null,\n                        axisIndex: dragAxisInd,\n                        pointerIndex: dragPointInd\n                    };\n                    dragBlazorArgs = {\n                        previousValue: _this.activePointer.currentValue,\n                        name: dragMove,\n                        currentValue: null,\n                        pointerIndex: dragPointInd,\n                        axisIndex: dragAxisInd\n                    };\n                    _this.pointerDrag(new GaugeLocation(args.x, args.y));\n                    dragArgs.currentValue = dragBlazorArgs.currentValue = _this.activePointer.currentValue;\n                    _this.trigger(dragMove, _this.isBlazor ? dragBlazorArgs : dragArgs);\n                }\n            }\n        });\n        this.notify(Browser.touchMoveEvent, e);\n        return false;\n    };\n    /**\n     * Handles the mouse leave.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.mouseLeave = function (e) {\n        this.activeAxis = null;\n        this.activePointer = null;\n        this.svgObject.setAttribute('cursor', 'auto');\n        var args = this.getMouseArgs(e, 'touchmove', gaugeMouseLeave);\n        this.trigger(gaugeMouseLeave, args);\n        return false;\n    };\n    /**\n     * Handles the mouse right click.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.gaugeRightClick = function (event) {\n        if (event.buttons === 2 || event.pointerType === 'touch') {\n            event.preventDefault();\n            event.stopPropagation();\n            return false;\n        }\n        return true;\n    };\n    /**\n     * Handles the pointer draf while mouse move on gauge.\n     * @private\n     */\n    CircularGauge.prototype.pointerDrag = function (location) {\n        var axis = this.activeAxis;\n        var range = axis.visibleRange;\n        var value = getValueFromAngle(getAngleFromLocation(this.midPoint, location), range.max, range.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n        if (value >= range.min && value <= range.max) {\n            this.activePointer.currentValue = value;\n            this.gaugeAxisLayoutPanel.pointerRenderer.setPointerValue(axis, this.activePointer, value);\n        }\n    };\n    /**\n     * Handles the mouse down on gauge.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.gaugeOnMouseDown = function (e) {\n        var _this = this;\n        var currentPointer;\n        var args = this.getMouseArgs(e, 'touchstart', gaugeMouseDown);\n        this.trigger('gaugeMouseDown', args, function (observedArgs) {\n            if (!args.cancel && args.target.id.indexOf('_Pointer_') >= 0 &&\n                args.target.id.indexOf(_this.element.id + '_Axis_') >= 0) {\n                currentPointer = getPointer(args.target.id, _this);\n                _this.activeAxis = _this.axes[currentPointer.axisIndex];\n                _this.activePointer = _this.activeAxis.pointers[currentPointer.pointerIndex];\n                if (isNullOrUndefined(_this.activePointer.pathElement)) {\n                    _this.activePointer.pathElement = [e.target];\n                }\n                var pointInd = parseInt(_this.activePointer.pathElement[0].id.slice(-1), 10);\n                var axisInd = parseInt(_this.activePointer.pathElement[0].id.match(/\\d/g)[0], 10);\n                _this.trigger(dragStart, _this.isBlazor ? {\n                    name: dragStart,\n                    currentValue: _this.activePointer.currentValue,\n                    pointerIndex: pointInd,\n                    axisIndex: axisInd\n                } : {\n                    axis: _this.activeAxis,\n                    name: dragStart,\n                    pointer: _this.activePointer,\n                    currentValue: _this.activePointer.currentValue,\n                    pointerIndex: pointInd,\n                    axisIndex: axisInd\n                });\n                _this.svgObject.setAttribute('cursor', 'pointer');\n            }\n        });\n        return false;\n    };\n    /**\n     * Handles the mouse end.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.mouseEnd = function (e) {\n        var args = this.getMouseArgs(e, 'touchend', gaugeMouseUp);\n        var blazorArgs = {\n            cancel: args.cancel, target: args.target, name: args.name, x: args.x, y: args.y\n        };\n        var isTouch = e.pointerType === 'touch' || e.pointerType === '2' || e.type === 'touchend';\n        var tooltipInterval;\n        var tooltip = this.tooltipModule;\n        this.trigger(gaugeMouseUp, this.isBlazor ? blazorArgs : args);\n        if (this.activeAxis && this.activePointer) {\n            var pointerInd = parseInt(this.activePointer.pathElement[0].id.slice(-1), 10);\n            var axisInd = parseInt(this.activePointer.pathElement[0].id.match(/\\d/g)[0], 10);\n            this.trigger(dragEnd, this.isBlazor ? {\n                name: dragEnd,\n                currentValue: this.activePointer.currentValue,\n                pointerIndex: pointerInd,\n                axisIndex: axisInd\n            } : {\n                name: dragEnd,\n                axis: this.activeAxis,\n                pointer: this.activePointer,\n                currentValue: this.activePointer.currentValue,\n                axisIndex: axisInd,\n                pointerIndex: pointerInd\n            });\n            this.activeAxis = null;\n            this.activePointer = null;\n        }\n        this.svgObject.setAttribute('cursor', 'auto');\n        this.notify(Browser.touchEndEvent, e);\n        return false;\n    };\n    /**\n     * Handles the mouse event arguments.\n     * @return {IMouseEventArgs}\n     * @private\n     */\n    CircularGauge.prototype.getMouseArgs = function (e, type, name) {\n        var rect = this.element.getBoundingClientRect();\n        var location = new GaugeLocation(-rect.left, -rect.top);\n        var isTouch = (e.type === type);\n        location.x += isTouch ? e.changedTouches[0].clientX : e.clientX;\n        location.y += isTouch ? e.changedTouches[0].clientY : e.clientY;\n        return {\n            cancel: false, name: name,\n            x: location.x, y: location.y,\n            target: isTouch ? e.target : e.target\n        };\n    };\n    /**\n     * Handles the gauge resize.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.gaugeResize = function (e) {\n        var _this = this;\n        var args = {\n            gauge: this,\n            previousSize: new Size(this.availableSize.width, this.availableSize.height),\n            name: resized,\n            currentSize: new Size(0, 0)\n        };\n        this.animatePointer = false;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        if (this.element.classList.contains('e-circulargauge')) {\n            this.resizeTo = window.setTimeout(function () {\n                _this.createSvg();\n                _this.calculateBounds();\n                _this.renderElements();\n                args.currentSize = _this.availableSize;\n                _this.trigger(resized, _this.isBlazor ? {} : args);\n            }, 500);\n        }\n        return false;\n    };\n    /**\n     * Applying styles for circular gauge elements\n     */\n    CircularGauge.prototype.setGaugeStyle = function (element) {\n        element.style.touchAction = this.enablePointerDrag ? 'none' : 'element';\n        element.style.msTouchAction = this.enablePointerDrag ? 'none' : 'element';\n        element.style.msContentZooming = 'none';\n        element.style.msUserSelect = 'none';\n        element.style.webkitUserSelect = 'none';\n        element.style.position = 'relative';\n    };\n    /**\n     * Method to set culture for gauge\n     */\n    CircularGauge.prototype.setCulture = function () {\n        this.intl = new Internationalization();\n    };\n    /**\n     * Methods to create svg element for circular gauge.\n     */\n    CircularGauge.prototype.createSvg = function () {\n        this.removeSvg();\n        this.calculateSvgSize();\n        this.svgObject = this.renderer.createSvg({\n            id: this.element.id + '_svg',\n            width: this.availableSize.width,\n            height: this.availableSize.height\n        });\n    };\n    /**\n     * To Remove the SVG from circular gauge.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.removeSvg = function () {\n        for (var i = 0; i < this.axes.length; i++) {\n            for (var j = 0; j < this.axes[i].annotations.length; j++) {\n                resetBlazorTemplate(this.element.id + '_Axis' + i + '_ContentTemplate' + j, '_ContentTemplate');\n            }\n        }\n        removeElement(this.element.id + '_Secondary_Element');\n        if (this.svgObject) {\n            while (this.svgObject.childNodes.length > 0) {\n                this.svgObject.removeChild(this.svgObject.firstChild);\n            }\n            if (!this.svgObject.hasChildNodes() && this.svgObject.parentNode) {\n                remove(this.svgObject);\n            }\n        }\n    };\n    /**\n     * To initialize the circular gauge private variable.\n     * @private\n     */\n    CircularGauge.prototype.initPrivateVariable = function () {\n        if (this.element.id === '') {\n            var collection = document.getElementsByClassName('e-circulargauge').length;\n            this.element.id = 'circulargauge_control_' + collection;\n        }\n        this.renderer = new SvgRenderer(this.element.id);\n        this.gaugeAxisLayoutPanel = new AxisLayoutPanel(this);\n        this.animatePointer = true;\n    };\n    /**\n     * To calculate the size of the circular gauge element.\n     */\n    CircularGauge.prototype.calculateSvgSize = function () {\n        var containerWidth = this.element.offsetWidth;\n        var containerHeight = this.element.offsetHeight;\n        var borderWidth = parseInt(this.element.style.borderWidth.split('px').join(''), 10) * 2;\n        var width = stringToNumber(this.width, containerWidth) || containerWidth || 600;\n        var height = stringToNumber(this.height, containerHeight) || containerHeight || 450;\n        width = !isNaN(borderWidth) ? (width - borderWidth) : width;\n        height = !isNaN(borderWidth) ? (height - borderWidth) : height;\n        this.availableSize = new Size(width, height);\n    };\n    /**\n     * Method to calculate the availble size for circular gauge.\n     */\n    CircularGauge.prototype.calculateBounds = function () {\n        var padding = 5;\n        var rect;\n        var margin = this.margin;\n        var titleHeight = 0;\n        if (this.title) {\n            titleHeight = measureText(this.title, this.titleStyle).height + padding;\n        }\n        var top = margin.top + titleHeight + this.border.width;\n        var left = margin.left + this.border.width;\n        var width = this.availableSize.width - left - margin.right - this.border.width;\n        var height = this.availableSize.height - top - this.border.width - margin.bottom;\n        var radius = Math.min(width, height) / 2;\n        if (this.moveToCenter && this.axes.length === 1 &&\n            isNullOrUndefined(this.centerX) && isNullOrUndefined(this.centerY)) {\n            rect = new Rect(left, top, width, height);\n        }\n        else {\n            rect = new Rect((left + (width / 2) - radius), (top + (height / 2) - radius), radius * 2, radius * 2);\n        }\n        this.gaugeRect = rect;\n        var centerX = this.centerX !== null ?\n            stringToNumber(this.centerX, this.availableSize.width) : rect.x + (rect.width / 2);\n        var centerY = this.centerY !== null ?\n            stringToNumber(this.centerY, this.availableSize.height) : rect.y + (rect.height / 2);\n        this.midPoint = new GaugeLocation(centerX, centerY);\n        this.gaugeAxisLayoutPanel.measureAxis(rect);\n    };\n    /**\n     * To render elements for circular gauge\n     */\n    CircularGauge.prototype.renderElements = function (animate) {\n        if (animate === void 0) { animate = true; }\n        this.renderBorder();\n        this.renderTitle();\n        this.gaugeAxisLayoutPanel.renderAxes(animate);\n        this.element.appendChild(this.svgObject);\n        this.trigger(loaded, this.isBlazor ? {} : { gauge: this });\n    };\n    /**\n     * Method to render the title for circular gauge.\n     */\n    CircularGauge.prototype.renderTitle = function () {\n        if (this.title) {\n            this.titleStyle.fontFamily = this.themeStyle.fontFamily || this.titleStyle.fontFamily;\n            this.titleStyle.size = this.themeStyle.fontSize || this.titleStyle.size;\n            var size = measureText(this.title, this.titleStyle);\n            var options = new TextOption(this.element.id + '_CircularGaugeTitle', this.availableSize.width / 2, this.margin.top + 3 * (size.height / 4), 'middle', this.title);\n            var element = textElement(options, this.titleStyle, this.titleStyle.color || this.themeStyle.titleFontColor, this.svgObject, '');\n            element.setAttribute('aria-label', this.description || this.title);\n            element.setAttribute('tabindex', this.tabIndex.toString());\n        }\n    };\n    /**\n     * Method to render the border for circular gauge.\n     */\n    CircularGauge.prototype.renderBorder = function () {\n        var borderWidth = this.border.width;\n        if (borderWidth > 0 || (this.background || this.themeStyle.backgroundColor)) {\n            this.svgObject.appendChild(this.renderer.drawRectangle(new RectOption(this.element.id + '_CircularGaugeBorder', this.background || this.themeStyle.backgroundColor, this.border, null, new Rect(borderWidth / 2, borderWidth / 2, this.availableSize.width - borderWidth, this.availableSize.height - borderWidth))));\n        }\n    };\n    /**\n     * Method to set the pointer value dynamically for circular gauge.\n     */\n    CircularGauge.prototype.setPointerValue = function (axisIndex, pointerIndex, value) {\n        var _this = this;\n        var axis = this.axes[axisIndex];\n        var pointer = axis.pointers[pointerIndex];\n        var pointerRadius = pointer.currentRadius;\n        var enableAnimation = pointer.animation.enable;\n        value = value < axis.visibleRange.min ? axis.visibleRange.min : value;\n        value = value > axis.visibleRange.max ? axis.visibleRange.max : value;\n        pointer.pathElement.map(function (element) {\n            if (pointer.type === 'RangeBar') {\n                setStyles(element, pointer.color, pointer.border);\n                if (enableAnimation) {\n                    _this.gaugeAxisLayoutPanel.pointerRenderer.performRangeBarAnimation(element, pointer.currentValue, value, axis, pointer, pointerRadius, (pointerRadius - pointer.pointerWidth));\n                }\n                else {\n                    _this.gaugeAxisLayoutPanel.pointerRenderer.setPointerValue(axis, pointer, value);\n                }\n            }\n            else {\n                if (element.id.indexOf('_Pointer_NeedleCap_') >= 0) {\n                    setStyles(element, pointer.cap.color, pointer.cap.border);\n                }\n                else if (element.id.indexOf('_Pointer_NeedleTail_') >= 0) {\n                    setStyles(element, pointer.needleTail.color, pointer.needleTail.border);\n                }\n                else if (element.id.indexOf('_Pointer_NeedleRect_') >= 0) {\n                    setStyles(element, 'transparent', { color: 'transparent', width: 0 });\n                }\n                else {\n                    setStyles(element, pointer.color, pointer.border);\n                }\n                if (enableAnimation) {\n                    _this.gaugeAxisLayoutPanel.pointerRenderer.performNeedleAnimation(element, pointer.currentValue, value, axis, pointer, pointerRadius, (pointerRadius - pointer.pointerWidth));\n                }\n                else {\n                    _this.gaugeAxisLayoutPanel.pointerRenderer.setPointerValue(axis, pointer, value);\n                }\n            }\n        });\n        this.isProtectedOnChange = true;\n        pointer.currentValue = value;\n        pointer.value = value;\n        this.isProtectedOnChange = false;\n    };\n    /**\n     * Method to set the annotation content dynamically for circular gauge.\n     */\n    CircularGauge.prototype.setAnnotationValue = function (axisIndex, annotationIndex, content) {\n        var isElementExist = getElement(this.element.id + '_Annotations_' + axisIndex) !== null;\n        var element = getElement(this.element.id + '_Annotations_' + axisIndex) ||\n            createElement('div', {\n                id: this.element.id + '_Annotations_' + axisIndex\n            });\n        var annotation = this.axes[axisIndex].annotations[annotationIndex];\n        if (content !== null) {\n            removeElement(this.element.id + '_Axis_' + axisIndex + '_Annotation_' + annotationIndex);\n            annotation.content = content;\n            this.annotationsModule.createTemplate(element, annotationIndex, axisIndex);\n            if (!isElementExist) {\n                getElement(this.element.id + '_Secondary_Element').appendChild(element);\n            }\n        }\n    };\n    /**\n     * Method to set the range values dynamically for circular gauge.\n     */\n    CircularGauge.prototype.setRangeValue = function (axisIndex, rangeIndex, start, end) {\n        var element = getElement(this.element.id + '_Axis_' + axisIndex + '_Range_' + rangeIndex);\n        var axis = this.axes[axisIndex];\n        var range = axis.ranges[rangeIndex];\n        var axisRange = axis.visibleRange;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startValue = Math.min(Math.max(start, axisRange.min), end);\n        var endValue = Math.min(Math.max(start, end), axisRange.max);\n        var startAngle = getAngleFromValue(startValue, axisRange.max, axisRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var endAngle = getAngleFromValue(endValue, axisRange.max, axisRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var startWidth;\n        if (range.startWidth.length > 0) {\n            startWidth = toPixel(range.startWidth, range.currentRadius);\n        }\n        else {\n            startWidth = range.startWidth;\n        }\n        var endWidth;\n        if (range.endWidth.length > 0) {\n            endWidth = toPixel(range.endWidth, range.currentRadius);\n        }\n        else {\n            endWidth = range.endWidth;\n        }\n        endAngle = isClockWise ? endAngle : [startAngle, startAngle = endAngle][0];\n        endWidth = isClockWise ? endWidth : [startWidth, startWidth = endWidth][0];\n        element.setAttribute('d', getPathArc(this.midPoint, Math.round(startAngle), Math.round(endAngle), range.currentRadius, startWidth, endWidth));\n        setStyles(element, (range.color ? range.color : range.rangeColor), {\n            color: (range.color ? range.color : range.rangeColor),\n            width: 0\n        });\n    };\n    /**\n     * To destroy the widget\n     * @method destroy\n     * @return {void}\n     * @member of Circular-Gauge\n     */\n    CircularGauge.prototype.destroy = function () {\n        this.unWireEvents();\n        this.removeSvg();\n        _super.prototype.destroy.call(this);\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    CircularGauge.prototype.requiredModules = function () {\n        var modules = [];\n        var annotationEnable = false;\n        var axes = this.axes;\n        axes.map(function (axis) {\n            axis.annotations.map(function (annotation) {\n                annotationEnable = annotationEnable || annotation.content !== null;\n            });\n        });\n        if (annotationEnable) {\n            modules.push({\n                member: 'Annotations',\n                args: [this, Annotations]\n            });\n        }\n        if (this.tooltip.enable) {\n            modules.push({\n                member: 'Tooltip',\n                args: [this, GaugeTooltip]\n            });\n        }\n        return modules;\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @private\n     */\n    CircularGauge.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * @private\n     */\n    CircularGauge.prototype.onPropertyChanged = function (newProp, oldProp) {\n        // property method calculated\n        var renderer = false;\n        var refreshBounds = false;\n        var refreshWithoutAnimation = false;\n        var isPointerValueSame = (Object.keys(newProp).length === 1 && newProp instanceof Object &&\n            !isNullOrUndefined(this.activePointer));\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                case 'width':\n                case 'centerX':\n                case 'centerY':\n                case 'margin':\n                    this.createSvg();\n                    refreshBounds = true;\n                    break;\n                case 'title':\n                    refreshBounds = (newProp.title === '' || oldProp.title === '');\n                    renderer = !(newProp.title === '' || oldProp.title === '');\n                    break;\n                case 'titleStyle':\n                    if (newProp.titleStyle && newProp.titleStyle.size) {\n                        refreshBounds = true;\n                    }\n                    else {\n                        renderer = true;\n                    }\n                    break;\n                case 'border':\n                    renderer = true;\n                    break;\n                case 'background':\n                    renderer = true;\n                    break;\n                case 'axes':\n                    refreshWithoutAnimation = true;\n                    break;\n            }\n        }\n        if (!isPointerValueSame) {\n            if (!refreshBounds && renderer) {\n                this.removeSvg();\n                this.renderElements();\n            }\n            if (refreshBounds) {\n                this.removeSvg();\n                this.calculateBounds();\n                this.renderElements();\n            }\n            if (refreshWithoutAnimation && !renderer && !refreshBounds) {\n                this.removeSvg();\n                this.calculateBounds();\n                this.renderElements(false);\n            }\n        }\n    };\n    /**\n     * Get component name for circular gauge\n     * @private\n     */\n    CircularGauge.prototype.getModuleName = function () {\n        return 'circulargauge';\n    };\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ color: 'transparent', width: 0 }, Border)\n    ], CircularGauge.prototype, \"border\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"background\", void 0);\n    __decorate([\n        Property('')\n    ], CircularGauge.prototype, \"title\", void 0);\n    __decorate([\n        Complex({ size: '15px', color: null }, Font)\n    ], CircularGauge.prototype, \"titleStyle\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], CircularGauge.prototype, \"margin\", void 0);\n    __decorate([\n        Collection([{}], Axis)\n    ], CircularGauge.prototype, \"axes\", void 0);\n    __decorate([\n        Complex({}, TooltipSettings)\n    ], CircularGauge.prototype, \"tooltip\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"enablePointerDrag\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"centerX\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"centerY\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"moveToCenter\", void 0);\n    __decorate([\n        Property('Material')\n    ], CircularGauge.prototype, \"theme\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"useGroupingSeparator\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"description\", void 0);\n    __decorate([\n        Property(1)\n    ], CircularGauge.prototype, \"tabIndex\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"loaded\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"animationComplete\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"axisLabelRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"radiusCalculate\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"annotationRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"tooltipRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"dragMove\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"dragEnd\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseMove\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseDown\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseUp\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"resized\", void 0);\n    CircularGauge = __decorate([\n        NotifyPropertyChanges\n    ], CircularGauge);\n    return CircularGauge;\n}(Component));\nexport { CircularGauge };\n","import * as index from './index';\nindex.CircularGauge.Inject(index.GaugeTooltip, index.Annotations);\nexport * from './index';\n"],"names":["measureText","text","font","htmlObject","document","getElementById","createElement","id","body","appendChild","style","getFontStyle","innerHTML","setAttribute","Size","clientWidth","clientHeight","toPixel","value","maxDimension","undefined","indexOf","parseInt","size","fontStyle","fontWeight","fontFamily","opacity","color","setStyles","element","fill","border","setStyleAttribute","stroke","stroke-width","width","measureElementRect","bounds","getBoundingClientRect","removeElement","stringToNumber","containerSize","textElement","options","parent","styles","renderOptions","renderer","SvgRenderer","x","y","text-anchor","anchor","transform","dominant-baseline","baseLine","createText","appendPath","gauge","functionName","calculateSum","from","to","values","sum","length","linear","currentTime","startValue","endValue","duration","Math","cos","PI","getAngleFromValue","maximumValue","minimumValue","startAngle","endAngle","isClockWise","angle","isCompleteAngle","getDegree","round","degree","getValueFromAngle","totalAngle","floor","getAngleFromLocation","center","point","atan2","getLocationFromAngle","radius","radian","GaugeLocation","sin","getPathArc","start","end","startWidth","endWidth","startRadius","endRadius","arcRadius","getRangePath","getCirclePath","innerStart","innerEnd","clockWise","getRoundedPathArc","actualStart","actualEnd","oldStart","oldEnd","getRoundedPath","outerOldEnd","innerOldEnd","outerOldStart","innerOldStart","getCompleteArc","innerRadius","getCompletePath","getElement","getTemplateFunction","template","templateFn","querySelectorAll","charAt","templateComplier","querySelector","trim","e","remove","getPointer","targetId","tempString","replace","split","axisIndex","pointerIndex","getElementSize","elementSize","tooltipData","templateElement","templateLength","height","getMousePosition","pageX","pageY","elementRect","pageXOffset","ownerDocument","defaultView","pageYOffset","clientTop","documentElement","clientLeft","positionX","left","positionY","top","getLabelFormat","format","match","calculateShapes","location","shape","url","path","locX","locY","merge","rx","ry","cx","cy","d","href","getRangeColor","ranges","min","max","currentRange","filter","range","rangeColor","getThemeStyle","theme","toLowerCase","backgroundColor","titleFontColor","tooltipFillColor","tooltipFontColor","labelColor","lineColor","majorTickColor","minorTickColor","pointerColor","capColor","needleColor","needleTailColor","fontSize","labelFontFamily","tooltipFillOpacity","tooltipTextOpacity","Theme","__extends","extendStatics","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","CustomizeOption","PathOption","_super","dashArray","_this","call","RectOption","rect","Rect","TextOption","VisibleLabels","__decorate","decorators","target","key","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","Border","apply","Property","ChildProperty","Font","Margin","TooltipSettings","Complex","axisLabelFont","Line","Label","Range","Tick","Cap","NeedleTail","Animation","Annotation","Pointer","Axis","visibleLabels","Collection","Annotations","elementId","renderAnnotation","axis","index","availableSize","parentElement","annotations","map","annotation","annotationIndex","content","createTemplate","childElementCount","axes","updateBlazorTemplate","childElement","zIndex","autoAngle","argsData","cancel","name","textStyle","trigger","observedArgs","window","length_1","slice","updateLocation","currentRadius","midPoint","description","getModuleName","destroy","GaugeTooltip","tooltipId","tooltip","borderStyle","addEventListener","renderTooltip","touchArg","samePointerEle","type","changedTouches","pointerEle","svgRect_1","svgObject","axisRect_1","rect_1","abs","currentPointer","currentAxis","angle_1","currentValue","visibleRange","direction","tooltipFormat","labelStyle","customLabelFormat","intl","getNumberFormat","useGrouping","useGroupingSeparator","tooltipEle","className","roundValue","roundingPlaces","parseFloat","toFixed","content_1","RegExp","tooltipArgs_1","pointer","event","appendInBodyTag","showAtMousePosition","tooltipRect","findPosition","themeStyle","svgTooltip","Tooltip","enable","data","enableAnimation","inverted","arrowInverted","areaBounds","appendTo","bodyToolElement","getElementsByClassName","isNullOrUndefined","removeTooltip","innerWidth","resetBlazorTemplate","addLeft","addTop","addHeight","addWidth","tooltipPosition","mouseUpHandler","clearTimeout","setTimeout","bind","isDestroyed","on","Browser","touchMoveEvent","touchEndEvent","removeEventListener","off","AxisRenderer","drawAxisOuterLine","background","setRangeColor","drawAxisLine","lineStyle","drawAxisLabels","label","labelElement","createGroup","labelCollection","position","nearSize","maxLabelSize","farSize","hiddenLabel","findAnchor","useRangeColor","drawMinorTickLines","minorTickElements","minorLineStyle","minorTicks","minorInterval","interval","isRangeColor","majorValues","calculateTicks","drawMajorTickLines","majorTickElements","majorLineStyle","majorTicks","push","axisLineWidth","offset","isOutside","drawAxisRange","roundedStartAngle","roundedEndAngle","rangeElement","rangeIndex","calculateRangeRadius","isAngleCross360","rangeGap","startAndEndRangeGap","roundedCornerRadius","process","ceil","rangeColors","PointerRenderer","drawPointers","animate","pointerElement","pointers","pathElement","calculatePointerRadius","setPointerValue","doPointerAnimation","drawNeedlePointer","pointerRadius","rectDirection","mid","pointerWidth","needleTail","capcolor","cap","roundStartAngle","roundEndAngle","oldStartValue","oldEndValue","minRadius","toString","drawMarkerPointer","markerShape","markerWidth","markerHeight","imageUrl","drawRangeBarPointer","animation","animatePointer","performRangeBarAnimation","performNeedleAnimation","sweepAngle","pointAngle","progress","args","timeStamp","model","minAngle","roundRadius","arg","isBlazor","AxisLayoutPanel","axisRenderer","pointerRenderer","measureAxis","measureAxisSize","calculateAxesRadius","totalRadius","rangeMaximumRadius","xMarginDiff","margin","right","yMarginDiff","bottom","this_1","_i","_a","moveToCenter","centerX","centerY","startPoint","endPoint","xDiff","yDiff","startXDiff","endXDiff","startYDiff","endYDiff","newPoint","gaugeRect","calculateNumericInterval","calculateVisibleLabels","computeSize","farSizes","calculateAxisValues","calculateVisibleRange","minimum","maximum","calculateNiceInterval","maxValue","minValue","delta","circumference","desiredIntervalsCount","niceInterval","minInterval","pow","log","currentInterval","this_2","lastLabel","maxVal","showLastLabel","getMaxLabelWidth","lineSize","outerHeight","innerHeight","isMajorTickOutside","isMinorTickOutside","isLabelOutside","majorTickOffset","minorTickOffset","labelOffset","axes_1","renderAxes","axesElements","clip-path","annotationsModule","drawClipPath","CircularGauge","preRender","unWireEvents","initPrivateVariable","setCulture","createSvg","wireEvents","render","setTheme","calculateBounds","renderElements","EventHandler","touchStartEvent","gaugeOnMouseDown","mouseMove","mouseEnd","gaugeRightClick","isPointer","mouseLeave","isTouch","gaugeResize","add","setGaugeStyle","getMouseArgs","dragArgs","dragBlazorArgs","tooltipModule","enablePointerDrag","activePointer","dragPointInd","dragAxisInd","activeAxis","previousValue","pointerDrag","notify","buttons","pointerType","preventDefault","stopPropagation","gaugeAxisLayoutPanel","pointInd","axisInd","blazorArgs","pointerInd","clientX","clientY","previousSize","currentSize","resizeTo","classList","contains","touchAction","msTouchAction","msContentZooming","msUserSelect","webkitUserSelect","Internationalization","removeSvg","calculateSvgSize","j","childNodes","removeChild","firstChild","hasChildNodes","parentNode","collection","containerWidth","offsetWidth","containerHeight","offsetHeight","borderWidth","join","isNaN","titleHeight","title","titleStyle","renderBorder","renderTitle","tabIndex","drawRectangle","isProtectedOnChange","setAnnotationValue","isElementExist","setRangeValue","axisRange","requiredModules","modules","annotationEnable","member","getPersistData","addOnPersist","onPropertyChanged","newProp","oldProp","refreshBounds","refreshWithoutAnimation","isPointerValueSame","keys","Event","NotifyPropertyChanges","Component","index.CircularGauge","Inject","index.GaugeTooltip","index.Annotations"],"mappings":"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"}