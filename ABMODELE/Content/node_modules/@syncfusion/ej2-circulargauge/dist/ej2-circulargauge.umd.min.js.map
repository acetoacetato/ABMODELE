{"version":3,"file":"ej2-circulargauge.umd.min.js","sources":["../src/circular-gauge/utils/helper.js","../src/circular-gauge/model/theme.js","../src/circular-gauge/model/base.js","../src/circular-gauge/axes/axis.js","../src/circular-gauge/model/constants.js","../src/circular-gauge/annotations/annotations.js","../src/circular-gauge/user-interaction/tooltip.js","../src/circular-gauge/axes/axis-renderer.js","../src/circular-gauge/axes/pointer-renderer.js","../src/circular-gauge/axes/axis-panel.js","../src/circular-gauge/circular-gauge.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * Specifies Circular-Gauge Helper methods\n */\nimport { compile as templateComplier } from '@syncfusion/ej2-base';\nimport { merge } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\nimport { createElement, remove, setStyleAttribute } from '@syncfusion/ej2-base';\n/**\n * Function to measure the height and width of the text.\n * @param  {string} text\n * @param  {FontModel} font\n * @param  {string} id\n * @returns Size\n * @private\n */\nexport function measureText(text, font) {\n    var htmlObject = document.getElementById('gauge-measuretext');\n    if (htmlObject === null) {\n        htmlObject = createElement('text', { id: 'gauge-measuretext' });\n        document.body.appendChild(htmlObject);\n    }\n    var style = 'position: absolute; visibility: hidden;' +\n        ';left: 0; top: -100; white-space: nowrap;' + getFontStyle(font);\n    htmlObject.innerHTML = text;\n    htmlObject.setAttribute('style', style);\n    return new Size(htmlObject.clientWidth, htmlObject.clientHeight);\n}\n/**\n * Function to find number from string\n * * @returns number\n * @private\n */\nexport function toPixel(value, maxDimension) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (maxDimension / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Function to get the style from FontModel.\n * @returns string\n * @private\n */\nexport function getFontStyle(font) {\n    var style = '';\n    style = 'font-size:' + font.size +\n        '; font-style:' + font.fontStyle + '; font-weight:' + font.fontWeight +\n        '; font-family:' + font.fontFamily + ';opacity:' + font.opacity +\n        '; color:' + font.color + ';';\n    return style;\n}\n/**\n * Function to set style to the element.\n * @private\n */\nexport function setStyles(element, fill, border) {\n    setStyleAttribute(element, {\n        'stroke': border.color, 'stroke-width': border.width,\n        'fill': fill\n    });\n}\n/**\n * Function to measure the element rect.\n * @returns ClientRect\n * @private\n */\nexport function measureElementRect(element) {\n    var bounds;\n    document.body.appendChild(element);\n    bounds = element.getBoundingClientRect();\n    removeElement(element.id);\n    return bounds;\n}\n/**\n * Function to convert the number from string.\n * @returns number\n * @private\n */\nexport function stringToNumber(value, containerSize) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (containerSize / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Function to create the text element.\n * @returns Element\n * @private\n */\nexport function textElement(options, font, color, parent, styles) {\n    var renderOptions = {};\n    var htmlObject;\n    var renderer = new SvgRenderer('');\n    var style = styles + ' font-size:' + font.size + '; font-style:' + font.fontStyle +\n        ' ; font-weight:' + font.fontWeight + '; font-family:' + font.fontFamily + ';';\n    renderOptions = {\n        'id': options.id,\n        'x': options.x,\n        'y': options.y,\n        'fill': color,\n        'text-anchor': options.anchor,\n        'transform': options.transform,\n        'opacity': font.opacity,\n        'dominant-baseline': options.baseLine,\n        'style': style\n    };\n    htmlObject = renderer.createText(renderOptions, options.text);\n    parent.appendChild(htmlObject);\n    return htmlObject;\n}\n/**\n * Function to append the path to the element.\n * @returns Element\n * @private\n */\nexport function appendPath(options, element, gauge, functionName) {\n    functionName = functionName ? functionName : 'Path';\n    var htmlObject = gauge.renderer['draw' + functionName](options);\n    htmlObject.setAttribute('transform', options.transform);\n    htmlObject.setAttribute('style', options.style);\n    element.appendChild(htmlObject);\n    return htmlObject;\n}\n/**\n * Function to calculate the sum of array values.\n * @returns number\n * @private\n */\nexport function calculateSum(from, to, values) {\n    var sum = 0;\n    var length = values.length;\n    for (; from < length; from++) {\n        sum += values[from];\n    }\n    return sum;\n}\n/**\n * Function to calculate the value for linear animation effect\n * @param currentTime\n * @param startValue\n * @param endValue\n * @param duration\n * @private\n */\nexport function linear(currentTime, startValue, endValue, duration) {\n    return -endValue * Math.cos(currentTime / duration * (Math.PI / 2)) + endValue + startValue;\n}\n/**\n * Function to get the angle from value for circular gauge.\n * @returns number\n * @private\n */\nexport function getAngleFromValue(value, maximumValue, minimumValue, startAngle, endAngle, isClockWise) {\n    var angle;\n    endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n    startAngle -= 90;\n    endAngle -= 90;\n    if (isClockWise) {\n        angle = ((value - minimumValue) * (getDegree(startAngle, endAngle) / (maximumValue - minimumValue))) + startAngle;\n    }\n    else {\n        angle = endAngle - ((value - minimumValue) * (getDegree(startAngle, endAngle) / (maximumValue - minimumValue)));\n        angle = angle < 0 ? 360 + angle : angle;\n    }\n    angle = Math.round(angle) >= 360 ? (angle - 360) : Math.round(angle) < 0 ? (360 + angle) : angle;\n    return angle;\n}\n/**\n * Function to get the degree for circular gauge.\n * @returns number\n * @private\n */\nexport function getDegree(startAngle, endAngle) {\n    var degree = endAngle - startAngle;\n    return degree < 0 ? (degree + 360) : degree;\n}\n/**\n * Function to get the value from angle for circular gauge.\n * @returns number\n * @private\n */\nexport function getValueFromAngle(angle, maximumValue, minimumValue, startAngle, endAngle, isClockWise) {\n    endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n    angle = angle < startAngle ? (angle + 360) : angle;\n    if (isClockWise) {\n        return (((angle - startAngle) / getDegree(startAngle, endAngle)) * (maximumValue - minimumValue)) + minimumValue;\n    }\n    else {\n        return maximumValue - ((((angle - startAngle) / getDegree(startAngle, endAngle)) * (maximumValue - minimumValue)) + minimumValue);\n    }\n}\n/**\n * Function to check whether it's a complete circle for circular gauge.\n * @returns boolean\n * @private\n */\nexport function isCompleteAngle(startAngle, endAngle) {\n    var totalAngle = endAngle - startAngle;\n    totalAngle = totalAngle <= 0 ? (totalAngle + 360) : totalAngle;\n    return Math.floor(totalAngle / 360) !== 0;\n}\n/**\n * Function to get angle from location for circular gauge.\n * @returns number\n * @private\n */\nexport function getAngleFromLocation(center, point) {\n    var angle = Math.atan2((point.y - center.y), (point.x - center.x));\n    angle = Math.round((angle < 0 ? (6.283 + angle) : angle) * (180 / Math.PI)) - 270;\n    angle += angle < 0 ? 360 : 0;\n    return angle;\n}\n/**\n * Function to get the location from angle for circular gauge.\n * @returns GaugeLocation\n * @private\n */\nexport function getLocationFromAngle(degree, radius, center) {\n    var radian = (degree * Math.PI) / 180;\n    return new GaugeLocation(Math.cos(radian) * radius + center.x, Math.sin(radian) * radius + center.y);\n}\n/**\n * Function to get the path direction of the circular gauge.\n * @returns string\n * @private\n */\nexport function getPathArc(center, start, end, radius, startWidth, endWidth) {\n    end -= isCompleteAngle(start, end) ? 0.0001 : 0;\n    var degree = getDegree(start, end);\n    var startRadius = radius - startWidth;\n    var endRadius = radius - endWidth;\n    var arcRadius = radius - ((startWidth + endWidth) / 2);\n    if (startWidth !== undefined && endWidth !== undefined) {\n        return getRangePath(getLocationFromAngle(start, radius, center), getLocationFromAngle(end, radius, center), getLocationFromAngle(start, startRadius, center), getLocationFromAngle(end, endRadius, center), radius, arcRadius, arcRadius, (degree < 180) ? 0 : 1);\n    }\n    else {\n        return getCirclePath(getLocationFromAngle(start, radius, center), getLocationFromAngle(end, radius, center), radius, (degree < 180) ? 0 : 1);\n    }\n}\n/**\n * Function to get the range path direction of the circular gauge.\n * @returns string\n * @private\n */\nexport function getRangePath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y +\n        ' A ' + radius + ' ' + radius + ' 0 ' +\n        clockWise + ' 1 ' + end.x + ' ' + end.y +\n        ' L ' + innerEnd.x + ' ' + innerEnd.y +\n        ' A ' + endRadius + ' ' + startRadius + ' 0 ' +\n        clockWise + ' 0 ' + innerStart.x + ' ' + innerStart.y + ' Z';\n}\n/**\n * Function to get the rounded path direction of the circular gauge.\n * @returns string\n * @private\n */\nexport function getRoundedPathArc(center, actualStart, actualEnd, oldStart, oldEnd, radius, startWidth, endWidth) {\n    actualEnd -= isCompleteAngle(actualStart, actualEnd) ? 0.0001 : 0;\n    var degree = getDegree(actualStart, actualEnd);\n    var startRadius = radius - startWidth;\n    var endRadius = radius - endWidth;\n    var arcRadius = radius - ((startWidth + endWidth) / 2);\n    return getRoundedPath(getLocationFromAngle(actualStart, radius, center), getLocationFromAngle(actualEnd, radius, center), getLocationFromAngle(oldEnd, radius, center), getLocationFromAngle(oldEnd, endRadius, center), getLocationFromAngle(oldStart, radius, center), getLocationFromAngle(oldStart, startRadius, center), getLocationFromAngle(actualStart, startRadius, center), getLocationFromAngle(actualEnd, endRadius, center), radius, arcRadius, arcRadius, (degree < 180) ? 0 : 1);\n}\n/**\n * Function to get the rounded range path direction of the circular gauge.\n * @returns string\n * @private\n */\nexport function getRoundedPath(start, end, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart, innerStart, innerEnd, radius, startRadius, endRadius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y +\n        ' A ' + radius + ' ' + radius + ' 0 ' +\n        clockWise + ' 1 ' + end.x + ' ' + end.y +\n        ' C ' + outerOldEnd.x + ' ' + outerOldEnd.y + ' ' + innerOldEnd.x + ' ' +\n        innerOldEnd.y + ' ' + innerEnd.x + ' ' + innerEnd.y +\n        ' A ' + endRadius + ' ' + startRadius + ' 0 ' +\n        clockWise + ' 0 ' + innerStart.x + ' ' + innerStart.y +\n        ' C ' + innerOldStart.x + ' ' + innerOldStart.y + ' ' + outerOldStart.x + ' ' +\n        outerOldStart.y + ' ' + start.x + ' ' + start.y + ' Z';\n}\n/**\n * Function to calculate the complete path arc of the circular gauge.\n * @returns string\n * @private\n */\nexport function getCompleteArc(center, start, end, radius, innerRadius) {\n    end -= isCompleteAngle(start, end) ? 0.0001 : 0;\n    var degree = getDegree(start, end);\n    return getCompletePath(center, getLocationFromAngle(start, radius, center), getLocationFromAngle(end, radius, center), radius, getLocationFromAngle(start, innerRadius, center), getLocationFromAngle(end, innerRadius, center), innerRadius, (degree < 180) ? 0 : 1);\n}\n/**\n * Function to get the circular path direction of the circular gauge.\n * @returns string\n * @private\n */\nexport function getCirclePath(start, end, radius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' +\n        radius + ' 0 ' + clockWise + ' 1 ' + end.x + ' ' + end.y;\n}\n/**\n * Function to get the complete path direction of the circular gauge.\n * @returns string\n * @private\n */\nexport function getCompletePath(center, start, end, radius, innerStart, innerEnd, innerRadius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' + radius + ' 0 ' + clockWise +\n        ' 1 ' + end.x + ' ' + end.y + ' L ' + innerEnd.x + ' ' + innerEnd.y + ' A ' + innerRadius +\n        ' ' + innerRadius + ' 0 ' + clockWise + ',0 ' + innerStart.x + ' ' + innerStart.y + ' Z';\n}\n/**\n * Function to get element from id.\n * @returns Element\n * @private\n */\nexport function getElement(id) {\n    return document.getElementById(id);\n}\n/**\n * Function to compile the template function for circular gauge.\n * @returns Function\n * @private\n */\nexport function getTemplateFunction(template) {\n    var templateFn = null;\n    var e;\n    try {\n        if (document.querySelectorAll(template).length) {\n            if ((template.charAt(0) !== 'a' || template.charAt(0) !== 'A') && template.length !== 1) {\n                templateFn = templateComplier(document.querySelector(template).innerHTML.trim());\n            }\n        }\n    }\n    catch (e) {\n        templateFn = templateComplier(template);\n    }\n    return templateFn;\n}\n/**\n * Function to remove the element from id.\n * @private\n */\nexport function removeElement(id) {\n    var element = getElement(id);\n    if (element) {\n        remove(element);\n    }\n}\n/**\n * Function to get current point for circular gauge using element id.\n * @returns IVisiblePointer\n * @private\n */\nexport function getPointer(targetId, gauge) {\n    var tempString;\n    tempString = targetId.replace(gauge.element.id, '').split('_Axis_')[1];\n    return {\n        axisIndex: +tempString[0],\n        pointerIndex: +tempString[tempString.length - 1]\n    };\n}\nexport function getElementSize(template, gauge, parent) {\n    var elementSize;\n    var element;\n    var templateFn = getTemplateFunction(template);\n    var tooltipData = templateFn ? templateFn({}, null, null, gauge.element.id + 'Template') : [];\n    if (templateFn && tooltipData.length) {\n        element = gauge.createElement('div', { id: gauge.element.id + '_Measure_Element' });\n        gauge.element.appendChild(element);\n        var templateElement = templateFn({}, null, null, gauge.element.id + 'Template');\n        var templateLength = templateElement.length;\n        while (templateLength > 0) {\n            element.appendChild(templateElement[0]);\n            templateLength--;\n        }\n        parent.appendChild(element);\n        elementSize = new Size(parent.getBoundingClientRect().width, parent.getBoundingClientRect().height);\n        remove(element);\n    }\n    return elementSize;\n}\n/**\n * Function to get the mouse position\n * @param pageX\n * @param pageY\n * @param element\n */\nexport function getMousePosition(pageX, pageY, element) {\n    var elementRect = element.getBoundingClientRect();\n    var pageXOffset = element.ownerDocument.defaultView.pageXOffset;\n    var pageYOffset = element.ownerDocument.defaultView.pageYOffset;\n    var clientTop = element.ownerDocument.documentElement.clientTop;\n    var clientLeft = element.ownerDocument.documentElement.clientLeft;\n    var positionX = elementRect.left + pageXOffset - clientLeft;\n    var positionY = elementRect.top + pageYOffset - clientTop;\n    return new GaugeLocation((pageX - positionX), (pageY - positionY));\n}\n/**\n * Function to convert the label using formar for cirular gauge.\n * @returns string\n * @private\n */\nexport function getLabelFormat(format) {\n    var customLabelFormat = format && format.match('{value}') !== null;\n    var skeleton = customLabelFormat ? '' : format;\n    return skeleton;\n}\n/**\n * Function to calculate the marker shape for circular gauge.\n * @returns PathOption\n * @private\n */\nexport function calculateShapes(location, shape, size, url, options) {\n    var path;\n    var width = size.width;\n    var height = size.height;\n    var locX = location.x;\n    var locY = location.y;\n    var x = location.x + (-width / 2);\n    var y = location.y + (-height / 2);\n    switch (shape) {\n        case 'Circle':\n            merge(options, { 'rx': width / 2, 'ry': height / 2, 'cx': locX, 'cy': locY });\n            break;\n        case 'Diamond':\n            path = 'M' + ' ' + x + ' ' + locY + ' ' +\n                'L' + ' ' + locX + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + locY + ' ' +\n                'L' + ' ' + locX + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + locY + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'Rectangle':\n            path = 'M' + ' ' + x + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (locY + (-height / 2)) + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'Triangle':\n            path = 'M' + ' ' + locX + ' ' + locY + ' ' +\n                'L' + ' ' + (locX - height) + ' ' + (locY - (width / 2)) +\n                'L' + ' ' + (locX - height) + ' ' + (locY + (width / 2)) + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'InvertedTriangle':\n            path = 'M' + ' ' + locX + ' ' + locY + ' ' +\n                'L' + ' ' + (locX + height) + ' ' + (locY - (width / 2)) +\n                'L' + ' ' + (locX + height) + ' ' + (locY + (width / 2)) + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'Image':\n            merge(options, { 'href': url, 'height': height, 'width': width, x: x, y: y });\n            break;\n    }\n    return options;\n}\n/**\n * Function to get range color from value for circular gauge.\n * @returns string\n * @private\n */\nexport function getRangeColor(value, ranges, color) {\n    var min = 0;\n    var max = 0;\n    var currentRange = ranges.filter(function (range) {\n        min = Math.min(range.start, range.end);\n        max = Math.max(range.start, range.end);\n        return (value >= min && max >= value);\n    });\n    return currentRange.length ? currentRange[0].rangeColor : color;\n}\n/** @private */\nvar CustomizeOption = /** @class */ (function () {\n    function CustomizeOption(id) {\n        this.id = id;\n    }\n    return CustomizeOption;\n}());\nexport { CustomizeOption };\n/** @private */\nvar PathOption = /** @class */ (function (_super) {\n    __extends(PathOption, _super);\n    function PathOption(id, fill, width, color, opacity, dashArray, d, transform, style) {\n        if (transform === void 0) { transform = ''; }\n        if (style === void 0) { style = ''; }\n        var _this = _super.call(this, id) || this;\n        _this.opacity = opacity;\n        _this.fill = fill;\n        _this.stroke = color;\n        _this['stroke-width'] = width;\n        _this['stroke-dasharray'] = dashArray;\n        _this.d = d;\n        _this.transform = transform;\n        _this.style = style;\n        return _this;\n    }\n    return PathOption;\n}(CustomizeOption));\nexport { PathOption };\n/** @private */\nvar RectOption = /** @class */ (function (_super) {\n    __extends(RectOption, _super);\n    function RectOption(id, fill, border, opacity, rect) {\n        var _this = _super.call(this, id) || this;\n        _this.y = rect.y;\n        _this.x = rect.x;\n        _this.height = rect.height;\n        _this.width = rect.width;\n        _this.opacity = opacity;\n        _this.fill = fill;\n        _this.stroke = border.color;\n        _this['stroke-width'] = border.width;\n        return _this;\n    }\n    return RectOption;\n}(CustomizeOption));\nexport { RectOption };\n/**\n * Internal class size\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    return Size;\n}());\nexport { Size };\n/**\n * Internal use of circular gauge location\n */\nvar GaugeLocation = /** @class */ (function () {\n    function GaugeLocation(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    return GaugeLocation;\n}());\nexport { GaugeLocation };\n/** @private */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    return Rect;\n}());\nexport { Rect };\n/** @private */\nvar TextOption = /** @class */ (function (_super) {\n    __extends(TextOption, _super);\n    function TextOption(id, x, y, anchor, text, transform, baseLine) {\n        if (transform === void 0) { transform = ''; }\n        var _this = _super.call(this, id) || this;\n        _this.transform = '';\n        _this.baseLine = 'auto';\n        _this.x = x;\n        _this.y = y;\n        _this.anchor = anchor;\n        _this.text = text;\n        _this.transform = transform;\n        _this.baseLine = baseLine;\n        return _this;\n    }\n    return TextOption;\n}(CustomizeOption));\nexport { TextOption };\n/** @private */\nvar VisibleLabels = /** @class */ (function () {\n    function VisibleLabels(text, value, size) {\n        this.text = text;\n        this.value = value;\n        this.size = size;\n    }\n    return VisibleLabels;\n}());\nexport { VisibleLabels };\n","/**\n * Specifies gauge Themes\n */\nexport var Theme;\n(function (Theme) {\n    /** @private */\n    Theme.axisLabelFont = {\n        size: '12px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n})(Theme || (Theme = {}));\n/** @private */\nexport function getRangePalette(theme) {\n    var palette = ['#50c917', '#27d5ff', '#fcde0b', '#ffb133', '#ff5985'];\n    // switch (theme) {\n    //     case 'Material':\n    //         palette = ['#50c917', '#27d5ff', '#fcde0b', '#ffb133', '#ff5985'];\n    //         break;\n    //      case 'Fabric':\n    //         palette = ['#50c917', '#27d5ff', '#fcde0b', '#ffb133', '#ff5985'];\n    //         break;\n    // }\n    return palette;\n}\n/** @private */\nexport function getThemeStyle(theme) {\n    var style;\n    switch (theme.toLowerCase()) {\n        case 'materialdark':\n        case 'fabricdark':\n        case 'bootstrapdark':\n            style = {\n                backgroundColor: '#333232',\n                titleFontColor: '#ffffff',\n                tooltipFillColor: '#FFFFFF',\n                tooltipFontColor: '#000000',\n                labelColor: '#DADADA',\n                lineColor: '#C8C8C8',\n                majorTickColor: '#C8C8C8',\n                minorTickColor: '#9A9A9A',\n                pointerColor: '#9A9A9A',\n                capColor: '#9A9A9A',\n                needleColor: '#9A9A9A',\n                needleTailColor: '#9A9A9A'\n            };\n            break;\n        case 'highcontrast':\n            style = {\n                backgroundColor: '#000000',\n                titleFontColor: '#FFFFFF',\n                tooltipFillColor: '#ffffff',\n                tooltipFontColor: '#000000',\n                labelColor: '#FFFFFF',\n                lineColor: '#FFFFFF',\n                majorTickColor: '#FFFFFF',\n                minorTickColor: '#FFFFFF',\n                pointerColor: '#FFFFFF',\n                capColor: '#FFFFFF',\n                needleColor: '#FFFFFF',\n                needleTailColor: '#FFFFFF'\n            };\n            break;\n        case 'bootstrap4':\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#212529',\n                tooltipFillColor: '#000000',\n                tooltipFontColor: '#FFFFFF',\n                labelColor: '#212529',\n                lineColor: '#DEE2E6',\n                majorTickColor: '#ADB5BD',\n                minorTickColor: '#CED4DA',\n                pointerColor: '#6C757D',\n                capColor: '#6C757D',\n                needleColor: '#6C757D',\n                needleTailColor: '#6C757D',\n                fontFamily: 'HelveticaNeue-Medium',\n                fontSize: '16px',\n                labelFontFamily: 'HelveticaNeue',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 0.9\n            };\n            break;\n        default:\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#424242',\n                tooltipFillColor: '#363F4C',\n                tooltipFontColor: '#ffffff',\n                labelColor: '#212121',\n                lineColor: '#E0E0E0',\n                majorTickColor: '#9E9E9E',\n                minorTickColor: '#9E9E9E',\n                pointerColor: '#757575',\n                capColor: '#757575',\n                needleColor: '#757575',\n                needleTailColor: '#757575'\n            };\n            break;\n    }\n    return style;\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\n/**\n * Configures the borders in circular gauge.\n */\nvar Border = /** @class */ (function (_super) {\n    __extends(Border, _super);\n    function Border() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Border.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], Border.prototype, \"width\", void 0);\n    return Border;\n}(ChildProperty));\nexport { Border };\n/**\n * Configures the fonts in circular gauge.\n */\nvar Font = /** @class */ (function (_super) {\n    __extends(Font, _super);\n    function Font() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('16px')\n    ], Font.prototype, \"size\", void 0);\n    __decorate([\n        Property('')\n    ], Font.prototype, \"color\", void 0);\n    __decorate([\n        Property('segoe UI')\n    ], Font.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontWeight\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontStyle\", void 0);\n    __decorate([\n        Property(1)\n    ], Font.prototype, \"opacity\", void 0);\n    return Font;\n}(ChildProperty));\nexport { Font };\n/**\n * Configures the margin of circular gauge.\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Configures the tooltip in circular gauge.\n */\nvar TooltipSettings = /** @class */ (function (_super) {\n    __extends(TooltipSettings, _super);\n    function TooltipSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], TooltipSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Complex({ size: '13px' }, Font)\n    ], TooltipSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"format\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], TooltipSettings.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], TooltipSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(false)\n    ], TooltipSettings.prototype, \"showAtMousePosition\", void 0);\n    return TooltipSettings;\n}(ChildProperty));\nexport { TooltipSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\nimport { Font, Border } from '../model/base';\nimport { Theme } from '../model/theme';\n/**\n * Configures the axis line.\n */\nvar Line = /** @class */ (function (_super) {\n    __extends(Line, _super);\n    function Line() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(2)\n    ], Line.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], Line.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property(null)\n    ], Line.prototype, \"color\", void 0);\n    return Line;\n}(ChildProperty));\nexport { Line };\n/**\n * Configures the axis label.\n */\nvar Label = /** @class */ (function (_super) {\n    __extends(Label, _super);\n    function Label() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex(Theme.axisLabelFont, Font)\n    ], Label.prototype, \"font\", void 0);\n    __decorate([\n        Property('')\n    ], Label.prototype, \"format\", void 0);\n    __decorate([\n        Property('Inside')\n    ], Label.prototype, \"position\", void 0);\n    __decorate([\n        Property('None')\n    ], Label.prototype, \"hiddenLabel\", void 0);\n    __decorate([\n        Property(false)\n    ], Label.prototype, \"autoAngle\", void 0);\n    __decorate([\n        Property(false)\n    ], Label.prototype, \"useRangeColor\", void 0);\n    __decorate([\n        Property(0)\n    ], Label.prototype, \"offset\", void 0);\n    return Label;\n}(ChildProperty));\nexport { Label };\n/**\n * Configures the ranges of an axis.\n */\nvar Range = /** @class */ (function (_super) {\n    __extends(Range, _super);\n    function Range() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"start\", void 0);\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"end\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"radius\", void 0);\n    __decorate([\n        Property(10)\n    ], Range.prototype, \"startWidth\", void 0);\n    __decorate([\n        Property(10)\n    ], Range.prototype, \"endWidth\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"roundedCornerRadius\", void 0);\n    __decorate([\n        Property(1)\n    ], Range.prototype, \"opacity\", void 0);\n    return Range;\n}(ChildProperty));\nexport { Range };\n/**\n * Configures the major and minor tick lines of an axis.\n */\nvar Tick = /** @class */ (function (_super) {\n    __extends(Tick, _super);\n    function Tick() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(2)\n    ], Tick.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], Tick.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], Tick.prototype, \"interval\", void 0);\n    __decorate([\n        Property(0)\n    ], Tick.prototype, \"offset\", void 0);\n    __decorate([\n        Property(null)\n    ], Tick.prototype, \"color\", void 0);\n    __decorate([\n        Property('Inside')\n    ], Tick.prototype, \"position\", void 0);\n    __decorate([\n        Property(false)\n    ], Tick.prototype, \"useRangeColor\", void 0);\n    return Tick;\n}(ChildProperty));\nexport { Tick };\n/**\n * Configures the needle cap in pointer.\n */\nvar Cap = /** @class */ (function (_super) {\n    __extends(Cap, _super);\n    function Cap() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Cap.prototype, \"color\", void 0);\n    __decorate([\n        Complex({ color: null, width: 8 }, Border)\n    ], Cap.prototype, \"border\", void 0);\n    __decorate([\n        Property(8)\n    ], Cap.prototype, \"radius\", void 0);\n    return Cap;\n}(ChildProperty));\nexport { Cap };\n/**\n * Configures the back needle in pointers.\n */\nvar NeedleTail = /** @class */ (function (_super) {\n    __extends(NeedleTail, _super);\n    function NeedleTail() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], NeedleTail.prototype, \"color\", void 0);\n    __decorate([\n        Complex({ color: null, width: 0 }, Border)\n    ], NeedleTail.prototype, \"border\", void 0);\n    __decorate([\n        Property('0%')\n    ], NeedleTail.prototype, \"length\", void 0);\n    return NeedleTail;\n}(ChildProperty));\nexport { NeedleTail };\n/**\n * Configures the animation of pointers.\n */\nvar Animation = /** @class */ (function (_super) {\n    __extends(Animation, _super);\n    function Animation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], Animation.prototype, \"enable\", void 0);\n    __decorate([\n        Property(1000)\n    ], Animation.prototype, \"duration\", void 0);\n    return Animation;\n}(ChildProperty));\nexport { Animation };\n/**\n * ‘Annotation’ module is used to handle annotation action for an axis.\n */\nvar Annotation = /** @class */ (function (_super) {\n    __extends(Annotation, _super);\n    function Annotation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Annotation.prototype, \"content\", void 0);\n    __decorate([\n        Property(90)\n    ], Annotation.prototype, \"angle\", void 0);\n    __decorate([\n        Property('50%')\n    ], Annotation.prototype, \"radius\", void 0);\n    __decorate([\n        Property('-1')\n    ], Annotation.prototype, \"zIndex\", void 0);\n    __decorate([\n        Property(false)\n    ], Annotation.prototype, \"autoAngle\", void 0);\n    __decorate([\n        Complex({ size: '12px', color: '#686868' }, Font)\n    ], Annotation.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], Annotation.prototype, \"description\", void 0);\n    return Annotation;\n}(ChildProperty));\nexport { Annotation };\n/**\n * Configures the pointers of an axis.\n */\nvar Pointer = /** @class */ (function (_super) {\n    __extends(Pointer, _super);\n    function Pointer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"value\", void 0);\n    __decorate([\n        Property('Needle')\n    ], Pointer.prototype, \"type\", void 0);\n    __decorate([\n        Property(0)\n    ], Pointer.prototype, \"roundedCornerRadius\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"imageUrl\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"radius\", void 0);\n    __decorate([\n        Property(20)\n    ], Pointer.prototype, \"pointerWidth\", void 0);\n    __decorate([\n        Complex({}, Cap)\n    ], Pointer.prototype, \"cap\", void 0);\n    __decorate([\n        Complex({}, NeedleTail)\n    ], Pointer.prototype, \"needleTail\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"color\", void 0);\n    __decorate([\n        Complex({ color: '#DDDDDD', width: 0 }, Border)\n    ], Pointer.prototype, \"border\", void 0);\n    __decorate([\n        Complex(null, Animation)\n    ], Pointer.prototype, \"animation\", void 0);\n    __decorate([\n        Property('Circle')\n    ], Pointer.prototype, \"markerShape\", void 0);\n    __decorate([\n        Property(5)\n    ], Pointer.prototype, \"markerHeight\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"description\", void 0);\n    __decorate([\n        Property(5)\n    ], Pointer.prototype, \"markerWidth\", void 0);\n    return Pointer;\n}(ChildProperty));\nexport { Pointer };\n/**\n * Configures an axis in a gauge.\n */\nvar Axis = /** @class */ (function (_super) {\n    __extends(Axis, _super);\n    function Axis() {\n        /**\n         * Specifies the minimum value of an axis.\n         * @aspDefaultValueIgnore\n         * @default null\n         */\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** @private */\n        _this.visibleLabels = [];\n        return _this;\n    }\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"minimum\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"maximum\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"showLastLabel\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"roundingPlaces\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"radius\", void 0);\n    __decorate([\n        Complex({}, Line)\n    ], Axis.prototype, \"lineStyle\", void 0);\n    __decorate([\n        Collection([{}], Range)\n    ], Axis.prototype, \"ranges\", void 0);\n    __decorate([\n        Collection([{}], Pointer)\n    ], Axis.prototype, \"pointers\", void 0);\n    __decorate([\n        Collection([{}], Annotation)\n    ], Axis.prototype, \"annotations\", void 0);\n    __decorate([\n        Complex({ width: 2, height: 10 }, Tick)\n    ], Axis.prototype, \"majorTicks\", void 0);\n    __decorate([\n        Complex({ width: 2, height: 5 }, Tick)\n    ], Axis.prototype, \"minorTicks\", void 0);\n    __decorate([\n        Property(200)\n    ], Axis.prototype, \"startAngle\", void 0);\n    __decorate([\n        Property(160)\n    ], Axis.prototype, \"endAngle\", void 0);\n    __decorate([\n        Property('ClockWise')\n    ], Axis.prototype, \"direction\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"background\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"rangeGap\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"startAndEndRangeGap\", void 0);\n    __decorate([\n        Complex({}, Label)\n    ], Axis.prototype, \"labelStyle\", void 0);\n    return Axis;\n}(ChildProperty));\nexport { Axis };\n","/**\n * Specifies the gauge constant value\n */\n/** @private */\nexport var loaded = 'loaded';\n/** @private */\nexport var load = 'load';\n/** @private */\nexport var animationComplete = 'animationComplete';\n/** @private */\nexport var axisLabelRender = 'axisLabelRender';\n/** @private */\nexport var radiusCalculate = 'radiusCalculate';\n/** @private */\nexport var tooltipRender = 'tooltipRender';\n/** @private */\nexport var annotationRender = 'annotationRender';\n/** @private */\nexport var gaugeMouseMove = 'gaugeMouseMove';\n/** @private */\nexport var gaugeMouseLeave = 'gaugeMouseLeave';\n/** @private */\nexport var gaugeMouseDown = 'gaugeMouseDown';\n/** @private */\nexport var gaugeMouseUp = 'gaugeMouseUp';\n/** @private */\nexport var dragStart = 'dragStart';\n/** @private */\nexport var dragMove = 'dragMove';\n/** @private */\nexport var dragEnd = 'dragEnd';\n/** @private */\nexport var resized = 'resized';\n","import { stringToNumber, getLocationFromAngle, getFontStyle } from '../utils/helper';\nimport { getElement, getTemplateFunction, measureElementRect } from '../utils/helper';\nimport { annotationRender } from '../model/constants';\nimport { createElement, updateBlazorTemplate } from '@syncfusion/ej2-base';\n/**\n * Annotation Module handles the Annotation of the axis.\n */\nvar Annotations = /** @class */ (function () {\n    /**\n     * Constructor for Annotation module.\n     * @private.\n     */\n    function Annotations(gauge) {\n        this.gauge = gauge;\n        this.elementId = gauge.element.id;\n    }\n    /**\n     * Method to render the annotation for circular gauge.\n     */\n    //tslint:disable\n    Annotations.prototype.renderAnnotation = function (axis, index) {\n        var _this = this;\n        var width = this.gauge.availableSize.width;\n        var element = createElement('div', {\n            id: this.elementId + '_Annotations_' + index\n        });\n        var parentElement = getElement(this.elementId + '_Secondary_Element');\n        document.getElementById(this.elementId + '_Secondary_Element').style.width = width + 'px';\n        axis.annotations.map(function (annotation, annotationIndex) {\n            if (annotation.content !== null) {\n                _this.createTemplate(element, annotationIndex, index);\n            }\n        });\n        if (parentElement && element.childElementCount) {\n            parentElement.appendChild(element);\n            for (var i = 0; i < this.gauge.axes[index].annotations.length; i++) {\n                updateBlazorTemplate(this.gauge.element.id + '_Axis' + index + '_ContentTemplate' + i, 'ContentTemplate', this.gauge.axes[index].annotations[i]);\n            }\n        }\n    };\n    /**\n     * Method to create annotation template for circular gauge.\n     */\n    Annotations.prototype.createTemplate = function (element, annotationIndex, axisIndex) {\n        var _this = this;\n        var axis = this.gauge.axes[axisIndex];\n        var annotation = axis.annotations[annotationIndex];\n        var childElement = createElement('div', {\n            id: this.elementId + '_Axis_' + axisIndex + '_Annotation_' + annotationIndex,\n            styles: 'position: absolute; z-index:' + annotation.zIndex + ';transform:' +\n                (annotation.autoAngle ? 'rotate(' + (annotation.angle - 90) + 'deg)' : 'rotate(0deg)') + ';'\n        });\n        var argsData = {\n            cancel: false, name: annotationRender, content: annotation.content,\n            axis: axis, annotation: annotation, textStyle: annotation.textStyle\n        };\n        this.gauge.trigger('annotationRender', argsData, function (observedArgs) {\n            var templateFn;\n            var templateElement;\n            var blazor = 'Blazor';\n            if (!argsData.cancel) {\n                templateFn = getTemplateFunction(argsData.content);\n                if (templateFn && (!window[blazor] ? templateFn(axis, null, null, _this.gauge.element.id + '_Axis' + axisIndex + '_ContentTemplate' + annotationIndex).length : {})) {\n                    templateElement = Array.prototype.slice.call(templateFn(!window[blazor] ? axis : {}, null, null, _this.gauge.element.id + '_Axis' + axisIndex + '_ContentTemplate' + annotationIndex));\n                    var length_1 = templateElement.length;\n                    for (var i = 0; i < length_1; i++) {\n                        childElement.appendChild(templateElement[i]);\n                    }\n                }\n                else {\n                    childElement.appendChild(createElement('div', {\n                        innerHTML: argsData.content,\n                        styles: getFontStyle(argsData.textStyle)\n                    }));\n                }\n                _this.updateLocation(childElement, axis, annotation);\n                element.appendChild(childElement);\n            }\n        });\n    };\n    /**\n     * Method to update the annotation location for circular gauge.\n     */\n    Annotations.prototype.updateLocation = function (element, axis, annotation) {\n        var location = getLocationFromAngle(annotation.angle - 90, stringToNumber(annotation.radius, axis.currentRadius), this.gauge.midPoint);\n        var elementRect = measureElementRect(element);\n        element.style.left = (location.x - (elementRect.width / 2)) + 'px';\n        element.style.top = (location.y - (elementRect.height / 2)) + 'px';\n        element.setAttribute('aria-label', annotation.description || 'Annotation');\n    };\n    /**\n     * Get module name.\n     */\n    Annotations.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Annotations';\n    };\n    /**\n     * To destroy the annotation.\n     * @return {void}\n     * @private\n     */\n    Annotations.prototype.destroy = function (gauge) {\n        // Destroy method performed here\n    };\n    return Annotations;\n}());\nexport { Annotations };\n","import { Tooltip } from '@syncfusion/ej2-svg-base';\nimport { getPointer, Rect, getMousePosition, getElementSize } from '../utils/helper';\nimport { getAngleFromValue, getLabelFormat, getLocationFromAngle } from '../utils/helper';\nimport { Browser, createElement, remove, isNullOrUndefined, updateBlazorTemplate, resetBlazorTemplate } from '@syncfusion/ej2-base';\nimport { tooltipRender } from '../model/constants';\n/**\n * Tooltip Module handles the tooltip of the circular gauge\n */\nvar GaugeTooltip = /** @class */ (function () {\n    /**\n     * Constructor for Tooltip module.\n     * @private.\n     */\n    function GaugeTooltip(gauge) {\n        this.gauge = gauge;\n        this.tooltipId = this.gauge.element.id + '_CircularGauge_Tooltip';\n        this.tooltip = gauge.tooltip;\n        this.textStyle = this.tooltip.textStyle;\n        this.borderStyle = this.tooltip.border;\n        this.addEventListener();\n    }\n    /**\n     * Method to render the tooltip for circular gauge.\n     */\n    /* tslint:disable:no-string-literal */\n    /* tslint:disable:max-func-body-length */\n    GaugeTooltip.prototype.renderTooltip = function (e) {\n        var _this = this;\n        var pageX;\n        var pageY;\n        var target;\n        var touchArg;\n        var location;\n        var samePointerEle = false;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            target = touchArg.target;\n            pageX = touchArg.changedTouches[0].pageX;\n            pageY = touchArg.changedTouches[0].pageY;\n        }\n        else {\n            target = e.target;\n            pageX = e.pageX;\n            pageY = e.pageY;\n        }\n        if (target.id.indexOf('_Pointer_') >= 0) {\n            if (this.pointerEle !== null) {\n                samePointerEle = (this.pointerEle === target);\n            }\n            var svgRect_1 = this.gauge.svgObject.getBoundingClientRect();\n            var elementRect = this.gauge.element.getBoundingClientRect();\n            var axisRect_1 = document.getElementById(this.gauge.element.id + '_AxesCollection').getBoundingClientRect();\n            var rect_1 = new Rect(Math.abs(elementRect.left - svgRect_1.left), Math.abs(elementRect.top - svgRect_1.top), svgRect_1.width, svgRect_1.height);\n            var currentPointer = getPointer(target.id, this.gauge);\n            this.currentAxis = this.gauge.axes[currentPointer.axisIndex];\n            this.currentPointer = (this.currentAxis.pointers)[currentPointer.pointerIndex];\n            var angle_1 = getAngleFromValue(this.currentPointer.currentValue, this.currentAxis.visibleRange.max, this.currentAxis.visibleRange.min, this.currentAxis.startAngle, this.currentAxis.endAngle, this.currentAxis.direction === 'ClockWise') % 360;\n            var tooltipFormat = this.gauge.tooltip.format || this.currentAxis.labelStyle.format;\n            var customLabelFormat = tooltipFormat && tooltipFormat.match('{value}') !== null;\n            var format = this.gauge.intl.getNumberFormat({\n                format: getLabelFormat(tooltipFormat), useGrouping: this.gauge.useGroupingSeparator\n            });\n            if (document.getElementById(this.tooltipId)) {\n                this.tooltipEle = document.getElementById(this.tooltipId);\n            }\n            else {\n                this.tooltipEle = createElement('div', {\n                    id: this.tooltipId,\n                    className: 'EJ2-CircularGauge-Tooltip',\n                    styles: 'position: absolute;pointer-events:none;'\n                });\n                document.getElementById(this.gauge.element.id + '_Secondary_Element').appendChild(this.tooltipEle);\n            }\n            var roundValue = void 0;\n            roundValue = this.currentAxis.roundingPlaces ?\n                parseFloat(this.currentPointer.currentValue.toFixed(this.currentAxis.roundingPlaces)) :\n                this.currentPointer.currentValue;\n            var content_1 = customLabelFormat ?\n                tooltipFormat.replace(new RegExp('{value}', 'g'), format(roundValue)) :\n                format(roundValue);\n            location = getLocationFromAngle(angle_1, this.currentAxis.currentRadius, this.gauge.midPoint);\n            location.x = (this.tooltip.template && ((angle_1 >= 150 && angle_1 <= 250) || (angle_1 >= 330 && angle_1 <= 360) ||\n                (angle_1 >= 0 && angle_1 <= 45))) ? (location.x + 10) : location.x;\n            var tooltipArgs_1 = {\n                name: tooltipRender, cancel: false, content: content_1, location: location, axis: this.currentAxis,\n                tooltip: this.tooltip, pointer: this.currentPointer, event: e, gauge: this.gauge,\n                appendInBodyTag: false\n            };\n            this.gauge.trigger(tooltipRender, tooltipArgs_1, function (observedArgs) {\n                var template = tooltipArgs_1.tooltip.template;\n                if (template !== null && template.length === 1) {\n                    template = template[template[0]];\n                }\n                if (!_this.tooltip.showAtMousePosition) {\n                    if (template) {\n                        var elementSize = getElementSize(template, _this.gauge, _this.tooltipEle);\n                        _this.tooltipRect = Math.abs(axisRect_1.left - svgRect_1.left) > elementSize.width ?\n                            _this.findPosition(rect_1, angle_1, content_1, tooltipArgs_1.location) : rect_1;\n                    }\n                    else {\n                        _this.findPosition(rect_1, angle_1, content_1, tooltipArgs_1.location);\n                    }\n                }\n                else {\n                    tooltipArgs_1.location = getMousePosition(pageX, pageY, _this.gauge.svgObject);\n                    _this.tooltipRect = rect_1;\n                }\n                if (!tooltipArgs_1.cancel && !samePointerEle) {\n                    tooltipArgs_1.tooltip.textStyle.color = tooltipArgs_1.tooltip.textStyle.color || _this.gauge.themeStyle.tooltipFontColor;\n                    tooltipArgs_1.tooltip.textStyle.fontFamily = _this.gauge.themeStyle.fontFamily || tooltipArgs_1.tooltip.textStyle.fontFamily;\n                    tooltipArgs_1.tooltip.textStyle.opacity =\n                        _this.gauge.themeStyle.tooltipTextOpacity || tooltipArgs_1.tooltip.textStyle.opacity;\n                    _this.svgTooltip = new Tooltip({\n                        enable: true,\n                        data: { value: tooltipArgs_1.content },\n                        template: template,\n                        enableAnimation: tooltipArgs_1.tooltip.enableAnimation,\n                        content: [tooltipArgs_1.content],\n                        location: tooltipArgs_1.location,\n                        inverted: _this.arrowInverted,\n                        areaBounds: _this.tooltipRect,\n                        fill: tooltipArgs_1.tooltip.fill || _this.gauge.themeStyle.tooltipFillColor,\n                        textStyle: tooltipArgs_1.tooltip.textStyle,\n                        availableSize: _this.gauge.availableSize,\n                        border: tooltipArgs_1.tooltip.border\n                    });\n                    _this.svgTooltip.opacity = _this.gauge.themeStyle.tooltipFillOpacity || _this.svgTooltip.opacity;\n                    _this.svgTooltip.appendTo(_this.tooltipEle);\n                    if (_this.gauge.tooltip.template) {\n                        updateBlazorTemplate(_this.gauge.element.id + 'Template', 'Template');\n                    }\n                    if (template && Math.abs(pageY - _this.tooltipEle.getBoundingClientRect().top) <= 0) {\n                        _this.tooltipEle.style.top = (parseFloat(_this.tooltipEle.style.top) + 20) + 'px';\n                    }\n                    if (tooltipArgs_1.appendInBodyTag) {\n                        var bodyToolElement = document.getElementsByClassName('EJ2-CircularGauge-Tooltip e-control e-tooltip');\n                        if (!isNullOrUndefined(bodyToolElement)) {\n                            _this.removeTooltip();\n                        }\n                        document.body.appendChild(_this.tooltipEle);\n                        _this.tooltipEle.style.zIndex = '100000000001';\n                        var bounds = _this.tooltipEle.getBoundingClientRect();\n                        if (pageX + bounds['width'] <= window.innerWidth && bounds['x'] <= 0) {\n                            _this.tooltipEle.style.left = pageX + 20 + 'px';\n                            _this.tooltipEle.style.top = bounds['top'] + 20 + 'px';\n                        }\n                        else if (bounds['x'] <= 0 && pageX + bounds['width'] >= window.innerWidth) {\n                            _this.tooltipEle.style.left = pageX - bounds['width'] + 20 + 'px';\n                            _this.tooltipEle.style.top = bounds['top'] + 20 + 'px';\n                        }\n                    }\n                }\n            });\n        }\n        else {\n            this.removeTooltip();\n            if (this.gauge.tooltip.template) {\n                resetBlazorTemplate(this.gauge.element.id + 'Template', 'Template');\n            }\n        }\n    };\n    /**\n     * Method to find the position of the tooltip anchor for circular gauge.\n     */\n    GaugeTooltip.prototype.findPosition = function (rect, angle, text, location) {\n        var addLeft;\n        var addTop;\n        var addHeight;\n        var addWidth;\n        switch (true) {\n            case (angle >= 0 && angle < 45):\n                this.arrowInverted = true;\n                addLeft = (angle >= 15 && angle <= 30) ? location.y : 0;\n                this.tooltipRect = new Rect(rect.x, rect.y + addTop, rect.width, rect.height);\n                this.tooltipPosition = 'RightBottom';\n                break;\n            case (angle >= 45 && angle < 90):\n                this.arrowInverted = false;\n                this.tooltipRect = new Rect(rect.x, rect.y + location.y, rect.width, rect.height);\n                this.tooltipPosition = 'BottomRight';\n                break;\n            case (angle >= 90 && angle < 135):\n                this.arrowInverted = false;\n                this.tooltipRect = new Rect(rect.x, rect.y + location.y, rect.width, rect.height);\n                this.tooltipPosition = 'BottomLeft';\n                break;\n            case (angle >= 135 && angle < 180):\n                this.arrowInverted = true;\n                addTop = (angle >= 150 && angle <= 160) ? location.y : 0;\n                this.tooltipRect = new Rect(rect.x - rect.width, rect.y + addTop, rect.width, rect.height);\n                this.tooltipPosition = 'LeftBottom';\n                break;\n            case (angle >= 180 && angle < 225):\n                this.arrowInverted = true;\n                addHeight = (angle >= 200 && angle <= 225) ? Math.abs(rect.y - location.y) : rect.height;\n                this.tooltipRect = new Rect(rect.x - rect.width, rect.y, rect.width, addHeight);\n                this.tooltipPosition = 'LeftTop';\n                break;\n            case (angle >= 225 && angle < 270):\n                this.arrowInverted = false;\n                addWidth = (angle >= 250 && angle <= 290) ? rect.width : Math.abs(rect.x - location.x);\n                this.tooltipRect = new Rect(rect.x, rect.y, addWidth, rect.height);\n                this.tooltipPosition = 'TopLeft';\n                break;\n            case (angle >= 270 && angle < 315):\n                this.arrowInverted = false;\n                addLeft = (angle >= 270 && angle > 290) ? location.x : 0;\n                this.tooltipRect = new Rect(rect.x + addLeft, rect.y, rect.width, rect.height);\n                this.tooltipPosition = 'TopRight';\n                break;\n            case (angle >= 315 && angle <= 360):\n                this.arrowInverted = true;\n                addHeight = (angle >= 315 && angle <= 340) ? Math.abs(rect.y - location.y) : rect.height;\n                this.tooltipRect = new Rect(rect.x, rect.y, rect.width, addHeight);\n                this.tooltipPosition = 'RightTop';\n                break;\n        }\n        return this.tooltipRect;\n    };\n    GaugeTooltip.prototype.removeTooltip = function () {\n        if (document.getElementsByClassName('EJ2-CircularGauge-Tooltip').length > 0) {\n            var tooltip = document.getElementsByClassName('EJ2-CircularGauge-Tooltip')[0];\n            if (tooltip) {\n                remove(tooltip);\n            }\n            this.pointerEle = null;\n        }\n    };\n    GaugeTooltip.prototype.mouseUpHandler = function (e) {\n        this.renderTooltip(e);\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(this.removeTooltip.bind(this), 2000);\n    };\n    /**\n     * To bind events for tooltip module\n     */\n    GaugeTooltip.prototype.addEventListener = function () {\n        if (this.gauge.isDestroyed) {\n            return;\n        }\n        this.gauge.on(Browser.touchMoveEvent, this.renderTooltip, this);\n        this.gauge.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n    };\n    /**\n     * To unbind events for tooltip module\n     */\n    GaugeTooltip.prototype.removeEventListener = function () {\n        if (this.gauge.isDestroyed) {\n            return;\n        }\n        this.gauge.off(Browser.touchMoveEvent, this.renderTooltip);\n        this.gauge.off(Browser.touchEndEvent, this.mouseUpHandler);\n    };\n    /**\n     * Get module name.\n     */\n    GaugeTooltip.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Tooltip';\n    };\n    /**\n     * To destroy the tooltip.\n     * @return {void}\n     * @private\n     */\n    GaugeTooltip.prototype.destroy = function (gauge) {\n        // Destroy method performed here\n        this.removeEventListener();\n    };\n    return GaugeTooltip;\n}());\nexport { GaugeTooltip };\n","import { getLocationFromAngle, PathOption, stringToNumber, TextOption, textElement, appendPath, toPixel } from '../utils/helper';\nimport { getAngleFromValue, isCompleteAngle, getPathArc, getRoundedPathArc, getRangeColor } from '../utils/helper';\nimport { getRangePalette } from '../model/theme';\n/**\n * Specifies the Axis rendering for circular gauge\n */\nvar AxisRenderer = /** @class */ (function () {\n    /**\n     * Constructor for axis renderer.\n     * @private.\n     */\n    function AxisRenderer(gauge) {\n        this.gauge = gauge;\n    }\n    /**\n     * Method to render the axis element of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisOuterLine = function (axis, index, element, gauge) {\n        var background = axis.background;\n        this.setRangeColor(axis);\n        if (background !== null) {\n            appendPath(new PathOption(gauge.element.id + '_AxisOuterLine_' + index, background, 0, 'transparent', null, '0', getPathArc(gauge.midPoint, 0, 360, (Math.min(axis.rect.width, axis.rect.height) / 2)), '', 'pointer-events:none;'), element, gauge);\n        }\n    };\n    /**\n     * Method to render the axis line of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisLine = function (axis, index, element, gauge) {\n        var startAngle = axis.startAngle;\n        var endAngle = axis.endAngle;\n        var color = axis.lineStyle.color || this.gauge.themeStyle.lineColor;\n        if (axis.lineStyle.width > 0) {\n            startAngle = !isCompleteAngle(startAngle, endAngle) ? startAngle : [0, endAngle = 360][0];\n            appendPath(new PathOption(gauge.element.id + '_AxisLine_' + index, 'transparent', axis.lineStyle.width, color, null, axis.lineStyle.dashArray, getPathArc(gauge.midPoint, startAngle - 90, endAngle - 90, axis.currentRadius), '', 'pointer-events:none;'), element, gauge);\n        }\n    };\n    /**\n     * Method to render the axis labels of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisLabels = function (axis, index, element, gauge) {\n        var labelElement = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_Labels_' + index\n        });\n        var min = axis.visibleRange.min;\n        var max = axis.visibleRange.max;\n        var labelCollection = axis.visibleLabels;\n        var location;\n        var style = axis.labelStyle;\n        var anchor;\n        var angle;\n        var label;\n        var radius = axis.currentRadius;\n        var labelPadding = 10;\n        var color = style.font.color || this.gauge.themeStyle.labelColor;\n        if (style.position === 'Outside') {\n            radius += (axis.nearSize - (axis.maxLabelSize.height + axis.lineStyle.width / 2)) +\n                (labelPadding / 2);\n        }\n        else {\n            radius -= (axis.farSize - (axis.maxLabelSize.height + axis.lineStyle.width / 2) +\n                (style.autoAngle ? labelPadding : 0));\n        }\n        for (var i = 0, length_1 = labelCollection.length; i < length_1; i++) {\n            if ((i === 0 && style.hiddenLabel === 'First') ||\n                (i === (length_1 - 1) && style.hiddenLabel === 'Last')) {\n                continue;\n            }\n            label = labelCollection[i];\n            angle = Math.round(getAngleFromValue(label.value, max, min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise'));\n            location = getLocationFromAngle(angle, radius, gauge.midPoint);\n            anchor = this.findAnchor(location, style, angle, label);\n            style.font.fontFamily = this.gauge.themeStyle.labelFontFamily || style.font.fontFamily;\n            textElement(new TextOption(gauge.element.id + '_Axis_' + index + '_Label_' + i, location.x, location.y, anchor, label.text, style.autoAngle ? 'rotate(' + (angle + 90) + ',' + (location.x) + ',' + location.y + ')' : '', 'auto'), style.font, style.useRangeColor ? getRangeColor(label.value, axis.ranges, color) : color, labelElement, 'pointer-events:none;');\n        }\n        element.appendChild(labelElement);\n    };\n    /**\n     * Method to find the anchor of the axis label.\n     * @private\n     */\n    AxisRenderer.prototype.findAnchor = function (location, style, angle, label) {\n        if (style.autoAngle) {\n            return 'middle';\n        }\n        var anchor = style.position === 'Inside' ?\n            ((angle > 120 && angle < 240) ? 'start' : ((300 < angle || angle < 60) ? 'end' : 'middle')) :\n            ((angle > 120 && angle < 240) ? 'end' : ((300 < angle || angle < 60) ? 'start' : 'middle'));\n        location.y += style.position === 'Inside' ?\n            ((angle >= 240 && angle <= 300) ? (label.size.height / 2) :\n                (angle >= 60 && angle <= 120) ? 0 : label.size.height / 4) :\n            ((angle >= 240 && angle <= 300) ? 0 :\n                (angle >= 60 && angle <= 120) ? label.size.height / 2 : label.size.height / 4);\n        return anchor;\n    };\n    /**\n     * Method to render the axis minor tick lines of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawMinorTickLines = function (axis, index, element, gauge) {\n        var minorTickElements = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_MinorTickLines_' + index\n        });\n        var minorLineStyle = axis.minorTicks;\n        var minorInterval = minorLineStyle.interval !== null ?\n            minorLineStyle.interval : (axis.visibleRange.interval / 2);\n        var isRangeColor = minorLineStyle.useRangeColor;\n        var color = minorLineStyle.color || this.gauge.themeStyle.minorTickColor;\n        if (minorLineStyle.width && minorLineStyle.height && minorInterval) {\n            for (var i = axis.visibleRange.min, max = axis.visibleRange.max; i <= max; i += minorInterval) {\n                if (this.majorValues.indexOf(+i.toFixed(3)) < 0) {\n                    appendPath(new PathOption(gauge.element.id + '_Axis_Minor_TickLine_' + index + '_' + i, 'transparent', minorLineStyle.width, isRangeColor ? getRangeColor(i, axis.ranges, color) : color, null, '0', this.calculateTicks(i, minorLineStyle, axis), '', 'pointer-events:none;'), minorTickElements, gauge);\n                }\n            }\n            element.appendChild(minorTickElements);\n        }\n    };\n    /**\n     * Method to render the axis major tick lines of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawMajorTickLines = function (axis, index, element, gauge) {\n        var majorTickElements = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_MajorTickLines_' + index\n        });\n        var majorLineStyle = axis.majorTicks;\n        var isRangeColor = majorLineStyle.useRangeColor;\n        this.majorValues = [];\n        var color = majorLineStyle.color || this.gauge.themeStyle.majorTickColor;\n        if (majorLineStyle.width && majorLineStyle.height && axis.visibleRange.interval) {\n            for (var i = axis.visibleRange.min, max = axis.visibleRange.max, interval = axis.visibleRange.interval; i <= max; i += interval) {\n                this.majorValues.push(+i.toFixed(3));\n                appendPath(new PathOption(gauge.element.id + '_Axis_Major_TickLine_' + index + '_' + i, 'transparent', majorLineStyle.width, isRangeColor ? getRangeColor(i, axis.ranges, color) : color, null, '0', this.calculateTicks(i, majorLineStyle, axis), '', 'pointer-events:none;'), majorTickElements, gauge);\n            }\n            element.appendChild(majorTickElements);\n        }\n    };\n    /**\n     * Method to calcualte the tick elements for the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.calculateTicks = function (value, options, axis) {\n        var axisLineWidth = (axis.lineStyle.width / 2) + options.offset;\n        var isOutside = options.position === 'Outside';\n        var angle = getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n        var start = getLocationFromAngle(angle, axis.currentRadius +\n            (isOutside ? axisLineWidth : -axisLineWidth), this.gauge.midPoint);\n        var end = getLocationFromAngle(angle, axis.currentRadius +\n            (isOutside ? axisLineWidth : -axisLineWidth) +\n            (isOutside ? options.height : -options.height), this.gauge.midPoint);\n        return 'M ' + start.x + ' ' + start.y + ' L ' + end.x + ' ' + end.y + ' ';\n    };\n    /**\n     * Method to render the axis range of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisRange = function (axis, index, element, gauge) {\n        var _this = this;\n        var rangeElement = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_Ranges_' + index\n        });\n        var location = this.gauge.midPoint;\n        var startAngle;\n        var endAngle;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startValue;\n        var endValue;\n        var min = axis.visibleRange.min;\n        var max = axis.visibleRange.max;\n        var startWidth;\n        var endWidth;\n        var roundedStartAngle;\n        var roundedEndAngle;\n        var oldStart;\n        var oldEnd;\n        axis.ranges.map(function (range, rangeIndex) {\n            _this.calculateRangeRadius(axis, range);\n            startValue = Math.min(Math.max(range.start, min), range.end);\n            endValue = Math.min(Math.max(range.start, range.end), max);\n            startAngle = getAngleFromValue(startValue, max, min, axis.startAngle, axis.endAngle, isClockWise);\n            endAngle = getAngleFromValue(endValue, max, min, axis.startAngle, axis.endAngle, isClockWise);\n            var isAngleCross360 = (startAngle > endAngle);\n            if (axis.rangeGap != null && axis.rangeGap > 0) {\n                startAngle = (rangeIndex === 0 && !axis.startAndEndRangeGap) ? startAngle : startAngle + (axis.rangeGap / Math.PI);\n                endAngle = (rangeIndex === axis.ranges.length - 1 && !axis.startAndEndRangeGap) ? endAngle : endAngle -\n                    (axis.rangeGap / Math.PI);\n            }\n            if ((startValue !== endValue) && (isAngleCross360 ? startAngle < (endAngle + 360) : (startAngle < endAngle))) {\n                if (range.startWidth.length > 0) {\n                    startWidth = toPixel(range.startWidth, range.currentRadius);\n                }\n                else {\n                    startWidth = range.startWidth;\n                }\n                if (range.endWidth.length > 0) {\n                    endWidth = toPixel(range.endWidth, range.currentRadius);\n                }\n                else {\n                    endWidth = range.endWidth;\n                }\n                endAngle = isClockWise ? endAngle : [startAngle, startAngle = endAngle][0];\n                endWidth = isClockWise ? endWidth : [startWidth, startWidth = endWidth][0];\n                var radius = range.roundedCornerRadius;\n                var process = (radius * 0.25);\n                oldStart = ((((range.currentRadius - (startWidth / 2)) * ((startAngle * Math.PI) / 180) -\n                    (radius / process)) / (range.currentRadius - (startWidth / 2))) * 180) / Math.PI;\n                oldEnd = ((((range.currentRadius - (endWidth / 2)) * ((endAngle * Math.PI) / 180) +\n                    (radius / process)) / (range.currentRadius - (endWidth / 2))) * 180) / Math.PI;\n                roundedStartAngle = ((((range.currentRadius) * ((startAngle * Math.PI) / 180) +\n                    radius) / (range.currentRadius)) * 180) / Math.PI;\n                roundedEndAngle = ((((range.currentRadius) * ((endAngle * Math.PI) / 180) -\n                    radius) / (range.currentRadius)) * 180) / Math.PI;\n                if (range.roundedCornerRadius) {\n                    appendPath(new PathOption(gauge.element.id + '_Axis_' + index + '_Range_' + rangeIndex, range.rangeColor, 0, range.rangeColor, range.opacity, '0', getRoundedPathArc(location, Math.floor(roundedStartAngle), Math.ceil(roundedEndAngle), oldStart, oldEnd, range.currentRadius, startWidth, endWidth), '', 'pointer-events:none;'), rangeElement, gauge);\n                }\n                else {\n                    appendPath(new PathOption(gauge.element.id + '_Axis_' + index + '_Range_' + rangeIndex, range.rangeColor, 0, range.rangeColor, range.opacity, '0', getPathArc(gauge.midPoint, Math.floor(startAngle), Math.ceil(endAngle), range.currentRadius, startWidth, endWidth), '', 'pointer-events:none;'), rangeElement, gauge);\n                }\n            }\n        });\n        element.appendChild(rangeElement);\n    };\n    /**\n     * Method to calculate the radius of the axis range.\n     * @return {void}\n     */\n    AxisRenderer.prototype.calculateRangeRadius = function (axis, range) {\n        var radius = range.radius !== null ? range.radius : '100%';\n        range.currentRadius = stringToNumber(radius, axis.currentRadius);\n    };\n    /**\n     * Method to get the range color of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.setRangeColor = function (axis) {\n        var rangeColors = getRangePalette(this.gauge.theme);\n        axis.ranges.map(function (range, index) {\n            range.rangeColor = range.color ? range.color : rangeColors[index % rangeColors.length];\n        });\n    };\n    return AxisRenderer;\n}());\nexport { AxisRenderer };\n","import { stringToNumber, Size, calculateShapes, appendPath } from '../utils/helper';\nimport { getLocationFromAngle, PathOption } from '../utils/helper';\nimport { linear, getAngleFromValue, getCompleteArc, getRoundedPathArc } from '../utils/helper';\nimport { Animation, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { animationComplete } from '../model/constants';\n/**\n * Specifies the Axis rendering for circular gauge\n */\nvar PointerRenderer = /** @class */ (function () {\n    /**\n     * Constructor for pointer renderer.\n     * @private.\n     */\n    function PointerRenderer(gauge) {\n        this.gauge = gauge;\n    }\n    /**\n     * Method to render the axis pointers of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    PointerRenderer.prototype.drawPointers = function (axis, axisIndex, element, gauge, animate) {\n        var _this = this;\n        if (animate === void 0) { animate = true; }\n        var pointerElement = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_Pointers_' + axisIndex\n        });\n        var childElement;\n        var range;\n        axis.pointers.map(function (pointer, pointerIndex) {\n            range = axis.visibleRange;\n            pointer.pathElement = [];\n            _this.calculatePointerRadius(axis, pointer);\n            childElement = gauge.renderer.createGroup({\n                id: gauge.element.id + '_Axis_' + axisIndex + '_Pointer_' + pointerIndex\n            });\n            _this['draw' + pointer.type + 'Pointer'](axis, axisIndex, pointerIndex, childElement, gauge);\n            _this.setPointerValue(axis, pointer, pointer.currentValue);\n            pointerElement.appendChild(childElement);\n            if (animate) {\n                _this.doPointerAnimation(pointer, axis);\n            }\n        });\n        element.appendChild(pointerElement);\n    };\n    /**\n     * Measure the pointer length of the circular gauge.\n     * @return {void}\n     */\n    PointerRenderer.prototype.calculatePointerRadius = function (axis, pointer) {\n        var padding = 5;\n        pointer.currentRadius = pointer.radius === null ?\n            (axis.currentRadius - (axis.farSize + padding)) :\n            stringToNumber(pointer.radius, axis.currentRadius);\n    };\n    /**\n     * Method to render the needle pointer of the ciruclar gauge.\n     * @return {void}\n     */\n    PointerRenderer.prototype.drawNeedlePointer = function (axis, axisIndex, index, parentElement, gauge) {\n        var pointer = axis.pointers[index];\n        var pointerRadius;\n        var location;\n        var direction;\n        var mid = gauge.midPoint;\n        var width = pointer.pointerWidth / 2;\n        var rectDirection;\n        // To render the needle\n        location = getLocationFromAngle(0, pointer.currentRadius, mid);\n        var color = pointer.color || this.gauge.themeStyle.needleColor;\n        direction = 'M ' + mid.x + ' ' + (mid.y - width) + ' L ' + (location.x) + ' ' + mid.y +\n            ' L ' + (mid.x) + ' ' + (mid.y + width) + ' Z';\n        pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_Needle_' + index, color, pointer.border.width, pointer.border.color, null, '0', direction), parentElement, gauge));\n        pointerRadius = stringToNumber(pointer.needleTail.length, pointer.currentRadius);\n        // To render the rect element for touch\n        rectDirection = 'M ' + mid.x + ' ' + (mid.y - width) + ' L ' + (location.x) + ' ' + (mid.y - width) +\n            ' L ' + location.x + ' ' + (mid.y + width) + ' L ' + mid.x + ' ' + (mid.y + width);\n        // To render the needle tail\n        if (pointerRadius) {\n            location = getLocationFromAngle(180, pointerRadius, gauge.midPoint);\n            direction = 'M ' + mid.x + ' ' + (mid.y - width) +\n                ' L ' + (location.x) + ' ' + (mid.y - width) +\n                ' L ' + (location.x) + ' ' + (mid.y + width) +\n                ' L ' + (mid.x) + ' ' + (mid.y + width) + ' Z';\n            pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_NeedleTail_' + index, pointer.needleTail.color || this.gauge.themeStyle.needleTailColor, pointer.needleTail.border.width, pointer.needleTail.border.color, null, '0', direction), parentElement, gauge));\n            rectDirection += ' L ' + location.x + ' ' + (mid.y + width) + ' L ' + location.x + ' ' + (mid.y - width);\n        }\n        // To render the cap\n        var capcolor = pointer.cap.color || this.gauge.themeStyle.capColor;\n        if (pointer.cap.radius) {\n            pointer.pathElement.push(appendPath(calculateShapes(mid, 'Circle', new Size(pointer.cap.radius * 2, pointer.cap.radius * 2), '', new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_NeedleCap_' + index, capcolor, pointer.cap.border.width, pointer.cap.border.color, null, '0', '', '')), parentElement, gauge, 'Ellipse'));\n        }\n        pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_NeedleRect_' + index, 'transparent', 0, 'transpanret', null, '0', rectDirection + ' Z'), parentElement, gauge));\n    };\n    /**\n     * Method to set the pointer value of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    PointerRenderer.prototype.setPointerValue = function (axis, pointer, value) {\n        var location = this.gauge.midPoint;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startAngle = getAngleFromValue(axis.visibleRange.min, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var endAngle = getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        if (isClockWise) {\n            endAngle = startAngle === endAngle ? endAngle + 1 : endAngle;\n        }\n        else {\n            endAngle = startAngle === endAngle ? [startAngle, startAngle = endAngle - 1][0] : [startAngle, startAngle = endAngle][0];\n        }\n        var roundStartAngle;\n        var roundEndAngle;\n        var oldStartValue;\n        var oldEndValue;\n        var radius = pointer.roundedCornerRadius;\n        var minRadius = (radius * 0.25);\n        if (value <= minRadius) {\n            radius = value === 1 || 2 ? 8 : radius;\n            radius /= 2;\n            minRadius = radius * 0.25;\n        }\n        oldStartValue = ((((pointer.currentRadius - (pointer.pointerWidth / 2)) * ((startAngle * Math.PI) / 180) -\n            (radius / minRadius)) / (pointer.currentRadius - (pointer.pointerWidth / 2))) * 180) / Math.PI;\n        oldEndValue = ((((pointer.currentRadius - (pointer.pointerWidth / 2)) * ((endAngle * Math.PI) / 180) +\n            (radius / minRadius)) / (pointer.currentRadius - (pointer.pointerWidth / 2))) * 180) / Math.PI;\n        roundStartAngle = ((((pointer.currentRadius) * ((startAngle * Math.PI) / 180) +\n            radius) / (pointer.currentRadius)) * 180) / Math.PI;\n        roundEndAngle = ((((pointer.currentRadius) * ((endAngle * Math.PI) / 180) -\n            radius) / (pointer.currentRadius)) * 180) / Math.PI;\n        if (isNullOrUndefined(pointer.currentRadius)) {\n            this.calculatePointerRadius(axis, pointer);\n        }\n        pointer.pathElement.map(function (element) {\n            if (pointer.type === 'RangeBar') {\n                if (pointer.roundedCornerRadius && value) {\n                    element.setAttribute('d', getRoundedPathArc(location, Math.floor(roundStartAngle), Math.ceil(roundEndAngle), oldStartValue, oldEndValue, pointer.currentRadius, pointer.pointerWidth, pointer.pointerWidth));\n                    radius = 0;\n                }\n                else {\n                    element.setAttribute('d', getCompleteArc(location, startAngle, endAngle, pointer.currentRadius, (pointer.currentRadius - pointer.pointerWidth)));\n                }\n            }\n            else {\n                element.setAttribute('transform', 'rotate(' + getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise) + ',' + location.x + ',' + location.y + ')');\n            }\n            element.setAttribute('aria-label', pointer.description || 'Pointer:' + value.toString());\n        });\n    };\n    /**\n     * Method to render the marker pointer of the ciruclar gauge.\n     * @return {void}\n     */\n    PointerRenderer.prototype.drawMarkerPointer = function (axis, axisIndex, index, parentElement, gauge) {\n        var pointer = axis.pointers[index];\n        var location = getLocationFromAngle(0, pointer.currentRadius, gauge.midPoint);\n        pointer.pathElement.push(appendPath(calculateShapes(location, pointer.markerShape, new Size(pointer.markerWidth, pointer.markerHeight), pointer.imageUrl, new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_Marker_' + index, pointer.color || this.gauge.themeStyle.pointerColor, pointer.border.width, pointer.border.color, null, '0', '', '')), parentElement, gauge, pointer.markerShape === 'Circle' ? 'Ellipse' : (pointer.markerShape === 'Image' ? 'Image' : 'Path')));\n    };\n    /**\n     * Method to render the range bar pointer of the ciruclar gauge.\n     * @return {void}\n     */\n    PointerRenderer.prototype.drawRangeBarPointer = function (axis, axisIndex, index, parentElement, gauge) {\n        var pointer = axis.pointers[index];\n        pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_RangeBar_' + index, pointer.color || this.gauge.themeStyle.pointerColor, pointer.border.width, pointer.border.color, 1, '0', ''), parentElement, gauge));\n    };\n    /**\n     * Method to perform the animation of the pointer in circular gauge.\n     * @return {void}\n     */\n    PointerRenderer.prototype.doPointerAnimation = function (pointer, axis) {\n        var _this = this;\n        var startValue = axis.visibleRange.min;\n        var endValue = pointer.currentValue;\n        if (pointer.animation.enable && startValue !== endValue && this.gauge.animatePointer) {\n            pointer.pathElement.map(function (element) {\n                if (pointer.type === 'RangeBar') {\n                    _this.performRangeBarAnimation(element, startValue, endValue, axis, pointer, pointer.currentRadius, (pointer.currentRadius - pointer.pointerWidth));\n                }\n                else {\n                    _this.performNeedleAnimation(element, startValue, endValue, axis, pointer, pointer.currentRadius, (pointer.currentRadius - pointer.pointerWidth));\n                }\n            });\n        }\n    };\n    /**\n     * Perform the needle and marker pointer animation for circular gauge.\n     * @return {void}\n     * @private\n     */\n    PointerRenderer.prototype.performNeedleAnimation = function (element, start, end, axis, pointer, radius, innerRadius) {\n        var _this = this;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startAngle = getAngleFromValue(start, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var pointAngle = getAngleFromValue(end, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var endAngle = startAngle > pointAngle ? (pointAngle + 360) : pointAngle;\n        var sweepAngle;\n        new Animation({}).animate(element, {\n            duration: pointer.animation.duration,\n            progress: function (args) {\n                sweepAngle = (start < end || Math.round(startAngle) === Math.round(endAngle)) ?\n                    isClockWise ? (endAngle - startAngle) : (endAngle - startAngle - 360) :\n                    isClockWise ? (endAngle - startAngle - 360) : (endAngle - startAngle);\n                element.style.animation = 'None';\n                element.setAttribute('transform', 'rotate(' + linear(args.timeStamp, startAngle, sweepAngle, args.duration) + ',' +\n                    _this.gauge.midPoint.x.toString() + ',' + _this.gauge.midPoint.y.toString() + ')');\n            },\n            end: function (model) {\n                _this.setPointerValue(axis, pointer, end);\n                if (pointer.type === 'Marker' || (element.id.indexOf('_Pointer_NeedleCap') >= 0)) {\n                    _this.gauge.trigger(animationComplete, { axis: axis, pointer: pointer });\n                }\n            }\n        });\n    };\n    /**\n     * Perform the range bar pointer animation for circular gauge.\n     * @return {void}\n     * @private\n     */\n    PointerRenderer.prototype.performRangeBarAnimation = function (element, start, end, axis, pointer, radius, innerRadius) {\n        var _this = this;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startAngle = getAngleFromValue(start, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var minAngle = getAngleFromValue(axis.visibleRange.min, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var pointAngle = getAngleFromValue(end, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var roundRadius = pointer.roundedCornerRadius;\n        var sweepAngle;\n        var endAngle;\n        var oldStart;\n        var minRadius = (radius * 0.25);\n        if (roundRadius) {\n            minAngle = ((((pointer.currentRadius) * ((minAngle * Math.PI) / 180) +\n                roundRadius) / (pointer.currentRadius)) * 180) / Math.PI;\n            pointAngle = ((((pointer.currentRadius) * ((pointAngle * Math.PI) / 180) -\n                roundRadius) / (pointer.currentRadius)) * 180) / Math.PI;\n            oldStart = ((((pointer.currentRadius - (pointer.pointerWidth / 2)) * ((startAngle * Math.PI) / 180) -\n                (radius / minRadius)) / (pointer.currentRadius - (pointer.pointerWidth / 2))) * 180) / Math.PI;\n        }\n        endAngle = startAngle > pointAngle ? (pointAngle + 360) : pointAngle;\n        new Animation({}).animate(element, {\n            duration: pointer.animation.duration,\n            progress: function (arg) {\n                element.style.animation = 'None';\n                sweepAngle = (start < end || Math.round(startAngle) === Math.round(endAngle)) ?\n                    isClockWise ? (endAngle - startAngle) : (endAngle - startAngle - 360) :\n                    isClockWise ? (endAngle - startAngle - 360) : (endAngle - startAngle);\n                if (isClockWise) {\n                    if (!roundRadius) {\n                        element.setAttribute('d', getCompleteArc(_this.gauge.midPoint, minAngle, linear(arg.timeStamp, startAngle, sweepAngle, arg.duration) + 0.0001, radius, innerRadius));\n                    }\n                    else {\n                        element.setAttribute('d', getRoundedPathArc(_this.gauge.midPoint, Math.floor(minAngle), linear(arg.timeStamp, Math.floor(minAngle), sweepAngle, arg.duration) + 0.0001, oldStart, linear(arg.timeStamp, Math.floor(minAngle + (roundRadius / 2)), sweepAngle, arg.duration) + 0.0001, radius, pointer.pointerWidth, pointer.pointerWidth));\n                    }\n                }\n                else {\n                    if (!roundRadius) {\n                        element.setAttribute('d', getCompleteArc(_this.gauge.midPoint, linear(arg.timeStamp, startAngle, sweepAngle, arg.duration), minAngle + 0.0001, radius, innerRadius));\n                    }\n                    else {\n                        sweepAngle += roundRadius;\n                        element.setAttribute('d', getRoundedPathArc(_this.gauge.midPoint, linear(arg.timeStamp, Math.floor(oldStart), sweepAngle, arg.duration), Math.floor(oldStart) + 0.0001, linear(arg.timeStamp, Math.floor(minAngle - roundRadius - (roundRadius / 2)), sweepAngle, arg.duration), Math.floor(oldStart + (roundRadius / 2)) + 0.0001, radius, pointer.pointerWidth, pointer.pointerWidth));\n                    }\n                }\n            },\n            end: function (model) {\n                _this.setPointerValue(axis, pointer, end);\n                _this.gauge.trigger(animationComplete, _this.gauge.isBlazor ? {} : { axis: axis, pointer: pointer });\n            }\n        });\n    };\n    return PointerRenderer;\n}());\nexport { PointerRenderer };\n","import { createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { calculateSum, VisibleLabels, measureText, isCompleteAngle, getLocationFromAngle } from '../utils/helper';\nimport { Size, Rect, stringToNumber, getLabelFormat } from '../utils/helper';\nimport { axisLabelRender, radiusCalculate } from '../model/constants';\nimport { AxisRenderer } from './axis-renderer';\nimport { PointerRenderer } from './pointer-renderer';\n/**\n * Specifies the CircularGauge Axis Layout\n */\nvar labelPadding = 10;\nvar AxisLayoutPanel = /** @class */ (function () {\n    function AxisLayoutPanel(gauge) {\n        this.gauge = gauge;\n        this.axisRenderer = new AxisRenderer(gauge);\n        this.pointerRenderer = new PointerRenderer(gauge);\n    }\n    /**\n     * Measure the calculate the axis size and radius.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.measureAxis = function (rect) {\n        this.measureAxisSize(this.gauge, rect);\n        this.calculateAxesRadius();\n    };\n    /**\n     * Measure to calculate the axis radius of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateAxesRadius = function () {\n        var _this = this;\n        var totalRadius;\n        var currentRadius;\n        var rangeMaximumRadius = 0;\n        var xMarginDiff = this.gauge.margin.left + this.gauge.margin.right;\n        var yMarginDiff = this.gauge.margin.top + this.gauge.margin.bottom;\n        var _loop_1 = function (axis) {\n            totalRadius = (Math.min(axis.rect.width, axis.rect.height) / 2);\n            currentRadius = axis.radius != null ? stringToNumber(axis.radius, totalRadius) : totalRadius;\n            rangeMaximumRadius = Math.max.apply(Math, axis.ranges.map(function (value) {\n                return value.radius ?\n                    (value.radius.indexOf('%') < 0 ? 100 : parseInt(value.radius, 10)) : 0;\n            }));\n            currentRadius = (rangeMaximumRadius > 100 && axis.radius == null) ?\n                (currentRadius * 100) / rangeMaximumRadius : currentRadius;\n            axis.currentRadius = currentRadius - axis.nearSize;\n            if (this_1.gauge.moveToCenter && this_1.gauge.axes.length === 1 &&\n                isNullOrUndefined(this_1.gauge.centerX) && isNullOrUndefined(this_1.gauge.centerY)) {\n                var startAngle = void 0;\n                var endAngle = void 0;\n                startAngle = axis.startAngle;\n                startAngle = !isCompleteAngle(startAngle, axis.endAngle) ? startAngle : [0, endAngle = 360][0];\n                var startPoint = getLocationFromAngle(startAngle - 90, currentRadius, this_1.gauge.midPoint);\n                endAngle = axis.endAngle;\n                endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n                var endPoint = getLocationFromAngle(endAngle - 90, currentRadius, this_1.gauge.midPoint);\n                var xDiff = void 0;\n                var yDiff = void 0;\n                var startXDiff = void 0;\n                var endXDiff = void 0;\n                var startYDiff = void 0;\n                var endYDiff = void 0;\n                var newPoint = void 0;\n                if (startAngle > endAngle ? Math.abs(startAngle - endAngle) > 90 ? true : false : true) {\n                    if ((startAngle >= 270 && startAngle <= 360) && ((endAngle > 270 && endAngle <= 360) ||\n                        (endAngle >= 0 && endAngle <= 180))) {\n                        startXDiff = Math.abs(this_1.gauge.gaugeRect.x - Math.abs(startPoint.x - this_1.gauge.gaugeRect.x));\n                        newPoint = (endAngle <= 360 && endAngle >= 270) ? this_1.gauge.midPoint : (endAngle <= 90) ? endPoint :\n                            getLocationFromAngle(90 - 90, currentRadius, this_1.gauge.midPoint);\n                        endXDiff = Math.abs(newPoint.x - this_1.gauge.gaugeRect.width);\n                        startPoint = (endAngle <= 360 && endAngle >= 270) ? endPoint :\n                            getLocationFromAngle(360 - 90, currentRadius, this_1.gauge.midPoint);\n                        startYDiff = Math.abs(startPoint.y - this_1.gauge.gaugeRect.y);\n                        endPoint = (endAngle <= 360 && endAngle >= 270 || (endAngle >= 0 && endAngle < 90)) ?\n                            this_1.gauge.midPoint : (endAngle >= 90 && endAngle <= 180) ? endPoint :\n                            getLocationFromAngle(180 - 90, currentRadius, this_1.gauge.midPoint);\n                        endYDiff = Math.abs(endPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));\n                    }\n                    else if ((startAngle >= 0 && startAngle < 90) && (endAngle >= 0 && endAngle <= 270)) {\n                        startYDiff = Math.abs(startPoint.y - this_1.gauge.gaugeRect.y);\n                        newPoint = (endAngle >= 180) ? getLocationFromAngle(180 - 90, currentRadius, this_1.gauge.midPoint) :\n                            endPoint;\n                        endYDiff = Math.abs(newPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));\n                        startPoint = (endAngle >= 180) ? endPoint : this_1.gauge.midPoint;\n                        startXDiff = Math.abs(this_1.gauge.gaugeRect.x - Math.abs(startPoint.x - this_1.gauge.gaugeRect.x));\n                        endPoint = (endAngle >= 90) ? getLocationFromAngle(90 - 90, currentRadius, this_1.gauge.midPoint) : endPoint;\n                        endXDiff = Math.abs(endPoint.x - this_1.gauge.gaugeRect.width);\n                    }\n                    else if ((startAngle >= 90 && startAngle < 180) && (endAngle > 90 && endAngle <= 360)) {\n                        newPoint = (endAngle <= 180) ? this_1.gauge.midPoint : (endAngle >= 270) ?\n                            getLocationFromAngle(270 - 90, currentRadius, this_1.gauge.midPoint) : endPoint;\n                        startXDiff = Math.abs(newPoint.x - this_1.gauge.gaugeRect.x);\n                        endXDiff = Math.abs(startPoint.x - this_1.gauge.gaugeRect.width);\n                        startPoint = (endAngle > 270) ? getLocationFromAngle(endAngle - 90, currentRadius, this_1.gauge.midPoint) :\n                            this_1.gauge.midPoint;\n                        startYDiff = Math.abs(this_1.gauge.gaugeRect.y - startPoint.y);\n                        endPoint = (endAngle >= 180) ? getLocationFromAngle(180 - 90, currentRadius, this_1.gauge.midPoint) : endPoint;\n                        endYDiff = Math.abs(endPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));\n                    }\n                    else if ((startAngle >= 180 && startAngle <= 270) && ((endAngle <= 360 && endAngle >= 270) ||\n                        (endAngle <= 180 && endAngle >= 0))) {\n                        newPoint = (endAngle > 180 && endAngle < 270) ? endPoint :\n                            getLocationFromAngle(270 - 90, currentRadius, this_1.gauge.midPoint);\n                        startXDiff = Math.abs(this_1.gauge.gaugeRect.x - Math.abs(newPoint.x - this_1.gauge.gaugeRect.x));\n                        newPoint = (endAngle >= 180 && endAngle <= 360) ? this_1.gauge.midPoint : endPoint;\n                        endXDiff = Math.abs(newPoint.x - this_1.gauge.gaugeRect.width);\n                        newPoint = (endAngle > 180 && endAngle < 270) ? this_1.gauge.midPoint : (endAngle >= 270 && endAngle <= 360) ?\n                            endPoint : getLocationFromAngle(360 - 90, currentRadius, this_1.gauge.midPoint);\n                        startYDiff = Math.abs(newPoint.y - this_1.gauge.gaugeRect.y);\n                        endYDiff = Math.abs(startPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));\n                    }\n                    if ((!isNullOrUndefined(startXDiff) && !isNullOrUndefined(endXDiff) && !isNullOrUndefined(startYDiff) &&\n                        !isNullOrUndefined(endYDiff)) && ((startXDiff > 0 || endXDiff > 0) && (startYDiff > 0 || endYDiff > 0))) {\n                        xDiff = Math.abs((startXDiff + endXDiff) - xMarginDiff);\n                        yDiff = Math.abs((startYDiff + endYDiff) - yMarginDiff);\n                        this_1.gauge.midPoint.x = this_1.gauge.midPoint.x - (startXDiff / 2) + (endXDiff / 2);\n                        this_1.gauge.midPoint.y = this_1.gauge.midPoint.y - (startYDiff / 2) + (endYDiff / 2);\n                        totalRadius = (Math.min(this_1.gauge.gaugeRect.width, this_1.gauge.gaugeRect.height) / 2) +\n                            (Math.min(xDiff, yDiff) / 2);\n                        axis.currentRadius = (axis.radius != null ? stringToNumber(axis.radius, totalRadius) : totalRadius) - axis.nearSize;\n                    }\n                }\n            }\n            axis.visibleRange.interval = this_1.calculateNumericInterval(axis, axis.rect);\n            var args;\n            args = {\n                cancel: false, name: radiusCalculate, currentRadius: axis.currentRadius, gauge: this_1.gauge,\n                midPoint: this_1.gauge.midPoint, axis: axis\n            };\n            this_1.gauge.trigger('radiusCalculate', args, function (observedArgs) {\n                axis.currentRadius = args.currentRadius;\n                _this.gauge.midPoint = args.midPoint;\n            });\n            this_1.calculateVisibleLabels(axis);\n        };\n        var this_1 = this;\n        for (var _i = 0, _a = this.gauge.axes; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            _loop_1(axis);\n        }\n    };\n    /**\n     * Measure to calculate the axis size.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.measureAxisSize = function (gauge, rect) {\n        var _this = this;\n        var sum;\n        this.computeSize(gauge.axes, rect);\n        gauge.axes.map(function (axis, index) {\n            sum = calculateSum(index, _this.farSizes.length - 1, _this.farSizes);\n            axis.rect = new Rect(rect.x + sum, rect.y + sum, rect.width - (sum * 2), rect.height - (sum * 2));\n        });\n    };\n    /**\n     * Calculate the axis values of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateAxisValues = function (rect) {\n        for (var _i = 0, _a = this.gauge.axes; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            this.calculateVisibleRange(axis, rect);\n            this.calculateVisibleLabels(axis);\n        }\n    };\n    /**\n     * Calculate the visible range of an axis.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateVisibleRange = function (axis, rect) {\n        var interval = axis.majorTicks.interval;\n        var minimumValue = Math.min(axis.minimum === null ? 0 : axis.minimum, axis.maximum);\n        var maximumValue = Math.max(axis.minimum, axis.maximum === null ? 100 : axis.maximum);\n        axis.pointers.map(function (pointer) {\n            pointer.currentValue = pointer.value !== null ?\n                pointer.value < minimumValue ? minimumValue : pointer.value > maximumValue ? maximumValue : pointer.value\n                : minimumValue;\n            minimumValue = axis.minimum === null ? Math.min(pointer.currentValue, minimumValue) : minimumValue;\n            maximumValue = axis.maximum === null ? Math.max(pointer.currentValue, maximumValue) : maximumValue;\n        });\n        minimumValue = (minimumValue === maximumValue) ?\n            (interval !== null ? minimumValue - interval : minimumValue - 1) : minimumValue;\n        axis.visibleRange = { min: minimumValue, max: maximumValue, interval: interval };\n        axis.visibleRange.interval = this.calculateNumericInterval(axis, rect);\n    };\n    /**\n     * Calculate the numeric intervals of an axis range.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateNumericInterval = function (axis, rect) {\n        if (axis.majorTicks.interval !== null) {\n            return axis.majorTicks.interval;\n        }\n        var totalAngle = axis.endAngle - axis.startAngle;\n        totalAngle = totalAngle <= 0 ? (totalAngle + 360) : totalAngle;\n        return this.calculateNiceInterval(axis.visibleRange.max, axis.visibleRange.min, axis.currentRadius ? axis.currentRadius : (rect.width / 2), totalAngle);\n    };\n    /**\n     * Calculate the nice interval of an axis range.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateNiceInterval = function (maxValue, minValue, radius, degree) {\n        var delta = maxValue - minValue;\n        var circumference = 2 * Math.PI * radius * (degree / 360);\n        var desiredIntervalsCount = Math.max((circumference * ((0.533 * 3) / 100)), 1);\n        var niceInterval = delta / desiredIntervalsCount;\n        var minInterval = Math.pow(10, Math.floor(Math.log(niceInterval) / Math.log(10)));\n        for (var _i = 0, _a = [10, 5, 2, 1]; _i < _a.length; _i++) {\n            var interval = _a[_i];\n            var currentInterval = minInterval * interval;\n            if (desiredIntervalsCount < (delta / currentInterval)) {\n                break;\n            }\n            niceInterval = currentInterval;\n        }\n        return niceInterval;\n    };\n    /**\n     * Calculate the visible labels of an axis.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateVisibleLabels = function (axis) {\n        var style = axis.labelStyle;\n        var customLabelFormat = style.format && style.format.match('{value}') !== null;\n        var format = this.gauge.intl.getNumberFormat({\n            format: getLabelFormat(style.format), useGrouping: this.gauge.useGroupingSeparator\n        });\n        var argsData;\n        axis.visibleLabels = [];\n        var roundValue;\n        var _loop_2 = function (i, interval, max) {\n            roundValue = axis.roundingPlaces ? parseFloat(i.toFixed(axis.roundingPlaces)) : i;\n            argsData = {\n                cancel: false, name: axisLabelRender, axis: axis,\n                text: customLabelFormat ? style.format.replace(new RegExp('{value}', 'g'), format(roundValue)) :\n                    format(roundValue),\n                value: roundValue\n            };\n            this_2.gauge.trigger('axisLabelRender', argsData, function (observedArgs) {\n                if (!argsData.cancel) {\n                    axis.visibleLabels.push(new VisibleLabels(argsData.text, i));\n                }\n            });\n        };\n        var this_2 = this;\n        for (var i = axis.visibleRange.min, interval = axis.visibleRange.interval, max = axis.visibleRange.max; (i <= max && interval); i += interval) {\n            _loop_2(i, interval, max);\n        }\n        var lastLabel = axis.visibleLabels.length ? axis.visibleLabels[axis.visibleLabels.length - 1].value : null;\n        var maxVal = axis.visibleRange.max;\n        if (lastLabel !== maxVal && axis.showLastLabel === true) {\n            argsData = {\n                cancel: false, name: axisLabelRender, axis: axis,\n                text: customLabelFormat ? style.format.replace(new RegExp('{value}', 'g'), format(maxVal)) :\n                    format(maxVal),\n                value: maxVal\n            };\n            this.gauge.trigger('axisLabelRender', argsData, function (observedArgs) {\n                if (!argsData.cancel) {\n                    axis.visibleLabels.push(new VisibleLabels(argsData.text, maxVal));\n                }\n            });\n        }\n        this.getMaxLabelWidth(this.gauge, axis);\n    };\n    /**\n     * Measure the axes available size.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.computeSize = function (axes, rect) {\n        var lineSize;\n        var outerHeight;\n        var innerHeight;\n        var isMajorTickOutside;\n        var isMinorTickOutside;\n        var isLabelOutside;\n        var axisPadding = 5;\n        var majorTickOffset = 0;\n        var minorTickOffset = 0;\n        var labelOffset = 0;\n        this.farSizes = [];\n        this.calculateAxisValues(rect);\n        for (var _i = 0, axes_1 = axes; _i < axes_1.length; _i++) {\n            var axis = axes_1[_i];\n            lineSize = (axis.lineStyle.width / 2);\n            outerHeight = 0;\n            innerHeight = 0;\n            isMajorTickOutside = axis.majorTicks.position === 'Outside';\n            majorTickOffset = axis.majorTicks.offset;\n            isMinorTickOutside = axis.minorTicks.position === 'Outside';\n            minorTickOffset = axis.minorTicks.offset;\n            isLabelOutside = axis.labelStyle.position === 'Outside';\n            labelOffset = axis.labelStyle.offset;\n            // Calculating the outer space of the axis\n            outerHeight += !(isMajorTickOutside && isMinorTickOutside && isLabelOutside) ? axisPadding : 0;\n            outerHeight += (isMajorTickOutside ? (axis.majorTicks.height + lineSize) : 0) +\n                (isLabelOutside ? (axis.maxLabelSize.height + labelPadding + labelOffset) : 0) +\n                ((isMinorTickOutside && !isMajorTickOutside) ? (axis.minorTicks.height + lineSize) : 0) + lineSize;\n            outerHeight += (isMajorTickOutside && isMinorTickOutside) ? Math.max(majorTickOffset, minorTickOffset) :\n                (isMajorTickOutside ? majorTickOffset : isMinorTickOutside ? minorTickOffset : 0);\n            // Calculating the inner space of the axis\n            innerHeight += (!isMajorTickOutside ? (axis.majorTicks.height + lineSize) : 0) +\n                (!isLabelOutside ? (axis.maxLabelSize.height + labelPadding + labelOffset) : 0) +\n                ((!isMinorTickOutside && isMajorTickOutside) ? (axis.minorTicks.height + lineSize) : 0) + lineSize;\n            innerHeight += (!isMajorTickOutside && !isMinorTickOutside) ? Math.max(majorTickOffset, minorTickOffset) :\n                (!isMajorTickOutside ? majorTickOffset : !isMinorTickOutside ? minorTickOffset : 0);\n            if (this.farSizes[this.farSizes.length - 1]) {\n                this.farSizes[this.farSizes.length - 1] += (innerHeight + outerHeight);\n            }\n            axis.nearSize = outerHeight - axisPadding;\n            axis.farSize = innerHeight;\n            outerHeight = (this.gauge.axes.length === (this.farSizes.length + 1)) ? 0 : outerHeight;\n            this.farSizes.push(outerHeight);\n        }\n    };\n    /**\n     * To render the Axis element of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.renderAxes = function (animate) {\n        var _this = this;\n        if (animate === void 0) { animate = true; }\n        var gauge = this.gauge;\n        var renderer = this.axisRenderer;\n        var element;\n        var axesElements = gauge.renderer.createGroup({\n            'id': gauge.element.id + '_AxesCollection',\n            'clip-path': 'url(#' + gauge.element.id + '_GaugeAreaClipRect_' + ')'\n        });\n        // To append the secondary element for annotation and tooltip\n        gauge.element.appendChild(createElement('div', {\n            id: gauge.element.id + '_Secondary_Element',\n            styles: 'position: relative'\n        }));\n        gauge.axes.map(function (axis, index) {\n            element = gauge.renderer.createGroup({\n                id: gauge.element.id + '_Axis_Group_' + index\n            });\n            renderer.drawAxisOuterLine(axis, index, element, gauge);\n            renderer.drawAxisRange(axis, index, element, gauge);\n            renderer.drawAxisLine(axis, index, element, gauge);\n            renderer.drawMajorTickLines(axis, index, element, gauge);\n            renderer.drawMinorTickLines(axis, index, element, gauge);\n            renderer.drawAxisLabels(axis, index, element, gauge);\n            _this.pointerRenderer.drawPointers(axis, index, element, gauge, animate);\n            if (gauge.annotationsModule) {\n                gauge.annotationsModule.renderAnnotation(axis, index);\n            }\n            axesElements.appendChild(element);\n        });\n        // For append clip rect for axes\n        gauge.svgObject.appendChild(gauge.renderer.drawClipPath({\n            'id': gauge.element.id + '_GaugeAreaClipRect_',\n            'x': 0, 'y': 0,\n            'width': gauge.availableSize.width,\n            'height': gauge.availableSize.height,\n            'fill': 'transparent', 'stroke': 'transparent'\n        }));\n        gauge.svgObject.appendChild(axesElements);\n    };\n    /**\n     * Calculate maximum label width for the axis.\n     * @return {void}\n     */\n    AxisLayoutPanel.prototype.getMaxLabelWidth = function (gauge, axis) {\n        axis.maxLabelSize = new Size(0, 0);\n        for (var _i = 0, _a = axis.visibleLabels; _i < _a.length; _i++) {\n            var label = _a[_i];\n            label.size = measureText(label.text, axis.labelStyle.font);\n            axis.maxLabelSize.width = label.size.width > axis.maxLabelSize.width ?\n                label.size.width : axis.maxLabelSize.width;\n            axis.maxLabelSize.height = label.size.height > axis.maxLabelSize.height ?\n                label.size.height : axis.maxLabelSize.height;\n        }\n    };\n    return AxisLayoutPanel;\n}());\nexport { AxisLayoutPanel };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/**\n * Circular Gauge\n */\nimport { Property, NotifyPropertyChanges, Component } from '@syncfusion/ej2-base';\nimport { Complex, Browser, isNullOrUndefined, resetBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, Collection, Internationalization } from '@syncfusion/ej2-base';\nimport { remove, createElement } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\nimport { TextOption, textElement, RectOption, getAngleFromLocation, getValueFromAngle, removeElement } from './utils/helper';\nimport { Size, stringToNumber, measureText, Rect, GaugeLocation, getElement, getPointer, setStyles, toPixel } from './utils/helper';\nimport { getAngleFromValue, getPathArc } from './utils/helper';\nimport { Border, Margin, Font, TooltipSettings } from './model/base';\nimport { Axis } from './axes/axis';\nimport { Annotations } from './annotations/annotations';\nimport { GaugeTooltip } from './user-interaction/tooltip';\nimport { load, loaded, gaugeMouseMove, gaugeMouseLeave, gaugeMouseDown } from './model/constants';\nimport { gaugeMouseUp, dragEnd, dragMove, dragStart, resized } from './model/constants';\nimport { AxisLayoutPanel } from './axes/axis-panel';\nimport { getThemeStyle } from './model/theme';\n/**\n * Represents the Circular gauge control.\n * ```html\n * <div id=\"gauge\"/>\n * <script>\n *   var gaugeObj = new CircularGauge();\n *   gaugeObj.appendTo(\"#gauge\");\n * </script>\n * ```\n */\nvar CircularGauge = /** @class */ (function (_super) {\n    __extends(CircularGauge, _super);\n    /**\n     * Constructor for creating the widget\n     * @hidden\n     */\n    function CircularGauge(options, element) {\n        return _super.call(this, options, element) || this;\n    }\n    /**\n     *  To create svg object, renderer and binding events for the container.\n     */\n    CircularGauge.prototype.preRender = function () {\n        var blazor = 'Blazor';\n        this.isBlazor = window[blazor];\n        this.unWireEvents();\n        this.trigger(load, { gauge: this });\n        this.initPrivateVariable();\n        this.setCulture();\n        this.createSvg();\n        this.wireEvents();\n    };\n    /**\n     * To render the circular gauge elements\n     */\n    CircularGauge.prototype.render = function () {\n        this.setTheme();\n        this.calculateBounds();\n        this.renderElements();\n    };\n    CircularGauge.prototype.setTheme = function () {\n        this.themeStyle = getThemeStyle(this.theme);\n    };\n    /**\n     * Method to unbind events for circular gauge\n     */\n    CircularGauge.prototype.unWireEvents = function () {\n        EventHandler.remove(this.element, Browser.touchStartEvent, this.gaugeOnMouseDown);\n        EventHandler.remove(this.element, Browser.touchMoveEvent, this.mouseMove);\n        EventHandler.remove(this.element, Browser.touchEndEvent, this.mouseEnd);\n        EventHandler.remove(this.element, 'contextmenu', this.gaugeRightClick);\n        EventHandler.remove(this.element, (Browser.isPointer ? 'pointerleave' : 'mouseleave'), this.mouseLeave);\n        window.removeEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.gaugeResize);\n    };\n    /**\n     * Method to bind events for circular gauge\n     */\n    CircularGauge.prototype.wireEvents = function () {\n        /*! Bind the Event handler */\n        EventHandler.add(this.element, Browser.touchStartEvent, this.gaugeOnMouseDown, this);\n        EventHandler.add(this.element, Browser.touchMoveEvent, this.mouseMove, this);\n        EventHandler.add(this.element, Browser.touchEndEvent, this.mouseEnd, this);\n        EventHandler.add(this.element, 'contextmenu', this.gaugeRightClick, this);\n        EventHandler.add(this.element, (Browser.isPointer ? 'pointerleave' : 'mouseleave'), this.mouseLeave, this);\n        window.addEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.gaugeResize.bind(this));\n        /*! Apply the style for circular gauge */\n        this.setGaugeStyle(this.element);\n    };\n    /**\n     * Handles the mouse move.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.mouseMove = function (e) {\n        var _this = this;\n        var args = this.getMouseArgs(e, 'touchmove', gaugeMouseMove);\n        this.trigger('gaugeMouseMove', args, function (observedArgs) {\n            var dragArgs;\n            var dragBlazorArgs;\n            var tooltip = _this.tooltipModule;\n            if (!args.cancel) {\n                if (_this.enablePointerDrag && _this.activePointer) {\n                    var dragPointInd = parseInt(_this.activePointer.pathElement[0].id.slice(-1), 10);\n                    var dragAxisInd = parseInt(_this.activePointer.pathElement[0].id.match(/\\d/g)[0], 10);\n                    dragArgs = {\n                        axis: _this.activeAxis,\n                        pointer: _this.activePointer,\n                        previousValue: _this.activePointer.currentValue,\n                        name: dragMove,\n                        currentValue: null,\n                        axisIndex: dragAxisInd,\n                        pointerIndex: dragPointInd\n                    };\n                    dragBlazorArgs = {\n                        previousValue: _this.activePointer.currentValue,\n                        name: dragMove,\n                        currentValue: null,\n                        pointerIndex: dragPointInd,\n                        axisIndex: dragAxisInd\n                    };\n                    _this.pointerDrag(new GaugeLocation(args.x, args.y));\n                    dragArgs.currentValue = dragBlazorArgs.currentValue = _this.activePointer.currentValue;\n                    _this.trigger(dragMove, _this.isBlazor ? dragBlazorArgs : dragArgs);\n                }\n            }\n        });\n        this.notify(Browser.touchMoveEvent, e);\n        return false;\n    };\n    /**\n     * Handles the mouse leave.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.mouseLeave = function (e) {\n        this.activeAxis = null;\n        this.activePointer = null;\n        this.svgObject.setAttribute('cursor', 'auto');\n        var args = this.getMouseArgs(e, 'touchmove', gaugeMouseLeave);\n        this.trigger(gaugeMouseLeave, args);\n        return false;\n    };\n    /**\n     * Handles the mouse right click.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.gaugeRightClick = function (event) {\n        if (event.buttons === 2 || event.pointerType === 'touch') {\n            event.preventDefault();\n            event.stopPropagation();\n            return false;\n        }\n        return true;\n    };\n    /**\n     * Handles the pointer draf while mouse move on gauge.\n     * @private\n     */\n    CircularGauge.prototype.pointerDrag = function (location) {\n        var axis = this.activeAxis;\n        var range = axis.visibleRange;\n        var value = getValueFromAngle(getAngleFromLocation(this.midPoint, location), range.max, range.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n        if (value >= range.min && value <= range.max) {\n            this.activePointer.currentValue = value;\n            this.gaugeAxisLayoutPanel.pointerRenderer.setPointerValue(axis, this.activePointer, value);\n        }\n    };\n    /**\n     * Handles the mouse down on gauge.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.gaugeOnMouseDown = function (e) {\n        var _this = this;\n        var currentPointer;\n        var args = this.getMouseArgs(e, 'touchstart', gaugeMouseDown);\n        this.trigger('gaugeMouseDown', args, function (observedArgs) {\n            if (!args.cancel && args.target.id.indexOf('_Pointer_') >= 0 &&\n                args.target.id.indexOf(_this.element.id + '_Axis_') >= 0) {\n                currentPointer = getPointer(args.target.id, _this);\n                _this.activeAxis = _this.axes[currentPointer.axisIndex];\n                _this.activePointer = _this.activeAxis.pointers[currentPointer.pointerIndex];\n                if (isNullOrUndefined(_this.activePointer.pathElement)) {\n                    _this.activePointer.pathElement = [e.target];\n                }\n                var pointInd = parseInt(_this.activePointer.pathElement[0].id.slice(-1), 10);\n                var axisInd = parseInt(_this.activePointer.pathElement[0].id.match(/\\d/g)[0], 10);\n                _this.trigger(dragStart, _this.isBlazor ? {\n                    name: dragStart,\n                    currentValue: _this.activePointer.currentValue,\n                    pointerIndex: pointInd,\n                    axisIndex: axisInd\n                } : {\n                    axis: _this.activeAxis,\n                    name: dragStart,\n                    pointer: _this.activePointer,\n                    currentValue: _this.activePointer.currentValue,\n                    pointerIndex: pointInd,\n                    axisIndex: axisInd\n                });\n                _this.svgObject.setAttribute('cursor', 'pointer');\n            }\n        });\n        return false;\n    };\n    /**\n     * Handles the mouse end.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.mouseEnd = function (e) {\n        var args = this.getMouseArgs(e, 'touchend', gaugeMouseUp);\n        var blazorArgs = {\n            cancel: args.cancel, target: args.target, name: args.name, x: args.x, y: args.y\n        };\n        var isTouch = e.pointerType === 'touch' || e.pointerType === '2' || e.type === 'touchend';\n        var tooltipInterval;\n        var tooltip = this.tooltipModule;\n        this.trigger(gaugeMouseUp, this.isBlazor ? blazorArgs : args);\n        if (this.activeAxis && this.activePointer) {\n            var pointerInd = parseInt(this.activePointer.pathElement[0].id.slice(-1), 10);\n            var axisInd = parseInt(this.activePointer.pathElement[0].id.match(/\\d/g)[0], 10);\n            this.trigger(dragEnd, this.isBlazor ? {\n                name: dragEnd,\n                currentValue: this.activePointer.currentValue,\n                pointerIndex: pointerInd,\n                axisIndex: axisInd\n            } : {\n                name: dragEnd,\n                axis: this.activeAxis,\n                pointer: this.activePointer,\n                currentValue: this.activePointer.currentValue,\n                axisIndex: axisInd,\n                pointerIndex: pointerInd\n            });\n            this.activeAxis = null;\n            this.activePointer = null;\n        }\n        this.svgObject.setAttribute('cursor', 'auto');\n        this.notify(Browser.touchEndEvent, e);\n        return false;\n    };\n    /**\n     * Handles the mouse event arguments.\n     * @return {IMouseEventArgs}\n     * @private\n     */\n    CircularGauge.prototype.getMouseArgs = function (e, type, name) {\n        var rect = this.element.getBoundingClientRect();\n        var location = new GaugeLocation(-rect.left, -rect.top);\n        var isTouch = (e.type === type);\n        location.x += isTouch ? e.changedTouches[0].clientX : e.clientX;\n        location.y += isTouch ? e.changedTouches[0].clientY : e.clientY;\n        return {\n            cancel: false, name: name,\n            x: location.x, y: location.y,\n            target: isTouch ? e.target : e.target\n        };\n    };\n    /**\n     * Handles the gauge resize.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.gaugeResize = function (e) {\n        var _this = this;\n        var args = {\n            gauge: this,\n            previousSize: new Size(this.availableSize.width, this.availableSize.height),\n            name: resized,\n            currentSize: new Size(0, 0)\n        };\n        this.animatePointer = false;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        if (this.element.classList.contains('e-circulargauge')) {\n            this.resizeTo = window.setTimeout(function () {\n                _this.createSvg();\n                _this.calculateBounds();\n                _this.renderElements();\n                args.currentSize = _this.availableSize;\n                _this.trigger(resized, _this.isBlazor ? {} : args);\n            }, 500);\n        }\n        return false;\n    };\n    /**\n     * Applying styles for circular gauge elements\n     */\n    CircularGauge.prototype.setGaugeStyle = function (element) {\n        element.style.touchAction = this.enablePointerDrag ? 'none' : 'element';\n        element.style.msTouchAction = this.enablePointerDrag ? 'none' : 'element';\n        element.style.msContentZooming = 'none';\n        element.style.msUserSelect = 'none';\n        element.style.webkitUserSelect = 'none';\n        element.style.position = 'relative';\n    };\n    /**\n     * Method to set culture for gauge\n     */\n    CircularGauge.prototype.setCulture = function () {\n        this.intl = new Internationalization();\n    };\n    /**\n     * Methods to create svg element for circular gauge.\n     */\n    CircularGauge.prototype.createSvg = function () {\n        this.removeSvg();\n        this.calculateSvgSize();\n        this.svgObject = this.renderer.createSvg({\n            id: this.element.id + '_svg',\n            width: this.availableSize.width,\n            height: this.availableSize.height\n        });\n    };\n    /**\n     * To Remove the SVG from circular gauge.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.removeSvg = function () {\n        for (var i = 0; i < this.axes.length; i++) {\n            for (var j = 0; j < this.axes[i].annotations.length; j++) {\n                resetBlazorTemplate(this.element.id + '_Axis' + i + '_ContentTemplate' + j, '_ContentTemplate');\n            }\n        }\n        removeElement(this.element.id + '_Secondary_Element');\n        if (this.svgObject) {\n            while (this.svgObject.childNodes.length > 0) {\n                this.svgObject.removeChild(this.svgObject.firstChild);\n            }\n            if (!this.svgObject.hasChildNodes() && this.svgObject.parentNode) {\n                remove(this.svgObject);\n            }\n        }\n    };\n    /**\n     * To initialize the circular gauge private variable.\n     * @private\n     */\n    CircularGauge.prototype.initPrivateVariable = function () {\n        if (this.element.id === '') {\n            var collection = document.getElementsByClassName('e-circulargauge').length;\n            this.element.id = 'circulargauge_control_' + collection;\n        }\n        this.renderer = new SvgRenderer(this.element.id);\n        this.gaugeAxisLayoutPanel = new AxisLayoutPanel(this);\n        this.animatePointer = true;\n    };\n    /**\n     * To calculate the size of the circular gauge element.\n     */\n    CircularGauge.prototype.calculateSvgSize = function () {\n        var containerWidth = this.element.offsetWidth;\n        var containerHeight = this.element.offsetHeight;\n        var borderWidth = parseInt(this.element.style.borderWidth.split('px').join(''), 10) * 2;\n        var width = stringToNumber(this.width, containerWidth) || containerWidth || 600;\n        var height = stringToNumber(this.height, containerHeight) || containerHeight || 450;\n        width = !isNaN(borderWidth) ? (width - borderWidth) : width;\n        height = !isNaN(borderWidth) ? (height - borderWidth) : height;\n        this.availableSize = new Size(width, height);\n    };\n    /**\n     * Method to calculate the availble size for circular gauge.\n     */\n    CircularGauge.prototype.calculateBounds = function () {\n        var padding = 5;\n        var rect;\n        var margin = this.margin;\n        var titleHeight = 0;\n        if (this.title) {\n            titleHeight = measureText(this.title, this.titleStyle).height + padding;\n        }\n        var top = margin.top + titleHeight + this.border.width;\n        var left = margin.left + this.border.width;\n        var width = this.availableSize.width - left - margin.right - this.border.width;\n        var height = this.availableSize.height - top - this.border.width - margin.bottom;\n        var radius = Math.min(width, height) / 2;\n        if (this.moveToCenter && this.axes.length === 1 &&\n            isNullOrUndefined(this.centerX) && isNullOrUndefined(this.centerY)) {\n            rect = new Rect(left, top, width, height);\n        }\n        else {\n            rect = new Rect((left + (width / 2) - radius), (top + (height / 2) - radius), radius * 2, radius * 2);\n        }\n        this.gaugeRect = rect;\n        var centerX = this.centerX !== null ?\n            stringToNumber(this.centerX, this.availableSize.width) : rect.x + (rect.width / 2);\n        var centerY = this.centerY !== null ?\n            stringToNumber(this.centerY, this.availableSize.height) : rect.y + (rect.height / 2);\n        this.midPoint = new GaugeLocation(centerX, centerY);\n        this.gaugeAxisLayoutPanel.measureAxis(rect);\n    };\n    /**\n     * To render elements for circular gauge\n     */\n    CircularGauge.prototype.renderElements = function (animate) {\n        if (animate === void 0) { animate = true; }\n        this.renderBorder();\n        this.renderTitle();\n        this.gaugeAxisLayoutPanel.renderAxes(animate);\n        this.element.appendChild(this.svgObject);\n        this.trigger(loaded, this.isBlazor ? {} : { gauge: this });\n    };\n    /**\n     * Method to render the title for circular gauge.\n     */\n    CircularGauge.prototype.renderTitle = function () {\n        if (this.title) {\n            this.titleStyle.fontFamily = this.themeStyle.fontFamily || this.titleStyle.fontFamily;\n            this.titleStyle.size = this.themeStyle.fontSize || this.titleStyle.size;\n            var size = measureText(this.title, this.titleStyle);\n            var options = new TextOption(this.element.id + '_CircularGaugeTitle', this.availableSize.width / 2, this.margin.top + 3 * (size.height / 4), 'middle', this.title);\n            var element = textElement(options, this.titleStyle, this.titleStyle.color || this.themeStyle.titleFontColor, this.svgObject, '');\n            element.setAttribute('aria-label', this.description || this.title);\n            element.setAttribute('tabindex', this.tabIndex.toString());\n        }\n    };\n    /**\n     * Method to render the border for circular gauge.\n     */\n    CircularGauge.prototype.renderBorder = function () {\n        var borderWidth = this.border.width;\n        if (borderWidth > 0 || (this.background || this.themeStyle.backgroundColor)) {\n            this.svgObject.appendChild(this.renderer.drawRectangle(new RectOption(this.element.id + '_CircularGaugeBorder', this.background || this.themeStyle.backgroundColor, this.border, null, new Rect(borderWidth / 2, borderWidth / 2, this.availableSize.width - borderWidth, this.availableSize.height - borderWidth))));\n        }\n    };\n    /**\n     * Method to set the pointer value dynamically for circular gauge.\n     */\n    CircularGauge.prototype.setPointerValue = function (axisIndex, pointerIndex, value) {\n        var _this = this;\n        var axis = this.axes[axisIndex];\n        var pointer = axis.pointers[pointerIndex];\n        var pointerRadius = pointer.currentRadius;\n        var enableAnimation = pointer.animation.enable;\n        value = value < axis.visibleRange.min ? axis.visibleRange.min : value;\n        value = value > axis.visibleRange.max ? axis.visibleRange.max : value;\n        pointer.pathElement.map(function (element) {\n            if (pointer.type === 'RangeBar') {\n                setStyles(element, pointer.color, pointer.border);\n                if (enableAnimation) {\n                    _this.gaugeAxisLayoutPanel.pointerRenderer.performRangeBarAnimation(element, pointer.currentValue, value, axis, pointer, pointerRadius, (pointerRadius - pointer.pointerWidth));\n                }\n                else {\n                    _this.gaugeAxisLayoutPanel.pointerRenderer.setPointerValue(axis, pointer, value);\n                }\n            }\n            else {\n                if (element.id.indexOf('_Pointer_NeedleCap_') >= 0) {\n                    setStyles(element, pointer.cap.color, pointer.cap.border);\n                }\n                else if (element.id.indexOf('_Pointer_NeedleTail_') >= 0) {\n                    setStyles(element, pointer.needleTail.color, pointer.needleTail.border);\n                }\n                else if (element.id.indexOf('_Pointer_NeedleRect_') >= 0) {\n                    setStyles(element, 'transparent', { color: 'transparent', width: 0 });\n                }\n                else {\n                    setStyles(element, pointer.color, pointer.border);\n                }\n                if (enableAnimation) {\n                    _this.gaugeAxisLayoutPanel.pointerRenderer.performNeedleAnimation(element, pointer.currentValue, value, axis, pointer, pointerRadius, (pointerRadius - pointer.pointerWidth));\n                }\n                else {\n                    _this.gaugeAxisLayoutPanel.pointerRenderer.setPointerValue(axis, pointer, value);\n                }\n            }\n        });\n        this.isProtectedOnChange = true;\n        pointer.currentValue = value;\n        pointer.value = value;\n        this.isProtectedOnChange = false;\n    };\n    /**\n     * Method to set the annotation content dynamically for circular gauge.\n     */\n    CircularGauge.prototype.setAnnotationValue = function (axisIndex, annotationIndex, content) {\n        var isElementExist = getElement(this.element.id + '_Annotations_' + axisIndex) !== null;\n        var element = getElement(this.element.id + '_Annotations_' + axisIndex) ||\n            createElement('div', {\n                id: this.element.id + '_Annotations_' + axisIndex\n            });\n        var annotation = this.axes[axisIndex].annotations[annotationIndex];\n        if (content !== null) {\n            removeElement(this.element.id + '_Axis_' + axisIndex + '_Annotation_' + annotationIndex);\n            annotation.content = content;\n            this.annotationsModule.createTemplate(element, annotationIndex, axisIndex);\n            if (!isElementExist) {\n                getElement(this.element.id + '_Secondary_Element').appendChild(element);\n            }\n        }\n    };\n    /**\n     * Method to set the range values dynamically for circular gauge.\n     */\n    CircularGauge.prototype.setRangeValue = function (axisIndex, rangeIndex, start, end) {\n        var element = getElement(this.element.id + '_Axis_' + axisIndex + '_Range_' + rangeIndex);\n        var axis = this.axes[axisIndex];\n        var range = axis.ranges[rangeIndex];\n        var axisRange = axis.visibleRange;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startValue = Math.min(Math.max(start, axisRange.min), end);\n        var endValue = Math.min(Math.max(start, end), axisRange.max);\n        var startAngle = getAngleFromValue(startValue, axisRange.max, axisRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var endAngle = getAngleFromValue(endValue, axisRange.max, axisRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var startWidth;\n        if (range.startWidth.length > 0) {\n            startWidth = toPixel(range.startWidth, range.currentRadius);\n        }\n        else {\n            startWidth = range.startWidth;\n        }\n        var endWidth;\n        if (range.endWidth.length > 0) {\n            endWidth = toPixel(range.endWidth, range.currentRadius);\n        }\n        else {\n            endWidth = range.endWidth;\n        }\n        endAngle = isClockWise ? endAngle : [startAngle, startAngle = endAngle][0];\n        endWidth = isClockWise ? endWidth : [startWidth, startWidth = endWidth][0];\n        element.setAttribute('d', getPathArc(this.midPoint, Math.round(startAngle), Math.round(endAngle), range.currentRadius, startWidth, endWidth));\n        setStyles(element, (range.color ? range.color : range.rangeColor), {\n            color: (range.color ? range.color : range.rangeColor),\n            width: 0\n        });\n    };\n    /**\n     * To destroy the widget\n     * @method destroy\n     * @return {void}\n     * @member of Circular-Gauge\n     */\n    CircularGauge.prototype.destroy = function () {\n        this.unWireEvents();\n        this.removeSvg();\n        _super.prototype.destroy.call(this);\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    CircularGauge.prototype.requiredModules = function () {\n        var modules = [];\n        var annotationEnable = false;\n        var axes = this.axes;\n        axes.map(function (axis) {\n            axis.annotations.map(function (annotation) {\n                annotationEnable = annotationEnable || annotation.content !== null;\n            });\n        });\n        if (annotationEnable) {\n            modules.push({\n                member: 'Annotations',\n                args: [this, Annotations]\n            });\n        }\n        if (this.tooltip.enable) {\n            modules.push({\n                member: 'Tooltip',\n                args: [this, GaugeTooltip]\n            });\n        }\n        return modules;\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @private\n     */\n    CircularGauge.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * @private\n     */\n    CircularGauge.prototype.onPropertyChanged = function (newProp, oldProp) {\n        // property method calculated\n        var renderer = false;\n        var refreshBounds = false;\n        var refreshWithoutAnimation = false;\n        var isPointerValueSame = (Object.keys(newProp).length === 1 && newProp instanceof Object &&\n            !isNullOrUndefined(this.activePointer));\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                case 'width':\n                case 'centerX':\n                case 'centerY':\n                case 'margin':\n                    this.createSvg();\n                    refreshBounds = true;\n                    break;\n                case 'title':\n                    refreshBounds = (newProp.title === '' || oldProp.title === '');\n                    renderer = !(newProp.title === '' || oldProp.title === '');\n                    break;\n                case 'titleStyle':\n                    if (newProp.titleStyle && newProp.titleStyle.size) {\n                        refreshBounds = true;\n                    }\n                    else {\n                        renderer = true;\n                    }\n                    break;\n                case 'border':\n                    renderer = true;\n                    break;\n                case 'background':\n                    renderer = true;\n                    break;\n                case 'axes':\n                    refreshWithoutAnimation = true;\n                    break;\n            }\n        }\n        if (!isPointerValueSame) {\n            if (!refreshBounds && renderer) {\n                this.removeSvg();\n                this.renderElements();\n            }\n            if (refreshBounds) {\n                this.removeSvg();\n                this.calculateBounds();\n                this.renderElements();\n            }\n            if (refreshWithoutAnimation && !renderer && !refreshBounds) {\n                this.removeSvg();\n                this.calculateBounds();\n                this.renderElements(false);\n            }\n        }\n    };\n    /**\n     * Get component name for circular gauge\n     * @private\n     */\n    CircularGauge.prototype.getModuleName = function () {\n        return 'circulargauge';\n    };\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ color: 'transparent', width: 0 }, Border)\n    ], CircularGauge.prototype, \"border\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"background\", void 0);\n    __decorate([\n        Property('')\n    ], CircularGauge.prototype, \"title\", void 0);\n    __decorate([\n        Complex({ size: '15px', color: null }, Font)\n    ], CircularGauge.prototype, \"titleStyle\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], CircularGauge.prototype, \"margin\", void 0);\n    __decorate([\n        Collection([{}], Axis)\n    ], CircularGauge.prototype, \"axes\", void 0);\n    __decorate([\n        Complex({}, TooltipSettings)\n    ], CircularGauge.prototype, \"tooltip\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"enablePointerDrag\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"centerX\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"centerY\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"moveToCenter\", void 0);\n    __decorate([\n        Property('Material')\n    ], CircularGauge.prototype, \"theme\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"useGroupingSeparator\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"description\", void 0);\n    __decorate([\n        Property(1)\n    ], CircularGauge.prototype, \"tabIndex\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"loaded\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"animationComplete\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"axisLabelRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"radiusCalculate\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"annotationRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"tooltipRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"dragMove\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"dragEnd\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseMove\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseDown\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseUp\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"resized\", void 0);\n    CircularGauge = __decorate([\n        NotifyPropertyChanges\n    ], CircularGauge);\n    return CircularGauge;\n}(Component));\nexport { CircularGauge };\n"],"names":["measureText","text","font","htmlObject","document","getElementById","createElement","id","body","appendChild","style","getFontStyle","innerHTML","setAttribute","Size","clientWidth","clientHeight","toPixel","value","maxDimension","undefined","indexOf","parseInt","size","fontStyle","fontWeight","fontFamily","opacity","color","setStyles","element","fill","border","setStyleAttribute","stroke","stroke-width","width","measureElementRect","bounds","getBoundingClientRect","removeElement","stringToNumber","containerSize","textElement","options","parent","styles","renderOptions","renderer","SvgRenderer","x","y","text-anchor","anchor","transform","dominant-baseline","baseLine","createText","appendPath","gauge","functionName","calculateSum","from","to","values","sum","length","linear","currentTime","startValue","endValue","duration","Math","cos","PI","getAngleFromValue","maximumValue","minimumValue","startAngle","endAngle","isClockWise","angle","isCompleteAngle","getDegree","round","degree","getValueFromAngle","totalAngle","floor","getAngleFromLocation","center","point","atan2","getLocationFromAngle","radius","radian","GaugeLocation","sin","getPathArc","start","end","startWidth","endWidth","startRadius","endRadius","arcRadius","getRangePath","getCirclePath","innerStart","innerEnd","clockWise","getRoundedPathArc","actualStart","actualEnd","oldStart","oldEnd","getRoundedPath","outerOldEnd","innerOldEnd","outerOldStart","innerOldStart","getCompleteArc","innerRadius","getCompletePath","getElement","getTemplateFunction","template","templateFn","querySelectorAll","charAt","templateComplier","querySelector","trim","e","remove","getPointer","targetId","tempString","replace","split","axisIndex","pointerIndex","getElementSize","elementSize","tooltipData","templateElement","templateLength","height","getMousePosition","pageX","pageY","elementRect","pageXOffset","ownerDocument","defaultView","pageYOffset","clientTop","documentElement","clientLeft","positionX","left","positionY","top","getLabelFormat","format","match","calculateShapes","location","shape","url","path","locX","locY","merge","rx","ry","cx","cy","d","href","getRangeColor","ranges","min","max","currentRange","filter","range","rangeColor","Theme","__extends","extendStatics","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","CustomizeOption","PathOption","_super","dashArray","_this","call","RectOption","rect","Rect","TextOption","VisibleLabels","__decorate","decorators","target","key","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","Border","apply","Property","ChildProperty","Font","Margin","TooltipSettings","Complex","axisLabelFont","Line","Label","Range","Tick","Cap","NeedleTail","Animation","Annotation","Pointer","Axis","visibleLabels","Collection","animationComplete","axisLabelRender","tooltipRender","gaugeMouseLeave","dragStart","dragMove","Annotations","elementId","renderAnnotation","axis","index","availableSize","parentElement","annotations","map","annotation","annotationIndex","content","createTemplate","childElementCount","axes","updateBlazorTemplate","childElement","zIndex","autoAngle","argsData","cancel","name","textStyle","trigger","observedArgs","window","length_1","slice","updateLocation","currentRadius","midPoint","description","getModuleName","destroy","GaugeTooltip","tooltipId","tooltip","borderStyle","addEventListener","renderTooltip","touchArg","samePointerEle","type","changedTouches","pointerEle","svgRect_1","svgObject","axisRect_1","rect_1","abs","currentPointer","currentAxis","angle_1","currentValue","visibleRange","direction","tooltipFormat","labelStyle","customLabelFormat","intl","getNumberFormat","useGrouping","useGroupingSeparator","tooltipEle","className","roundValue","roundingPlaces","parseFloat","toFixed","content_1","RegExp","tooltipArgs_1","pointer","event","appendInBodyTag","showAtMousePosition","tooltipRect","findPosition","themeStyle","tooltipFontColor","tooltipTextOpacity","svgTooltip","Tooltip","enable","data","enableAnimation","inverted","arrowInverted","areaBounds","tooltipFillColor","tooltipFillOpacity","appendTo","bodyToolElement","getElementsByClassName","isNullOrUndefined","removeTooltip","innerWidth","resetBlazorTemplate","addLeft","addTop","addHeight","addWidth","tooltipPosition","mouseUpHandler","clearTimeout","setTimeout","bind","isDestroyed","on","Browser","touchMoveEvent","touchEndEvent","removeEventListener","off","AxisRenderer","drawAxisOuterLine","background","setRangeColor","drawAxisLine","lineStyle","lineColor","drawAxisLabels","label","labelElement","createGroup","labelCollection","labelColor","position","nearSize","maxLabelSize","farSize","hiddenLabel","findAnchor","labelFontFamily","useRangeColor","drawMinorTickLines","minorTickElements","minorLineStyle","minorTicks","minorInterval","interval","isRangeColor","minorTickColor","majorValues","calculateTicks","drawMajorTickLines","majorTickElements","majorLineStyle","majorTicks","majorTickColor","push","axisLineWidth","offset","isOutside","drawAxisRange","roundedStartAngle","roundedEndAngle","rangeElement","rangeIndex","calculateRangeRadius","isAngleCross360","rangeGap","startAndEndRangeGap","roundedCornerRadius","process","ceil","rangeColors","theme","PointerRenderer","drawPointers","animate","pointerElement","pointers","pathElement","calculatePointerRadius","setPointerValue","doPointerAnimation","drawNeedlePointer","pointerRadius","rectDirection","mid","pointerWidth","needleColor","needleTail","needleTailColor","capcolor","cap","capColor","roundStartAngle","roundEndAngle","oldStartValue","oldEndValue","minRadius","toString","drawMarkerPointer","markerShape","markerWidth","markerHeight","imageUrl","pointerColor","drawRangeBarPointer","animation","animatePointer","performRangeBarAnimation","performNeedleAnimation","sweepAngle","pointAngle","progress","args","timeStamp","model","minAngle","roundRadius","arg","isBlazor","AxisLayoutPanel","axisRenderer","pointerRenderer","measureAxis","measureAxisSize","calculateAxesRadius","totalRadius","rangeMaximumRadius","xMarginDiff","margin","right","yMarginDiff","bottom","_loop_1","this_1","moveToCenter","centerX","centerY","startPoint","endPoint","xDiff","yDiff","startXDiff","endXDiff","startYDiff","endYDiff","newPoint","gaugeRect","calculateNumericInterval","calculateVisibleLabels","_i","_a","computeSize","farSizes","calculateAxisValues","calculateVisibleRange","minimum","maximum","calculateNiceInterval","maxValue","minValue","delta","circumference","desiredIntervalsCount","niceInterval","minInterval","pow","log","currentInterval","_loop_2","this_2","lastLabel","maxVal","showLastLabel","getMaxLabelWidth","lineSize","outerHeight","innerHeight","isMajorTickOutside","isMinorTickOutside","isLabelOutside","majorTickOffset","minorTickOffset","labelOffset","axes_1","renderAxes","axesElements","clip-path","annotationsModule","drawClipPath","CircularGauge","preRender","unWireEvents","initPrivateVariable","setCulture","createSvg","wireEvents","render","setTheme","calculateBounds","renderElements","toLowerCase","backgroundColor","titleFontColor","fontSize","getThemeStyle","EventHandler","touchStartEvent","gaugeOnMouseDown","mouseMove","mouseEnd","gaugeRightClick","isPointer","mouseLeave","isTouch","gaugeResize","add","setGaugeStyle","getMouseArgs","dragArgs","dragBlazorArgs","tooltipModule","enablePointerDrag","activePointer","dragPointInd","dragAxisInd","activeAxis","previousValue","pointerDrag","notify","buttons","pointerType","preventDefault","stopPropagation","gaugeAxisLayoutPanel","pointInd","axisInd","blazorArgs","pointerInd","clientX","clientY","previousSize","currentSize","resizeTo","classList","contains","touchAction","msTouchAction","msContentZooming","msUserSelect","webkitUserSelect","Internationalization","removeSvg","calculateSvgSize","j","childNodes","removeChild","firstChild","hasChildNodes","parentNode","collection","containerWidth","offsetWidth","containerHeight","offsetHeight","borderWidth","join","isNaN","titleHeight","title","titleStyle","renderBorder","renderTitle","tabIndex","drawRectangle","isProtectedOnChange","setAnnotationValue","isElementExist","setRangeValue","axisRange","requiredModules","modules","annotationEnable","member","getPersistData","addOnPersist","onPropertyChanged","newProp","oldProp","refreshBounds","refreshWithoutAnimation","isPointerValueSame","keys","Event","NotifyPropertyChanges","Component"],"mappings":"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"}