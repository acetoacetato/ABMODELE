{"version":3,"file":"ej2-pdf-export.min.js","sources":["../../src/implementation/collections/utils.js","../../src/implementation/collections/dictionary.js","../../src/implementation/primitives/pdf-name.js","../../src/implementation/input-output/pdf-operators.js","../../src/implementation/input-output/pdf-dictionary-properties.js","../../src/implementation/primitives/pdf-dictionary.js","../../src/implementation/primitives/pdf-number.js","../../src/implementation/primitives/pdf-array.js","../../src/implementation/primitives/pdf-stream.js","../../src/implementation/primitives/pdf-string.js","../../src/implementation/primitives/pdf-reference.js","../../src/implementation/actions/action.js","../../src/implementation/actions/uri-action.js","../../src/implementation/graphics/enum.js","../../src/implementation/graphics/pdf-color.js","../../src/implementation/drawing/pdf-drawing.js","../../src/implementation/graphics/brushes/pdf-brush.js","../../src/implementation/graphics/brushes/pdf-solid-brush.js","../../src/implementation/graphics/fonts/enum.js","../../src/implementation/graphics/fonts/pdf-string-format.js","../../src/implementation/graphics/fonts/string-tokenizer.js","../../src/implementation/graphics/fonts/string-layouter.js","../../src/implementation/graphics/fonts/pdf-font.js","../../src/implementation/input-output/pdf-writer.js","../../src/implementation/input-output/enum.js","../../src/implementation/input-output/pdf-main-object-collection.js","../../src/implementation/document/pdf-document-base.js","../../src/implementation/input-output/cross-table.js","../../src/implementation/document/pdf-catalog.js","../../src/implementation/input-output/pdf-cross-table.js","../../src/implementation/pages/pdf-page-size.js","../../src/implementation/pages/enum.js","../../src/implementation/graphics/pdf-margins.js","../../src/implementation/pages/pdf-page-settings.js","../../src/implementation/input-output/pdf-stream-writer.js","../../src/implementation/graphics/pdf-pen.js","../../src/implementation/graphics/pdf-transformation-matrix.js","../../src/implementation/graphics/constants.js","../../src/implementation/collections/object-object-pair/dictionary.js","../../src/implementation/graphics/pdf-transparency.js","../../src/implementation/document/automatic-fields/automatic-field-info-collection.js","../../src/implementation/graphics/figures/base/graphics-element.js","../../src/implementation/document/automatic-fields/automatic-field.js","../../src/implementation/document/automatic-fields/automatic-field-info.js","../../src/implementation/graphics/images/byte-array.js","../../src/implementation/primitives/pdf-boolean.js","../../src/implementation/graphics/images/image-decoder.js","../../src/implementation/graphics/unit-convertor.js","../../src/implementation/graphics/images/pdf-image.js","../../src/implementation/graphics/images/pdf-bitmap.js","../../src/implementation/graphics/fonts/ttf-table-info.js","../../src/implementation/graphics/fonts/ttf-name-table.js","../../src/implementation/graphics/fonts/ttf-name-record.js","../../src/implementation/graphics/fonts/ttf-head-table.js","../../src/implementation/graphics/fonts/ttf-metrics.js","../../src/implementation/graphics/fonts/ttf-horizontal-header-table.js","../../src/implementation/graphics/fonts/ttf-OS2-Table.js","../../src/implementation/graphics/fonts/ttf-post-table.js","../../src/implementation/graphics/fonts/ttf-long-hor-metric.js","../../src/implementation/graphics/fonts/ttf-cmap-sub-table.js","../../src/implementation/graphics/fonts/ttf-cmap-table.js","../../src/implementation/graphics/fonts/ttf-glyph-info.js","../../src/implementation/graphics/fonts/ttf-loca-table.js","../../src/implementation/graphics/fonts/ttf-apple-cmap-sub-table.js","../../src/implementation/graphics/fonts/ttf-microsoft-cmap-sub-table.js","../../src/implementation/graphics/fonts/ttf-trimmed-cmap-sub-table.js","../../src/implementation/graphics/fonts/ttf-glyph-header.js","../../src/implementation/input-output/big-endian-writer.js","../../src/implementation/graphics/fonts/ttf-reader.js","../../src/implementation/graphics/fonts/pdf-font-metrics.js","../../src/implementation/graphics/fonts/unicode-true-type-font.js","../../src/implementation/graphics/fonts/rtl/rtl-text-shape.js","../../src/implementation/graphics/fonts/rtl/rtl-bidirectional.js","../../src/implementation/graphics/fonts/rtl-renderer.js","../../src/implementation/graphics/pdf-graphics.js","../../src/implementation/pages/pdf-page-layer.js","../../src/implementation/general/pdf-collection.js","../../src/implementation/pages/pdf-page-layer-collection.js","../../src/implementation/graphics/figures/pdf-template.js","../../src/implementation/graphics/pdf-resources.js","../../src/implementation/pages/pdf-page-base.js","../../src/implementation/annotations/annotation-collection.js","../../src/implementation/pages/pdf-page.js","../../src/implementation/pages/page-added-event-arguments.js","../../src/implementation/pages/pdf-section-page-collection.js","../../src/implementation/document/pdf-document-template.js","../../src/implementation/pages/pdf-section-templates.js","../../src/implementation/pages/pdf-section.js","../../src/implementation/pages/pdf-section-collection.js","../../src/implementation/pages/pdf-document-page-collection.js","../../src/implementation/general/pdf-cache-collection.js","../../src/implementation/document/pdf-document.js","../../src/implementation/graphics/fonts/pdf-standard-font-metrics-factory.js","../../src/implementation/graphics/fonts/pdf-standard-font.js","../../src/implementation/annotations/annotation.js","../../src/implementation/annotations/link-annotation.js","../../src/implementation/annotations/action-link-annotation.js","../../src/implementation/annotations/document-link-annotation.js","../../src/implementation/graphics/figures/base/element-layouter.js","../../src/implementation/graphics/figures/layout-element.js","../../src/implementation/graphics/figures/enum.js","../../src/implementation/graphics/figures/base/text-layouter.js","../../src/implementation/graphics/figures/text-element.js","../../src/implementation/annotations/uri-annotation.js","../../src/implementation/annotations/pdf-text-web-link.js","../../src/implementation/document/automatic-fields/pdf-numbers-convertor.js","../../src/implementation/document/automatic-fields/pdf-template-value-pair.js","../../src/implementation/document/automatic-fields/multiple-value-field.js","../../src/implementation/document/automatic-fields/pdf-page-number-field.js","../../src/implementation/document/automatic-fields/composite-field.js","../../src/implementation/document/automatic-fields/single-value-field.js","../../src/implementation/document/automatic-fields/page-count-field.js","../../src/implementation/general/enum.js","../../src/implementation/general/pdf-destination.js","../../src/implementation/graphics/fonts/pdf-true-type-font.js","../../src/implementation/pages/pdf-page-template-element.js","../../src/implementation/structured-elements/grid/styles/pdf-borders.js","../../src/implementation/structured-elements/tables/light-tables/enum.js","../../src/implementation/structured-elements/grid/styles/style.js","../../src/implementation/structured-elements/grid/pdf-grid-cell.js","../../src/implementation/structured-elements/grid/pdf-grid-column.js","../../src/implementation/structured-elements/grid/pdf-grid-row.js","../../src/implementation/structured-elements/grid/pdf-grid.js","../../src/implementation/structured-elements/grid/layout/grid-layouter.js"],"sourcesContent":["/**\n * @private\n * @hidden\n */\nexport function defaultToString(item) {\n    // if (item === null) {\n    //     return 'COLLECTION_NULL';\n    // } else if (typeof item === 'undefined') {\n    //     return 'COLLECTION_UNDEFINED';\n    // } else if (Object.prototype.toString.call(item) === '[object String]') {\n    if (Object.prototype.toString.call(item) === '[object String]') {\n        return '$s' + item;\n    }\n    else {\n        return '$o' + item.toString();\n    }\n}\n","/**\n * Dictionary.ts class for EJ2-PDF\n * @private\n * @hidden\n */\nimport { defaultToString } from './utils';\n/**\n * @private\n * @hidden\n */\nvar Dictionary = /** @class */ (function () {\n    /**\n     * @private\n     * @hidden\n     */\n    function Dictionary(toStringFunction) {\n        this.table = {};\n        this.nElements = 0;\n        this.toStr = toStringFunction || defaultToString;\n    }\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.getValue = function (key) {\n        var pair = this.table['$' + this.toStr(key)];\n        if (typeof pair === 'undefined') {\n            return undefined;\n        }\n        return pair.value;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.setValue = function (key, value) {\n        // if (typeof key === 'undefined' || typeof value === 'undefined') {\n        //     return undefined;\n        // }\n        var ret;\n        var k = '$' + this.toStr(key);\n        var previousElement = this.table[k];\n        // if (typeof previousElement === 'undefined') {\n        this.nElements++;\n        ret = undefined;\n        // }\n        this.table[k] = {\n            key: key,\n            value: value\n        };\n        return ret;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.remove = function (key) {\n        var k = '$' + this.toStr(key);\n        var previousElement = this.table[k];\n        // if (typeof previousElement !== 'undefined') {\n        delete this.table[k];\n        this.nElements--;\n        return previousElement.value;\n        // }\n        // return undefined;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.keys = function () {\n        var keysArray = [];\n        var namesOfKeys = Object.keys(this.table);\n        for (var index1 = 0; index1 < namesOfKeys.length; index1++) {\n            // if (Object.prototype.hasOwnProperty.call(this.table, namesOfKeys[index1])) {\n            var pair1 = this.table[namesOfKeys[index1]];\n            keysArray.push(pair1.key);\n            // }\n        }\n        return keysArray;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.values = function () {\n        var valuesArray = [];\n        var namesOfValues = Object.keys(this.table);\n        for (var index2 = 0; index2 < namesOfValues.length; index2++) {\n            // if (Object.prototype.hasOwnProperty.call(this.table, namesOfValues[index2])) {\n            var pair2 = this.table[namesOfValues[index2]];\n            valuesArray.push(pair2.value);\n            // }\n        }\n        return valuesArray;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.containsKey = function (key) {\n        var retutnValue = true;\n        if (typeof this.getValue(key) === 'undefined') {\n            retutnValue = true;\n        }\n        else {\n            retutnValue = false;\n        }\n        return !retutnValue;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.clear = function () {\n        this.table = {};\n        this.nElements = 0;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.size = function () {\n        return this.nElements;\n    };\n    return Dictionary;\n}()); // End of dictionary\nexport { Dictionary };\n","/**\n * `PdfName` class is used to perform name (element names) related primitive operations.\n * @private\n */\nvar PdfName = /** @class */ (function () {\n    function PdfName(value) {\n        /**\n         * `Start symbol` of the name object.\n         * @default /\n         * @private\n         */\n        this.stringStartMark = '/';\n        /**\n         * `Value` of the element.\n         * @private\n         */\n        this.internalValue = '';\n        /**\n         * Indicates if the object is currently in `saving state or not`.\n         * @default false\n         * @private\n         */\n        this.isSaving6 = false;\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position6 = -1;\n        this.internalValue = this.normalizeValue(value);\n    }\n    Object.defineProperty(PdfName.prototype, \"status\", {\n        //property\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status6;\n        },\n        set: function (value) {\n            this.status6 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfName.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving6;\n        },\n        set: function (value) {\n            this.isSaving6 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfName.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index6;\n        },\n        set: function (value) {\n            this.index6 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfName.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position6;\n        },\n        set: function (value) {\n            this.position6 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfName.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            return null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfName.prototype, \"value\", {\n        /**\n         * Gets or sets the `value` of the object.\n         * @private\n         */\n        get: function () {\n            return this.internalValue;\n        },\n        set: function (value) {\n            // if (value !== this.value) {\n            var val = value;\n            if (value !== null && value.length > 0) {\n                // val = (value.substring(0, 1) === this.stringStartMark) ? value.substring(1) : value;\n                val = value;\n                this.internalValue = this.normalizeValue(val);\n            }\n            else {\n                this.internalValue = val;\n            }\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //public methods\n    /**\n     * `Saves` the name using the specified writer.\n     * @private\n     */\n    PdfName.prototype.save = function (writer) {\n        // if (writer === null) {\n        //     throw new Error('ArgumentNullException : writer');\n        // }\n        writer.write(this.toString());\n    };\n    /**\n     * Gets `string` representation of the primitive.\n     * @private\n     */\n    PdfName.prototype.toString = function () {\n        return (this.stringStartMark + this.escapeString(this.value));\n    };\n    /**\n     * Creates a `copy of PdfName`.\n     * @private\n     */\n    PdfName.prototype.clone = function (crossTable) {\n        var newName = new PdfName();\n        newName.value = this.internalValue;\n        return newName;\n    };\n    /**\n     * Replace some characters with its `escape sequences`.\n     * @private\n     */\n    PdfName.prototype.escapeString = function (stringValue) {\n        // if (str === null) {\n        //     throw new Error('ArgumentNullException : str');\n        // }\n        // if (str === '') {\n        //     return str;\n        // }\n        var result = '';\n        var len = 0;\n        for (var i = 0, len_1 = stringValue.length; i < len_1; i++) {\n            var ch = stringValue[i];\n            var index = PdfName.delimiters.indexOf(ch);\n            // switch (ch) {\n            //     case '\\r' :\n            //         result = result + '\\\\r';\n            //         break;\n            //     case '\\n' :\n            //         result = result + '\\n';\n            //         break;\n            //     case '(' :\n            //     case ')' :\n            //     case '\\\\' :\n            //         //result.Append( '\\\\' ).Append( ch );\n            //         result = result + ch;\n            //         break;\n            //     default :\n            //         result = result + ch;\n            //         break;\n            // }\n            result = result + ch;\n        }\n        return result;\n    };\n    //methiods\n    /**\n     * Replace a symbol with its code with the precedence of the `sharp sign`.\n     * @private\n     */\n    PdfName.prototype.normalizeValue = function (value, c) {\n        // if (typeof c === undefined) {\n        //     let str : string = value;\n        //     for (let i : number = 0; i < PdfName.replacements.length; i++) {\n        //         str = this.normalizeValue(str, c);\n        //     }\n        //     return str;\n        // } else {\n        var strFormat = '#{0:X}';\n        //return value.replace(c.toString(),String.format(strFormat,c));\n        return value;\n        // }\n    };\n    /**\n     * PDF `special characters`.\n     * @private\n     */\n    PdfName.delimiters = '()<>[]{}/%}';\n    /**\n     * The symbols that are not allowed in PDF names and `should be replaced`.\n     * @private\n     */\n    PdfName.replacements = [' ', '\\t', '\\n', '\\r'];\n    return PdfName;\n}());\nexport { PdfName };\n","/**\n * PdfOperators.ts class for EJ2-PDF\n * Class of string PDF common operators.\n * @private\n */\nvar Operators = /** @class */ (function () {\n    /**\n     * Create an instance of `PdfOperator` class.\n     * @private\n     */\n    function Operators() {\n        /**\n         * Specifies the value of `test`.\n         * @private\n         */\n        this.forTest = 'test';\n        this.forTest = Operators.obj;\n    }\n    /**\n     * Specifies the value of `obj`.\n     * @private\n     */\n    Operators.obj = 'obj';\n    /**\n     * Specifies the value of `endObj`.\n     * @private\n     */\n    Operators.endObj = 'endobj';\n    /**\n     * Specifies the value of `R`.\n     * @private\n     */\n    Operators.r = 'R';\n    /**\n     * Specifies the value of ` `.\n     * @private\n     */\n    Operators.whiteSpace = ' ';\n    /**\n     * Specifies the value of `/`.\n     * @private\n     */\n    Operators.slash = '/';\n    /**\n     * Specifies the value of `\\r\\n`.\n     * @private\n     */\n    Operators.newLine = '\\r\\n';\n    /**\n     * Specifies the value of `stream`.\n     * @private\n     */\n    Operators.stream = 'stream';\n    /**\n     * Specifies the value of `endStream`.\n     * @private\n     */\n    Operators.endStream = 'endstream';\n    /**\n     * Specifies the value of `xref`.\n     * @private\n     */\n    Operators.xref = 'xref';\n    /**\n     * Specifies the value of `f`.\n     * @private\n     */\n    Operators.f = 'f';\n    /**\n     * Specifies the value of `n`.\n     * @private\n     */\n    Operators.n = 'n';\n    /**\n     * Specifies the value of `trailer`.\n     * @private\n     */\n    Operators.trailer = 'trailer';\n    /**\n     * Specifies the value of `startxref`.\n     * @private\n     */\n    Operators.startxref = 'startxref';\n    /**\n     * Specifies the value of `eof`.\n     * @private\n     */\n    Operators.eof = '%%EOF';\n    /**\n     * Specifies the value of `header`.\n     * @private\n     */\n    Operators.header = '%PDF-1.5';\n    /**\n     * Specifies the value of `beginText`.\n     * @private\n     */\n    Operators.beginText = 'BT';\n    /**\n     * Specifies the value of `endText`.\n     * @private\n     */\n    Operators.endText = 'ET';\n    /**\n     * Specifies the value of `m`.\n     * @private\n     */\n    Operators.beginPath = 'm';\n    /**\n     * Specifies the value of `l`.\n     * @private\n     */\n    Operators.appendLineSegment = 'l';\n    /**\n     * Specifies the value of `S`.\n     * @private\n     */\n    Operators.stroke = 'S';\n    /**\n     * Specifies the value of `f`.\n     * @private\n     */\n    Operators.fill = 'f';\n    /**\n     * Specifies the value of `f*`.\n     * @private\n     */\n    Operators.fillEvenOdd = 'f*';\n    /**\n     * Specifies the value of `B`.\n     * @private\n     */\n    Operators.fillStroke = 'B';\n    /**\n     * Specifies the value of `B*`.\n     * @private\n     */\n    Operators.fillStrokeEvenOdd = 'B*';\n    /**\n     * Specifies the value of `c`.\n     * @private\n     */\n    Operators.appendbeziercurve = 'c';\n    /**\n     * Specifies the value of `re`.\n     * @private\n     */\n    Operators.appendRectangle = 're';\n    /**\n     * Specifies the value of `q`.\n     * @private\n     */\n    Operators.saveState = 'q';\n    /**\n     * Specifies the value of `Q`.\n     * @private\n     */\n    Operators.restoreState = 'Q';\n    /**\n     * Specifies the value of `Do`.\n     * @private\n     */\n    Operators.paintXObject = 'Do';\n    /**\n     * Specifies the value of `cm`.\n     * @private\n     */\n    Operators.modifyCtm = 'cm';\n    /**\n     * Specifies the value of `Tm`.\n     * @private\n     */\n    Operators.modifyTM = 'Tm';\n    /**\n     * Specifies the value of `w`.\n     * @private\n     */\n    Operators.setLineWidth = 'w';\n    /**\n     * Specifies the value of `J`.\n     * @private\n     */\n    Operators.setLineCapStyle = 'J';\n    /**\n     * Specifies the value of `j`.\n     * @private\n     */\n    Operators.setLineJoinStyle = 'j';\n    /**\n     * Specifies the value of `d`.\n     * @private\n     */\n    Operators.setDashPattern = 'd';\n    /**\n     * Specifies the value of `i`.\n     * @private\n     */\n    Operators.setFlatnessTolerance = 'i';\n    /**\n     * Specifies the value of `h`.\n     * @private\n     */\n    Operators.closePath = 'h';\n    /**\n     * Specifies the value of `s`.\n     * @private\n     */\n    Operators.closeStrokePath = 's';\n    /**\n     * Specifies the value of `b`.\n     * @private\n     */\n    Operators.closeFillStrokePath = 'b';\n    /**\n     * Specifies the value of `setCharacterSpace`.\n     * @private\n     */\n    Operators.setCharacterSpace = 'Tc';\n    /**\n     * Specifies the value of `setWordSpace`.\n     * @private\n     */\n    Operators.setWordSpace = 'Tw';\n    /**\n     * Specifies the value of `setHorizontalScaling`.\n     * @private\n     */\n    Operators.setHorizontalScaling = 'Tz';\n    /**\n     * Specifies the value of `setTextLeading`.\n     * @private\n     */\n    Operators.setTextLeading = 'TL';\n    /**\n     * Specifies the value of `setFont`.\n     * @private\n     */\n    Operators.setFont = 'Tf';\n    /**\n     * Specifies the value of `setRenderingMode`.\n     * @private\n     */\n    Operators.setRenderingMode = 'Tr';\n    /**\n     * Specifies the value of `setTextRise`.\n     * @private\n     */\n    Operators.setTextRise = 'Ts';\n    /**\n     * Specifies the value of `setTextScaling`.\n     * @private\n     */\n    Operators.setTextScaling = 'Tz';\n    /**\n     * Specifies the value of `setCoords`.\n     * @private\n     */\n    Operators.setCoords = 'Td';\n    /**\n     * Specifies the value of `goToNextLine`.\n     * @private\n     */\n    Operators.goToNextLine = 'T*';\n    /**\n     * Specifies the value of `setText`.\n     * @private\n     */\n    Operators.setText = 'Tj';\n    /**\n     * Specifies the value of `setTextWithFormatting`.\n     * @private\n     */\n    Operators.setTextWithFormatting = 'TJ';\n    /**\n     * Specifies the value of `setTextOnNewLine`.\n     * @private\n     */\n    Operators.setTextOnNewLine = '\\'';\n    /**\n     * Specifies the value of `selectcolorspaceforstroking`.\n     * @private\n     */\n    Operators.selectcolorspaceforstroking = 'CS';\n    /**\n     * Specifies the value of `selectcolorspacefornonstroking`.\n     * @private\n     */\n    Operators.selectcolorspacefornonstroking = 'cs';\n    /**\n     * Specifies the value of `setrbgcolorforstroking`.\n     * @private\n     */\n    Operators.setrbgcolorforstroking = 'RG';\n    /**\n     * Specifies the value of `setrbgcolorfornonstroking`.\n     * @private\n     */\n    Operators.setrbgcolorfornonstroking = 'rg';\n    /**\n     * Specifies the value of `K`.\n     * @private\n     */\n    Operators.setcmykcolorforstroking = 'K';\n    /**\n     * Specifies the value of `k`.\n     * @private\n     */\n    Operators.setcmykcolorfornonstroking = 'k';\n    /**\n     * Specifies the value of `G`.\n     * @private\n     */\n    Operators.setgraycolorforstroking = 'G';\n    /**\n     * Specifies the value of `g`.\n     * @private\n     */\n    Operators.setgraycolorfornonstroking = 'g';\n    /**\n     * Specifies the value of `W`.\n     * @private\n     */\n    Operators.clipPath = 'W';\n    /**\n     * Specifies the value of `clipPathEvenOdd`.\n     * @private\n     */\n    Operators.clipPathEvenOdd = 'W*';\n    /**\n     * Specifies the value of `n`.\n     * @private\n     */\n    Operators.endPath = 'n';\n    /**\n     * Specifies the value of `setGraphicsState`.\n     * @private\n     */\n    Operators.setGraphicsState = 'gs';\n    /**\n     * Specifies the value of `%`.\n     * @private\n     */\n    Operators.comment = '%';\n    /**\n     * Specifies the value of `*`.\n     * @private\n     */\n    Operators.evenOdd = '*';\n    /**\n     * Specifies the value of `M`.\n     * @private\n     */\n    Operators.setMiterLimit = 'M';\n    return Operators;\n}());\nexport { Operators };\n","/**\n * dictionaryProperties.ts class for EJ2-PDF\n * PDF dictionary properties.\n * @private\n */\nvar DictionaryProperties = /** @class */ (function () {\n    /**\n     * Initialize an instance for `PdfDictionaryProperties` class.\n     * @private\n     */\n    function DictionaryProperties() {\n        /**\n         * Specifies the value of `Pages`.\n         * @private\n         */\n        this.pages = 'Pages';\n        /**\n         * Specifies the value of `Kids`.\n         * @private\n         */\n        this.kids = 'Kids';\n        /**\n         * Specifies the value of `Count`.\n         * @private\n         */\n        this.count = 'Count';\n        /**\n         * Specifies the value of `Resources`.\n         * @private\n         */\n        this.resources = 'Resources';\n        /**\n         * Specifies the value of `Type`.\n         * @private\n         */\n        this.type = 'Type';\n        /**\n         * Specifies the value of `Size`.\n         * @private\n         */\n        this.size = 'Size';\n        /**\n         * Specifies the value of `MediaBox`.\n         * @private\n         */\n        this.mediaBox = 'MediaBox';\n        /**\n         * Specifies the value of `Parent`.\n         * @private\n         */\n        this.parent = 'Parent';\n        /**\n         * Specifies the value of `Root`.\n         * @private\n         */\n        this.root = 'Root';\n        /**\n         * Specifies the value of `DecodeParms`.\n         * @private\n         */\n        this.decodeParms = 'DecodeParms';\n        /**\n         * Specifies the value of `Filter`.\n         * @private\n         */\n        this.filter = 'Filter';\n        /**\n         * Specifies the value of `Font`.\n         * @private\n         */\n        this.font = 'Font';\n        /**\n         * Specifies the value of `Type1`.\n         * @private\n         */\n        this.type1 = 'Type1';\n        /**\n         * Specifies the value of `BaseFont`.\n         * @private\n         */\n        this.baseFont = 'BaseFont';\n        /**\n         * Specifies the value of `Encoding`.\n         * @private\n         */\n        this.encoding = 'Encoding';\n        /**\n         * Specifies the value of `Subtype`.\n         * @private\n         */\n        this.subtype = 'Subtype';\n        /**\n         * Specifies the value of `Contents`.\n         * @private\n         */\n        this.contents = 'Contents';\n        /**\n         * Specifies the value of `ProcSet`.\n         * @private\n         */\n        this.procset = 'ProcSet';\n        /**\n         * Specifies the value of `ColorSpace`.\n         * @private\n         */\n        this.colorSpace = 'ColorSpace';\n        /**\n         * Specifies the value of `ExtGState`.\n         * @private\n         */\n        this.extGState = 'ExtGState';\n        /**\n         * Specifies the value of `Pattern`.\n         * @private\n         */\n        this.pattern = 'Pattern';\n        /**\n         * Specifies the value of `XObject`.\n         * @private\n         */\n        this.xObject = 'XObject';\n        /**\n         * Specifies the value of `Length`.\n         * @private\n         */\n        this.length = 'Length';\n        /**\n         * Specifies the value of `Width`.\n         * @private\n         */\n        this.width = 'Width';\n        /**\n         * Specifies the value of `Height`.\n         * @private\n         */\n        this.height = 'Height';\n        /**\n         * Specifies the value of `BitsPerComponent`.\n         * @private\n         */\n        this.bitsPerComponent = 'BitsPerComponent';\n        /**\n         * Specifies the value of `Image`.\n         * @private\n         */\n        this.image = 'Image';\n        /**\n         * Specifies the value of `dctdecode`.\n         * @private\n         */\n        this.dctdecode = 'DCTDecode';\n        /**\n         * Specifies the value of `Columns`.\n         * @private\n         */\n        this.columns = 'Columns';\n        /**\n         * Specifies the value of `BlackIs1`.\n         * @private\n         */\n        this.blackIs1 = 'BlackIs1';\n        /**\n         * Specifies the value of `K`.\n         * @private\n         */\n        this.k = 'K';\n        /**\n         * Specifies the value of `S`.\n         * @private\n         */\n        this.s = 'S';\n        /**\n         * Specifies the value of `Predictor`.\n         * @private\n         */\n        this.predictor = 'Predictor';\n        /**\n         * Specifies the value of `DeviceRGB`.\n         * @private\n         */\n        this.deviceRgb = 'DeviceRGB';\n        /**\n         * Specifies the value of `Next`.\n         * @private\n         */\n        this.next = 'Next';\n        /**\n         * Specifies the value of `Action`.\n         * @private\n         */\n        this.action = 'Action';\n        /**\n         * Specifies the value of `Link`.\n         * @private\n         */\n        this.link = 'Link';\n        /**\n         *\n         * Specifies the value of `A`.\n         * @private\n         */\n        this.a = 'A';\n        /**\n         * Specifies the value of `Annot`.\n         * @private\n         */\n        this.annot = 'Annot';\n        /**\n         * Specifies the value of `P`.\n         * @private\n         */\n        this.p = 'P';\n        /**\n         * Specifies the value of `C`.\n         * @private\n         */\n        this.c = 'C';\n        /**\n         * Specifies the value of `Rect`.\n         * @private\n         */\n        this.rect = 'Rect';\n        /**\n         * Specifies the value of `URI`.\n         * @private\n         */\n        this.uri = 'URI';\n        /**\n         * Specifies the value of `Annots`.\n         * @private\n         */\n        this.annots = 'Annots';\n        /**\n         * Specifies the value of `ca`.\n         * @private\n         */\n        this.ca = 'ca';\n        /**\n         * Specifies the value of `CA`.\n         * @private\n         */\n        this.CA = 'CA';\n        /**\n         * Specifies the value of `XYZ`.\n         * @private\n         */\n        this.xyz = 'XYZ';\n        /**\n         * Specifies the value of `Fit`.\n         * @private\n         */\n        this.fit = 'Fit';\n        /**\n         * Specifies the value of `Dest`.\n         * @private\n         */\n        this.dest = 'Dest';\n        /**\n         * Specifies the value of `BM`.\n         * @private\n         */\n        this.BM = 'BM';\n        /**\n         * Specifies the value of `flatedecode`.\n         * @private\n         */\n        this.flatedecode = 'FlateDecode';\n        /**\n         * Specifies the value of `Rotate`.\n         * @private\n         */\n        this.rotate = 'Rotate';\n        /**\n         * Specifies the value of 'bBox'.\n         * @private\n         */\n        this.bBox = 'BBox';\n        /**\n         * Specifies the value of 'form'.\n         * @private\n         */\n        this.form = 'Form';\n        /**\n         * Specifies the value of 'w'.\n         * @private\n         */\n        this.w = 'W';\n        /**\n         * Specifies the value of 'cIDFontType2'.\n         * @private\n         */\n        this.cIDFontType2 = 'CIDFontType2';\n        /**\n         * Specifies the value of 'cIDToGIDMap'.\n         * @private\n         */\n        this.cIDToGIDMap = 'CIDToGIDMap';\n        /**\n         * Specifies the value of 'identity'.\n         * @private\n         */\n        this.identity = 'Identity';\n        /**\n         * Specifies the value of 'dw'.\n         * @private\n         */\n        this.dw = 'DW';\n        /**\n         * Specifies the value of 'fontDescriptor'.\n         * @private\n         */\n        this.fontDescriptor = 'FontDescriptor';\n        /**\n         * Specifies the value of 'cIDSystemInfo'.\n         * @private\n         */\n        this.cIDSystemInfo = 'CIDSystemInfo';\n        /**\n         * Specifies the value of 'fontName'.\n         * @private\n         */\n        this.fontName = 'FontName';\n        /**\n         * Specifies the value of 'flags'.\n         * @private\n         */\n        this.flags = 'Flags';\n        /**\n         * Specifies the value of 'fontBBox'.\n         * @private\n         */\n        this.fontBBox = 'FontBBox';\n        /**\n         * Specifies the value of 'missingWidth'.\n         * @private\n         */\n        this.missingWidth = 'MissingWidth';\n        /**\n         * Specifies the value of 'stemV'.\n         * @private\n         */\n        this.stemV = 'StemV';\n        /**\n         * Specifies the value of 'italicAngle'.\n         * @private\n         */\n        this.italicAngle = 'ItalicAngle';\n        /**\n         * Specifies the value of 'capHeight'.\n         * @private\n         */\n        this.capHeight = 'CapHeight';\n        /**\n         * Specifies the value of 'ascent'.\n         * @private\n         */\n        this.ascent = 'Ascent';\n        /**\n         * Specifies the value of 'descent'.\n         * @private\n         */\n        this.descent = 'Descent';\n        /**\n         * Specifies the value of 'leading'.\n         * @private\n         */\n        this.leading = 'Leading';\n        /**\n         * Specifies the value of 'avgWidth'.\n         * @private\n         */\n        this.avgWidth = 'AvgWidth';\n        /**\n         * Specifies the value of 'fontFile2'.\n         * @private\n         */\n        this.fontFile2 = 'FontFile2';\n        /**\n         * Specifies the value of 'maxWidth'.\n         * @private\n         */\n        this.maxWidth = 'MaxWidth';\n        /**\n         * Specifies the value of 'xHeight'.\n         * @private\n         */\n        this.xHeight = 'XHeight';\n        /**\n         * Specifies the value of 'stemH'.\n         * @private\n         */\n        this.stemH = 'StemH';\n        /**\n         * Specifies the value of 'registry'.\n         * @private\n         */\n        this.registry = 'Registry';\n        /**\n         * Specifies the value of 'ordering'.\n         * @private\n         */\n        this.ordering = 'Ordering';\n        /**\n         * Specifies the value of 'supplement'.\n         * @private\n         */\n        this.supplement = 'Supplement';\n        /**\n         * Specifies the value of 'type0'.\n         * @private\n         */\n        this.type0 = 'Type0';\n        /**\n         * Specifies the value of 'identityH'.\n         * @private\n         */\n        this.identityH = 'Identity-H';\n        /**\n         * Specifies the value of 'toUnicode'.\n         * @private\n         */\n        this.toUnicode = 'ToUnicode';\n        /**\n         * Specifies the value of 'descendantFonts'.\n         * @private\n         */\n        this.descendantFonts = 'DescendantFonts';\n        //\n    }\n    return DictionaryProperties;\n}());\nexport { DictionaryProperties };\n","import { Dictionary } from './../collections/dictionary';\nimport { PdfName } from './pdf-name';\nimport { Operators } from './../input-output/pdf-operators';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * `PdfDictionary` class is used to perform primitive operations.\n * @private\n */\nvar PdfDictionary = /** @class */ (function () {\n    function PdfDictionary(dictionary) {\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position7 = -1;\n        /**\n         * The `IPdfSavable` with the specified key.\n         * @private\n         */\n        this.primitiveItems = new Dictionary();\n        /**\n         * `Start marker` for dictionary.\n         * @private\n         */\n        this.prefix = '<<';\n        /**\n         * `End marker` for dictionary.\n         * @private\n         */\n        this.suffix = '>>';\n        /**\n         * @hidden\n         * @private\n         */\n        this.resources = [];\n        /**\n         * Internal variable to hold `cloned object`.\n         * @default null\n         * @private\n         */\n        this.object = null;\n        /**\n         * Flag for PDF file formar 1.5 is dictionary `archiving` needed.\n         * @default true\n         * @private\n         */\n        this.archive = true;\n        /**\n         * Represents the Font dictionary.\n         * @hidden\n         * @private\n         */\n        this.isFont = false;\n        if (typeof dictionary === 'undefined') {\n            this.primitiveItems = new Dictionary();\n            this.encrypt = true;\n            this.dictionaryProperties = new DictionaryProperties();\n        }\n        else {\n            this.primitiveItems = new Dictionary();\n            var keys = dictionary.items.keys();\n            var values = dictionary.items.values();\n            for (var index = 0; index < dictionary.items.size(); index++) {\n                this.primitiveItems.setValue(keys[index], values[index]);\n            }\n            this.status = dictionary.status;\n            this.freezeChanges(this);\n            this.encrypt = true;\n            this.dictionaryProperties = new DictionaryProperties();\n        }\n    }\n    Object.defineProperty(PdfDictionary.prototype, \"items\", {\n        //Properties\n        /**\n         * Gets or sets the `IPdfSavable` with the specified key.\n         * @private\n         */\n        get: function () {\n            return this.primitiveItems;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"status\", {\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status7;\n        },\n        set: function (value) {\n            this.status7 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving7;\n        },\n        set: function (value) {\n            this.isSaving7 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index7;\n        },\n        set: function (value) {\n            this.index7 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            return this.object;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position7;\n        },\n        set: function (value) {\n            this.position7 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"Count\", {\n        /**\n         * Gets the `count`.\n         * @private\n         */\n        get: function () {\n            return this.primitiveItems.size();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"Dictionary\", {\n        /**\n         * Collection of `items` in the object.\n         * @private\n         */\n        get: function () {\n            return this;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Get flag if need to `archive` dictionary.\n     * @private\n     */\n    PdfDictionary.prototype.getArchive = function () {\n        return this.archive;\n    };\n    /**\n     * Set flag if need to `archive` dictionary.\n     * @private\n     */\n    PdfDictionary.prototype.setArchive = function (value) {\n        this.archive = value;\n    };\n    /**\n     * Sets flag if `encryption` is needed.\n     * @private\n     */\n    PdfDictionary.prototype.setEncrypt = function (value) {\n        this.encrypt = value;\n        this.modify();\n    };\n    /**\n     * Gets flag if `encryption` is needed.\n     * @private\n     */\n    PdfDictionary.prototype.getEncrypt = function () {\n        return this.encrypt;\n    };\n    /**\n     * `Freezes` the changes.\n     * @private\n     */\n    PdfDictionary.prototype.freezeChanges = function (freezer) {\n        this.bChanged = false;\n    };\n    /**\n     * Creates a `copy of PdfDictionary`.\n     * @private\n     */\n    PdfDictionary.prototype.clone = function (crossTable) {\n        //Need to add more codings\n        var newDict = new PdfDictionary();\n        return newDict;\n    };\n    /**\n     * `Mark` this instance modified.\n     * @private\n     */\n    PdfDictionary.prototype.modify = function () {\n        this.bChanged = true;\n    };\n    /**\n     * `Removes` the specified key.\n     * @private\n     */\n    PdfDictionary.prototype.remove = function (key) {\n        if (typeof key !== 'string') {\n            this.primitiveItems.remove(key.value);\n            this.modify();\n        }\n        else {\n            this.remove(new PdfName(key));\n        }\n    };\n    /**\n     * `Determines` whether the dictionary contains the key.\n     * @private\n     */\n    PdfDictionary.prototype.containsKey = function (key) {\n        var returnValue = false;\n        returnValue = this.primitiveItems.containsKey(key.toString());\n        return returnValue;\n    };\n    /**\n     * Raises event `BeginSave`.\n     * @private\n     */\n    PdfDictionary.prototype.onBeginSave = function () {\n        this.beginSave.sender.beginSave();\n    };\n    /**\n     * Raises event `Font Dictionary BeginSave`.\n     * @private\n     */\n    PdfDictionary.prototype.onFontDictionaryBeginSave = function () {\n        this.fontDictionaryBeginSave.sender.fontDictionaryBeginSave();\n    };\n    /**\n     * Raises event `Descendant Font BeginSave`.\n     * @private\n     */\n    PdfDictionary.prototype.onDescendantFontBeginSave = function () {\n        this.descendantFontBeginSave.sender.descendantFontBeginSave();\n    };\n    /**\n     * Raises event 'BeginSave'.\n     * @private\n     */\n    PdfDictionary.prototype.onTemplateBeginSave = function () {\n        this.pageBeginDrawTemplate.sender.pageBeginSave();\n    };\n    /**\n     * Raises event `BeginSave`.\n     * @private\n     */\n    PdfDictionary.prototype.onBeginAnnotationSave = function () {\n        this.annotationBeginSave.sender.beginSave();\n    };\n    /**\n     * Raises event `BeginSave`.\n     * @private\n     */\n    PdfDictionary.prototype.onSectionBeginSave = function (writer) {\n        var saveEvent = this.sectionBeginSave;\n        saveEvent.sender.beginSave(saveEvent.state, writer);\n    };\n    PdfDictionary.prototype.save = function (writer, bRaiseEvent) {\n        if (typeof bRaiseEvent === 'undefined') {\n            this.save(writer, true);\n        }\n        else {\n            writer.write(this.prefix);\n            if (typeof this.beginSave !== 'undefined') {\n                this.onBeginSave();\n            }\n            if (typeof this.descendantFontBeginSave !== 'undefined') {\n                this.onDescendantFontBeginSave();\n            }\n            if (typeof this.fontDictionaryBeginSave !== 'undefined') {\n                this.onFontDictionaryBeginSave();\n            }\n            if (typeof this.annotationBeginSave !== 'undefined') {\n                this.onBeginAnnotationSave();\n            }\n            if (typeof this.sectionBeginSave !== 'undefined') {\n                this.onSectionBeginSave(writer);\n            }\n            if (typeof this.pageBeginDrawTemplate !== 'undefined') {\n                this.onTemplateBeginSave();\n            }\n            // }\n            if (this.Count > 0) {\n                this.saveItems(writer);\n            }\n            writer.write(this.suffix);\n            writer.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Save dictionary items`.\n     * @private\n     */\n    PdfDictionary.prototype.saveItems = function (writer) {\n        writer.write(Operators.newLine);\n        var keys = this.primitiveItems.keys();\n        var values = this.primitiveItems.values();\n        for (var index = 0; index < keys.length; index++) {\n            var key = keys[index];\n            var name_1 = new PdfName(key);\n            name_1.save(writer);\n            writer.write(Operators.whiteSpace);\n            var resources = values[index];\n            resources.save(writer);\n            writer.write(Operators.newLine);\n        }\n    };\n    return PdfDictionary;\n}());\nexport { PdfDictionary };\nvar SaveSectionCollectionEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save section collection event handler` class.\n     * @private\n     */\n    function SaveSectionCollectionEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveSectionCollectionEventHandler;\n}());\nexport { SaveSectionCollectionEventHandler };\nvar SaveDescendantFontEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save section collection event handler` class.\n     * @private\n     */\n    function SaveDescendantFontEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveDescendantFontEventHandler;\n}());\nexport { SaveDescendantFontEventHandler };\nvar SaveFontDictionaryEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save section collection event handler` class.\n     * @private\n     */\n    function SaveFontDictionaryEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveFontDictionaryEventHandler;\n}());\nexport { SaveFontDictionaryEventHandler };\nvar SaveAnnotationEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save annotation event handler` class.\n     * @private\n     */\n    function SaveAnnotationEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveAnnotationEventHandler;\n}());\nexport { SaveAnnotationEventHandler };\nvar SaveSectionEventHandler = /** @class */ (function () {\n    // constructors\n    /**\n     * New instance for `save section event handler` class.\n     * @private\n     */\n    function SaveSectionEventHandler(sender, state) {\n        this.sender = sender;\n        this.state = state;\n    }\n    return SaveSectionEventHandler;\n}());\nexport { SaveSectionEventHandler };\n/**\n * SaveTemplateEventHandler class used to store information about template elements.\n * @private\n * @hidden\n */\nvar SaveTemplateEventHandler = /** @class */ (function () {\n    /**\n     * New instance for save section collection event handler class.\n     * @public\n     */\n    function SaveTemplateEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveTemplateEventHandler;\n}());\nexport { SaveTemplateEventHandler };\n","/**\n * `PdfNumber` class is used to perform number related primitive operations.\n * @private\n */\nvar PdfNumber = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfNumber` class.\n     * @private\n     */\n    function PdfNumber(value) {\n        /**\n         * Sotres the `position`.\n         * @default -1\n         * @private\n         */\n        this.position5 = -1;\n        this.value = value;\n    }\n    Object.defineProperty(PdfNumber.prototype, \"intValue\", {\n        /**\n         * Gets or sets the `integer` value.\n         * @private\n         */\n        get: function () {\n            return this.value;\n        },\n        set: function (value) {\n            this.value = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"isInteger\", {\n        /**\n         * Gets or sets a value indicating whether this instance `is integer`.\n         * @private\n         */\n        get: function () {\n            return this.integer;\n        },\n        set: function (value) {\n            this.integer = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"status\", {\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status5;\n        },\n        set: function (value) {\n            this.status5 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving5;\n        },\n        set: function (value) {\n            this.isSaving5 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index5;\n        },\n        set: function (value) {\n            this.index5 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position5;\n        },\n        set: function (value) {\n            this.position5 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            var rValue = null;\n            return rValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Saves the object`.\n     * @private\n     */\n    PdfNumber.prototype.save = function (writer) {\n        writer.write(this.intValue.toString()); //tostring(CultureInfo.InletiantCulture)\n    };\n    /**\n     * Creates a `copy of PdfNumber`.\n     * @private\n     */\n    PdfNumber.prototype.clone = function (crossTable) {\n        var newNumber = new PdfNumber(this.value);\n        return newNumber;\n    };\n    /**\n     * Converts a `float value to a string` using Adobe PDF rules.\n     * @private\n     */\n    PdfNumber.floatToString = function (number) {\n        // let tempString1 : string = number.toString();\n        // let tempString2 : string = tempString1.indexOf('.') != -1 ? tempString1.substring(0, tempString1.indexOf('.')) : tempString1;\n        var returnString = number.toFixed(2);\n        if (returnString === '0.00') {\n            returnString = '.00';\n        }\n        // let prefixLength : number = (22 - tempString2.length) >= 0 ? (22 - tempString2.length) : 0;\n        // for (let index : number = 0; index < prefixLength; index++) {\n        //     returnString += '0';\n        // }\n        // returnString += tempString2 + '.00';\n        // returnString += (tempString3.length > 6) ? tempString3.substring(0,6) : tempString3;\n        // let suffixLength : number = (6 - tempString3.length) >= 0 ? (6 - tempString3.length) : 0;\n        // for (let index : number = 0; index < suffixLength; index++) {\n        //     returnString += '0';\n        // }\n        return returnString;\n    };\n    /**\n     * Determines the `minimum of the three values`.\n     * @private\n     */\n    PdfNumber.min = function (x, y, z) {\n        var r = Math.min(x, y);\n        return Math.min(z, r);\n    };\n    return PdfNumber;\n}());\nexport { PdfNumber };\n","import { PdfNumber } from './pdf-number';\nimport { Operators } from './../input-output/pdf-operators';\n/**\n * `PdfArray` class is used to perform array related primitive operations.\n * @private\n */\nvar PdfArray = /** @class */ (function () {\n    function PdfArray(array) {\n        //Fields\n        /**\n         * `startMark` - '['\n         * @private\n         */\n        this.startMark = '[';\n        /**\n         * `endMark` - ']'.\n         * @private\n         */\n        this.endMark = ']';\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position9 = -1;\n        /**\n         * Internal variable to hold `cloned object`.\n         * @default null\n         * @private\n         */\n        this.clonedObject9 = null;\n        /**\n         * Represents the Font dictionary.\n         * @hidden\n         * @private\n         */\n        this.isFont = false;\n        if (typeof array === 'undefined') {\n            this.internalElements = [];\n        }\n        else {\n            if (typeof array !== 'undefined' && !(array instanceof PdfArray)) {\n                var tempNumberArray = array;\n                for (var index = 0; index < tempNumberArray.length; index++) {\n                    var pdfNumber = new PdfNumber(tempNumberArray[index]);\n                    this.add(pdfNumber);\n                }\n                // } else if (typeof array !== 'undefined' && (array instanceof PdfArray)) {\n            }\n            else {\n                var tempArray = array;\n                // if (tempArray.Elements.length > 0) {\n                this.internalElements = [];\n                for (var index = 0; index < tempArray.elements.length; index++) {\n                    this.internalElements.push(tempArray.elements[index]);\n                }\n                // }\n            }\n        }\n    }\n    //property\n    /**\n     * Gets the `IPdfSavable` at the specified index.\n     * @private\n     */\n    PdfArray.prototype.items = function (index) {\n        // if (index < 0 || index >= this.Count) {\n        //     throw new Error('ArgumentOutOfRangeException : index, The index can\"t be less then zero or greater then Count.');\n        // }\n        return this.internalElements[index];\n    };\n    Object.defineProperty(PdfArray.prototype, \"count\", {\n        /**\n         * Gets the `count`.\n         * @private\n         */\n        get: function () {\n            return this.internalElements.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"status\", {\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status9;\n        },\n        set: function (value) {\n            this.status9 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving9;\n        },\n        set: function (value) {\n            this.isSaving9 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            return this.clonedObject9;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position9;\n        },\n        set: function (value) {\n            this.position9 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index9;\n        },\n        set: function (value) {\n            this.index9 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"CrossTable\", {\n        /**\n         * Returns `PdfCrossTable` associated with the object.\n         * @private\n         */\n        get: function () {\n            return this.pdfCrossTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"elements\", {\n        /**\n         * Gets the `elements` of the Pdf Array.\n         * @private\n         */\n        get: function () {\n            return this.internalElements;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Adds` the specified element to the PDF array.\n     * @private\n     */\n    PdfArray.prototype.add = function (element) {\n        // if (element === null) {\n        //     throw new Error('ArgumentNullException : obj');\n        // }\n        if (typeof this.internalElements === 'undefined') {\n            this.internalElements = [];\n        }\n        this.internalElements.push(element);\n        this.markedChange();\n    };\n    /**\n     * `Marks` the object changed.\n     * @private\n     */\n    PdfArray.prototype.markedChange = function () {\n        this.bChanged = true;\n    };\n    /**\n     * `Determines` whether the specified element is within the array.\n     * @private\n     */\n    PdfArray.prototype.contains = function (element) {\n        var returnValue = false;\n        for (var index = 0; index < this.internalElements.length; index++) {\n            var tempElement = this.internalElements[index];\n            var inputElement = element;\n            if (tempElement != null && typeof tempElement !== 'undefined' && inputElement != null && typeof inputElement !== 'undefined') {\n                if (tempElement.value === inputElement.value) {\n                    return true;\n                }\n            }\n            // if (this.internalElements[index] === element) {\n            //     returnValue = true;\n            // }\n        }\n        return returnValue;\n    };\n    /**\n     * Returns the `primitive object` of input index.\n     * @private\n     */\n    PdfArray.prototype.getItems = function (index) {\n        // if (index < 0 || index >= this.Count) {\n        //     throw new Error('ArgumentOutOfRangeException : index , The index can\"t be less then zero or greater then Count.');\n        // }\n        return this.internalElements[index];\n    };\n    /**\n     * `Saves` the object using the specified writer.\n     * @private\n     */\n    PdfArray.prototype.save = function (writer) {\n        // if (writer === null) {\n        //     throw new Error('ArgumentNullException : writer');\n        // }\n        writer.write(this.startMark);\n        for (var i = 0, len = this.count; i < len; i++) {\n            this.getItems(i).save(writer);\n            if (i + 1 !== len) {\n                writer.write(Operators.whiteSpace);\n            }\n        }\n        writer.write(this.endMark);\n    };\n    /**\n     * Creates a `copy of PdfArray`.\n     * @private\n     */\n    PdfArray.prototype.clone = function (crossTable) {\n        // if (this.clonedObject9 !== null && this.clonedObject9.CrossTable === crossTable) {\n        //     return this.clonedObject9;\n        // } else {\n        this.clonedObject9 = null;\n        // Else clone the object.\n        var newArray = new PdfArray();\n        for (var index = 0; index < this.internalElements.length; index++) {\n            var obj = this.internalElements[index];\n            newArray.add(obj.clone(crossTable));\n        }\n        newArray.pdfCrossTable = crossTable;\n        this.clonedObject9 = newArray;\n        return newArray;\n    };\n    /**\n     * Creates filled PDF array `from the rectangle`.\n     * @private\n     */\n    PdfArray.fromRectangle = function (bounds) {\n        var values = [bounds.x, bounds.y, bounds.width, bounds.height];\n        var array = new PdfArray(values);\n        return array;\n    };\n    // /**\n    //  * Creates the rectangle from filled PDF array.\n    //  * @private\n    //  */\n    // public ToRectangle() : RectangleF {\n    //     if (this.Count < 4) {\n    //         throw Error('InvalidOperationException-Can not convert to rectangle.');\n    //     }\n    //     let x1 : number;\n    //     let x2 : number;\n    //     let y1 : number;\n    //     let y2 : number;\n    //     let num : PdfNumber = this.getItems(0) as PdfNumber;\n    //     x1 = num.IntValue;\n    //     num = this.getItems(1) as PdfNumber;\n    //     y1 = num.IntValue;\n    //     num = this.getItems(2) as PdfNumber;\n    //     x2 = num.IntValue;\n    //     num = this.getItems(3) as PdfNumber;\n    //     y2 = num.IntValue;\n    //     let x : number = Math.min(x1, x2);\n    //     let y : number = Math.min(y1, y2);\n    //     let width : number = Math.abs(x1 - x2);\n    //     let height : number = Math.abs(y1 - y2);\n    //     let rect : RectangleF = new RectangleF(new PointF(x, y), new SizeF(width, height));\n    //     return rect;\n    // }\n    /**\n     * `Inserts` the element into the array.\n     * @private\n     */\n    PdfArray.prototype.insert = function (index, element) {\n        if (index < this.internalElements.length && index > 0) {\n            var tempElements = [];\n            for (var i = 0; i < index; i++) {\n                tempElements.push(this.internalElements[i]);\n            }\n            tempElements.push(element);\n            for (var i = index; i < this.internalElements.length; i++) {\n                tempElements.push(this.internalElements[i]);\n            }\n            this.internalElements = tempElements;\n        }\n        else {\n            this.internalElements.push(element);\n        }\n        this.markChanged();\n    };\n    /**\n     * `Checks whether array contains the element`.\n     * @private\n     */\n    PdfArray.prototype.indexOf = function (element) {\n        return this.internalElements.indexOf(element);\n    };\n    /**\n     * `Removes` element from the array.\n     * @private\n     */\n    PdfArray.prototype.remove = function (element) {\n        // if (element === null) {\n        //     throw new Error('ArgumentNullException : element');\n        // }\n        var index = this.internalElements.indexOf(element);\n        // if (index >= 0 && index < this.internalElements.length) {\n        this.internalElements[index] = null;\n        // }\n        this.markChanged();\n    };\n    /**\n     * `Remove` the element from the array by its index.\n     * @private\n     */\n    PdfArray.prototype.removeAt = function (index) {\n        // this.internalElements.RemoveAt(index);\n        if (this.internalElements.length > index) {\n            var tempArray = [];\n            for (var i = 0; i < index; i++) {\n                tempArray.push(this.internalElements[i]);\n            }\n            for (var i = index + 1; i < this.internalElements.length; i++) {\n                tempArray.push(this.internalElements[i]);\n            }\n            this.internalElements = tempArray;\n        }\n        this.markChanged();\n    };\n    /**\n     * `Clear` the array.\n     * @private\n     */\n    PdfArray.prototype.clear = function () {\n        this.internalElements = [];\n        this.markChanged();\n    };\n    /**\n     * `Marks` the object changed.\n     * @private\n     */\n    PdfArray.prototype.markChanged = function () {\n        this.bChanged = true;\n    };\n    return PdfArray;\n}());\nexport { PdfArray };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfDictionary } from './pdf-dictionary';\nimport { PdfNumber } from './pdf-number';\nimport { Operators } from './../input-output/pdf-operators';\nimport { PdfName } from './pdf-name';\nimport { PdfArray } from './pdf-array';\nimport { PdfReferenceHolder } from './pdf-reference';\nimport { CompressedStreamWriter } from '@syncfusion/ej2-compression';\n/**\n * `PdfStream` class is used to perform stream related primitive operations.\n * @private\n */\nvar PdfStream = /** @class */ (function (_super) {\n    __extends(PdfStream, _super);\n    function PdfStream(dictionary, data) {\n        var _this = _super.call(this, dictionary) || this;\n        //Constants\n        /**\n         * @hidden\n         * @private\n         */\n        _this.dicPrefix = 'stream';\n        /**\n         * @hidden\n         * @private\n         */\n        _this.dicSuffix = 'endstream';\n        /**\n         * Internal variable to hold `cloned object`.\n         * @private\n         */\n        _this.clonedObject2 = null;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.bCompress = true;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.isImageStream = false;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.isFontStream = false;\n        if (typeof dictionary !== 'undefined' || typeof data !== 'undefined') {\n            _this.dataStream2 = [];\n            _this.dataStream2 = data;\n            _this.bCompress2 = false;\n        }\n        else {\n            _this.dataStream2 = [];\n            _this.bCompress2 = true;\n            //Pending\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfStream.prototype, \"internalStream\", {\n        /**\n         * Gets the `internal` stream.\n         * @private\n         */\n        get: function () {\n            return this.dataStream2;\n        },\n        set: function (value) {\n            this.dataStream2 = [];\n            this.dataStream2 = value;\n            this.modify();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStream.prototype, \"isImage\", {\n        /**\n         * Gets or sets 'is image' flag.\n         * @private\n         */\n        get: function () {\n            return this.isImageStream;\n        },\n        set: function (value) {\n            this.isImageStream = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStream.prototype, \"isFont\", {\n        /**\n         * Gets or sets 'is font' flag.\n         * @private\n         */\n        get: function () {\n            return this.isFontStream;\n        },\n        set: function (value) {\n            this.isFontStream = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStream.prototype, \"compress\", {\n        /**\n         * Gets or sets `compression` flag.\n         * @private\n         */\n        get: function () {\n            return this.bCompress;\n        },\n        set: function (value) {\n            this.bCompress = value;\n            this.modify();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStream.prototype, \"data\", {\n        /**\n         * Gets or sets the `data`.\n         * @private\n         */\n        get: function () {\n            return this.dataStream2;\n        },\n        set: function (value) {\n            this.dataStream2 = [];\n            this.dataStream2 = value;\n            this.modify();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Clear` the internal stream.\n     * @private\n     */\n    PdfStream.prototype.clearStream = function () {\n        this.internalStream = [];\n        if (this.items.containsKey(this.dictionaryProperties.filter)) {\n            this.remove(this.dictionaryProperties.filter);\n        }\n        this.bCompress = true;\n        this.modify();\n    };\n    /**\n     * `Writes` the specified string.\n     * @private\n     */\n    PdfStream.prototype.write = function (text) {\n        if (text == null) {\n            throw new Error('ArgumentNullException:text');\n        }\n        if (text.length <= 0) {\n            throw new Error('ArgumentException: Can not write an empty string, text');\n        }\n        this.dataStream2.push(text);\n        this.modify();\n    };\n    /**\n     * `Writes` the specified bytes.\n     * @private\n     */\n    PdfStream.prototype.writeBytes = function (data) {\n        if (data === null) {\n            throw new Error('ArgumentNullException:data');\n        }\n        if (data.length <= 0) {\n            throw new Error('ArgumentException: Can not write an empty bytes, data');\n        }\n        var text = '';\n        for (var i = 0; i < data.length; i++) {\n            text += String.fromCharCode(data[i]);\n        }\n        this.dataStream2.push(text);\n        this.modify();\n    };\n    /**\n     * Raises event `Cmap BeginSave`.\n     * @private\n     */\n    PdfStream.prototype.onCmapBeginSave = function () {\n        this.cmapBeginSave.sender.cmapBeginSave();\n    };\n    /**\n     * Raises event `Font Program BeginSave`.\n     * @private\n     */\n    PdfStream.prototype.onFontProgramBeginSave = function () {\n        this.fontProgramBeginSave.sender.fontProgramBeginSave();\n    };\n    /**\n     * `Compresses the content` if it's required.\n     * @private\n     */\n    PdfStream.prototype.compressContent = function (data, writer) {\n        if (this.bCompress) {\n            var byteArray = [];\n            for (var i = 0; i < data.length; i++) {\n                byteArray.push(data.charCodeAt(i));\n            }\n            var dataArray = new Uint8Array(byteArray);\n            var sw = new CompressedStreamWriter();\n            // data = 'Hello World!!!';\n            sw.write(dataArray, 0, dataArray.length);\n            sw.close();\n            data = sw.getCompressedString;\n            this.addFilter(this.dictionaryProperties.flatedecode);\n        }\n        return data;\n    };\n    /**\n     * `Adds a filter` to the filter array.\n     * @private\n     */\n    PdfStream.prototype.addFilter = function (filterName) {\n        var obj = this.items.getValue(this.dictionaryProperties.filter);\n        if (obj instanceof PdfReferenceHolder) {\n            var rh = obj;\n            obj = rh.object;\n        }\n        var array = obj;\n        var name = obj;\n        if (name != null) {\n            array = new PdfArray();\n            array.insert(0, name);\n            this.items.setValue(this.dictionaryProperties.filter, array);\n        }\n        name = new PdfName(filterName);\n        if (array == null) {\n            this.items.setValue(this.dictionaryProperties.filter, name);\n        }\n        else {\n            array.insert(0, name);\n        }\n    };\n    /**\n     * `Saves` the object using the specified writer.\n     * @private\n     */\n    PdfStream.prototype.save = function (writer) {\n        if (typeof this.cmapBeginSave !== 'undefined') {\n            this.onCmapBeginSave();\n        }\n        if (typeof this.fontProgramBeginSave !== 'undefined') {\n            this.onFontProgramBeginSave();\n        }\n        var data = '';\n        for (var i = 0; i < this.data.length; i++) {\n            data = data + this.data[i];\n        }\n        if (data.length > 1 && !this.isImage && !this.isFont) {\n            data = 'q\\r\\n' + data + 'Q\\r\\n';\n        }\n        data = this.compressContent(data, writer);\n        var length = data.length;\n        this.items.setValue(this.dictionaryProperties.length, new PdfNumber(length));\n        _super.prototype.save.call(this, writer, false);\n        writer.write(this.dicPrefix);\n        writer.write(Operators.newLine);\n        if (data.length > 0) {\n            writer.write(data);\n        }\n        writer.write(Operators.newLine);\n        writer.write(this.dicSuffix);\n        writer.write(Operators.newLine);\n    };\n    /**\n     * Converts `bytes to string`.\n     * @private\n     */\n    PdfStream.bytesToString = function (byteArray) {\n        var output = '';\n        for (var i = 0; i < byteArray.length; i++) {\n            output = output + String.fromCharCode(byteArray[i]);\n        }\n        return output;\n    };\n    return PdfStream;\n}(PdfDictionary));\nexport { PdfStream };\nvar SaveCmapEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save section collection event handler` class.\n     * @private\n     */\n    function SaveCmapEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveCmapEventHandler;\n}());\nexport { SaveCmapEventHandler };\nvar SaveFontProgramEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save section collection event handler` class.\n     * @private\n     */\n    function SaveFontProgramEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveFontProgramEventHandler;\n}());\nexport { SaveFontProgramEventHandler };\n","/**\n * `PdfString` class is used to perform string related primitive operations.\n * @private\n */\nexport var InternalEnum;\n(function (InternalEnum) {\n    //Internals\n    /**\n     * public Enum for `ForceEncoding`.\n     * @private\n     */\n    var ForceEncoding;\n    (function (ForceEncoding) {\n        /**\n         * Specifies the type of `None`.\n         * @private\n         */\n        ForceEncoding[ForceEncoding[\"None\"] = 0] = \"None\";\n        /**\n         * Specifies the type of `Ascii`.\n         * @private\n         */\n        ForceEncoding[ForceEncoding[\"Ascii\"] = 1] = \"Ascii\";\n        /**\n         * Specifies the type of `Unicode`.\n         * @private\n         */\n        ForceEncoding[ForceEncoding[\"Unicode\"] = 2] = \"Unicode\";\n    })(ForceEncoding = InternalEnum.ForceEncoding || (InternalEnum.ForceEncoding = {}));\n    /**\n     * public Enum for `SourceType`.\n     * @private\n     */\n    var SourceType;\n    (function (SourceType) {\n        /**\n         * Specifies the type of `StringValue`.\n         * @private\n         */\n        SourceType[SourceType[\"StringValue\"] = 0] = \"StringValue\";\n        /**\n         * Specifies the type of `ByteBuffer`.\n         * @private\n         */\n        SourceType[SourceType[\"ByteBuffer\"] = 1] = \"ByteBuffer\";\n    })(SourceType || (SourceType = {}));\n})(InternalEnum || (InternalEnum = {}));\nvar PdfString = /** @class */ (function () {\n    function PdfString(value) {\n        /**\n         * Value indicating whether the string was converted to hex.\n         * @default false\n         * @private\n         */\n        this.bHex = false;\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position1 = -1;\n        /**\n         * Internal variable to hold `cloned object`.\n         * @default null\n         * @private\n         */\n        this.clonedObject1 = null;\n        /**\n         * `Shows` if the data of the stream was decrypted.\n         * @default false\n         * @private\n         */\n        this.bDecrypted = false;\n        /**\n         * Shows if the data of the stream `was decrypted`.\n         * @default false\n         * @private\n         */\n        this.isParentDecrypted = false;\n        /**\n         * Gets a value indicating whether the object is `packed or not`.\n         * @default false\n         * @private\n         */\n        this.isPacked = false;\n        /**\n         * @hidden\n         * @private\n         */\n        this.isFormField = false;\n        /**\n         * @hidden\n         * @private\n         */\n        this.isColorSpace = false;\n        /**\n         * @hidden\n         * @private\n         */\n        this.isHexString = true;\n        if (typeof value === 'undefined') {\n            this.bHex = false;\n        }\n        else {\n            if (!(value.length > 0 && value[0] === '0xfeff')) {\n                this.stringValue = value;\n                this.data = [];\n                for (var i = 0; i < value.length; ++i) {\n                    this.data.push(value.charCodeAt(i));\n                }\n            }\n        }\n    }\n    Object.defineProperty(PdfString.prototype, \"hex\", {\n        //Property\n        /**\n         * Gets a value indicating whether string is in `hex`.\n         * @private\n         */\n        get: function () {\n            return this.bHex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"value\", {\n        /**\n         * Gets or sets string `value` of the object.\n         * @private\n         */\n        get: function () {\n            return this.stringValue;\n        },\n        set: function (value) {\n            this.stringValue = value;\n            this.data = null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"status\", {\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status1;\n        },\n        set: function (value) {\n            this.status1 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving1;\n        },\n        set: function (value) {\n            this.isSaving1 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index1;\n        },\n        set: function (value) {\n            this.index1 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            return this.clonedObject1;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position1;\n        },\n        set: function (value) {\n            this.position1 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"CrossTable\", {\n        /**\n         * Returns `PdfCrossTable` associated with the object.\n         * @private\n         */\n        get: function () {\n            return this.crossTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"converted\", {\n        /**\n         * Gets a value indicating whether to check if the value has unicode characters.\n         * @private\n         */\n        get: function () {\n            return this.bConverted;\n        },\n        /**\n         * sets a value indicating whether to check if the value has unicode characters.\n         * @private\n         */\n        set: function (value) {\n            this.bConverted = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"encode\", {\n        /**\n         * Gets value indicating whether we should convert data to Unicode.\n         */\n        get: function () {\n            return this.bForceEncoding;\n        },\n        set: function (value) {\n            this.bForceEncoding = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Methods\n    /**\n     * Converts `bytes to string using hex format` for representing string.\n     * @private\n     */\n    PdfString.bytesToHex = function (bytes) {\n        if (bytes == null) {\n            return '';\n        }\n        var builder = '';\n        return builder;\n    };\n    /**\n     * `Saves` the object using the specified writer.\n     * @private\n     */\n    PdfString.prototype.save = function (writer) {\n        if (writer === null) {\n            throw new Error('ArgumentNullException : writer');\n        }\n        if (this.encode !== undefined && this.encode === InternalEnum.ForceEncoding.Ascii) {\n            writer.write(this.pdfEncode());\n        }\n        else {\n            writer.write(PdfString.stringMark[0] + this.value + PdfString.stringMark[1]);\n        }\n    };\n    PdfString.prototype.pdfEncode = function () {\n        var result = '';\n        if (this.encode !== undefined && this.encode === InternalEnum.ForceEncoding.Ascii) {\n            var data = this.escapeSymbols(this.value);\n            for (var i = 0; i < data.length; i++) {\n                result += String.fromCharCode(data[i]);\n            }\n            result = PdfString.stringMark[0] + result + PdfString.stringMark[1];\n        }\n        else {\n            result = this.value;\n        }\n        return result;\n    };\n    PdfString.prototype.escapeSymbols = function (value) {\n        var data = [];\n        for (var i = 0; i < value.length; i++) {\n            var currentData = value.charCodeAt(i);\n            switch (currentData) {\n                case 40:\n                case 41:\n                    data.push(92);\n                    data.push(currentData);\n                    break;\n                case 13:\n                    data.push(92);\n                    data.push(114);\n                    break;\n                case 92:\n                    data.push(92);\n                    data.push(currentData);\n                    break;\n                default:\n                    data.push(currentData);\n                    break;\n            }\n        }\n        return data;\n    };\n    /**\n     * Creates a `copy of PdfString`.\n     * @private\n     */\n    PdfString.prototype.clone = function (crossTable) {\n        if (this.clonedObject1 !== null && this.clonedObject1.CrossTable === crossTable) {\n            return this.clonedObject1;\n        }\n        else {\n            this.clonedObject1 = null;\n        }\n        var newString = new PdfString(this.stringValue);\n        newString.bHex = this.bHex;\n        newString.crossTable = crossTable;\n        newString.isColorSpace = this.isColorSpace;\n        this.clonedObject1 = newString;\n        return newString;\n    };\n    /**\n     * Converts string to array of unicode symbols.\n     */\n    PdfString.toUnicodeArray = function (value, bAddPrefix) {\n        if (value == null) {\n            throw new Error('Argument Null Exception : value');\n        }\n        var startIndex = 0;\n        var output = [];\n        for (var i = 0; i < value.length; i++) {\n            var code = value.charCodeAt(i);\n            output.push(code / 256 >>> 0);\n            output.push(code & 0xff);\n        }\n        return output;\n    };\n    /**\n     * Converts byte data to string.\n     */\n    PdfString.byteToString = function (data) {\n        if (data == null) {\n            throw new Error('Argument Null Exception : stream');\n        }\n        var result = '';\n        for (var i = 0; i < data.length; ++i) {\n            result += String.fromCharCode(data[i]);\n        }\n        return result;\n    };\n    //constants = ;\n    /**\n     * `General markers` for string.\n     * @private\n     */\n    PdfString.stringMark = '()';\n    /**\n     * `Hex markers` for string.\n     * @private\n     */\n    PdfString.hexStringMark = '<>';\n    /**\n     * Format of password data.\n     * @private\n     */\n    PdfString.hexFormatPattern = '{0:X2}';\n    return PdfString;\n}());\nexport { PdfString };\n","import { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfStream } from './../primitives/pdf-stream';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { PdfString } from './../primitives/pdf-string';\n/**\n * `PdfReference` class is used to perform reference related primitive operations.\n * @private\n */\nvar PdfReference = /** @class */ (function () {\n    function PdfReference(objNumber, genNumber) {\n        /**\n         * Holds the `index` number of the object.\n         * @default -1\n         * @private\n         */\n        this.index3 = -1;\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position3 = -1;\n        /**\n         * Holds the `object number`.\n         * @default 0\n         * @private\n         */\n        this.objNumber = 0;\n        /**\n         * Holds the `generation number` of the object.\n         * @default 0\n         * @private\n         */\n        this.genNumber = 0;\n        if (typeof objNumber === 'number' && typeof genNumber === 'number') {\n            this.objNumber = objNumber;\n            this.genNumber = genNumber;\n            // } else if (typeof objNum === 'string' && typeof genNum === 'string') {\n        }\n        else {\n            this.objNumber = Number(objNumber);\n            this.genNumber = Number(genNumber);\n        }\n    }\n    Object.defineProperty(PdfReference.prototype, \"status\", {\n        //Property\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status3;\n        },\n        set: function (value) {\n            this.status3 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReference.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving3;\n        },\n        set: function (value) {\n            this.isSaving3 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReference.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index3;\n        },\n        set: function (value) {\n            this.index3 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReference.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position3;\n        },\n        set: function (value) {\n            this.position3 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReference.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            var returnObject3 = null;\n            return returnObject3;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //IPdfPrimitives methods\n    /**\n     * `Saves` the object.\n     * @private\n     */\n    PdfReference.prototype.save = function (writer) {\n        writer.write(this.toString());\n    };\n    /**\n     * Returns a `string` representing the object.\n     * @private\n     */\n    PdfReference.prototype.toString = function () {\n        return this.objNumber.toString() + ' ' + this.genNumber.toString() + ' R';\n    };\n    /**\n     * Creates a `deep copy` of the IPdfPrimitive object.\n     * @private\n     */\n    PdfReference.prototype.clone = function (crossTable) {\n        return null;\n    };\n    return PdfReference;\n}());\nexport { PdfReference };\n/**\n * `PdfReferenceHolder` class is used to perform reference holder related primitive operations.\n * @private\n */\nvar PdfReferenceHolder = /** @class */ (function () {\n    function PdfReferenceHolder(obj1, obj2) {\n        /**\n         * Holds the `index` number of the object.\n         * @default -1\n         * @private\n         */\n        this.index4 = -1;\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position4 = -1;\n        /**\n         * The `index` of the object within the object collection.\n         * @default -1\n         * @private\n         */\n        this.objectIndex = -1;\n        /**\n         * @hidden\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        // if (typeof obj2 === 'undefined') {\n        this.initialize(obj1);\n        // }\n        // else {\n        //     if (obj2 === null) {\n        //         throw new Error('ArgumentNullException : crossTable');\n        //     }\n        //     if (obj1 === null) {\n        //         throw new Error('ArgumentNullException : reference');\n        //     }\n        //     this.crossTable = obj2;\n        //     let tempObj1 : PdfReference = <PdfReference>obj1;\n        //     this.reference = tempObj1;\n        // }\n    }\n    Object.defineProperty(PdfReferenceHolder.prototype, \"status\", {\n        //Properties\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status4;\n        },\n        set: function (value) {\n            this.status4 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving4;\n        },\n        set: function (value) {\n            this.isSaving4 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index4;\n        },\n        set: function (value) {\n            this.index4 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position4;\n        },\n        set: function (value) {\n            this.position4 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            return null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"object\", {\n        /**\n         * Gets the `object` the reference is of.\n         * @private\n         */\n        get: function () {\n            // if ((this.reference != null) || (this.object == null)) {\n            //     this.object = this.GetterObject();\n            // }\n            return this.primitiveObject;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"reference\", {\n        /**\n         * Gets the `reference`.\n         * @private\n         */\n        get: function () {\n            return this.pdfReference;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"index\", {\n        /**\n         * Gets the `index` of the object.\n         * @private\n         */\n        get: function () {\n            // let items : PdfMainObjectCollection = this.crossTable.PdfObjects;\n            // this.objectIndex = items.GetObjectIndex(this.reference);\n            // if (this.objectIndex < 0) {\n            //     let obj : IPdfPrimitive = this.crossTable.GetObject(this.reference);\n            //     this.objectIndex = items.Count - 1;\n            // }\n            return this.objectIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"element\", {\n        /**\n         * Gets the `element`.\n         * @private\n         */\n        get: function () {\n            return this.primitiveObject;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfReferenceHolder.prototype.initialize = function (obj1) {\n        if (obj1 instanceof PdfArray\n            || obj1 instanceof PdfDictionary\n            || obj1 instanceof PdfName\n            || obj1 instanceof PdfNumber\n            || obj1 instanceof PdfStream\n            || obj1 instanceof PdfReference\n            || obj1 instanceof PdfString) {\n            this.primitiveObject = obj1;\n        }\n        else {\n            var tempObj = obj1;\n            this.initialize(tempObj.element);\n        }\n    };\n    /**\n     * `Writes` a reference into a PDF document.\n     * @private\n     */\n    PdfReferenceHolder.prototype.save = function (writer) {\n        // if (writer == null) {\n        //     throw new Error('ArgumentNullException : writer');\n        // }\n        var position = writer.position;\n        var cTable = writer.document.crossTable;\n        // if (cTable.Document instanceof PdfDocument) {\n        this.object.isSaving = true;\n        // }\n        var reference = null;\n        // if (writer.Document.FileStructure.IncrementalUpdate === true && writer.Document.isStreamCopied === true) {\n        //     if (this.reference === null) {\n        //         reference = cTable.GetReference(this.Object);\n        //     } else {\n        //         reference = this.reference;\n        //     }\n        // } else {\n        //     reference = cTable.GetReference(this.Object);\n        // }\n        // if (!(writer.Document.FileStructure.IncrementalUpdate === true && writer.Document.isStreamCopied === true)) {\n        reference = cTable.getReference(this.object);\n        // }\n        // if (writer.Position !== position) {\n        //     writer.Position = position;\n        // }\n        reference.save(writer);\n    };\n    /**\n     * Creates a `copy of PdfReferenceHolder`.\n     * @private\n     */\n    PdfReferenceHolder.prototype.clone = function (crossTable) {\n        var refHolder = null;\n        var temp = null;\n        var refNum = '';\n        var reference = null;\n        // Restricts addition of same object multiple time.\n        /* if (this.Reference != null && this.crossTable != null && this.crossTable.PageCorrespondance.containsKey(this.Reference)) {\n            refHolder = new PdfReferenceHolder(this.crossTable.PageCorrespondance.getValue(this.Reference) as PdfReference, crossTable);\n            return refHolder;\n        }\n        if (Object instanceof PdfNumber) {\n            return new PdfNumber((Object as PdfNumber).IntValue);\n        }\n        */\n        // if (Object instanceof PdfDictionary) {\n        //     // Meaning the referenced page is not available for import.\n        //     let type : PdfName = new PdfName(this.dictionaryProperties.type);\n        //     let dict : PdfDictionary = Object as PdfDictionary;\n        //     if (dict.ContainsKey(type)) {\n        //         let pageName : PdfName = dict.Items.getValue(type.Value) as PdfName;\n        //         if (pageName !== null) {\n        //             if (pageName.Value === 'Page') {\n        //                 return new PdfNull();\n        //             }\n        //         }\n        //     }\n        // }\n        /* if (Object instanceof PdfName) {\n            return new PdfName ((Object as PdfName ).Value);\n        }\n        */\n        // Resolves circular references.\n        // if (crossTable.PrevReference !== null && (crossTable.PrevReference.indexOf(this.Reference) !== -1)) {\n        //     let obj : IPdfPrimitive = this.crossTable.GetObject(this.Reference).ClonedObject;\n        //     if (obj !== null) {\n        //         reference = crossTable.GetReference(obj);\n        //         return new PdfReferenceHolder(reference, crossTable);\n        //     } else {\n        //         return new PdfNull();\n        //     }\n        // }\n        /*if (this.Reference !== null) {\n            crossTable.PrevReference.push(this.Reference);\n        }\n        reference = crossTable.GetReference(temp);\n        refHolder = new PdfReferenceHolder(reference, crossTable);\n        return refHolder;\n        */\n        return null;\n    };\n    return PdfReferenceHolder;\n}());\nexport { PdfReferenceHolder };\n","import { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfName } from './../primitives/pdf-name';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * `PdfAction` class represents base class for all action types.\n * @private\n */\nvar PdfAction = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initialize instance for `Action` class.\n     * @private\n     */\n    function PdfAction() {\n        /**\n         * Specifies the Next `action` to perform.\n         * @private\n         */\n        this.action = null;\n        /**\n         * Specifies the Internal variable to store `dictionary properties`.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        // super(); -> Object()\n        this.initialize();\n    }\n    Object.defineProperty(PdfAction.prototype, \"next\", {\n        // Properties\n        /**\n         * Gets and Sets the `Next` action to perform.\n         * @private\n         */\n        get: function () {\n            return this.action;\n        },\n        set: function (value) {\n            // if (this.action !== value) {\n            this.action = value;\n            this.dictionary.items.setValue(this.dictionaryProperties.next, new PdfReferenceHolder(this.action));\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAction.prototype, \"dictionary\", {\n        /**\n         * Gets and Sets the instance of PdfDictionary class for `Dictionary`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.pdfDictionary === 'undefined') {\n                this.pdfDictionary = new PdfDictionary();\n            }\n            return this.pdfDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Initialize` the action type.\n     * @private\n     */\n    PdfAction.prototype.initialize = function () {\n        this.dictionary.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.action));\n    };\n    Object.defineProperty(PdfAction.prototype, \"element\", {\n        // IPdfWrapper Members\n        /**\n         * Gets the `Element` as IPdfPrimitive class.\n         * @private\n         */\n        get: function () {\n            return this.dictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAction;\n}());\nexport { PdfAction };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfAction } from './action';\nimport { PdfString } from './../primitives/pdf-string';\nimport { PdfName } from './../primitives/pdf-name';\n/**\n * `PdfUriAction` class for initialize the uri related internals.\n * @private\n */\nvar PdfUriAction = /** @class */ (function (_super) {\n    __extends(PdfUriAction, _super);\n    function PdfUriAction(uri) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Specifies the `uri` string.\n         * @default ''.\n         * @private\n         */\n        _this.uniformResourceIdentifier = '';\n        return _this;\n    }\n    Object.defineProperty(PdfUriAction.prototype, \"uri\", {\n        // Properties\n        /**\n         * Gets and Sets the value of `Uri`.\n         * @private\n         */\n        get: function () {\n            return this.uniformResourceIdentifier;\n        },\n        set: function (value) {\n            this.uniformResourceIdentifier = value;\n            this.dictionary.items.setValue(this.dictionaryProperties.uri, new PdfString(this.uniformResourceIdentifier));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Initialize` the internals.\n     * @private\n     */\n    PdfUriAction.prototype.initialize = function () {\n        _super.prototype.initialize.call(this);\n        this.dictionary.items.setValue(this.dictionaryProperties.s, new PdfName(this.dictionaryProperties.uri));\n    };\n    return PdfUriAction;\n}(PdfAction));\nexport { PdfUriAction };\n","/**\n * public Enum for `PdfHorizontalAlignment`.\n * @private\n */\nexport var PdfHorizontalAlignment;\n(function (PdfHorizontalAlignment) {\n    /**\n     * Specifies the type of `Left`.\n     * @private\n     */\n    PdfHorizontalAlignment[PdfHorizontalAlignment[\"Left\"] = 0] = \"Left\";\n    /**\n     * Specifies the type of `Center`.\n     * @private\n     */\n    PdfHorizontalAlignment[PdfHorizontalAlignment[\"Center\"] = 1] = \"Center\";\n    /**\n     * Specifies the type of `Right`.\n     * @private\n     */\n    PdfHorizontalAlignment[PdfHorizontalAlignment[\"Right\"] = 2] = \"Right\";\n})(PdfHorizontalAlignment || (PdfHorizontalAlignment = {}));\n/**\n * public Enum for `PdfVerticalAlignment`.\n * @private\n */\nexport var PdfVerticalAlignment;\n(function (PdfVerticalAlignment) {\n    /**\n     * Specifies the type of `Top`.\n     * @private\n     */\n    PdfVerticalAlignment[PdfVerticalAlignment[\"Top\"] = 0] = \"Top\";\n    /**\n     * Specifies the type of `Middle`.\n     * @private\n     */\n    PdfVerticalAlignment[PdfVerticalAlignment[\"Middle\"] = 1] = \"Middle\";\n    /**\n     * Specifies the type of `Bottom`.\n     * @private\n     */\n    PdfVerticalAlignment[PdfVerticalAlignment[\"Bottom\"] = 2] = \"Bottom\";\n})(PdfVerticalAlignment || (PdfVerticalAlignment = {}));\n/**\n * public Enum for `public`.\n * @private\n */\nexport var PdfTextAlignment;\n(function (PdfTextAlignment) {\n    /**\n     * Specifies the type of `Left`.\n     * @private\n     */\n    PdfTextAlignment[PdfTextAlignment[\"Left\"] = 0] = \"Left\";\n    /**\n     * Specifies the type of `Center`.\n     * @private\n     */\n    PdfTextAlignment[PdfTextAlignment[\"Center\"] = 1] = \"Center\";\n    /**\n     * Specifies the type of `Right`.\n     * @private\n     */\n    PdfTextAlignment[PdfTextAlignment[\"Right\"] = 2] = \"Right\";\n    /**\n     * Specifies the type of `Justify`.\n     * @private\n     */\n    PdfTextAlignment[PdfTextAlignment[\"Justify\"] = 3] = \"Justify\";\n})(PdfTextAlignment || (PdfTextAlignment = {}));\n/**\n * public Enum for `TextRenderingMode`.\n * @private\n */\nexport var TextRenderingMode;\n(function (TextRenderingMode) {\n    /**\n     * Specifies the type of `Fill`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"Fill\"] = 0] = \"Fill\";\n    /**\n     * Specifies the type of `Stroke`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"Stroke\"] = 1] = \"Stroke\";\n    /**\n     * Specifies the type of `FillStroke`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"FillStroke\"] = 2] = \"FillStroke\";\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"None\"] = 3] = \"None\";\n    /**\n     * Specifies the type of `ClipFlag`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"ClipFlag\"] = 4] = \"ClipFlag\";\n    /**\n     * Specifies the type of `ClipFill`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"ClipFill\"] = 4] = \"ClipFill\";\n    /**\n     * Specifies the type of `ClipStroke`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"ClipStroke\"] = 5] = \"ClipStroke\";\n    /**\n     * Specifies the type of `ClipFillStroke`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"ClipFillStroke\"] = 6] = \"ClipFillStroke\";\n    /**\n     * Specifies the type of `Clip`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"Clip\"] = 7] = \"Clip\";\n})(TextRenderingMode || (TextRenderingMode = {}));\n/**\n * public Enum for `PdfLineJoin`.\n * @private\n */\nexport var PdfLineJoin;\n(function (PdfLineJoin) {\n    /**\n     * Specifies the type of `Miter`.\n     * @private\n     */\n    PdfLineJoin[PdfLineJoin[\"Miter\"] = 0] = \"Miter\";\n    /**\n     * Specifies the type of `Round`.\n     * @private\n     */\n    PdfLineJoin[PdfLineJoin[\"Round\"] = 1] = \"Round\";\n    /**\n     * Specifies the type of `Bevel`.\n     * @private\n     */\n    PdfLineJoin[PdfLineJoin[\"Bevel\"] = 2] = \"Bevel\";\n})(PdfLineJoin || (PdfLineJoin = {}));\n/**\n * public Enum for `PdfLineCap`.\n * @private\n */\nexport var PdfLineCap;\n(function (PdfLineCap) {\n    /**\n     * Specifies the type of `Flat`.\n     * @private\n     */\n    PdfLineCap[PdfLineCap[\"Flat\"] = 0] = \"Flat\";\n    /**\n     * Specifies the type of `Round`.\n     * @private\n     */\n    PdfLineCap[PdfLineCap[\"Round\"] = 1] = \"Round\";\n    /**\n     * Specifies the type of `Square`.\n     * @private\n     */\n    PdfLineCap[PdfLineCap[\"Square\"] = 2] = \"Square\";\n})(PdfLineCap || (PdfLineCap = {}));\n/**\n * public Enum for `PdfDashStyle`.\n * @private\n */\nexport var PdfDashStyle;\n(function (PdfDashStyle) {\n    /**\n     * Specifies the type of `Solid`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"Solid\"] = 0] = \"Solid\";\n    /**\n     * Specifies the type of `Dash`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"Dash\"] = 1] = \"Dash\";\n    /**\n     * Specifies the type of `Dot`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"Dot\"] = 2] = \"Dot\";\n    /**\n     * Specifies the type of `DashDot`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"DashDot\"] = 3] = \"DashDot\";\n    /**\n     * Specifies the type of `DashDotDot`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"DashDotDot\"] = 4] = \"DashDotDot\";\n    /**\n     * Specifies the type of `Custom`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"Custom\"] = 5] = \"Custom\";\n})(PdfDashStyle || (PdfDashStyle = {}));\n/**\n * public Enum for `PdfFillMode`.\n * @private\n */\nexport var PdfFillMode;\n(function (PdfFillMode) {\n    /**\n     * Specifies the type of `Winding`.\n     * @private\n     */\n    PdfFillMode[PdfFillMode[\"Winding\"] = 0] = \"Winding\";\n    /**\n     * Specifies the type of `Alternate`.\n     * @private\n     */\n    PdfFillMode[PdfFillMode[\"Alternate\"] = 1] = \"Alternate\";\n})(PdfFillMode || (PdfFillMode = {}));\n/**\n * public Enum for `PdfColorSpace`.\n * @private\n */\nexport var PdfColorSpace;\n(function (PdfColorSpace) {\n    /**\n     * Specifies the type of `Rgb`.\n     * @private\n     */\n    PdfColorSpace[PdfColorSpace[\"Rgb\"] = 0] = \"Rgb\";\n    /**\n     * Specifies the type of `Cmyk`.\n     * @private\n     */\n    PdfColorSpace[PdfColorSpace[\"Cmyk\"] = 1] = \"Cmyk\";\n    /**\n     * Specifies the type of `GrayScale`.\n     * @private\n     */\n    PdfColorSpace[PdfColorSpace[\"GrayScale\"] = 2] = \"GrayScale\";\n    /**\n     * Specifies the type of `Indexed`.\n     * @private\n     */\n    PdfColorSpace[PdfColorSpace[\"Indexed\"] = 3] = \"Indexed\";\n})(PdfColorSpace || (PdfColorSpace = {}));\n/**\n * public Enum for `PdfBlendMode`.\n * @private\n */\nexport var PdfBlendMode;\n(function (PdfBlendMode) {\n    /**\n     * Specifies the type of `Normal`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Normal\"] = 0] = \"Normal\";\n    /**\n     * Specifies the type of `Multiply`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Multiply\"] = 1] = \"Multiply\";\n    /**\n     * Specifies the type of `Screen`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Screen\"] = 2] = \"Screen\";\n    /**\n     * Specifies the type of `Overlay`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Overlay\"] = 3] = \"Overlay\";\n    /**\n     * Specifies the type of `Darken`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Darken\"] = 4] = \"Darken\";\n    /**\n     * Specifies the type of `Lighten`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Lighten\"] = 5] = \"Lighten\";\n    /**\n     * Specifies the type of `ColorDodge`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"ColorDodge\"] = 6] = \"ColorDodge\";\n    /**\n     * Specifies the type of `ColorBurn`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"ColorBurn\"] = 7] = \"ColorBurn\";\n    /**\n     * Specifies the type of `HardLight`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"HardLight\"] = 8] = \"HardLight\";\n    /**\n     * Specifies the type of `SoftLight`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"SoftLight\"] = 9] = \"SoftLight\";\n    /**\n     * Specifies the type of `Difference`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Difference\"] = 10] = \"Difference\";\n    /**\n     * Specifies the type of `Exclusion`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Exclusion\"] = 11] = \"Exclusion\";\n    /**\n     * Specifies the type of `Hue`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Hue\"] = 12] = \"Hue\";\n    /**\n     * Specifies the type of `Saturation`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Saturation\"] = 13] = \"Saturation\";\n    /**\n     * Specifies the type of `Color`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Color\"] = 14] = \"Color\";\n    /**\n     * Specifies the type of `Luminosity`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Luminosity\"] = 15] = \"Luminosity\";\n})(PdfBlendMode || (PdfBlendMode = {}));\n/**\n * public Enum for `PdfGraphicsUnit`.\n * @private\n */\nexport var PdfGraphicsUnit;\n(function (PdfGraphicsUnit) {\n    /**\n     * Specifies the type of `Centimeter`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Centimeter\"] = 0] = \"Centimeter\";\n    /**\n     * Specifies the type of `Pica`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Pica\"] = 1] = \"Pica\";\n    /**\n     * Specifies the type of `Pixel`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Pixel\"] = 2] = \"Pixel\";\n    /**\n     * Specifies the type of `Point`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Point\"] = 3] = \"Point\";\n    /**\n     * Specifies the type of `Inch`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Inch\"] = 4] = \"Inch\";\n    /**\n     * Specifies the type of `Document`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Document\"] = 5] = \"Document\";\n    /**\n     * Specifies the type of `Millimeter`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Millimeter\"] = 6] = \"Millimeter\";\n})(PdfGraphicsUnit || (PdfGraphicsUnit = {}));\n/**\n * public Enum for `PdfGridImagePosition`.\n * @private\n */\nexport var PdfGridImagePosition;\n(function (PdfGridImagePosition) {\n    /**\n     * Specifies the type of `Fit`.\n     * @private\n     */\n    PdfGridImagePosition[PdfGridImagePosition[\"Fit\"] = 0] = \"Fit\";\n    /**\n     * Specifies the type of `Center`.\n     * @private\n     */\n    PdfGridImagePosition[PdfGridImagePosition[\"Center\"] = 1] = \"Center\";\n    /**\n     * Specifies the type of `Stretch`.\n     * @private\n     */\n    PdfGridImagePosition[PdfGridImagePosition[\"Stretch\"] = 2] = \"Stretch\";\n    /**\n     * Specifies the type of `Tile`.\n     * @private\n     */\n    PdfGridImagePosition[PdfGridImagePosition[\"Tile\"] = 3] = \"Tile\";\n})(PdfGridImagePosition || (PdfGridImagePosition = {}));\n/**\n * public Enum for `the text rendering direction`.\n * @private\n */\nexport var PdfTextDirection;\n(function (PdfTextDirection) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfTextDirection[PdfTextDirection[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `LeftToRight`.\n     * @private\n     */\n    PdfTextDirection[PdfTextDirection[\"LeftToRight\"] = 1] = \"LeftToRight\";\n    /**\n     * Specifies the type of `RightToLeft`.\n     * @private\n     */\n    PdfTextDirection[PdfTextDirection[\"RightToLeft\"] = 2] = \"RightToLeft\";\n})(PdfTextDirection || (PdfTextDirection = {}));\n","import { PdfColorSpace } from './enum';\nimport { Operators } from './../input-output/pdf-operators';\nimport { Dictionary } from './../collections/dictionary';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfArray } from './../primitives/pdf-array';\n/**\n * Implements structures and routines working with `color`.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * // set the font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * //\n * // set color\n * let brushColor : PdfColor = new PdfColor(0, 0, 0);\n * //\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(brushColor);\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n * @default black color\n */\nvar PdfColor = /** @class */ (function () {\n    function PdfColor(color1, color2, color3, color4) {\n        if (color1 instanceof PdfColor) {\n            this.redColor = color1.r;\n            this.greenColor = color1.g;\n            this.blueColor = color1.b;\n            this.grayColor = color1.gray;\n            this.alpha = color1.alpha;\n            this.filled = (this.alpha !== 0);\n        }\n        else {\n            this.cyanColor = 0;\n            this.magentaColor = 0;\n            this.yellowColor = 0;\n            this.blackColor = 0;\n            this.grayColor = 0;\n            if (typeof color4 === 'undefined') {\n                //doubt-byte/float\n                this.redColor = color1;\n                this.greenColor = color2;\n                this.blueColor = color3;\n                this.alpha = PdfColor.maxColourChannelValue;\n                this.filled = true;\n                this.assignCMYK(color1, color2, color3);\n            }\n            else {\n                this.redColor = color2;\n                this.greenColor = color3;\n                this.blueColor = color4;\n                this.alpha = color1;\n                this.filled = true;\n                this.assignCMYK(color2, color3, color4);\n            }\n        }\n    }\n    /**\n     * `Calculate and assign` cyan, megenta, yellow colors from rgb values..\n     * @private\n     */\n    PdfColor.prototype.assignCMYK = function (r, g, b) {\n        var red = r / PdfColor.maxColourChannelValue;\n        var green = g / PdfColor.maxColourChannelValue;\n        var blue = b / PdfColor.maxColourChannelValue;\n        var black = PdfNumber.min(1 - red, 1 - green, 1 - blue);\n        var cyan = (black === 1.0) ? 0 : (1 - red - black) / (1 - black);\n        var magenta = (black === 1.0) ? 0 : (1 - green - black) / (1 - black);\n        var yellow = (black === 1.0) ? 0 : (1 - blue - black) / (1 - black);\n        this.blackColor = black;\n        this.cyanColor = cyan;\n        this.magentaColor = magenta;\n        this.yellowColor = yellow;\n    };\n    Object.defineProperty(PdfColor.prototype, \"r\", {\n        //Properties\n        // public static get Empty():PdfColor\n        // {\n        //     return this.s_emptyColor\n        // }\n        /**\n         * Gets or sets `Red` channel value.\n         * @private\n         */\n        get: function () {\n            return this.redColor;\n        },\n        set: function (value) {\n            this.redColor = value;\n            this.assignCMYK(this.redColor, this.greenColor, this.blueColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"red\", {\n        /**\n         * Gets the `Red` color\n         * @private\n         */\n        get: function () {\n            return (this.r / PdfColor.maxColourChannelValue);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"b\", {\n        /**\n         * Gets or sets `Blue` channel value.\n         * @private\n         */\n        get: function () {\n            return this.blueColor;\n        },\n        set: function (value) {\n            this.blueColor = value;\n            this.assignCMYK(this.redColor, this.greenColor, this.blueColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"blue\", {\n        /**\n         * Gets the `blue` color.\n         * @private\n         */\n        get: function () {\n            return (this.b / PdfColor.maxColourChannelValue);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"g\", {\n        /**\n         *  Gets or sets `Green` channel value.\n         * @private\n         */\n        get: function () {\n            return this.greenColor;\n        },\n        set: function (value) {\n            this.greenColor = value;\n            this.assignCMYK(this.redColor, this.greenColor, this.blueColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"green\", {\n        /**\n         * Gets the `Green` color.\n         * @private\n         */\n        get: function () {\n            return (this.g / PdfColor.maxColourChannelValue);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"gray\", {\n        /**\n         * Gets or sets `Gray` channel value.\n         * @private\n         */\n        get: function () {\n            return ((((this.redColor + this.greenColor) + this.blueColor)) / (PdfColor.maxColourChannelValue * 3));\n        },\n        set: function (value) {\n            if (value < 0) {\n                this.grayColor = 0;\n            }\n            else if (value > 1) {\n                this.grayColor = 1;\n            }\n            else {\n                this.grayColor = value;\n            }\n            this.r = (this.grayColor * PdfColor.maxColourChannelValue);\n            this.g = (this.grayColor * PdfColor.maxColourChannelValue);\n            this.b = (this.grayColor * PdfColor.maxColourChannelValue);\n            this.assignCMYK(this.redColor, this.greenColor, this.blueColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"isEmpty\", {\n        /**\n         * Gets whether the PDFColor `is Empty` or not.\n         * @private\n         */\n        get: function () {\n            return !this.filled;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"a\", {\n        /**\n         * Gets or sets `Alpha` channel value.\n         * @private\n         */\n        get: function () {\n            return this.alpha;\n        },\n        set: function (value) {\n            if (value < 0) {\n                this.alpha = 0;\n            }\n            else {\n                // if (this.alpha !== value) {\n                this.alpha = value;\n                // }\n            }\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Public methods\n    /**\n     * Converts `PDFColor to PDF string` representation.\n     * @private\n     */\n    PdfColor.prototype.toString = function (colorSpace, stroke) {\n        if (this.isEmpty) {\n            return '';\n        }\n        return this.rgbToString(stroke);\n    };\n    /**\n     * Sets `RGB` color.\n     * @private\n     */\n    PdfColor.prototype.rgbToString = function (ifStroking) {\n        var r = this.r;\n        var g = this.g;\n        var b = this.b;\n        var key = (r << 16) + (g << 8) + b;\n        if (ifStroking) {\n            key += 1 << 24;\n        }\n        var colour = '';\n        var obj = null;\n        if (PdfColor.rgbStrings.containsKey(key)) {\n            obj = PdfColor.rgbStrings.getValue(key);\n        }\n        if (obj == null) {\n            var red = r / PdfColor.maxColourChannelValue;\n            var green = g / PdfColor.maxColourChannelValue;\n            var blue = b / PdfColor.maxColourChannelValue;\n            if (ifStroking) {\n                colour = red.toString() + ' ' + green.toString() + ' ' + blue.toString() + ' RG';\n            }\n            else {\n                colour = red.toString() + ' ' + green.toString() + ' ' + blue.toString() + ' rg';\n            }\n            PdfColor.rgbStrings.setValue(key, colour);\n        }\n        else {\n            colour = obj.toString();\n        }\n        return colour + Operators.newLine;\n    };\n    /**\n     * Converts `colour to a PDF array`.\n     * @private\n     */\n    PdfColor.prototype.toArray = function (colorSpace) {\n        var array = new PdfArray();\n        switch (colorSpace) {\n            case PdfColorSpace.Rgb:\n                array.add(new PdfNumber(this.red));\n                array.add(new PdfNumber(this.green));\n                array.add(new PdfNumber(this.blue));\n                break;\n            default:\n                throw new Error('NotSupportedException : Unsupported colour space.');\n        }\n        return array;\n    };\n    //Fields\n    /**\n     * Holds `RGB colors` converted into strings.\n     * @private\n     */\n    PdfColor.rgbStrings = new Dictionary();\n    /**\n     * Holds Gray scale colors converted into strings for `stroking`.\n     * @private\n     */\n    PdfColor.grayStringsSroke = new Dictionary();\n    /**\n     * Holds Gray scale colors converted into strings for `filling`.\n     * @private\n     */\n    PdfColor.grayStringsFill = new Dictionary();\n    /**\n     * `Max value` of color channel.\n     * @private\n     */\n    PdfColor.maxColourChannelValue = 255.0;\n    return PdfColor;\n}());\nexport { PdfColor };\n","/**\n * Coordinates of Position for `PointF`.\n * @private\n */\nvar PointF = /** @class */ (function () {\n    function PointF(x, y) {\n        if (typeof x === 'undefined') {\n            this.x = 0;\n            this.y = 0;\n        }\n        else {\n            if (x !== null) {\n                this.x = x;\n            }\n            else {\n                this.x = 0;\n            }\n            if (y !== null) {\n                this.y = y;\n            }\n            else {\n                this.y = 0;\n            }\n        }\n    }\n    return PointF;\n}());\nexport { PointF };\n/**\n * Width and Height as `Size`.\n * @private\n */\nvar SizeF = /** @class */ (function () {\n    function SizeF(width, height) {\n        if (typeof height === 'undefined') {\n            this.height = 0;\n            this.width = 0;\n        }\n        else {\n            if (height !== null) {\n                this.height = height;\n            }\n            else {\n                this.height = 0;\n            }\n            if (width !== null) {\n                this.width = width;\n            }\n            else {\n                this.width = 0;\n            }\n        }\n    }\n    return SizeF;\n}());\nexport { SizeF };\n/**\n * `RectangleF` with Position and size.\n * @private\n */\nvar RectangleF = /** @class */ (function () {\n    function RectangleF(arg1, arg2, arg3, arg4) {\n        if (typeof arg1 === typeof arg1 && typeof arg1 === 'undefined') {\n            this.x = 0;\n            this.y = 0;\n            this.height = 0;\n            this.width = 0;\n        }\n        else {\n            if (arg1 instanceof PointF && arg2 instanceof SizeF && typeof arg3 === 'undefined') {\n                var pointf = arg1;\n                this.x = pointf.x;\n                this.y = pointf.y;\n                var sizef = arg2;\n                this.height = sizef.height;\n                this.width = sizef.width;\n            }\n            else {\n                var x = arg1;\n                var y = arg2;\n                var width = arg3;\n                var height = arg4;\n                this.x = x;\n                this.y = y;\n                this.height = height;\n                this.width = width;\n            }\n        }\n    }\n    return RectangleF;\n}());\nexport { RectangleF };\n/**\n * `Rectangle` with left, right, top and bottom.\n * @private\n */\nvar Rectangle = /** @class */ (function () {\n    /**\n     * Instance of `RectangleF` class with X, Y, Width and Height.\n     * @private\n     */\n    function Rectangle(left, top, right, bottom) {\n        this.left = left;\n        this.top = top;\n        this.right = right;\n        this.bottom = bottom;\n    }\n    Object.defineProperty(Rectangle.prototype, \"width\", {\n        /**\n         * Gets a value of width\n         */\n        get: function () {\n            return this.right - this.left;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rectangle.prototype, \"height\", {\n        /**\n         * Gets a value of height\n         */\n        get: function () {\n            return this.bottom - this.top;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rectangle.prototype, \"topLeft\", {\n        /**\n         * Gets a value of Top and Left\n         */\n        get: function () {\n            return new PointF(this.left, this.top);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rectangle.prototype, \"size\", {\n        /**\n         * Gets a value of size\n         */\n        get: function () {\n            return new SizeF(this.width, this.height);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Rectangle.prototype.toString = function () {\n        return this.topLeft + 'x' + this.size;\n    };\n    return Rectangle;\n}());\nexport { Rectangle };\n","/**\n * `PdfBrush` class provides objects used to fill the interiors of graphical shapes such as rectangles,\n * ellipses, pies, polygons, and paths.\n * @private\n */\nvar PdfBrush = /** @class */ (function () {\n    /**\n     * Creates instanceof `PdfBrush` class.\n     * @hidden\n     * @private\n     */\n    function PdfBrush() {\n        //\n    }\n    return PdfBrush;\n}());\nexport { PdfBrush };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfColor } from './../pdf-color';\nimport { PdfColorSpace } from './../enum';\nimport { PdfBrush } from './pdf-brush';\n/**\n * Represents a brush that fills any object with a solid color.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a pages to the document\n * let page1 : PdfPage = document.pages.add();\n * // set font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // set brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10));\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfSolidBrush = /** @class */ (function (_super) {\n    __extends(PdfSolidBrush, _super);\n    //Constructors\n    /**\n     * Initializes a new instance of the `PdfSolidBrush` class.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // add a pages to the document\n     * let page1 : PdfPage = document.pages.add();\n     * // set font\n     * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // set brush\n     * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n     * // draw the text\n     * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10));\n     * // save the document\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     * @param color color of the brush\n     */\n    function PdfSolidBrush(color) {\n        var _this = _super.call(this) || this;\n        _this.pdfColor = color;\n        return _this;\n    }\n    Object.defineProperty(PdfSolidBrush.prototype, \"color\", {\n        //Properties\n        /**\n         * Gets or sets the `color` of the brush.\n         * @private\n         */\n        get: function () {\n            return this.pdfColor;\n        },\n        set: function (value) {\n            this.pdfColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * `Monitors` the changes of the brush and modify PDF state respectively.\n     * @private\n     */\n    PdfSolidBrush.prototype.monitorChanges = function (brush, streamWriter, getResources, saveChanges, currentColorSpace) {\n        if (streamWriter == null) {\n            throw new Error('ArgumentNullException:streamWriter');\n        }\n        var diff = false;\n        if (brush == null) {\n            diff = true;\n            streamWriter.setColorAndSpace(this.pdfColor, currentColorSpace, false);\n            return diff;\n        }\n        else {\n            var sBrush = brush;\n            diff = true;\n            streamWriter.setColorAndSpace(this.pdfColor, currentColorSpace, false);\n            return diff;\n        }\n    };\n    /**\n     * `Resets` the changes, which were made by the brush.\n     * @private\n     */\n    PdfSolidBrush.prototype.resetChanges = function (streamWriter) {\n        streamWriter.setColorAndSpace(new PdfColor(0, 0, 0), PdfColorSpace.Rgb, false);\n    };\n    return PdfSolidBrush;\n}(PdfBrush));\nexport { PdfSolidBrush };\n","/**\n * public Enum for `PdfFontStyle`.\n * @private\n */\nexport var PdfFontStyle;\n(function (PdfFontStyle) {\n    /**\n     * Specifies the type of `Regular`.\n     * @private\n     */\n    PdfFontStyle[PdfFontStyle[\"Regular\"] = 0] = \"Regular\";\n    /**\n     * Specifies the type of `Bold`.\n     * @private\n     */\n    PdfFontStyle[PdfFontStyle[\"Bold\"] = 1] = \"Bold\";\n    /**\n     * Specifies the type of `Italic`.\n     * @private\n     */\n    PdfFontStyle[PdfFontStyle[\"Italic\"] = 2] = \"Italic\";\n    /**\n     * Specifies the type of `Underline`.\n     * @private\n     */\n    PdfFontStyle[PdfFontStyle[\"Underline\"] = 4] = \"Underline\";\n    /**\n     * Specifies the type of `Strikeout`.\n     * @private\n     */\n    PdfFontStyle[PdfFontStyle[\"Strikeout\"] = 8] = \"Strikeout\";\n})(PdfFontStyle || (PdfFontStyle = {}));\n/**\n * Specifies the font family from the standard font.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * // create new standard font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * // save the document\n * document.save('output.pdf');\n * ```\n */\nexport var PdfFontFamily;\n(function (PdfFontFamily) {\n    /**\n     * Specifies the `Helvetica` font.\n     */\n    PdfFontFamily[PdfFontFamily[\"Helvetica\"] = 0] = \"Helvetica\";\n    /**\n     * Specifies the `Courier` font.\n     */\n    PdfFontFamily[PdfFontFamily[\"Courier\"] = 1] = \"Courier\";\n    /**\n     * Specifies the `TimesRoman` font.\n     */\n    PdfFontFamily[PdfFontFamily[\"TimesRoman\"] = 2] = \"TimesRoman\";\n    /**\n     * Specifies the `Symbol` font.\n     */\n    PdfFontFamily[PdfFontFamily[\"Symbol\"] = 3] = \"Symbol\";\n    /**\n     * Specifies the `ZapfDingbats` font.\n     */\n    PdfFontFamily[PdfFontFamily[\"ZapfDingbats\"] = 4] = \"ZapfDingbats\";\n})(PdfFontFamily || (PdfFontFamily = {}));\n/**\n * public Enum for `PdfFontType`.\n * @private\n */\nexport var PdfFontType;\n(function (PdfFontType) {\n    /**\n     * Specifies the type of `Standard`.\n     * @private\n     */\n    PdfFontType[PdfFontType[\"Standard\"] = 0] = \"Standard\";\n    /**\n     * Specifies the type of `TrueType`.\n     * @private\n     */\n    PdfFontType[PdfFontType[\"TrueType\"] = 1] = \"TrueType\";\n    /**\n     * Specifies the type of `TrueTypeEmbedded`.\n     * @private\n     */\n    PdfFontType[PdfFontType[\"TrueTypeEmbedded\"] = 2] = \"TrueTypeEmbedded\";\n})(PdfFontType || (PdfFontType = {}));\n/**\n * public Enum for `PdfWordWrapType`.\n * @private\n */\nexport var PdfWordWrapType;\n(function (PdfWordWrapType) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfWordWrapType[PdfWordWrapType[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `Word`.\n     * @private\n     */\n    PdfWordWrapType[PdfWordWrapType[\"Word\"] = 1] = \"Word\";\n    /**\n     * Specifies the type of `WordOnly`.\n     * @private\n     */\n    PdfWordWrapType[PdfWordWrapType[\"WordOnly\"] = 2] = \"WordOnly\";\n    /**\n     * Specifies the type of `Character`.\n     * @private\n     */\n    PdfWordWrapType[PdfWordWrapType[\"Character\"] = 3] = \"Character\";\n})(PdfWordWrapType || (PdfWordWrapType = {}));\n/**\n * public Enum for `PdfSubSuperScript`.\n * @private\n */\nexport var PdfSubSuperScript;\n(function (PdfSubSuperScript) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfSubSuperScript[PdfSubSuperScript[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `SuperScript`.\n     * @private\n     */\n    PdfSubSuperScript[PdfSubSuperScript[\"SuperScript\"] = 1] = \"SuperScript\";\n    /**\n     * Specifies the type of `SubScript`.\n     * @private\n     */\n    PdfSubSuperScript[PdfSubSuperScript[\"SubScript\"] = 2] = \"SubScript\";\n})(PdfSubSuperScript || (PdfSubSuperScript = {}));\n/**\n * public Enum for `FontEncoding`.\n * @private\n */\nexport var FontEncoding;\n(function (FontEncoding) {\n    /**\n     * Specifies the type of `Unknown`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"Unknown\"] = 0] = \"Unknown\";\n    /**\n     * Specifies the type of `StandardEncoding`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"StandardEncoding\"] = 1] = \"StandardEncoding\";\n    /**\n     * Specifies the type of `MacRomanEncoding`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"MacRomanEncoding\"] = 2] = \"MacRomanEncoding\";\n    /**\n     * Specifies the type of `MacExpertEncoding`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"MacExpertEncoding\"] = 3] = \"MacExpertEncoding\";\n    /**\n     * Specifies the type of `WinAnsiEncoding`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"WinAnsiEncoding\"] = 4] = \"WinAnsiEncoding\";\n    /**\n     * Specifies the type of `PdfDocEncoding`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"PdfDocEncoding\"] = 5] = \"PdfDocEncoding\";\n    /**\n     * Specifies the type of `IdentityH`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"IdentityH\"] = 6] = \"IdentityH\";\n})(FontEncoding || (FontEncoding = {}));\n/**\n * public Enum for `TtfCmapFormat`.\n * @private\n */\nexport var TtfCmapFormat;\n(function (TtfCmapFormat) {\n    /**\n     * This is the Apple standard character to glyph index mapping table.\n     * @private\n     */\n    TtfCmapFormat[TtfCmapFormat[\"Apple\"] = 0] = \"Apple\";\n    /**\n     * This is the Microsoft standard character to glyph index mapping table.\n     * @private\n     */\n    TtfCmapFormat[TtfCmapFormat[\"Microsoft\"] = 4] = \"Microsoft\";\n    /**\n     * Format 6: Trimmed table mapping.\n     * @private\n     */\n    TtfCmapFormat[TtfCmapFormat[\"Trimmed\"] = 6] = \"Trimmed\";\n})(TtfCmapFormat || (TtfCmapFormat = {}));\n/**\n * Enumerator that implements CMAP encodings.\n * @private\n */\nexport var TtfCmapEncoding;\n(function (TtfCmapEncoding) {\n    /**\n     * Unknown encoding.\n     * @private\n     */\n    TtfCmapEncoding[TtfCmapEncoding[\"Unknown\"] = 0] = \"Unknown\";\n    /**\n     * When building a symbol font for Windows.\n     * @private\n     */\n    TtfCmapEncoding[TtfCmapEncoding[\"Symbol\"] = 1] = \"Symbol\";\n    /**\n     * When building a Unicode font for Windows.\n     * @private\n     */\n    TtfCmapEncoding[TtfCmapEncoding[\"Unicode\"] = 2] = \"Unicode\";\n    /**\n     * For font that will be used on a Macintosh.\n     * @private\n     */\n    TtfCmapEncoding[TtfCmapEncoding[\"Macintosh\"] = 3] = \"Macintosh\";\n})(TtfCmapEncoding || (TtfCmapEncoding = {}));\n/**\n * Ttf platform ID.\n * @private\n */\nexport var TtfPlatformID;\n(function (TtfPlatformID) {\n    /**\n     * Apple platform.\n     * @private\n     */\n    TtfPlatformID[TtfPlatformID[\"AppleUnicode\"] = 0] = \"AppleUnicode\";\n    /**\n     * Macintosh platform.\n     * @private\n     */\n    TtfPlatformID[TtfPlatformID[\"Macintosh\"] = 1] = \"Macintosh\";\n    /**\n     * Iso platform.\n     * @private\n     */\n    TtfPlatformID[TtfPlatformID[\"Iso\"] = 2] = \"Iso\";\n    /**\n     * Microsoft platform.\n     * @private\n     */\n    TtfPlatformID[TtfPlatformID[\"Microsoft\"] = 3] = \"Microsoft\";\n})(TtfPlatformID || (TtfPlatformID = {}));\n/**\n * Microsoft encoding ID.\n * @private\n */\nexport var TtfMicrosoftEncodingID;\n(function (TtfMicrosoftEncodingID) {\n    /**\n     * Undefined encoding.\n     * @private\n     */\n    TtfMicrosoftEncodingID[TtfMicrosoftEncodingID[\"Undefined\"] = 0] = \"Undefined\";\n    /**\n     * Unicode encoding.\n     * @private\n     */\n    TtfMicrosoftEncodingID[TtfMicrosoftEncodingID[\"Unicode\"] = 1] = \"Unicode\";\n})(TtfMicrosoftEncodingID || (TtfMicrosoftEncodingID = {}));\n/**\n * Macintosh encoding ID.\n * @private\n */\nexport var TtfMacintoshEncodingID;\n(function (TtfMacintoshEncodingID) {\n    /**\n     * Roman encoding.\n     * @private\n     */\n    TtfMacintoshEncodingID[TtfMacintoshEncodingID[\"Roman\"] = 0] = \"Roman\";\n    /**\n     * Japanese encoding.\n     * @private\n     */\n    TtfMacintoshEncodingID[TtfMacintoshEncodingID[\"Japanese\"] = 1] = \"Japanese\";\n    /**\n     * Chinese encoding.\n     * @private\n     */\n    TtfMacintoshEncodingID[TtfMacintoshEncodingID[\"Chinese\"] = 2] = \"Chinese\";\n})(TtfMacintoshEncodingID || (TtfMacintoshEncodingID = {}));\n/**\n * Enumerator that implements font descriptor flags.\n * @private\n */\nexport var FontDescriptorFlags;\n(function (FontDescriptorFlags) {\n    /**\n     * All glyphs have the same width (as opposed to proportional or variable-pitch fonts, which have different widths).\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"FixedPitch\"] = 1] = \"FixedPitch\";\n    /**\n     * Glyphs have serifs, which are short strokes drawn at an angle on the top and\n     * bottom of glyph stems (as opposed to sans serif fonts, which do not).\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"Serif\"] = 2] = \"Serif\";\n    /**\n     * Font contains glyphs outside the Adobe standard Latin character set. The\n     * flag and the nonsymbolic flag cannot both be set or both be clear.\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"Symbolic\"] = 4] = \"Symbolic\";\n    /**\n     * Glyphs resemble cursive handwriting.\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"Script\"] = 8] = \"Script\";\n    /**\n     * Font uses the Adobe standard Latin character set or a subset of it.\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"Nonsymbolic\"] = 32] = \"Nonsymbolic\";\n    /**\n     * Glyphs have dominant vertical strokes that are slanted.\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"Italic\"] = 64] = \"Italic\";\n    /**\n     * Bold font.\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"ForceBold\"] = 262144] = \"ForceBold\";\n})(FontDescriptorFlags || (FontDescriptorFlags = {}));\n/**\n * true type font composite glyph flags.\n * @private\n */\nexport var TtfCompositeGlyphFlags;\n(function (TtfCompositeGlyphFlags) {\n    /**\n     * The Arg1And2AreWords.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"Arg1And2AreWords\"] = 1] = \"Arg1And2AreWords\";\n    /**\n     * The ArgsAreXyValues.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"ArgsAreXyValues\"] = 2] = \"ArgsAreXyValues\";\n    /**\n     * The RoundXyToGrid.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"RoundXyToGrid\"] = 4] = \"RoundXyToGrid\";\n    /**\n     * The WeHaveScale.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"WeHaveScale\"] = 8] = \"WeHaveScale\";\n    /**\n     * The Reserved.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"Reserved\"] = 16] = \"Reserved\";\n    /**\n     * The MoreComponents.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"MoreComponents\"] = 32] = \"MoreComponents\";\n    /**\n     * The WeHaveAnXyScale.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"WeHaveAnXyScale\"] = 64] = \"WeHaveAnXyScale\";\n    /**\n     * The WeHaveTwoByTwo\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"WeHaveTwoByTwo\"] = 128] = \"WeHaveTwoByTwo\";\n    /**\n     * The WeHaveInstructions.\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"WeHaveInstructions\"] = 256] = \"WeHaveInstructions\";\n    /**\n     * The UseMyMetrics.\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"UseMyMetrics\"] = 512] = \"UseMyMetrics\";\n})(TtfCompositeGlyphFlags || (TtfCompositeGlyphFlags = {}));\n","/**\n * PdfStringFormat.ts class for EJ2-PDF\n */\nimport { PdfVerticalAlignment } from './../../graphics/enum';\nimport { PdfSubSuperScript, PdfWordWrapType } from './../../graphics/fonts/enum';\n/**\n * `PdfStringFormat` class represents the text layout information on PDF.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a pages to the document\n * let page1 : PdfPage = document.pages.add();\n * // set font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // set brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * //\n * // set the format for string\n * let stringFormat : PdfStringFormat = new PdfStringFormat();\n * // set the text alignment\n * stringFormat.alignment = PdfTextAlignment.Center;\n * // set the vertical alignment\n * stringFormat.lineAlignment = PdfVerticalAlignment.Middle;\n * //\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfStringFormat = /** @class */ (function () {\n    function PdfStringFormat(arg1, arg2) {\n        /**\n         * The `scaling factor` of the text being drawn.\n         * @private\n         */\n        this.scalingFactor = 100.0;\n        /**\n         * Indicates text `wrapping` type.\n         * @private\n         */\n        this.wordWrapType = PdfWordWrapType.Word;\n        this.internalLineLimit = true;\n        this.wordWrapType = PdfWordWrapType.Word;\n        if ((typeof arg1 !== 'undefined') && (typeof arg1 !== 'string')) {\n            this.textAlignment = arg1;\n        }\n        if (typeof arg2 !== 'undefined') {\n            this.verticalAlignment = arg2;\n        }\n    }\n    Object.defineProperty(PdfStringFormat.prototype, \"alignment\", {\n        //Properties\n        /**\n         * Gets or sets the `horizontal` text alignment\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * //\n         * // set the format for string\n         * let stringFormat : PdfStringFormat = new PdfStringFormat();\n         * // set the text alignment\n         * stringFormat.alignment = PdfTextAlignment.Center;\n         * //\n         * // draw the text\n         * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.textAlignment;\n        },\n        set: function (value) {\n            this.textAlignment = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"textDirection\", {\n        get: function () {\n            return this.direction;\n        },\n        set: function (value) {\n            this.direction = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"lineAlignment\", {\n        /**\n         * Gets or sets the `vertical` text alignment.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * //\n         * // set the format for string\n         * let stringFormat : PdfStringFormat = new PdfStringFormat();\n         * // set the vertical alignment\n         * stringFormat.lineAlignment = PdfVerticalAlignment.Middle;\n         * //\n         * // draw the text\n         * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this.verticalAlignment === 'undefined' || this.verticalAlignment == null) {\n                return PdfVerticalAlignment.Top;\n            }\n            else {\n                return this.verticalAlignment;\n            }\n        },\n        set: function (value) {\n            this.verticalAlignment = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"rightToLeft\", {\n        /**\n         * Gets or sets the value that indicates text `direction` mode.\n         * @private\n         */\n        get: function () {\n            if (typeof this.isRightToLeft === 'undefined' || this.isRightToLeft == null) {\n                return false;\n            }\n            else {\n                return this.isRightToLeft;\n            }\n        },\n        set: function (value) {\n            this.isRightToLeft = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"characterSpacing\", {\n        /**\n         * Gets or sets value that indicates a `size` among the characters in the text.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * //\n         * // set the format for string\n         * let stringFormat : PdfStringFormat = new PdfStringFormat();\n         * // set character spacing\n         * stringFormat.characterSpacing = 10;\n         * //\n         * // draw the text\n         * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this.internalCharacterSpacing === 'undefined' || this.internalCharacterSpacing == null) {\n                return 0;\n            }\n            else {\n                return this.internalCharacterSpacing;\n            }\n        },\n        set: function (value) {\n            this.internalCharacterSpacing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"wordSpacing\", {\n        /**\n         * Gets or sets value that indicates a `size` among the words in the text.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * //\n         * // set the format for string\n         * let stringFormat : PdfStringFormat = new PdfStringFormat();\n         * // set word spacing\n         * stringFormat.wordSpacing = 10;\n         * //\n         * // draw the text\n         * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this.internalWordSpacing === 'undefined' || this.internalWordSpacing == null) {\n                return 0;\n            }\n            else {\n                return this.internalWordSpacing;\n            }\n        },\n        set: function (value) {\n            this.internalWordSpacing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"lineSpacing\", {\n        /**\n         * Gets or sets value that indicates the `vertical distance` between the baselines of adjacent lines of text.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * // set string\n         * let text : string = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor\n         * incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitati';\n         * // set rectangle bounds\n         * let rectangle : RectangleF = new RectangleF({x : 0, y : 0}, {width : 300, height : 100})\n         * //\n         * // set the format for string\n         * let stringFormat : PdfStringFormat = new PdfStringFormat();\n         * // set line spacing\n         * stringFormat.lineSpacing = 10;\n         * //\n         * // draw the text\n         * page1.graphics.drawString(text, font, blackBrush, rectangle, stringFormat);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this.leading === 'undefined' || this.leading == null) {\n                return 0;\n            }\n            else {\n                return this.leading;\n            }\n        },\n        set: function (value) {\n            this.leading = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"clipPath\", {\n        /**\n         * Gets or sets a value indicating whether the text is `clipped` or not.\n         * @private\n         */\n        get: function () {\n            if (typeof this.clip === 'undefined' || this.clip == null) {\n                return false;\n            }\n            else {\n                return this.clip;\n            }\n        },\n        set: function (value) {\n            this.clip = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"subSuperScript\", {\n        /**\n         * Gets or sets value indicating whether the text is in `subscript or superscript` mode.\n         * @private\n         */\n        get: function () {\n            if (typeof this.pdfSubSuperScript === 'undefined' || this.pdfSubSuperScript == null) {\n                return PdfSubSuperScript.None;\n            }\n            else {\n                return this.pdfSubSuperScript;\n            }\n        },\n        set: function (value) {\n            this.pdfSubSuperScript = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"paragraphIndent\", {\n        /**\n         * Gets or sets the `indent` of the first line in the paragraph.\n         * @private\n         */\n        get: function () {\n            if (typeof this.internalParagraphIndent === 'undefined' || this.internalParagraphIndent == null) {\n                return 0;\n            }\n            else {\n                return this.internalParagraphIndent;\n            }\n        },\n        set: function (value) {\n            this.internalParagraphIndent = value;\n            this.firstLineIndent = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"lineLimit\", {\n        /**\n         * Gets or sets a value indicating whether [`line limit`].\n         * @private\n         */\n        get: function () {\n            return this.internalLineLimit;\n        },\n        set: function (value) {\n            this.internalLineLimit = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"measureTrailingSpaces\", {\n        /**\n         * Gets or sets a value indicating whether [`measure trailing spaces`].\n         * @private\n         */\n        get: function () {\n            if (typeof this.trailingSpaces === 'undefined' || this.trailingSpaces == null) {\n                return false;\n            }\n            else {\n                return this.trailingSpaces;\n            }\n        },\n        set: function (value) {\n            this.trailingSpaces = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"noClip\", {\n        /**\n         * Gets or sets a value indicating whether [`no clip`].\n         * @private\n         */\n        get: function () {\n            if (typeof this.isNoClip === 'undefined' || this.isNoClip == null) {\n                return false;\n            }\n            else {\n                return this.isNoClip;\n            }\n        },\n        set: function (value) {\n            this.isNoClip = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"wordWrap\", {\n        /**\n         * Gets or sets value indicating type of the text `wrapping`.\n         * @private\n         */\n        get: function () {\n            // if (typeof this.wrapType === 'undefined' || this.wrapType == null) {\n            //     return PdfWordWrapType.Word;\n            // } else {\n            return this.wordWrapType;\n            // }\n        },\n        set: function (value) {\n            this.wordWrapType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"horizontalScalingFactor\", {\n        /**\n         * Gets or sets the `scaling factor`.\n         * @private\n         */\n        get: function () {\n            // if (typeof this.scalingFactor === 'undefined' || this.scalingFactor == null) {\n            //     return 100;\n            // } else {\n            return this.scalingFactor;\n            // }\n        },\n        set: function (value) {\n            if (value <= 0) {\n                throw new Error('ArgumentOutOfRangeException:The scaling factor cant be less of equal to zero, ScalingFactor');\n            }\n            this.scalingFactor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"firstLineIndent\", {\n        /**\n         * Gets or sets the `indent` of the first line in the text.\n         * @private\n         */\n        get: function () {\n            if (typeof this.initialLineIndent === 'undefined' || this.initialLineIndent == null) {\n                return 0;\n            }\n            else {\n                return this.initialLineIndent;\n            }\n        },\n        set: function (value) {\n            this.initialLineIndent = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Clones` the object.\n     * @private\n     */\n    //IClonable implementation\n    PdfStringFormat.prototype.clone = function () {\n        var format = this;\n        return format;\n    };\n    return PdfStringFormat;\n}());\nexport { PdfStringFormat };\n","/**\n * StringTokenizer.ts class for EJ2-PDF\n * Utility class for working with strings.\n * @private\n */\nvar StringTokenizer = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `StringTokenizer` class.\n     * @private\n     */\n    function StringTokenizer(textValue) {\n        /**\n         * Current `position`.\n         * @private\n         */\n        this.currentPosition = 0;\n        if (textValue == null) {\n            throw new Error('ArgumentNullException:text');\n        }\n        this.text = textValue;\n    }\n    Object.defineProperty(StringTokenizer.prototype, \"length\", {\n        // Properties\n        /**\n         * Gets text `length`.\n         * @private\n         */\n        get: function () {\n            return this.text.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StringTokenizer.prototype, \"end\", {\n        get: function () {\n            return (this.currentPosition === this.text.length);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StringTokenizer.prototype, \"position\", {\n        /**\n         * Gets or sets the position.\n         * @private\n         */\n        get: function () {\n            return this.currentPosition;\n        },\n        set: function (value) {\n            this.currentPosition = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    StringTokenizer.getCharsCount = function (text, symbols) {\n        if (typeof symbols === 'string') {\n            if (text == null) {\n                throw new Error('ArgumentNullException:wholeText');\n            }\n            var numSymbols = 0;\n            var curIndex = 0;\n            for (;;) {\n                curIndex = text.indexOf(symbols, curIndex);\n                if (curIndex === -1) {\n                    break;\n                }\n                else {\n                    numSymbols++;\n                    curIndex++;\n                }\n            }\n            return numSymbols;\n        }\n        else {\n            if (text == null) {\n                throw new Error('ArgumentNullException:text');\n            }\n            if (symbols == null) {\n                throw new Error('ArgumentNullException:symbols');\n            }\n            var count = 0;\n            for (var i = 0, len = text.length; i < len; i++) {\n                var ch = text[i];\n                if (this.contains(symbols, ch)) {\n                    count++;\n                }\n            }\n            return count;\n        }\n    };\n    /**\n     * Reads line of the text.\n     * @private\n     */\n    StringTokenizer.prototype.readLine = function () {\n        var pos = this.currentPosition;\n        while (pos < this.length) {\n            var ch = this.text[pos];\n            switch (ch) {\n                case '\\r':\n                case '\\n': {\n                    var text = this.text.substring(this.currentPosition, pos - this.currentPosition);\n                    this.currentPosition = pos + 1;\n                    this.currentPosition++;\n                    return text;\n                }\n            }\n            pos++;\n        }\n        // The remaining text.\n        if (pos > this.currentPosition) {\n            var text2 = this.text.substring(this.currentPosition, pos - this.currentPosition);\n            this.currentPosition = pos;\n            return text2;\n        }\n        return null;\n    };\n    /**\n     * Reads line of the text.\n     * @private\n     */\n    StringTokenizer.prototype.peekLine = function () {\n        var pos = this.currentPosition;\n        var line = this.readLine();\n        this.currentPosition = pos;\n        return line;\n    };\n    /**\n     * Reads a word from the text.\n     * @private\n     */\n    StringTokenizer.prototype.readWord = function () {\n        var pos = this.currentPosition;\n        while (pos < this.length) {\n            var ch = this.text[pos];\n            switch (ch) {\n                case '\\r':\n                case '\\n':\n                    var textValue = this.text.substr(this.currentPosition, pos - this.currentPosition);\n                    this.currentPosition = pos + 1;\n                    if (((ch === '\\r') && (this.currentPosition < this.length)) && (this.text[this.currentPosition] === '\\n')) {\n                        this.currentPosition++;\n                    }\n                    return textValue;\n                case ' ':\n                case '\\t': {\n                    if (pos === this.currentPosition) {\n                        pos++;\n                    }\n                    var text = this.text.substr(this.currentPosition, pos - this.currentPosition);\n                    this.currentPosition = pos;\n                    return text;\n                }\n            }\n            pos++;\n        }\n        // The remaining text.\n        if (pos > this.currentPosition) {\n            var text2 = this.text.substr(this.currentPosition, pos - this.currentPosition);\n            this.currentPosition = pos;\n            return text2;\n        }\n        return null;\n    };\n    /**\n     * Peeks a word from the text.\n     * @private\n     */\n    StringTokenizer.prototype.peekWord = function () {\n        var pos = this.currentPosition;\n        var word = this.readWord();\n        this.currentPosition = pos;\n        return word;\n    };\n    StringTokenizer.prototype.read = function (count) {\n        if (typeof count === 'undefined') {\n            var ch = '0';\n            if (!this.end) {\n                ch = this.text[this.currentPosition];\n                this.currentPosition++;\n            }\n            return ch;\n        }\n        else {\n            var num = 0;\n            var builder = '';\n            while (!this.end && num < count) {\n                var ch = this.read();\n                builder = builder + ch;\n                num++;\n            }\n            return builder;\n        }\n    };\n    /**\n     * Peeks char form the data.\n     * @private\n     */\n    StringTokenizer.prototype.peek = function () {\n        var ch = '0';\n        if (!this.end) {\n            ch = this.text[this.currentPosition];\n        }\n        return ch;\n    };\n    /**\n     * Closes a reader.\n     * @private\n     */\n    StringTokenizer.prototype.close = function () {\n        this.text = null;\n    };\n    StringTokenizer.prototype.readToEnd = function () {\n        var text;\n        if (this.currentPosition === 0) {\n            text = this.text;\n        }\n        else {\n            text = this.text.substring(this.length, this.currentPosition);\n        }\n        this.currentPosition = this.length;\n        return text;\n    };\n    //Implementation\n    /**\n     * Checks whether array contains a symbol.\n     * @private\n     */\n    StringTokenizer.contains = function (array, symbol) {\n        var contains = false;\n        for (var i = 0; i < array.length; i++) {\n            if (array[i] === symbol) {\n                contains = true;\n                break;\n            }\n        }\n        return contains;\n    };\n    // Constants\n    /**\n     * `Whitespace` symbol.\n     * @private\n     */\n    StringTokenizer.whiteSpace = ' ';\n    /**\n     * `tab` symbol.\n     * @private\n     */\n    StringTokenizer.tab = '\\t';\n    /**\n     * Array of `spaces`.\n     * @private\n     */\n    StringTokenizer.spaces = [StringTokenizer.whiteSpace, StringTokenizer.tab];\n    /**\n     * `Pattern` for WhiteSpace.\n     * @private\n     */\n    StringTokenizer.whiteSpacePattern = '^[ \\t]+$';\n    return StringTokenizer;\n}());\nexport { StringTokenizer };\n","import { SizeF, RectangleF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfWordWrapType } from './enum';\nimport { StringTokenizer } from './string-tokenizer';\n/**\n * Class `lay outing the text`.\n */\nvar PdfStringLayouter = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `StringLayouter` class.\n     * @private\n     */\n    function PdfStringLayouter() {\n        /**\n         * Checks whether the x co-ordinate is need to set as client size or not.\n         * @hidden\n         * @private\n         */\n        this.isOverloadWithPosition = false;\n        //\n    }\n    PdfStringLayouter.prototype.layout = function (arg1, arg2, arg3, arg4, arg5, arg6, arg7) {\n        if (arg4 instanceof RectangleF) {\n            this.initialize(arg1, arg2, arg3, arg4, arg5);\n            this.isOverloadWithPosition = arg6;\n            this.clientSize = arg7;\n            var result = this.doLayout();\n            this.clear();\n            return result;\n        }\n        else {\n            this.initialize(arg1, arg2, arg3, arg4);\n            this.isOverloadWithPosition = arg5;\n            this.clientSize = arg6;\n            var result = this.doLayout();\n            this.clear();\n            return result;\n        }\n    };\n    PdfStringLayouter.prototype.initialize = function (text, font, format, rectSize, pageHeight) {\n        if (typeof pageHeight === 'number') {\n            if (text == null) {\n                throw new Error('ArgumentNullException:text');\n            }\n            if (font == null) {\n                throw new Error('ArgumentNullException:font');\n            }\n            this.text = text;\n            this.font = font;\n            this.format = format;\n            this.size = new SizeF(rectSize.width, rectSize.height);\n            this.rectangle = rectSize;\n            this.pageHeight = pageHeight;\n            this.reader = new StringTokenizer(text);\n        }\n        else {\n            this.initialize(text, font, format, new RectangleF(new PointF(0, 0), rectSize), 0);\n        }\n    };\n    /**\n     * `Clear` all resources.\n     * @private\n     */\n    PdfStringLayouter.prototype.clear = function () {\n        this.font = null;\n        this.format = null;\n        this.reader.close();\n        this.reader = null;\n        this.text = null;\n    };\n    /**\n     * `Layouts` the text.\n     * @private\n     */\n    PdfStringLayouter.prototype.doLayout = function () {\n        var result = new PdfStringLayoutResult();\n        var lineResult = new PdfStringLayoutResult();\n        var lines = [];\n        var line = this.reader.peekLine();\n        var lineIndent = this.getLineIndent(true);\n        while (line != null) {\n            lineResult = this.layoutLine(line, lineIndent);\n            if (lineResult !== null || typeof lineResult !== 'undefined') {\n                var numSymbolsInserted = 0;\n                /* tslint:disable */\n                var returnedValue = this.copyToResult(result, lineResult, lines, /*out*/ numSymbolsInserted);\n                /* tslint:enable */\n                var success = returnedValue.success;\n                numSymbolsInserted = returnedValue.numInserted;\n                if (!success) {\n                    this.reader.read(numSymbolsInserted);\n                    break;\n                }\n            }\n            // if (lineResult.textRemainder != null && lineResult.textRemainder.length > 0 ) {\n            //     break;\n            // }\n            this.reader.readLine();\n            line = this.reader.peekLine();\n            lineIndent = this.getLineIndent(false);\n        }\n        this.finalizeResult(result, lines);\n        return result;\n    };\n    /**\n     * Returns `line indent` for the line.\n     * @private\n     */\n    PdfStringLayouter.prototype.getLineIndent = function (firstLine) {\n        var lineIndent = 0;\n        if (this.format != null) {\n            lineIndent = (firstLine) ? this.format.firstLineIndent : this.format.paragraphIndent;\n            lineIndent = (this.size.width > 0) ? Math.min(this.size.width, lineIndent) : lineIndent;\n        }\n        return lineIndent;\n    };\n    /**\n     * Calculates `height` of the line.\n     * @private\n     */\n    PdfStringLayouter.prototype.getLineHeight = function () {\n        var height = this.font.height;\n        if (this.format != null && this.format.lineSpacing !== 0) {\n            height = this.format.lineSpacing + this.font.height;\n        }\n        return height;\n    };\n    /**\n     * Calculates `width` of the line.\n     * @private\n     */\n    PdfStringLayouter.prototype.getLineWidth = function (line) {\n        var width = this.font.getLineWidth(line, this.format);\n        return width;\n    };\n    // tslint:disable\n    /**\n     * `Layouts` line.\n     * @private\n     */\n    PdfStringLayouter.prototype.layoutLine = function (line, lineIndent) {\n        var lineResult = new PdfStringLayoutResult();\n        lineResult.layoutLineHeight = this.getLineHeight();\n        var lines = [];\n        var maxWidth = this.size.width;\n        var lineWidth = this.getLineWidth(line) + lineIndent;\n        var lineType = LineType.FirstParagraphLine;\n        var readWord = true;\n        // line is in bounds.\n        if (maxWidth <= 0 || Math.round(lineWidth) <= Math.round(maxWidth)) {\n            this.addToLineResult(lineResult, lines, line, lineWidth, LineType.NewLineBreak | lineType);\n        }\n        else {\n            var builder = '';\n            var curLine = '';\n            lineWidth = lineIndent;\n            var curIndent = lineIndent;\n            var reader = new StringTokenizer(line);\n            var word = reader.peekWord();\n            var isSingleWord = false;\n            if (word.length !== reader.length) {\n                if (word === ' ') {\n                    curLine = curLine + word;\n                    builder = builder + word;\n                    reader.position += 1;\n                    word = reader.peekWord();\n                }\n            }\n            while (word != null) {\n                curLine = curLine + word;\n                var curLineWidth = this.getLineWidth(curLine.toString()) + curIndent /*)*/;\n                if (curLine.toString() === ' ') {\n                    curLine = '';\n                    curLineWidth = 0;\n                }\n                if (curLineWidth > maxWidth) {\n                    if (this.getWrapType() === PdfWordWrapType.None) {\n                        break;\n                    }\n                    if (curLine.length === word.length) {\n                        //  Character wrap is disabled or one symbol is greater than bounds.\n                        if (this.getWrapType() === PdfWordWrapType.WordOnly) {\n                            lineResult.textRemainder = line.substring(reader.position);\n                            break;\n                        }\n                        else if (curLine.length === 1) {\n                            builder = builder + word;\n                            break;\n                        }\n                        else {\n                            readWord = false;\n                            curLine = '';\n                            word = reader.peek().toString();\n                            continue;\n                        }\n                    }\n                    else {\n                        if (this.getLineWidth(word.toString()) > maxWidth) {\n                            this.format.wordWrap = PdfWordWrapType.Character;\n                        }\n                        else {\n                            if (typeof this.format !== 'undefined' && this.format !== null) {\n                                this.format.wordWrap = PdfWordWrapType.Word;\n                            }\n                        }\n                        if (this.getWrapType() !== PdfWordWrapType.Character || !readWord) {\n                            var ln = builder.toString();\n                            // if (ln.indexOf(' ') === -1) {\n                            //     isSingleWord = true;\n                            //     this.addToLineResult(lineResult, lines, curLine, lineWidth, LineType.LayoutBreak | lineType);\n                            // } else {\n                            //     this.addToLineResult(lineResult, lines, ln, lineWidth, LineType.LayoutBreak | lineType);\n                            // }                          \n                            if (ln !== ' ') {\n                                this.addToLineResult(lineResult, lines, ln, lineWidth, LineType.LayoutBreak | lineType);\n                            }\n                            if (this.isOverloadWithPosition) {\n                                maxWidth = this.clientSize.width;\n                            }\n                            curLine = '';\n                            builder = '';\n                            lineWidth = 0;\n                            curIndent = 0;\n                            curLineWidth = 0;\n                            lineType = LineType.None;\n                            // if (isSingleWord) {\n                            //     reader.readWord();\n                            //     readWord = false;\n                            // }\n                            word = (readWord) ? word : reader.peekWord();\n                            //isSingleWord = false;\n                            readWord = true;\n                        }\n                        else {\n                            readWord = false;\n                            curLine = '';\n                            curLine = curLine + builder.toString();\n                            word = reader.peek().toString();\n                        }\n                        continue;\n                    }\n                }\n                /*tslint:disable:max-func-body-length */\n                builder = builder + word;\n                lineWidth = curLineWidth;\n                if (readWord) {\n                    reader.readWord();\n                    word = reader.peekWord();\n                    //isSingleWord = false;\n                }\n                else {\n                    reader.read();\n                    word = reader.peek().toString();\n                }\n            }\n            if (builder.length > 0) {\n                var ln = builder.toString();\n                this.addToLineResult(lineResult, lines, ln, lineWidth, LineType.NewLineBreak | LineType.LastParagraphLine);\n            }\n            reader.close();\n        }\n        lineResult.layoutLines = [];\n        for (var index = 0; index < lines.length; index++) {\n            lineResult.layoutLines.push(lines[index]);\n        }\n        lines = [];\n        return lineResult;\n    };\n    /**\n     * `Adds` line to line result.\n     * @private\n     */\n    PdfStringLayouter.prototype.addToLineResult = function (lineResult, lines, line, lineWidth, breakType) {\n        var info = new LineInfo();\n        info.text = line;\n        info.width = lineWidth;\n        info.lineType = breakType;\n        lines.push(info);\n        var size = lineResult.actualSize;\n        size.height += this.getLineHeight();\n        size.width = Math.max(size.width, lineWidth);\n        lineResult.size = size;\n    };\n    /**\n     * `Copies` layout result from line result to entire result. Checks whether we can proceed lay outing or not.\n     * @private\n     */\n    PdfStringLayouter.prototype.copyToResult = function (result, lineResult, lines, \n    /*out*/ numInserted) {\n        var success = true;\n        var allowPartialLines = (this.format != null && !this.format.lineLimit);\n        var height = result.actualSize.height;\n        var maxHeight = this.size.height;\n        if ((this.pageHeight > 0) && (maxHeight + this.rectangle.y > this.pageHeight)) {\n            maxHeight = this.rectangle.y - this.pageHeight;\n            maxHeight = Math.max(maxHeight, -maxHeight);\n        }\n        numInserted = 0;\n        if (lineResult.lines != null) {\n            for (var i = 0, len = lineResult.lines.length; i < len; i++) {\n                var expHeight = height + lineResult.lineHeight;\n                if (expHeight <= maxHeight || maxHeight <= 0 || allowPartialLines) {\n                    var info = lineResult.lines[i];\n                    numInserted += info.text.length;\n                    info = this.trimLine(info, (lines.length === 0));\n                    lines.push(info);\n                    // Update width.\n                    var size = result.actualSize;\n                    size.width = Math.max(size.width, info.width);\n                    result.size = size;\n                    // The part of the line fits only and it's allowed to use partial lines.\n                    // if (expHeight >= maxHeight && maxHeight > 0 && allowPartialLines)\n                    // {\n                    //     let shouldClip : boolean = (this.format == null || !this.format.noClip);\n                    //     if (shouldClip)\n                    //     {\n                    //         let exceededHeight : number = expHeight - maxHeight;\n                    //         let fitHeight : number  = /*Utils.Round(*/ lineResult.lineHeight - exceededHeight /*)*/;\n                    //         height = /*Utils.Round(*/ height + fitHeight /*)*/;\n                    //     }\n                    //     else\n                    //     {\n                    //         height = expHeight;\n                    //     }\n                    //     success = false;\n                    //     break;\n                    // } else {\n                    height = expHeight;\n                    // }\n                }\n                else {\n                    success = false;\n                    break;\n                }\n            }\n        }\n        if (height != result.size.height) {\n            var size1 = result.actualSize;\n            size1.height = height;\n            result.size = size1;\n        }\n        return { success: success, numInserted: numInserted };\n    };\n    /**\n     * `Finalizes` final result.\n     * @private\n     */\n    PdfStringLayouter.prototype.finalizeResult = function (result, lines) {\n        result.layoutLines = [];\n        for (var index = 0; index < lines.length; index++) {\n            result.layoutLines.push(lines[index]);\n        }\n        result.layoutLineHeight = this.getLineHeight();\n        if (!this.reader.end) {\n            result.textRemainder = this.reader.readToEnd();\n        }\n        lines = [];\n    };\n    /**\n     * `Trims` whitespaces at the line.\n     * @private\n     */\n    PdfStringLayouter.prototype.trimLine = function (info, firstLine) {\n        var line = info.text;\n        var lineWidth = info.width;\n        // Trim start whitespaces if the line is not a start of the paragraph only.\n        var trimStartSpaces = ((info.lineType & LineType.FirstParagraphLine) === 0);\n        var start = (this.format == null || !this.format.rightToLeft);\n        var spaces = StringTokenizer.spaces;\n        line = (start) ? line.trim() : line.trim();\n        // Recalculate line width.\n        if (line.length !== info.text.length) {\n            lineWidth = this.getLineWidth(line);\n            if ((info.lineType & LineType.FirstParagraphLine) > 0) {\n                lineWidth += this.getLineIndent(firstLine);\n            }\n        }\n        info.text = line;\n        info.width = lineWidth;\n        return info;\n    };\n    /**\n     * Returns `wrap` type.\n     * @private\n     */\n    PdfStringLayouter.prototype.getWrapType = function () {\n        var wrapType = (this.format != null) ? this.format.wordWrap : PdfWordWrapType.Word;\n        return wrapType;\n    };\n    return PdfStringLayouter;\n}());\nexport { PdfStringLayouter };\n//Internal declaration\nvar PdfStringLayoutResult = /** @class */ (function () {\n    function PdfStringLayoutResult() {\n    }\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"remainder\", {\n        // Properties\n        /**\n         * Gets the `text` which is not lay outed.\n         * @private\n         */\n        get: function () {\n            return this.textRemainder;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"actualSize\", {\n        /**\n         * Gets the actual layout text `bounds`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.size === 'undefined') {\n                this.size = new SizeF(0, 0);\n            }\n            return this.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"lines\", {\n        /**\n         * Gets layout `lines` information.\n         * @private\n         */\n        get: function () {\n            return this.layoutLines;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"lineHeight\", {\n        /**\n         * Gets the `height` of the line.\n         * @private\n         */\n        get: function () {\n            return this.layoutLineHeight;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"empty\", {\n        /**\n         * Gets value that indicates whether any layout text [`empty`].\n         * @private\n         */\n        get: function () {\n            return (this.layoutLines == null || this.layoutLines.length === 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"lineCount\", {\n        /**\n         * Gets `number of` the layout lines.\n         * @private\n         */\n        get: function () {\n            var count = (!this.empty) ? this.layoutLines.length : 0;\n            return count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfStringLayoutResult;\n}());\nexport { PdfStringLayoutResult };\nvar LineInfo = /** @class */ (function () {\n    function LineInfo() {\n    }\n    Object.defineProperty(LineInfo.prototype, \"lineType\", {\n        //Properties\n        /**\n         * Gets the `type` of the line text.\n         * @private\n         */\n        get: function () {\n            return this.type;\n        },\n        set: function (value) {\n            this.type = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LineInfo.prototype, \"text\", {\n        /**\n         * Gets the line `text`.\n         * @private\n         */\n        get: function () {\n            return this.content;\n        },\n        set: function (value) {\n            this.content = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LineInfo.prototype, \"width\", {\n        /**\n         * Gets `width` of the line text.\n         * @private\n         */\n        get: function () {\n            return this.lineWidth;\n        },\n        set: function (value) {\n            this.lineWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return LineInfo;\n}());\nexport { LineInfo };\n/**\n* Break type of the `line`.\n* @private\n*/\nexport var LineType;\n(function (LineType) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    LineType[LineType[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `NewLineBreak`.\n     * @private\n     */\n    LineType[LineType[\"NewLineBreak\"] = 1] = \"NewLineBreak\";\n    /**\n     * Specifies the type of `LayoutBreak`.\n     * @private\n     */\n    LineType[LineType[\"LayoutBreak\"] = 2] = \"LayoutBreak\";\n    /**\n     * Specifies the type of `FirstParagraphLine`.\n     * @private\n     */\n    LineType[LineType[\"FirstParagraphLine\"] = 4] = \"FirstParagraphLine\";\n    /**\n     * Specifies the type of `LastParagraphLine`.\n     * @private\n     */\n    LineType[LineType[\"LastParagraphLine\"] = 8] = \"LastParagraphLine\";\n})(LineType || (LineType = {}));\n","/**\n * PdfFont.ts class for EJ2-PDF\n */\nimport { PdfFontStyle } from './enum';\nimport { SizeF } from './../../drawing/pdf-drawing';\nimport { PdfStringFormat } from './pdf-string-format';\nimport { PdfStringLayouter } from './string-layouter';\nimport { StringTokenizer } from './string-tokenizer';\n/**\n * Defines a particular format for text, including font face, size, and style attributes.\n * @private\n */\nvar PdfFont = /** @class */ (function () {\n    function PdfFont(size, style) {\n        /**\n         * `Style` of the font.\n         * @private\n         */\n        this.fontStyle = PdfFontStyle.Regular;\n        if (typeof size === 'number' && typeof style === 'undefined') {\n            this.fontSize = size;\n        }\n        else {\n            this.fontSize = size;\n            this.setStyle(style);\n        }\n    }\n    Object.defineProperty(PdfFont.prototype, \"name\", {\n        //Properties\n        /**\n         * Gets the face name of this Font.\n         * @private\n         */\n        get: function () {\n            return this.metrics.name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"size\", {\n        /**\n         * Gets the size of this font.\n         * @private\n         */\n        get: function () {\n            return this.fontSize;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"height\", {\n        /**\n         * Gets the height of the font in points.\n         * @private\n         */\n        get: function () {\n            return this.metrics.getHeight(null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"style\", {\n        /**\n         * Gets the style information for this font.\n         * @private\n         */\n        get: function () {\n            return this.fontStyle;\n        },\n        set: function (value) {\n            this.fontStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"bold\", {\n        /**\n         * Gets a value indicating whether this `PdfFont` is `bold`.\n         * @private\n         */\n        get: function () {\n            return ((this.style & PdfFontStyle.Bold) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"italic\", {\n        /**\n         * Gets a value indicating whether this `PdfFont` has the `italic` style applied.\n         * @private\n         */\n        get: function () {\n            return ((this.style & PdfFontStyle.Italic) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"strikeout\", {\n        /**\n         * Gets a value indicating whether this `PdfFont` is `strikeout`.\n         * @private\n         */\n        get: function () {\n            return ((this.style & PdfFontStyle.Strikeout) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"underline\", {\n        /**\n         * Gets a value indicating whether this `PdfFont` is `underline`.\n         * @private\n         */\n        get: function () {\n            return ((this.style & PdfFontStyle.Underline) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"metrics\", {\n        /**\n         * Gets or sets the `metrics` for this font.\n         * @private\n         */\n        get: function () {\n            return this.fontMetrics;\n        },\n        set: function (value) {\n            this.fontMetrics = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"element\", {\n        // /**\n        //  * Gets and Sets the font `internals`.\n        //  * @private\n        //  */\n        // public get fontInternal() : IPdfPrimitive {\n        //     return this.pdfFontInternals;\n        // }\n        // public set fontInternal(value : IPdfPrimitive) {\n        //     this.pdfFontInternals = value;\n        // }\n        //IPdfWrapper Members\n        /**\n         * Gets the `element` representing the font.\n         * @private\n         */\n        get: function () {\n            return this.pdfFontInternals;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfFont.prototype.measureString = function (text, arg2, arg3, arg4, arg5) {\n        if (typeof text === 'string' && typeof arg2 === 'undefined') {\n            return this.measureString(text, null);\n        }\n        else if (typeof text === 'string' && (arg2 instanceof PdfStringFormat || arg2 == null) && typeof arg3 === 'undefined' && typeof arg4 === 'undefined') {\n            var temparg2 = arg2;\n            var charactersFitted = 0;\n            var linesFilled = 0;\n            return this.measureString(text, temparg2, charactersFitted, linesFilled);\n        }\n        else if (typeof text === 'string' && (arg2 instanceof PdfStringFormat || arg2 == null) && typeof arg3 === 'number' && typeof arg4 === 'number') {\n            var temparg2 = arg2;\n            return this.measureString(text, 0, temparg2, arg3, arg4);\n            // } else if (typeof text === 'string' && typeof arg2 === 'number' && typeof arg3 === 'undefined') {\n            //     return this.measureString(text, arg2, null);\n            // } else if (typeof text === 'string' && typeof arg2 === 'number' && (arg3 instanceof PdfStringFormat || arg3 == null) && typeof arg4 === 'undefined' && typeof arg5 === 'undefined') {\n            //     let temparg3 : PdfStringFormat = arg3 as PdfStringFormat;\n            //     let charactersFitted : number = 0;\n            //     let linesFilled : number = 0;\n            //     return this.measureString(text, arg2, temparg3, charactersFitted, linesFilled);\n        }\n        else if (typeof text === 'string' && typeof arg2 === 'number' && (arg3 instanceof PdfStringFormat || arg3 == null) && typeof arg4 === 'number' && typeof arg5 === 'number') {\n            var layoutArea = new SizeF(arg2, 0);\n            var temparg3 = arg3;\n            return this.measureString(text, layoutArea, temparg3, arg4, arg5);\n            // } else if (typeof text === 'string' && arg2 instanceof SizeF && typeof arg3 === 'undefined') {\n            //     return this.measureString(text, arg2, null);\n            // } else if (typeof text === 'string' && arg2 instanceof SizeF && (arg3 instanceof PdfStringFormat || arg3 == null) && typeof arg4 === 'undefined' && typeof arg5 === 'undefined') {\n            //     let temparg3 : PdfStringFormat = arg3 as PdfStringFormat;\n            //     let charactersFitted : number = 0;\n            //     let linesFilled : number = 0;\n            //     return this.measureString(text, arg2, temparg3, charactersFitted, linesFilled);\n        }\n        else {\n            if (text == null) {\n                throw Error(\"ArgumentNullException(\\\"text\\\")\");\n            }\n            var temparg2 = arg2;\n            var temparg3 = arg3;\n            var layouter = new PdfStringLayouter();\n            var result = layouter.layout(text, this, temparg3, temparg2, false, new SizeF(0, 0));\n            // arg4 = (result.Remainder == null) ? text.length : text.length - result.Remainder.length;\n            arg4 = text.length;\n            arg5 = (result.empty) ? 0 : result.lines.length;\n            return result.actualSize;\n        }\n    };\n    /* tslint:enable */\n    //IPdfCache Members\n    /**\n     * `Checks` whether the object is similar to another object.\n     * @private\n     */\n    PdfFont.prototype.equalsTo = function (obj) {\n        var result = this.equalsToFont(obj);\n        return result;\n    };\n    /**\n     * Returns `internals` of the object.\n     * @private\n     */\n    PdfFont.prototype.getInternals = function () {\n        return this.pdfFontInternals;\n    };\n    /**\n     * Sets `internals` to the object.\n     * @private\n     */\n    PdfFont.prototype.setInternals = function (internals) {\n        if (internals == null) {\n            throw new Error('ArgumentNullException:internals');\n        }\n        this.pdfFontInternals = internals;\n    };\n    /**\n     * Sets the `style` of the font.\n     * @private\n     */\n    PdfFont.prototype.setStyle = function (style) {\n        this.fontStyle = style;\n    };\n    /**\n     * Applies `settings` to the default line width.\n     * @private\n     */\n    PdfFont.prototype.applyFormatSettings = function (line, format, width) {\n        // if (line == null) {\n        //     throw new Error(`ArgumentNullException:line`);\n        // }\n        var realWidth = width;\n        if (format != null && width > 0) {\n            // Space among characters is not default.\n            if (format.characterSpacing !== 0) {\n                realWidth += (line.length - 1) * format.characterSpacing;\n            }\n            // Space among words is not default.\n            if (format.wordSpacing !== 0) {\n                var symbols = StringTokenizer.spaces;\n                var whitespacesCount = StringTokenizer.getCharsCount(line, symbols);\n                realWidth += whitespacesCount * format.wordSpacing;\n            }\n        }\n        return realWidth;\n    };\n    //Constants\n    /**\n     * `Multiplier` of the symbol width.\n     * @default 0.001\n     * @private\n     */\n    PdfFont.charSizeMultiplier = 0.001;\n    /**\n     * `Synchronization` object.\n     * @private\n     */\n    PdfFont.syncObject = new Object();\n    return PdfFont;\n}());\nexport { PdfFont };\n","/**\n * Used to `write a string` into output file.\n * @private\n */\nvar PdfWriter = /** @class */ (function () {\n    /**\n     * Initialize an instance of `PdfWriter` class.\n     * @private\n     */\n    function PdfWriter(stream) {\n        this.streamWriter = stream;\n    }\n    Object.defineProperty(PdfWriter.prototype, \"document\", {\n        //properties\n        /**\n         * Gets and Sets the `document`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument;\n        },\n        set: function (value) {\n            this.pdfDocument = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWriter.prototype, \"position\", {\n        /**\n         * Gets the `position`.\n         * @private\n         */\n        get: function () {\n            return this.streamWriter.buffer.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWriter.prototype, \"length\", {\n        /**\n         * Gets  the `length` of the stream'.\n         * @private\n         */\n        get: function () {\n            return this.streamWriter.buffer.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWriter.prototype, \"stream\", {\n        /**\n         * Gets the `stream`.\n         * @private\n         */\n        get: function () {\n            var result = this.streamWriter;\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //public Methods\n    /**\n     * `Writes the specified data`.\n     * @private\n     */\n    PdfWriter.prototype.write = function (overload) {\n        var data = [];\n        var tempOverload = overload;\n        this.streamWriter.write(tempOverload);\n    };\n    return PdfWriter;\n}());\nexport { PdfWriter };\n","/**\n * public Enum for `CompositeFontType`.\n * @private\n */\nexport var ObjectStatus;\n(function (ObjectStatus) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    ObjectStatus[ObjectStatus[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `Registered`.\n     * @private\n     */\n    ObjectStatus[ObjectStatus[\"Registered\"] = 1] = \"Registered\";\n})(ObjectStatus || (ObjectStatus = {}));\n","/**\n * PdfMainObjectCollection.ts class for EJ2-PDF\n */\nimport { Dictionary } from './../collections/dictionary';\nimport { ObjectStatus } from './enum';\n/**\n * The collection of all `objects` within a PDF document.\n * @private\n */\nvar PdfMainObjectCollection = /** @class */ (function () {\n    function PdfMainObjectCollection() {\n        //Fields\n        /**\n         * The collection of the `indirect objects`.\n         * @default []\n         * @private\n         */\n        this.objectCollections = [];\n        /**\n         * The collection of the `Indirect objects`.\n         * @default new Dictionary<number, ObjectInfo>()\n         * @private\n         */\n        this.mainObjectCollection = new Dictionary();\n        /**\n         * The collection of `primitive objects`.\n         * @private\n         */\n        this.primitiveObjectCollection = new Dictionary();\n    }\n    Object.defineProperty(PdfMainObjectCollection.prototype, \"count\", {\n        //Properties\n        /**\n         * Gets the `count`.\n         * @private\n         */\n        get: function () {\n            return this.objectCollections.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the value of `ObjectInfo` from object collection.\n     * @private\n     */\n    PdfMainObjectCollection.prototype.items = function (index) {\n        return this.objectCollections[index];\n    };\n    Object.defineProperty(PdfMainObjectCollection.prototype, \"outIsNew\", {\n        //Methods\n        /**\n         * Specifies the value of `IsNew`.\n         * @private\n         */\n        get: function () {\n            return this.isNew;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Adds` the specified element.\n     * @private\n     */\n    PdfMainObjectCollection.prototype.add = function (element) {\n        var objInfo = new ObjectInfo(element);\n        this.objectCollections.push(objInfo);\n        if (!this.primitiveObjectCollection.containsKey(element)) {\n            this.primitiveObjectCollection.setValue(element, this.objectCollections.length - 1);\n        }\n        element.position = this.index = this.objectCollections.length - 1;\n        element.status = ObjectStatus.Registered;\n    };\n    /**\n     * `Looks` through the collection for the object specified.\n     * @private\n     */\n    PdfMainObjectCollection.prototype.lookFor = function (obj) {\n        var index = -1;\n        if (obj.position !== -1) {\n            return obj.position;\n        }\n        if (this.primitiveObjectCollection.containsKey(obj) && this.count === this.primitiveObjectCollection.size()) {\n            index = this.primitiveObjectCollection.getValue(obj);\n        }\n        else {\n            for (var i = this.count - 1; i >= 0; i--) {\n                var oi = this.objectCollections[i];\n                if (oi.object === obj) {\n                    index = i;\n                    break;\n                }\n            }\n        }\n        return index;\n    };\n    /**\n     * Gets the `reference of the object`.\n     * @private\n     */\n    PdfMainObjectCollection.prototype.getReference = function (index, isNew) {\n        this.index = this.lookFor(index);\n        var reference;\n        this.isNew = false;\n        var oi = this.objectCollections[this.index];\n        reference = oi.reference;\n        var obj = { reference: reference, wasNew: isNew };\n        return obj;\n    };\n    /**\n     * Tries to set the `reference to the object`.\n     * @private\n     */\n    PdfMainObjectCollection.prototype.trySetReference = function (obj, reference, found) {\n        var result = true;\n        found = true;\n        this.index = this.lookFor(obj);\n        var oi = this.objectCollections[this.index];\n        oi.setReference(reference);\n        return result;\n    };\n    PdfMainObjectCollection.prototype.destroy = function () {\n        for (var _i = 0, _a = this.objectCollections; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            if (obj !== undefined) {\n                obj.pdfObject.position = -1;\n                obj.pdfObject.isSaving = undefined;\n                obj.pdfObject.objectCollectionIndex = undefined;\n                obj.pdfObject.position = undefined;\n            }\n        }\n        this.objectCollections = [];\n        this.mainObjectCollection = new Dictionary();\n        this.primitiveObjectCollection = new Dictionary();\n    };\n    return PdfMainObjectCollection;\n}());\nexport { PdfMainObjectCollection };\nvar ObjectInfo = /** @class */ (function () {\n    function ObjectInfo(obj, reference) {\n        this.pdfObject = obj;\n        this.pdfReference = reference;\n    }\n    Object.defineProperty(ObjectInfo.prototype, \"object\", {\n        //Properties\n        /**\n         * Gets the `object`.\n         * @private\n         */\n        get: function () {\n            return this.pdfObject;\n        },\n        set: function (value) {\n            this.pdfObject = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ObjectInfo.prototype, \"reference\", {\n        /**\n         * Gets the `reference`.\n         * @private\n         */\n        get: function () {\n            return this.pdfReference;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets the `reference`.\n     * @private\n     */\n    ObjectInfo.prototype.setReference = function (reference) {\n        this.pdfReference = reference;\n    };\n    return ObjectInfo;\n}());\nexport { ObjectInfo };\n","import { StreamWriter } from '@syncfusion/ej2-file-utils';\nimport { Encoding } from '@syncfusion/ej2-file-utils';\nimport { PdfDocument } from './pdf-document';\n/**\n * `PdfDocumentBase` class represent common properties of PdfDocument classes.\n * @private\n */\nvar PdfDocumentBase = /** @class */ (function () {\n    function PdfDocumentBase(document) {\n        /**\n         * If the stream is copied,  then it specifies true.\n         * @private\n         */\n        this.isStreamCopied = false;\n        if (document instanceof PdfDocument) {\n            this.document = document;\n        }\n    }\n    Object.defineProperty(PdfDocumentBase.prototype, \"pdfObjects\", {\n        //Prpperties\n        /**\n         * Gets the `PDF objects` collection, which stores all objects and references to it..\n         * @private\n         */\n        get: function () {\n            return this.objects;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentBase.prototype, \"crossTable\", {\n        /**\n         * Gets the `cross-reference` table.\n         * @private\n         */\n        get: function () {\n            return this.pdfCrossTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentBase.prototype, \"currentSavingObj\", {\n        /**\n         * Gets or sets the current saving `object number`.\n         * @private\n         */\n        get: function () {\n            return this.currentSavingObject;\n        },\n        set: function (value) {\n            this.currentSavingObject = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentBase.prototype, \"catalog\", {\n        /**\n         * Gets the PDF document `catalog`.\n         * @private\n         */\n        get: function () {\n            return this.pdfCatalog;\n        },\n        set: function (value) {\n            this.pdfCatalog = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Public methods\n    /**\n     * Sets the `main object collection`.\n     * @private\n     */\n    PdfDocumentBase.prototype.setMainObjectCollection = function (mainObjectCollection) {\n        this.objects = mainObjectCollection;\n    };\n    /**\n     * Sets the `cross table`.\n     * @private\n     */\n    PdfDocumentBase.prototype.setCrossTable = function (cTable) {\n        this.pdfCrossTable = cTable;\n    };\n    /**\n     * Sets the `catalog`.\n     * @private\n     */\n    PdfDocumentBase.prototype.setCatalog = function (catalog) {\n        this.pdfCatalog = catalog;\n    };\n    PdfDocumentBase.prototype.save = function (filename) {\n        var _this = this;\n        var encoding = new Encoding(true);\n        var SW = new StreamWriter(encoding);\n        if (typeof filename === 'undefined') {\n            var encoding_1 = new Encoding(true);\n            var SW_1 = new StreamWriter(encoding_1);\n            return new Promise(function (resolve, reject) {\n                /* tslint:disable-next-line:no-any */\n                var obj = {};\n                obj.blobData = new Blob([_this.document.docSave(SW_1, true)], { type: 'application/pdf' });\n                resolve(obj);\n            });\n        }\n        else {\n            this.document.docSave(SW, filename, true);\n        }\n    };\n    /**\n     * `Clone` of parent object - PdfDocument.\n     * @private\n     */\n    PdfDocumentBase.prototype.clone = function () {\n        return this.document;\n    };\n    return PdfDocumentBase;\n}());\nexport { PdfDocumentBase };\n","/**\n * public Enum for `ObjectType`.\n * @private\n */\nexport var ObjectType;\n(function (ObjectType) {\n    /**\n     * Specifies the type of `Free`.\n     * @private\n     */\n    ObjectType[ObjectType[\"Free\"] = 0] = \"Free\";\n    /**\n     * Specifies the type of `Normal`.\n     * @private\n     */\n    ObjectType[ObjectType[\"Normal\"] = 1] = \"Normal\";\n    /**\n     * Specifies the type of `Packed`.\n     * @private\n     */\n    ObjectType[ObjectType[\"Packed\"] = 2] = \"Packed\";\n})(ObjectType || (ObjectType = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfCatalog.ts class for EJ2-PDF\n */\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\n/**\n * `PdfCatalog` class represents internal catalog of the Pdf document.\n * @private\n */\nvar PdfCatalog = /** @class */ (function (_super) {\n    __extends(PdfCatalog, _super);\n    //constructor\n    /**\n     * Initializes a new instance of the `PdfCatalog` class.\n     * @private\n     */\n    function PdfCatalog() {\n        var _this = _super.call(this) || this;\n        //fields\n        /**\n         * Internal variable to store collection of `sections`.\n         * @default null\n         * @private\n         */\n        _this.sections = null;\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @private\n         */\n        _this.tempDictionaryProperties = new DictionaryProperties();\n        _this.items.setValue(new DictionaryProperties().type, new PdfName('Catalog'));\n        return _this;\n    }\n    Object.defineProperty(PdfCatalog.prototype, \"pages\", {\n        //Properties\n        /**\n         * Gets or sets the sections, which contain `pages`.\n         * @private\n         */\n        get: function () {\n            return this.sections;\n        },\n        set: function (value) {\n            var dictionary = value.element;\n            // if (this.sections !== value) {\n            //     this.sections = value;\n            //     this.Items.setValue(this.tempDictionaryProperties.pages, new PdfReferenceHolder(value));\n            // }\n            this.sections = value;\n            this.items.setValue(this.tempDictionaryProperties.pages, new PdfReferenceHolder(value));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfCatalog;\n}(PdfDictionary));\nexport { PdfCatalog };\n","import { ObjectStatus } from './../input-output/enum';\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './pdf-dictionary-properties';\nimport { Operators } from './pdf-operators';\nimport { Dictionary } from './../collections/dictionary';\nimport { PdfReference } from './../primitives/pdf-reference';\nimport { ObjectType } from './cross-table';\nimport { PdfStream } from './../primitives/pdf-stream';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfCatalog } from './../document/pdf-catalog';\n/**\n * `PdfCrossTable` is responsible for intermediate level parsing\n * and savingof a PDF document.\n * @private\n */\nvar PdfCrossTable = /** @class */ (function () {\n    function PdfCrossTable() {\n        /**\n         * The modified `objects` that should be saved.\n         * @private\n         */\n        this.objects = new Dictionary();\n        /**\n         * Holds `maximal generation number` or offset to object.\n         * @default 0\n         * @private\n         */\n        this.maxGenNumIndex = 0;\n        /**\n         * The `number of the objects`.\n         * @default 0\n         * @private\n         */\n        this.objectCount = 0;\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @default new PdfDictionaryProperties()\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n    }\n    Object.defineProperty(PdfCrossTable.prototype, \"isMerging\", {\n        //Properties\n        /**\n         * Gets or sets if the document `is merged`.\n         * @private\n         */\n        get: function () {\n            return this.merging;\n        },\n        set: function (value) {\n            this.merging = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"trailer\", {\n        /**\n         * Gets the `trailer`.\n         * @private\n         */\n        get: function () {\n            if (this.internalTrailer == null) {\n                this.internalTrailer = new PdfStream();\n            }\n            return this.internalTrailer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"document\", {\n        /**\n         * Gets or sets the main `PdfDocument` class instance.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument;\n        },\n        set: function (value) {\n            this.pdfDocument = value;\n            this.items = this.pdfDocument.pdfObjects;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"pdfObjects\", {\n        /**\n         * Gets the catched `PDF object` main collection.\n         * @private\n         */\n        get: function () {\n            return this.items;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"objectCollection\", {\n        /**\n         * Gets the `object collection`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument.pdfObjects;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"count\", {\n        /**\n         * Gets or sets the `number of the objects` within the document.\n         * @private\n         */\n        get: function () {\n            return this.objectCount;\n        },\n        set: function (value) {\n            this.objectCount = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"nextObjNumber\", {\n        /**\n         * Returns `next available object number`.\n         * @private\n         */\n        get: function () {\n            this.count = this.count + 1;\n            return this.count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfCrossTable.prototype.save = function (writer, filename) {\n        this.saveHead(writer);\n        var state = false;\n        this.mappedReferences = null;\n        this.objects.clear();\n        this.markTrailerReferences();\n        this.saveObjects(writer);\n        var saveCount = this.count;\n        var xrefPos = writer.position;\n        this.registerObject(0, new PdfReference(0, -1), true);\n        var prevXRef = 0;\n        writer.write(Operators.xref);\n        writer.write(Operators.newLine);\n        this.saveSections(writer);\n        this.saveTrailer(writer, this.count, prevXRef);\n        this.saveTheEndess(writer, xrefPos);\n        this.count = saveCount;\n        for (var i = 0; i < this.objectCollection.count; ++i) {\n            var oi = this.objectCollection.items(i);\n            oi.object.isSaving = false;\n        }\n        if (typeof filename === 'undefined') {\n            return writer.stream.buffer;\n        }\n        else {\n            writer.stream.save(filename);\n        }\n    };\n    /**\n     * `Saves the endess` of the file.\n     * @private\n     */\n    PdfCrossTable.prototype.saveTheEndess = function (writer, xrefPos) {\n        writer.write(Operators.newLine + Operators.startxref + Operators.newLine);\n        writer.write(xrefPos.toString() + Operators.newLine);\n        writer.write(Operators.eof + Operators.newLine);\n    };\n    /**\n     * `Saves the new trailer` dictionary.\n     * @private\n     */\n    PdfCrossTable.prototype.saveTrailer = function (writer, count, prevXRef) {\n        writer.write(Operators.trailer + Operators.newLine);\n        // Save the dictionary.\n        var trailer = this.trailer;\n        trailer.items.setValue(this.dictionaryProperties.size, new PdfNumber(this.objectCount + 1));\n        trailer = new PdfDictionary(trailer); // Make it real dictionary.\n        trailer.setEncrypt(false);\n        trailer.save(writer);\n    };\n    /**\n     * `Saves the xref section`.\n     * @private\n     */\n    PdfCrossTable.prototype.saveSections = function (writer) {\n        var objectNum = 0;\n        var count = 0;\n        do {\n            count = this.prepareSubsection(objectNum);\n            this.saveSubsection(writer, objectNum, count);\n            objectNum += count;\n        } while (count !== 0);\n    };\n    /**\n     * `Saves a subsection`.\n     * @private\n     */\n    PdfCrossTable.prototype.saveSubsection = function (writer, objectNum, count) {\n        if (count <= 0 || objectNum >= this.count) {\n            return;\n        }\n        var subsectionHead = '{0} {1}{2}';\n        writer.write(objectNum + ' ' + (count + 1) + Operators.newLine);\n        for (var i = objectNum; i <= objectNum + count; ++i) {\n            var obj = this.objects.getValue(i);\n            var str = '';\n            if (obj.type === ObjectType.Free) {\n                str = this.getItem(obj.offset, 65535, true);\n            }\n            else {\n                str = this.getItem(obj.offset, obj.generation, false);\n            }\n            writer.write(str);\n        }\n    };\n    /**\n     * Generates string for `xref table item`.\n     * @private\n     */\n    PdfCrossTable.prototype.getItem = function (offset, genNumber, isFree) {\n        var returnString = '';\n        var addOffsetLength = 10 - offset.toString().length;\n        if (genNumber <= 0) {\n            genNumber = 0;\n        }\n        var addGenNumberLength = (5 - genNumber.toString().length) <= 0 ? 0 : (5 - genNumber.toString().length);\n        for (var index = 0; index < addOffsetLength; index++) {\n            returnString = returnString + '0';\n        }\n        returnString = returnString + offset.toString() + ' ';\n        for (var index = 0; index < addGenNumberLength; index++) {\n            returnString = returnString + '0';\n        }\n        returnString = returnString + genNumber.toString() + ' ';\n        returnString = returnString + ((isFree) ? Operators.f : Operators.n) + Operators.newLine;\n        return returnString;\n    };\n    /**\n     * `Prepares a subsection` of the current section within the cross-reference table.\n     * @private\n     */\n    PdfCrossTable.prototype.prepareSubsection = function (objectNum) {\n        var count = 0;\n        var i;\n        var total = this.count;\n        for (var k = 0; k < this.document.pdfObjects.count; k++) {\n            var reference = this.document.pdfObjects.items(k).reference;\n            var refString = reference.toString();\n            var refArray = refString.split(' ');\n        }\n        if (objectNum >= total) {\n            return count;\n        }\n        // search for first changed indirect object.\n        for (i = objectNum; i < total; ++i) {\n            break;\n        }\n        objectNum = i;\n        // look up for all indirect objects in one subsection.\n        for (; i < total; ++i) {\n            ++count;\n        }\n        return count;\n    };\n    /**\n     * `Marks the trailer references` being saved.\n     * @private\n     */\n    PdfCrossTable.prototype.markTrailerReferences = function () {\n        var tempArray;\n        var keys = this.trailer.items.keys();\n        var values = this.trailer.items.values();\n    };\n    /**\n     * `Saves the head`.\n     * @private\n     */\n    PdfCrossTable.prototype.saveHead = function (writer) {\n        var version = this.generateFileVersion(writer.document);\n        writer.write('%PDF-' + version);\n        writer.write(Operators.newLine);\n    };\n    /**\n     * Generates the `version` of the file.\n     * @private\n     */\n    PdfCrossTable.prototype.generateFileVersion = function (document) {\n        var iVersion = 4;\n        var version = '1.' + iVersion.toString();\n        return version;\n    };\n    PdfCrossTable.prototype.getReference = function (obj, bNew) {\n        if (typeof bNew === 'undefined') {\n            var wasNew = false;\n            return this.getReference(obj, wasNew);\n        }\n        else {\n            //code splitted for reducing lines of code exceeds 100.\n            return this.getSubReference(obj, bNew);\n        }\n    };\n    /**\n     * Retrieves the `reference` of the object given.\n     * @private\n     */\n    PdfCrossTable.prototype.getSubReference = function (obj, bNew) {\n        var isNew = false;\n        var wasNew;\n        var reference = null;\n        // if (obj.IsSaving) {\n        if (this.items.count > 0 && obj.objectCollectionIndex > 0 && this.items.count > obj.objectCollectionIndex - 1) {\n            var tempObj = this.document.pdfObjects.getReference(obj, wasNew);\n            reference = tempObj.reference;\n            wasNew = tempObj.wasNew;\n        }\n        if (reference == null) {\n            if (obj.status === ObjectStatus.Registered) {\n                wasNew = false;\n            }\n            else {\n                wasNew = true;\n            }\n        }\n        else {\n            wasNew = false;\n        }\n        // need to add mapped reference code\n        if (reference == null) {\n            var objnumber = this.nextObjNumber;\n            reference = new PdfReference(objnumber, 0);\n            var found = void 0;\n            if (wasNew) {\n                this.document.pdfObjects.add(obj);\n                this.document.pdfObjects.trySetReference(obj, reference, found);\n                var tempIndex = this.document.pdfObjects.count - 1;\n                var tempkey = this.document.pdfObjects.objectCollections[tempIndex].reference.objNumber;\n                var tempvalue = this.document.pdfObjects.objectCollections[this.document.pdfObjects.count - 1];\n                this.document.pdfObjects.mainObjectCollection.setValue(tempkey, tempvalue);\n                obj.position = -1;\n            }\n            else {\n                this.document.pdfObjects.trySetReference(obj, reference, found);\n            }\n            obj.objectCollectionIndex = reference.objNumber;\n            obj.status = ObjectStatus.None;\n            isNew = true;\n        }\n        bNew = isNew || this.bForceNew;\n        return reference;\n    };\n    /**\n     * `Saves all objects` in the collection.\n     * @private\n     */\n    PdfCrossTable.prototype.saveObjects = function (writer) {\n        var objectCollection = this.objectCollection;\n        for (var i = 0; i < objectCollection.count; ++i) {\n            var oi = objectCollection.items(i);\n            var obj = oi.object;\n            obj.isSaving = true;\n            this.saveIndirectObject(obj, writer);\n        }\n    };\n    /**\n     * `Saves indirect object`.\n     * @private\n     */\n    PdfCrossTable.prototype.saveIndirectObject = function (obj, writer) {\n        var reference = this.getReference(obj);\n        if (obj instanceof PdfCatalog) {\n            this.trailer.items.setValue(this.dictionaryProperties.root, reference);\n        }\n        // NOTE :  This is needed for correct string objects encryption.\n        this.pdfDocument.currentSavingObj = reference;\n        var tempArchive = false;\n        tempArchive = obj.getArchive();\n        var allowedType = !((obj instanceof PdfStream) || !tempArchive || (obj instanceof PdfCatalog));\n        var sigFlag = false;\n        this.registerObject(writer.position, reference);\n        this.doSaveObject(obj, reference, writer);\n    };\n    /**\n     * Performs `real saving` of the save object.\n     * @private\n     */\n    PdfCrossTable.prototype.doSaveObject = function (obj, reference, writer) {\n        var correctPosition = writer.length;\n        writer.write(reference.objNumber.toString());\n        writer.write(Operators.whiteSpace);\n        writer.write(reference.genNumber.toString());\n        writer.write(Operators.whiteSpace);\n        writer.write(Operators.obj);\n        writer.write(Operators.newLine);\n        obj.save(writer);\n        var stream = writer.stream;\n        writer.write(Operators.endObj);\n        writer.write(Operators.newLine);\n    };\n    PdfCrossTable.prototype.registerObject = function (offset, reference, free) {\n        if (typeof free === 'boolean') {\n            // Register the object by its number.\n            this.objects.setValue(reference.objNumber, new RegisteredObject(offset, reference, free));\n            this.maxGenNumIndex = Math.max(this.maxGenNumIndex, reference.genNumber);\n        }\n        else if (typeof free === 'undefined') {\n            // Register the object by its number.\n            this.objects.setValue(reference.objNumber, new RegisteredObject(offset, reference));\n            this.maxGenNumIndex = Math.max(this.maxGenNumIndex, reference.genNumber);\n        }\n    };\n    /**\n     * `Dereferences` the specified primitive object.\n     * @private\n     */\n    PdfCrossTable.dereference = function (obj) {\n        var rh = obj;\n        if (rh != null) {\n            obj = rh.object;\n        }\n        return obj;\n    };\n    return PdfCrossTable;\n}());\nexport { PdfCrossTable };\nvar RegisteredObject = /** @class */ (function () {\n    function RegisteredObject(offset, reference, free) {\n        var tempOffset = offset;\n        this.offsetNumber = tempOffset;\n        var tempReference = reference;\n        this.generation = tempReference.genNumber;\n        this.object = tempReference.objNumber;\n        if (typeof free === 'undefined') {\n            this.type = ObjectType.Normal;\n        }\n        else {\n            this.type = ObjectType.Free;\n        }\n    }\n    Object.defineProperty(RegisteredObject.prototype, \"objectNumber\", {\n        //Properties\n        /**\n         * Gets the `object number`.\n         * @private\n         */\n        get: function () {\n            return this.object;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RegisteredObject.prototype, \"offset\", {\n        /**\n         * Gets the `offset`.\n         * @private\n         */\n        get: function () {\n            var result;\n            result = this.offsetNumber;\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return RegisteredObject;\n}());\nexport { RegisteredObject };\n","/**\n * PdfPageSize.ts class for EJ2-PDF\n */\nimport { SizeF } from './../drawing/pdf-drawing';\n/**\n * Represents information about various predefined `page sizes`.\n */\nvar PdfPageSize = /** @class */ (function () {\n    //constructor\n    /**\n     * Initialize an instance for `PdfPageSize` class.\n     * @private\n     */\n    function PdfPageSize() {\n        // \n    }\n    /**\n     * Specifies the size of `letter`.\n     * @private\n     */\n    PdfPageSize.letter = new SizeF(612, 792);\n    /**\n     * Specifies the size of `note`.\n     * @private\n     */\n    PdfPageSize.note = new SizeF(540, 720);\n    /**\n     * Specifies the size of `legal`.\n     * @private\n     */\n    PdfPageSize.legal = new SizeF(612, 1008);\n    /**\n     * Specifies the size of `a0`.\n     * @private\n     */\n    PdfPageSize.a0 = new SizeF(2380, 3368);\n    /**\n     * Specifies the size of `a1`.\n     * @private\n     */\n    PdfPageSize.a1 = new SizeF(1684, 2380);\n    /**\n     * Specifies the size of `a2`.\n     * @private\n     */\n    PdfPageSize.a2 = new SizeF(1190, 1684);\n    /**\n     * Specifies the size of `a3`.\n     * @private\n     */\n    PdfPageSize.a3 = new SizeF(842, 1190);\n    /**\n     * Specifies the size of `a4`.\n     * @private\n     */\n    PdfPageSize.a4 = new SizeF(595, 842);\n    /**\n     * Specifies the size of `a5`.\n     * @private\n     */\n    PdfPageSize.a5 = new SizeF(421, 595);\n    /**\n     * Specifies the size of `a6`.\n     * @private\n     */\n    PdfPageSize.a6 = new SizeF(297, 421);\n    /**\n     * Specifies the size of `a7`.\n     * @private\n     */\n    PdfPageSize.a7 = new SizeF(210, 297);\n    /**\n     * Specifies the size of `a8`.\n     * @private\n     */\n    PdfPageSize.a8 = new SizeF(148, 210);\n    /**\n     * Specifies the size of `a9`.\n     * @private\n     */\n    PdfPageSize.a9 = new SizeF(105, 148);\n    /**\n     * Specifies the size of `a10`.\n     * @private\n     */\n    PdfPageSize.a10 = new SizeF(74, 105);\n    /**\n     * Specifies the size of `b0`.\n     * @private\n     */\n    PdfPageSize.b0 = new SizeF(2836, 4008);\n    /**\n     * Specifies the size of `b1`.\n     * @private\n     */\n    PdfPageSize.b1 = new SizeF(2004, 2836);\n    /**\n     * Specifies the size of `b2`.\n     * @private\n     */\n    PdfPageSize.b2 = new SizeF(1418, 2004);\n    /**\n     * Specifies the size of `b3`.\n     * @private\n     */\n    PdfPageSize.b3 = new SizeF(1002, 1418);\n    /**\n     * Specifies the size of `b4`.\n     * @private\n     */\n    PdfPageSize.b4 = new SizeF(709, 1002);\n    /**\n     * Specifies the size of `b5`.\n     * @private\n     */\n    PdfPageSize.b5 = new SizeF(501, 709);\n    /**\n     * Specifies the size of `archE`.\n     * @private\n     */\n    PdfPageSize.archE = new SizeF(2592, 3456);\n    /**\n     * Specifies the size of `archD`.\n     * @private\n     */\n    PdfPageSize.archD = new SizeF(1728, 2592);\n    /**\n     * Specifies the size of `archC`.\n     * @private\n     */\n    PdfPageSize.archC = new SizeF(1296, 1728);\n    /**\n     * Specifies the size of `archB`.\n     * @private\n     */\n    PdfPageSize.archB = new SizeF(864, 1296);\n    /**\n     * Specifies the size of `archA`.\n     * @private\n     */\n    PdfPageSize.archA = new SizeF(648, 864);\n    /**\n     * Specifies the size of `flsa`.\n     * @private\n     */\n    PdfPageSize.flsa = new SizeF(612, 936);\n    /**\n     * Specifies the size of `halfLetter`.\n     * @private\n     */\n    PdfPageSize.halfLetter = new SizeF(396, 612);\n    /**\n     * Specifies the size of `letter11x17`.\n     * @private\n     */\n    PdfPageSize.letter11x17 = new SizeF(792, 1224);\n    /**\n     * Specifies the size of `ledger`.\n     * @private\n     */\n    PdfPageSize.ledger = new SizeF(1224, 792);\n    return PdfPageSize;\n}());\nexport { PdfPageSize };\n","/**\n * public Enum for `PdfPageOrientation`.\n * @private\n */\nexport var PdfPageOrientation;\n(function (PdfPageOrientation) {\n    /**\n     * Specifies the type of `Portrait`.\n     * @private\n     */\n    PdfPageOrientation[PdfPageOrientation[\"Portrait\"] = 0] = \"Portrait\";\n    /**\n     * Specifies the type of `Landscape`.\n     * @private\n     */\n    PdfPageOrientation[PdfPageOrientation[\"Landscape\"] = 1] = \"Landscape\";\n})(PdfPageOrientation || (PdfPageOrientation = {}));\n/**\n * public Enum for `PdfPageRotateAngle`.\n * @private\n */\nexport var PdfPageRotateAngle;\n(function (PdfPageRotateAngle) {\n    /**\n     * Specifies the type of `RotateAngle0`.\n     * @private\n     */\n    PdfPageRotateAngle[PdfPageRotateAngle[\"RotateAngle0\"] = 0] = \"RotateAngle0\";\n    /**\n     * Specifies the type of `RotateAngle90`.\n     * @private\n     */\n    PdfPageRotateAngle[PdfPageRotateAngle[\"RotateAngle90\"] = 1] = \"RotateAngle90\";\n    /**\n     * Specifies the type of `RotateAngle180`.\n     * @private\n     */\n    PdfPageRotateAngle[PdfPageRotateAngle[\"RotateAngle180\"] = 2] = \"RotateAngle180\";\n    /**\n     * Specifies the type of `RotateAngle270`.\n     * @private\n     */\n    PdfPageRotateAngle[PdfPageRotateAngle[\"RotateAngle270\"] = 3] = \"RotateAngle270\";\n})(PdfPageRotateAngle || (PdfPageRotateAngle = {}));\n/**\n * public Enum for `PdfNumberStyle`.\n * @private\n */\nexport var PdfNumberStyle;\n(function (PdfNumberStyle) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `Numeric`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"Numeric\"] = 1] = \"Numeric\";\n    /**\n     * Specifies the type of `LowerLatin`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"LowerLatin\"] = 2] = \"LowerLatin\";\n    /**\n     * Specifies the type of `LowerRoman`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"LowerRoman\"] = 3] = \"LowerRoman\";\n    /**\n     * Specifies the type of `UpperLatin`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"UpperLatin\"] = 4] = \"UpperLatin\";\n    /**\n     * Specifies the type of `UpperRoman`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"UpperRoman\"] = 5] = \"UpperRoman\";\n})(PdfNumberStyle || (PdfNumberStyle = {}));\n/**\n * public Enum for `PdfDockStyle`.\n * @private\n */\nexport var PdfDockStyle;\n(function (PdfDockStyle) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `Bottom`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"Bottom\"] = 1] = \"Bottom\";\n    /**\n     * Specifies the type of `Top`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"Top\"] = 2] = \"Top\";\n    /**\n     * Specifies the type of `Left`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"Left\"] = 3] = \"Left\";\n    /**\n     * Specifies the type of `Right`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"Right\"] = 4] = \"Right\";\n    /**\n     * Specifies the type of `Fill`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"Fill\"] = 5] = \"Fill\";\n})(PdfDockStyle || (PdfDockStyle = {}));\n/**\n * public Enum for `PdfAlignmentStyle`.\n * @private\n */\nexport var PdfAlignmentStyle;\n(function (PdfAlignmentStyle) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `TopLeft`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"TopLeft\"] = 1] = \"TopLeft\";\n    /**\n     * Specifies the type of `TopCenter`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"TopCenter\"] = 2] = \"TopCenter\";\n    /**\n     * Specifies the type of `TopRight`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"TopRight\"] = 3] = \"TopRight\";\n    /**\n     * Specifies the type of `MiddleLeft`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"MiddleLeft\"] = 4] = \"MiddleLeft\";\n    /**\n     * Specifies the type of `MiddleCenter`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"MiddleCenter\"] = 5] = \"MiddleCenter\";\n    /**\n     * Specifies the type of `MiddleRight`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"MiddleRight\"] = 6] = \"MiddleRight\";\n    /**\n     * Specifies the type of `BottomLeft`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"BottomLeft\"] = 7] = \"BottomLeft\";\n    /**\n     * Specifies the type of `BottomCenter`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"BottomCenter\"] = 8] = \"BottomCenter\";\n    /**\n     * Specifies the type of `BottomRight`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"BottomRight\"] = 9] = \"BottomRight\";\n})(PdfAlignmentStyle || (PdfAlignmentStyle = {}));\n/**\n * public Enum for `TemplateType`.\n * @private\n */\nexport var TemplateType;\n(function (TemplateType) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    TemplateType[TemplateType[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `Top`.\n     * @private\n     */\n    TemplateType[TemplateType[\"Top\"] = 1] = \"Top\";\n    /**\n     * Specifies the type of `Bottom`.\n     * @private\n     */\n    TemplateType[TemplateType[\"Bottom\"] = 2] = \"Bottom\";\n    /**\n     * Specifies the type of `Left`.\n     * @private\n     */\n    TemplateType[TemplateType[\"Left\"] = 3] = \"Left\";\n    /**\n     * Specifies the type of `Right`.\n     * @private\n     */\n    TemplateType[TemplateType[\"Right\"] = 4] = \"Right\";\n})(TemplateType || (TemplateType = {}));\n","/**\n * PdfMargins.ts class for EJ2-PDF\n * A class representing PDF page margins.\n */\nvar PdfMargins = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfMargins` class.\n     * @private\n     */\n    function PdfMargins() {\n        /**\n         * Represents the `Default Page Margin` value.\n         * @default 0.0\n         * @private\n         */\n        this.pdfMargin = 40.0;\n        this.setMargins(this.pdfMargin);\n    }\n    Object.defineProperty(PdfMargins.prototype, \"left\", {\n        //Properties\n        /**\n         * Gets or sets the `left margin` size.\n         * @private\n         */\n        get: function () {\n            return this.leftMargin;\n        },\n        set: function (value) {\n            this.leftMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"top\", {\n        /**\n         * Gets or sets the `top margin` size.\n         * @private\n         */\n        get: function () {\n            return this.topMargin;\n        },\n        set: function (value) {\n            this.topMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"right\", {\n        /**\n         * Gets or sets the `right margin` size.\n         * @private\n         */\n        get: function () {\n            return this.rightMargin;\n        },\n        set: function (value) {\n            this.rightMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"bottom\", {\n        /**\n         * Gets or sets the `bottom margin` size.\n         * @private\n         */\n        get: function () {\n            return this.bottomMargin;\n        },\n        set: function (value) {\n            this.bottomMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"all\", {\n        /**\n         * Sets the `margins`.\n         * @private\n         */\n        set: function (value) {\n            this.setMargins(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfMargins.prototype.setMargins = function (margin1, margin2, margin3, margin4) {\n        if (typeof margin2 === 'undefined') {\n            this.leftMargin = this.topMargin = this.rightMargin = this.bottomMargin = margin1;\n        }\n        else {\n            if (typeof margin3 === 'undefined') {\n                this.leftMargin = this.rightMargin = margin1;\n                this.bottomMargin = this.topMargin = margin2;\n            }\n            else {\n                this.leftMargin = margin1;\n                this.topMargin = margin2;\n                this.rightMargin = margin3;\n                this.bottomMargin = margin4;\n            }\n        }\n    };\n    /**\n     * `Clones` the object.\n     * @private\n     */\n    PdfMargins.prototype.clone = function () {\n        return this;\n    };\n    return PdfMargins;\n}());\nexport { PdfMargins };\n","/**\n * PdfPageSettings.ts class for EJ2-PDF\n */\nimport { SizeF, PointF } from './../drawing/pdf-drawing';\nimport { PdfPageSize } from './pdf-page-size';\nimport { PdfPageRotateAngle, PdfPageOrientation } from './enum';\nimport { PdfMargins } from './../graphics/pdf-margins';\n/**\n * The class provides various `setting` related with PDF pages.\n */\nvar PdfPageSettings = /** @class */ (function () {\n    function PdfPageSettings(margins) {\n        //Fields\n        /**\n         * The page `margins`.\n         * @private\n         */\n        this.pageMargins = new PdfMargins();\n        /**\n         * The page `size`.\n         * @default a4\n         * @private\n         */\n        this.pageSize = PdfPageSize.a4;\n        /**\n         * The page `rotation angle`.\n         * @default PdfPageRotateAngle.RotateAngle0\n         * @private\n         */\n        this.rotateAngle = PdfPageRotateAngle.RotateAngle0;\n        /**\n         * The page `orientation`.\n         * @default PdfPageOrientation.Portrait\n         * @private\n         */\n        this.pageOrientation = PdfPageOrientation.Portrait;\n        /**\n         * The page `origin`.\n         * @default 0,0\n         * @private\n         */\n        this.pageOrigin = new PointF(0, 0);\n        /**\n         * Checks the Whether the `rotation` is applied or not.\n         * @default false\n         * @private\n         */\n        this.isRotation = false;\n        if (typeof margins === 'number') {\n            this.pageMargins.setMargins(margins);\n        }\n    }\n    Object.defineProperty(PdfPageSettings.prototype, \"size\", {\n        //Properties\n        /**\n         * Gets or sets the `size` of the page.\n         * @private\n         */\n        get: function () {\n            return this.pageSize;\n        },\n        set: function (value) {\n            this.setSize(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"orientation\", {\n        /**\n         * Gets or sets the page `orientation`.\n         * @private\n         */\n        get: function () {\n            return this.pageOrientation;\n        },\n        set: function (orientation) {\n            if (this.pageOrientation !== orientation) {\n                this.pageOrientation = orientation;\n                this.updateSize(orientation);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"margins\", {\n        /**\n         * Gets or sets the `margins` of the page.\n         * @private\n         */\n        get: function () {\n            return this.pageMargins;\n        },\n        set: function (value) {\n            this.pageMargins = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"width\", {\n        /**\n         * Gets or sets the `width` of the page.\n         * @private\n         */\n        get: function () {\n            return this.pageSize.width;\n        },\n        set: function (value) {\n            this.pageSize.width = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"height\", {\n        /**\n         * Gets or sets the `height` of the page.\n         * @private\n         */\n        get: function () {\n            return this.pageSize.height;\n        },\n        set: function (value) {\n            this.pageSize.height = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"origin\", {\n        /**\n         * Gets or sets the `origin` of the page.\n         * @private\n         */\n        get: function () {\n            return this.pageOrigin;\n        },\n        set: function (value) {\n            this.pageOrigin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"rotate\", {\n        /**\n         * Gets or sets the number of degrees by which the page should be `rotated` clockwise when displayed or printed.\n         * @private\n         */\n        get: function () {\n            return this.rotateAngle;\n        },\n        set: function (value) {\n            this.rotateAngle = value;\n            this.isRotation = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Methods\n    /**\n     * `Update page size` depending on orientation.\n     * @private\n     */\n    PdfPageSettings.prototype.updateSize = function (orientation) {\n        var min = Math.min(this.pageSize.width, this.pageSize.height);\n        var max = Math.max(this.pageSize.width, this.pageSize.height);\n        switch (orientation) {\n            case PdfPageOrientation.Portrait:\n                this.pageSize = new SizeF(min, max);\n                break;\n            case PdfPageOrientation.Landscape:\n                this.pageSize = new SizeF(max, min);\n                break;\n        }\n    };\n    /**\n     * Creates a `clone` of the object.\n     * @private\n     */\n    PdfPageSettings.prototype.clone = function () {\n        var settings = this;\n        settings.pageMargins = this.pageMargins.clone();\n        // if (GetTransition() != null)\n        // {\n        //     settings.Transition = (PdfPageTransition)Transition.clone();\n        // }\n        return settings;\n    };\n    /**\n     * Returns `size`, shrinked by the margins.\n     * @private\n     */\n    PdfPageSettings.prototype.getActualSize = function () {\n        var width = this.width - (this.margins.left + this.margins.right);\n        var height = this.height - (this.margins.top + this.margins.bottom);\n        var size = new SizeF(width, height);\n        return size;\n    };\n    /**\n     * Sets `size` to the page aaccording to the orientation.\n     * @private\n     */\n    PdfPageSettings.prototype.setSize = function (size) {\n        var min = Math.min(size.width, size.height);\n        var max = Math.max(size.width, size.height);\n        if (this.orientation === PdfPageOrientation.Portrait) {\n            this.pageSize = new SizeF(min, max);\n        }\n        else {\n            this.pageSize = new SizeF(max, min);\n        }\n    };\n    return PdfPageSettings;\n}());\nexport { PdfPageSettings };\n","import { Operators } from './pdf-operators';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PointF, RectangleF } from './../drawing/pdf-drawing';\nimport { PdfString } from './../primitives/pdf-string';\nimport { PdfName } from './../primitives/pdf-name';\n/**\n * Helper class to `write PDF graphic streams` easily.\n * @private\n */\nvar PdfStreamWriter = /** @class */ (function () {\n    /**\n     * Initialize an instance of `PdfStreamWriter` class.\n     * @private\n     */\n    function PdfStreamWriter(stream) {\n        if (stream == null) {\n            throw new Error('ArgumentNullException:stream');\n        }\n        this.stream = stream;\n    }\n    //Implementation\n    /**\n     * `Clear` the stream.\n     * @public\n     */\n    PdfStreamWriter.prototype.clear = function () {\n        this.stream.clearStream();\n    };\n    PdfStreamWriter.prototype.setGraphicsState = function (dictionaryName) {\n        if (dictionaryName instanceof PdfName) {\n            this.stream.write(dictionaryName.toString());\n            this.stream.write(Operators.whiteSpace);\n            this.writeOperator(Operators.setGraphicsState);\n        }\n        else {\n            this.stream.write(Operators.slash);\n            this.stream.write(dictionaryName);\n            this.stream.write(Operators.whiteSpace);\n            this.writeOperator(Operators.setGraphicsState);\n        }\n    };\n    /**\n     * `Executes the XObject`.\n     * @private\n     */\n    PdfStreamWriter.prototype.executeObject = function (name) {\n        this.stream.write(name.toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.paintXObject);\n        this.stream.write(Operators.newLine);\n    };\n    /**\n     * `Closes path object`.\n     * @private\n     */\n    PdfStreamWriter.prototype.closePath = function () {\n        this.writeOperator(Operators.closePath);\n    };\n    /**\n     * `Clips the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.clipPath = function (useEvenOddRule) {\n        this.stream.write(Operators.clipPath);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n        }\n        this.stream.write(Operators.whiteSpace);\n        this.stream.write(Operators.endPath);\n        this.stream.write(Operators.newLine);\n    };\n    /**\n     * `Closes, then fills and strokes the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.closeFillStrokePath = function (useEvenOddRule) {\n        this.stream.write(Operators.closeFillStrokePath);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            this.stream.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Fills and strokes path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.fillStrokePath = function (useEvenOddRule) {\n        this.stream.write(Operators.fillStroke);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            this.stream.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Fills path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.fillPath = function (useEvenOddRule) {\n        this.stream.write(Operators.fill);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            this.stream.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Ends the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.endPath = function () {\n        this.writeOperator(Operators.n);\n    };\n    /**\n     * `Closes and fills the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.closeFillPath = function (useEvenOddRule) {\n        this.writeOperator(Operators.closePath);\n        this.stream.write(Operators.fill);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            this.stream.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Closes and strokes the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.closeStrokePath = function () {\n        this.writeOperator(Operators.closeStrokePath);\n    };\n    /**\n     * `Sets the text scaling`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setTextScaling = function (textScaling) {\n        this.stream.write(PdfNumber.floatToString(textScaling));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setTextScaling);\n    };\n    /**\n     * `Strokes path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.strokePath = function () {\n        this.writeOperator(Operators.stroke);\n    };\n    /**\n     * `Restores` the graphics state.\n     * @private\n     */\n    PdfStreamWriter.prototype.restoreGraphicsState = function () {\n        this.writeOperator(Operators.restoreState);\n    };\n    /**\n     * `Saves` the graphics state.\n     * @private\n     */\n    PdfStreamWriter.prototype.saveGraphicsState = function () {\n        this.writeOperator(Operators.saveState);\n    };\n    PdfStreamWriter.prototype.startNextLine = function (arg1, arg2) {\n        if (typeof arg1 === 'undefined') {\n            this.writeOperator(Operators.goToNextLine);\n        }\n        else if (arg1 instanceof PointF) {\n            this.writePoint(arg1);\n            this.writeOperator(Operators.setCoords);\n        }\n        else {\n            this.writePoint(arg1, arg2);\n            this.writeOperator(Operators.setCoords);\n        }\n    };\n    /**\n     * Shows the `text`.\n     * @private\n     */\n    PdfStreamWriter.prototype.showText = function (text) {\n        this.checkTextParam(text);\n        this.writeText(text);\n        this.writeOperator(Operators.setText);\n    };\n    /**\n     * Sets `text leading`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLeading = function (leading) {\n        this.stream.write(PdfNumber.floatToString(leading));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setTextLeading);\n    };\n    /**\n     * `Begins the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.beginPath = function (x, y) {\n        this.writePoint(x, y);\n        this.writeOperator(Operators.beginPath);\n    };\n    /**\n     * `Begins text`.\n     * @private\n     */\n    PdfStreamWriter.prototype.beginText = function () {\n        this.writeOperator(Operators.beginText);\n    };\n    /**\n     * `Ends text`.\n     * @private\n     */\n    PdfStreamWriter.prototype.endText = function () {\n        this.writeOperator(Operators.endText);\n    };\n    PdfStreamWriter.prototype.appendRectangle = function (arg1, arg2, arg3, arg4) {\n        if (arg1 instanceof RectangleF) {\n            this.appendRectangle(arg1.x, arg1.y, arg1.width, arg1.height);\n        }\n        else {\n            this.writePoint(arg1, arg2);\n            this.writePoint(arg3, arg4);\n            this.writeOperator(Operators.appendRectangle);\n        }\n    };\n    PdfStreamWriter.prototype.appendLineSegment = function (arg1, arg2) {\n        if (arg1 instanceof PointF) {\n            this.appendLineSegment(arg1.x, arg1.y);\n        }\n        else {\n            this.writePoint(arg1, arg2);\n            this.writeOperator(Operators.appendLineSegment);\n        }\n    };\n    /**\n     * Sets the `text rendering mode`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setTextRenderingMode = function (renderingMode) {\n        this.stream.write(renderingMode.toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setRenderingMode);\n    };\n    /**\n     * Sets the `character spacing`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setCharacterSpacing = function (charSpacing) {\n        this.stream.write(PdfNumber.floatToString(charSpacing));\n        this.stream.write(Operators.whiteSpace);\n        this.stream.write(Operators.setCharacterSpace);\n        this.stream.write(Operators.newLine);\n    };\n    /**\n     * Sets the `word spacing`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setWordSpacing = function (wordSpacing) {\n        this.stream.write(PdfNumber.floatToString(wordSpacing));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setWordSpace);\n    };\n    PdfStreamWriter.prototype.showNextLineText = function (arg1, arg2) {\n        if (arg1 instanceof PdfString) {\n            this.checkTextParam(arg1);\n            this.writeText(arg1);\n            this.writeOperator(Operators.setTextOnNewLine);\n        }\n        else {\n            this.checkTextParam(arg1);\n            this.writeText(arg1, arg2);\n            this.writeOperator(Operators.setTextOnNewLine);\n        }\n    };\n    PdfStreamWriter.prototype.setColorSpace = function (arg1, arg2) {\n        if (arg1 instanceof PdfName && typeof arg2 === 'boolean') {\n            var temparg1 = arg1;\n            var temparg2 = arg2;\n            // if (temparg1 == null) {\n            //     throw new Error('ArgumentNullException:name');\n            // }\n            var op = (temparg2) ? Operators.selectcolorspaceforstroking : Operators.selectcolorspacefornonstroking;\n            this.stream.write(temparg1.toString());\n            this.stream.write(Operators.whiteSpace);\n            this.stream.write(op);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            var temparg1 = arg1;\n            var temparg2 = arg2;\n            this.setColorSpace(new PdfName(temparg1), temparg2);\n        }\n    };\n    /**\n     * Modifies current `transformation matrix`.\n     * @private\n     */\n    PdfStreamWriter.prototype.modifyCtm = function (matrix) {\n        if (matrix == null) {\n            throw new Error('ArgumentNullException:matrix');\n        }\n        this.stream.write(matrix.toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.modifyCtm);\n    };\n    PdfStreamWriter.prototype.setFont = function (font, name, size) {\n        if (typeof name === 'string') {\n            this.setFont(font, new PdfName(name), size);\n        }\n        else {\n            if (font == null) {\n                throw new Error('ArgumentNullException:font');\n            }\n            this.stream.write(name.toString());\n            this.stream.write(Operators.whiteSpace);\n            this.stream.write(PdfNumber.floatToString(size));\n            this.stream.write(Operators.whiteSpace);\n            this.writeOperator(Operators.setFont);\n        }\n    };\n    /**\n     * `Writes the operator`.\n     * @private\n     */\n    PdfStreamWriter.prototype.writeOperator = function (opcode) {\n        this.stream.write(opcode);\n        this.stream.write(Operators.newLine);\n    };\n    PdfStreamWriter.prototype.checkTextParam = function (text) {\n        if (text == null) {\n            throw new Error('ArgumentNullException:text');\n        }\n        if (typeof text === 'string' && text === '') {\n            throw new Error('ArgumentException:The text can not be an empty string, text');\n        }\n    };\n    PdfStreamWriter.prototype.writeText = function (arg1, arg2) {\n        if ((arg1 instanceof PdfString) && (typeof arg2 === 'undefined')) {\n            this.stream.write(arg1.pdfEncode());\n        }\n        else {\n            var start = void 0;\n            var end = void 0;\n            if (arg2) {\n                start = PdfString.hexStringMark[0];\n                end = PdfString.hexStringMark[1];\n            }\n            else {\n                start = PdfString.stringMark[0];\n                end = PdfString.stringMark[1];\n            }\n            this.stream.write(start);\n            this.stream.write(arg1);\n            this.stream.write(end);\n        }\n    };\n    PdfStreamWriter.prototype.writePoint = function (arg1, arg2) {\n        if ((arg1 instanceof PointF) && (typeof arg2 === 'undefined')) {\n            this.writePoint(arg1.x, arg1.y);\n        }\n        else {\n            var temparg1 = arg1;\n            this.stream.write(PdfNumber.floatToString(temparg1));\n            this.stream.write(Operators.whiteSpace);\n            // NOTE: Change Y co-ordinate because we shifted co-ordinate system only.\n            arg2 = this.updateY(arg2);\n            this.stream.write(PdfNumber.floatToString(arg2));\n            this.stream.write(Operators.whiteSpace);\n        }\n    };\n    /**\n     * `Updates y` co-ordinate.\n     * @private\n     */\n    PdfStreamWriter.prototype.updateY = function (arg) {\n        return -arg;\n    };\n    /**\n     * `Writes string` to the file.\n     * @private\n     */\n    PdfStreamWriter.prototype.write = function (string) {\n        var builder = '';\n        builder += string;\n        builder += Operators.newLine;\n        this.writeOperator(builder);\n    };\n    /**\n     * `Writes comment` to the file.\n     * @private\n     */\n    PdfStreamWriter.prototype.writeComment = function (comment) {\n        if (comment != null && comment.length > 0) {\n            var builder = '';\n            builder += Operators.comment;\n            builder += Operators.whiteSpace;\n            builder += comment;\n            //builder.Append( Operators.NewLine );\n            this.writeOperator(builder);\n        }\n        else {\n            throw new Error('Invalid comment');\n        }\n    };\n    /**\n     * Sets the `color and space`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setColorAndSpace = function (color, colorSpace, forStroking) {\n        if (!color.isEmpty) {\n            // bool test = color is PdfExtendedColor;\n            this.stream.write(color.toString(colorSpace, forStroking));\n            this.stream.write(Operators.newLine);\n        }\n    };\n    // public setLineDashPattern(pattern : number[], patternOffset : number) : void\n    // {\n    //     let pat : PdfArray = new PdfArray(pattern);\n    //     let off : PdfNumber = new PdfNumber(patternOffset);\n    //     this.setLineDashPatternHelper(pat, off);\n    // }\n    // private setLineDashPatternHelper(pattern : PdfArray, patternOffset : PdfNumber) : void\n    // {\n    //     pattern.Save(this);\n    //     this.m_stream.write(Operators.whiteSpace);\n    //     patternOffset.Save(this);\n    //     this.m_stream.write(Operators.whiteSpace);\n    //     this.writeOperator(Operators.setDashPattern);\n    // }\n    /**\n     * Sets the `line dash pattern`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineDashPattern = function (pattern, patternOffset) {\n        // let pat : PdfArray = new PdfArray(pattern);\n        // let off : PdfNumber = new PdfNumber(patternOffset);\n        // this.setLineDashPatternHelper(pat, off);\n        this.setLineDashPatternHelper(pattern, patternOffset);\n    };\n    /**\n     * Sets the `line dash pattern`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineDashPatternHelper = function (pattern, patternOffset) {\n        var tempPattern = '[';\n        if (pattern.length > 1) {\n            for (var index = 0; index < pattern.length; index++) {\n                if (index === pattern.length - 1) {\n                    tempPattern += pattern[index].toString();\n                }\n                else {\n                    tempPattern += pattern[index].toString() + ' ';\n                }\n            }\n        }\n        tempPattern += '] ';\n        tempPattern += patternOffset.toString();\n        tempPattern += ' ' + Operators.setDashPattern;\n        this.stream.write(tempPattern);\n        this.stream.write(Operators.newLine);\n    };\n    /**\n     * Sets the `miter limit`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setMiterLimit = function (miterLimit) {\n        this.stream.write(PdfNumber.floatToString(miterLimit));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setMiterLimit);\n    };\n    /**\n     * Sets the `width of the line`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineWidth = function (width) {\n        this.stream.write(PdfNumber.floatToString(width));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setLineWidth);\n    };\n    /**\n     * Sets the `line cap`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineCap = function (lineCapStyle) {\n        this.stream.write((lineCapStyle).toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setLineCapStyle);\n    };\n    /**\n     * Sets the `line join`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineJoin = function (lineJoinStyle) {\n        this.stream.write((lineJoinStyle).toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setLineJoinStyle);\n    };\n    Object.defineProperty(PdfStreamWriter.prototype, \"position\", {\n        //IPdfWriter members\n        /**\n         * Gets or sets the current `position` within the stream.\n         * @private\n         */\n        get: function () {\n            return this.stream.position;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStreamWriter.prototype, \"length\", {\n        /**\n         * Gets `stream length`.\n         * @private\n         */\n        get: function () {\n            var returnValue = 0;\n            if (this.stream.data.length !== 0 && this.stream.data.length !== -1) {\n                for (var index = 0; index < this.stream.data.length; index++) {\n                    returnValue += this.stream.data[index].length;\n                }\n            }\n            return returnValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStreamWriter.prototype, \"document\", {\n        /**\n         * Gets and Sets the `current document`.\n         * @private\n         */\n        get: function () {\n            return null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfStreamWriter;\n}());\nexport { PdfStreamWriter };\n","/**\n * PdfPen.ts class for EJ2-PDF\n */\nimport { PdfColor } from './pdf-color';\nimport { PdfDashStyle, PdfColorSpace } from './enum';\nimport { PdfBrush } from './brushes/pdf-brush';\n/**\n * `PdfPen` class defining settings for drawing operations, that determines the color,\n * width, and style of the drawing elements.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // create a new page\n * let page1 : PdfPage = document.pages.add();\n * // set pen\n * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n * // draw rectangle\n * page1.graphics.drawRectangle(pen, new RectangleF({x : 0, y : 0}, {width : 100, height : 50}));\n * // save the document.\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPen = /** @class */ (function () {\n    function PdfPen(arg1, arg2) {\n        //Fields\n        /**\n         * Specifies the `color of the pen`.\n         * @default new PdfColor()\n         * @private\n         */\n        this.pdfColor = new PdfColor(0, 0, 0);\n        /**\n         * Specifies the `dash offset of the pen`.\n         * @default 0\n         * @private\n         */\n        this.dashOffsetValue = 0;\n        /**\n         * Specifies the `dash pattern of the pen`.\n         * @default [0]\n         * @private\n         */\n        this.penDashPattern = [0];\n        /**\n         * Specifies the `dash style of the pen`.\n         * @default Solid\n         * @private\n         */\n        this.pdfDashStyle = PdfDashStyle.Solid;\n        /**\n         * Specifies the `line cap of the pen`.\n         * @default 0\n         * @private\n         */\n        this.pdfLineCap = 0;\n        /**\n         * Specifies the `line join of the pen`.\n         * @default 0\n         * @private\n         */\n        this.pdfLineJoin = 0;\n        /**\n         * Specifies the `width of the pen`.\n         * @default 1.0\n         * @private\n         */\n        this.penWidth = 1.0;\n        /**\n         * Specifies the `mitter limit of the pen`.\n         * @default 0.0\n         * @private\n         */\n        this.internalMiterLimit = 0.0;\n        /**\n         * Stores the `colorspace` value.\n         * @default Rgb\n         * @private\n         */\n        this.colorSpace = PdfColorSpace.Rgb;\n        if (arg1 instanceof PdfBrush) {\n            this.setBrush(arg1);\n        }\n        else if (arg1 instanceof PdfColor) {\n            this.color = arg1;\n        }\n        if (typeof arg2 === 'number') {\n            this.width = arg2;\n        }\n    }\n    Object.defineProperty(PdfPen.prototype, \"color\", {\n        //Properties\n        /**\n         * Gets or sets the `color of the pen`.\n         * @private\n         */\n        get: function () {\n            return this.pdfColor;\n        },\n        set: function (value) {\n            this.pdfColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"dashOffset\", {\n        /**\n         * Gets or sets the `dash offset of the pen`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.dashOffsetValue === 'undefined' || this.dashOffsetValue == null) {\n                return 0;\n            }\n            else {\n                return this.dashOffsetValue;\n            }\n        },\n        set: function (value) {\n            this.dashOffsetValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"dashPattern\", {\n        /**\n         * Gets or sets the `dash pattern of the pen`.\n         * @private\n         */\n        get: function () {\n            return this.penDashPattern;\n        },\n        set: function (value) {\n            this.penDashPattern = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"dashStyle\", {\n        /**\n         * Gets or sets the `dash style of the pen`.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // create a new page\n         * let page1 : PdfPage = document.pages.add();\n         * // set pen\n         * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n         * //\n         * // set pen style\n         * pen.dashStyle = PdfDashStyle.DashDot;\n         * // get pen style\n         * let style : PdfDashStyle = pen.dashStyle;\n         * //\n         * // draw rectangle\n         * page1.graphics.drawRectangle(pen, new RectangleF({x : 0, y : 0}, {width : 100, height : 50}));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.pdfDashStyle;\n        },\n        set: function (value) {\n            if (this.pdfDashStyle !== value) {\n                this.pdfDashStyle = value;\n                switch (this.pdfDashStyle) {\n                    case PdfDashStyle.Custom:\n                        break;\n                    case PdfDashStyle.Dash:\n                        this.penDashPattern = [3, 1];\n                        break;\n                    case PdfDashStyle.Dot:\n                        this.penDashPattern = [1, 1];\n                        break;\n                    case PdfDashStyle.DashDot:\n                        this.penDashPattern = [3, 1, 1, 1];\n                        break;\n                    case PdfDashStyle.DashDotDot:\n                        this.penDashPattern = [3, 1, 1, 1, 1, 1];\n                        break;\n                    case PdfDashStyle.Solid:\n                        break;\n                    default:\n                        this.pdfDashStyle = PdfDashStyle.Solid;\n                        this.penDashPattern = [0];\n                        break;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"lineCap\", {\n        /**\n         * Gets or sets the `line cap of the pen`.\n         * @private\n         */\n        get: function () {\n            return this.pdfLineCap;\n        },\n        set: function (value) {\n            this.pdfLineCap = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"lineJoin\", {\n        /**\n         * Gets or sets the `line join style of the pen`.\n         * @private\n         */\n        get: function () {\n            return this.pdfLineJoin;\n        },\n        set: function (value) {\n            this.pdfLineJoin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"miterLimit\", {\n        /**\n         * Gets or sets the `miter limit`.\n         * @private\n         */\n        get: function () {\n            return this.internalMiterLimit;\n        },\n        set: function (value) {\n            this.internalMiterLimit = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"width\", {\n        /**\n         * Gets or sets the `width of the pen`.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // create a new page\n         * let page1 : PdfPage = document.pages.add();\n         * // set pen\n         * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n         * //\n         * // set pen width\n         * pen.width = 2;\n         * //\n         * // draw rectangle\n         * page1.graphics.drawRectangle(pen, new RectangleF({x : 0, y : 0}, {width : 100, height : 50}));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.penWidth;\n        },\n        set: function (value) {\n            this.penWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Helper\n    /**\n     * `Clones` this instance of PdfPen class.\n     * @private\n     */\n    PdfPen.prototype.clone = function () {\n        var pen = this;\n        return pen;\n    };\n    /**\n     * `Sets the brush`.\n     * @private\n     */\n    PdfPen.prototype.setBrush = function (brush) {\n        var sBrush = brush;\n        this.color = sBrush.color;\n        this.pdfBrush = sBrush;\n    };\n    /**\n     * `Monitors the changes`.\n     * @private\n     */\n    PdfPen.prototype.monitorChanges = function (currentPen, streamWriter, getResources, saveState, currentColorSpace, matrix) {\n        var diff = false;\n        saveState = true;\n        if (currentPen == null) {\n            diff = true;\n        }\n        diff = this.dashControl(currentPen, saveState, streamWriter);\n        streamWriter.setLineWidth(this.width);\n        streamWriter.setLineJoin(this.lineJoin);\n        streamWriter.setLineCap(this.lineCap);\n        var miterLimit = this.miterLimit;\n        if (miterLimit > 0) {\n            streamWriter.setMiterLimit(miterLimit);\n            diff = true;\n        }\n        var brush = this.pdfBrush;\n        streamWriter.setColorAndSpace(this.color, currentColorSpace, true);\n        diff = true;\n        return diff;\n    };\n    /**\n     * `Controls the dash style` and behaviour of each line.\n     * @private\n     */\n    PdfPen.prototype.dashControl = function (pen, saveState, streamWriter) {\n        saveState = true;\n        var lineWidth = this.width;\n        var pattern = this.getPattern();\n        streamWriter.setLineDashPattern(pattern, this.dashOffset * lineWidth);\n        return saveState;\n    };\n    /**\n     * `Gets the pattern` of PdfPen.\n     * @private\n     */\n    PdfPen.prototype.getPattern = function () {\n        var pattern = this.dashPattern;\n        for (var i = 0; i < pattern.length; ++i) {\n            pattern[i] *= this.width;\n        }\n        return pattern;\n    };\n    return PdfPen;\n}());\nexport { PdfPen };\n","/**\n * PdfTransformationMatrix.ts class for EJ2-PDF\n */\nimport { PointF } from './../drawing/pdf-drawing';\nimport { PdfNumber } from './../primitives/pdf-number';\n/**\n * Class for representing Root `transformation matrix`.\n */\nvar PdfTransformationMatrix = /** @class */ (function () {\n    function PdfTransformationMatrix(value) {\n        /**\n         * Value for `angle converting`.\n         * @default 180.0 / Math.PI\n         * @private\n         */\n        this.radDegFactor = 180.0 / Math.PI;\n        if (typeof value === 'undefined') {\n            this.transformationMatrix = new Matrix(1.00, 0.00, 0.00, 1.00, 0.00, 0.00);\n        }\n        else {\n            this.transformationMatrix = new Matrix(1.00, 0.00, 0.00, -1.00, 0.00, 0.00);\n        }\n    }\n    Object.defineProperty(PdfTransformationMatrix.prototype, \"matrix\", {\n        // Properties\n        /**\n         * Gets or sets the `internal matrix object`.\n         * @private\n         */\n        get: function () {\n            return this.transformationMatrix;\n        },\n        set: function (value) {\n            this.transformationMatrix = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Public methods\n    /**\n     * `Translates` coordinates by specified coordinates.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.translate = function (offsetX, offsetY) {\n        this.transformationMatrix.translate(offsetX, offsetY);\n    };\n    /**\n     * `Scales` coordinates by specified coordinates.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.scale = function (scaleX, scaleY) {\n        this.transformationMatrix.elements[0] = scaleX;\n        this.transformationMatrix.elements[3] = scaleY;\n    };\n    /**\n     * `Rotates` coordinate system in counterclockwise direction.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.rotate = function (angle) {\n        //Convert from degree to radian \n        angle = (angle * Math.PI) / 180;\n        //Rotation \n        this.transformationMatrix.elements[0] = Math.cos(angle);\n        this.transformationMatrix.elements[1] = Math.sin(angle);\n        this.transformationMatrix.elements[2] = -Math.sin(angle);\n        this.transformationMatrix.elements[3] = Math.cos(angle);\n    };\n    // Overrides\n    /**\n     * Gets `PDF representation`.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.toString = function () {\n        var builder = '';\n        var whitespace = ' ';\n        for (var i = 0, len = this.transformationMatrix.elements.length; i < len; i++) {\n            var temp = this.matrix.elements[i];\n            builder += PdfNumber.floatToString(this.transformationMatrix.elements[i]);\n            builder += whitespace;\n        }\n        return builder;\n    };\n    // Implementation\n    /**\n     * `Multiplies` matrices (changes coordinate system.)\n     * @private\n     */\n    PdfTransformationMatrix.prototype.multiply = function (matrix) {\n        this.transformationMatrix.multiply(matrix.matrix);\n    };\n    /**\n     * Converts `degrees to radians`.\n     * @private\n     */\n    PdfTransformationMatrix.degreesToRadians = function (degreesX) {\n        return this.degRadFactor * degreesX;\n    };\n    /**\n     * Converts `radians to degrees`.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.radiansToDegrees = function (radians) {\n        return this.radDegFactor * radians;\n    };\n    /**\n     * `Clones` this instance of PdfTransformationMatrix.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.clone = function () {\n        return this;\n    };\n    // Constants\n    /**\n     * Value for `angle converting`.\n     * @default Math.PI / 180.0\n     * @private\n     */\n    PdfTransformationMatrix.degRadFactor = Math.PI / 180.0;\n    return PdfTransformationMatrix;\n}());\nexport { PdfTransformationMatrix };\nvar Matrix = /** @class */ (function () {\n    function Matrix(arg1, arg2, arg3, arg4, arg5, arg6) {\n        if (typeof arg1 === 'undefined') {\n            this.metrixElements = [];\n        }\n        else if (typeof arg1 === 'number') {\n            this.metrixElements = [];\n            this.metrixElements.push(arg1);\n            this.metrixElements.push(arg2);\n            this.metrixElements.push(arg3);\n            this.metrixElements.push(arg4);\n            this.metrixElements.push(arg5);\n            this.metrixElements.push(arg6);\n        }\n        else {\n            this.metrixElements = arg1;\n        }\n    }\n    Object.defineProperty(Matrix.prototype, \"elements\", {\n        // Properties\n        /**\n         * Gets the `elements`.\n         * @private\n         */\n        get: function () {\n            return this.metrixElements;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Matrix.prototype, \"offsetX\", {\n        /**\n         * Gets the off set `X`.\n         * @private\n         */\n        get: function () {\n            return this.metrixElements[4];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Matrix.prototype, \"offsetY\", {\n        /**\n         * Gets the off set `Y`.\n         * @private\n         */\n        get: function () {\n            return this.metrixElements[5];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Translates` coordinates by specified coordinates.\n     * @private\n     */\n    Matrix.prototype.translate = function (offsetX, offsetY) {\n        this.metrixElements[4] = offsetX;\n        this.metrixElements[5] = offsetY;\n    };\n    /**\n     * `Translates` the specified offset X.\n     * @private\n     */\n    Matrix.prototype.transform = function (point) {\n        var x = point.x;\n        var y = point.y;\n        var x2 = x * this.elements[0] + y * this.elements[2] + this.offsetX;\n        var y2 = x * this.elements[1] + y * this.elements[3] + this.offsetY;\n        return new PointF(x2, y2);\n    };\n    /**\n     * `Multiplies matrices` (changes coordinate system.)\n     * @private\n     */\n    Matrix.prototype.multiply = function (matrix) {\n        var tempMatrix = [];\n        tempMatrix.push(this.elements[0] * matrix.elements[0] + this.elements[1] * matrix.elements[2]);\n        tempMatrix[1] = (this.elements[0] * matrix.elements[1] + this.elements[1] * matrix.elements[3]);\n        tempMatrix[2] = (this.elements[2] * matrix.elements[0] + this.elements[3] * matrix.elements[2]);\n        tempMatrix[3] = (this.elements[2] * matrix.elements[1] + this.elements[3] * matrix.elements[3]);\n        tempMatrix[4] = (this.offsetX * matrix.elements[0] + this.offsetY * matrix.elements[2] + matrix.offsetX);\n        tempMatrix[5] = (this.offsetX * matrix.elements[1] + this.offsetY * matrix.elements[3] + matrix.offsetY);\n        for (var i = 0; i < tempMatrix.length; i++) {\n            this.elements[i] = tempMatrix[i];\n        }\n    };\n    // IDisposable Members\n    /**\n     * `Dispose` this instance of PdfTransformationMatrix class.\n     * @private\n     */\n    Matrix.prototype.dispose = function () {\n        this.metrixElements = null;\n    };\n    // ICloneable Members\n    /**\n     * `Clones` this instance of PdfTransformationMatrix class.\n     * @private\n     */\n    Matrix.prototype.clone = function () {\n        var m = new Matrix(this.metrixElements);\n        return m;\n    };\n    return Matrix;\n}());\nexport { Matrix };\n","/**\n * `constants.ts` class for EJ2-PDF\n * @private\n */\nvar ProcedureSets = /** @class */ (function () {\n    function ProcedureSets() {\n        /**\n         * Specifies the `PDF` procedure set.\n         * @private\n         */\n        this.pdf = 'PDF';\n        /**\n         * Specifies the `Text` procedure set.\n         * @private\n         */\n        this.text = 'Text';\n        /**\n         * Specifies the `ImageB` procedure set.\n         * @private\n         */\n        this.imageB = 'ImageB';\n        /**\n         * Specifies the `ImageC` procedure set.\n         * @private\n         */\n        this.imageC = 'ImageC';\n        /**\n         * Specifies the `ImageI` procedure set.\n         * @private\n         */\n        this.imageI = 'ImageI';\n    }\n    return ProcedureSets;\n}());\nexport { ProcedureSets };\n","/**\n * Dictionary class\n * @private\n * @hidden\n */\nvar TemporaryDictionary = /** @class */ (function () {\n    function TemporaryDictionary() {\n        /**\n         * @hidden\n         * @private\n         */\n        this.mKeys = [];\n        /**\n         * @hidden\n         * @private\n         */\n        this.mValues = [];\n    }\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.size = function () {\n        return this.mKeys.length;\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.add = function (key, value) {\n        if (key === undefined || key === null || value === undefined || value === null) {\n            throw new ReferenceError('Provided key or value is not valid.');\n        }\n        var index = this.mKeys.indexOf(key);\n        if (index < 0) {\n            this.mKeys.push(key);\n            this.mValues.push(value);\n            return 1;\n        }\n        else {\n            throw new RangeError('An item with the same key has already been added.');\n        }\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.keys = function () {\n        return this.mKeys;\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.values = function () {\n        return this.mValues;\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.getValue = function (key) {\n        if (key === undefined || key === null) {\n            throw new ReferenceError('Provided key is not valid.');\n        }\n        var index = this.mKeys.indexOf(key);\n        if (index < 0) {\n            throw new RangeError('No item with the specified key has been added.');\n        }\n        else {\n            return this.mValues[index];\n        }\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.setValue = function (key, value) {\n        if (key === undefined || key === null) {\n            throw new ReferenceError('Provided key is not valid.');\n        }\n        var index = this.mKeys.indexOf(key);\n        if (index < 0) {\n            this.mKeys.push(key);\n            this.mValues.push(value);\n        }\n        else {\n            this.mValues[index] = value;\n        }\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.remove = function (key) {\n        if (key === undefined || key === null) {\n            throw new ReferenceError('Provided key is not valid.');\n        }\n        var index = this.mKeys.indexOf(key);\n        if (index < 0) {\n            throw new RangeError('No item with the specified key has been added.');\n        }\n        else {\n            this.mKeys.splice(index, 1);\n            this.mValues.splice(index, 1);\n            return true;\n        }\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.containsKey = function (key) {\n        if (key === undefined || key === null) {\n            throw new ReferenceError('Provided key is not valid.');\n        }\n        var index = this.mKeys.indexOf(key);\n        if (index < 0) {\n            return false;\n        }\n        return true;\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.clear = function () {\n        this.mKeys = [];\n        this.mValues = [];\n    };\n    return TemporaryDictionary;\n}());\nexport { TemporaryDictionary };\n","import { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfName } from './../primitives/pdf-name';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * Represents a simple `transparency`.\n * @private\n */\nvar PdfTransparency = /** @class */ (function () {\n    // Properties\n    // /**\n    //  * Gets the `stroke` operation alpha value.\n    //  * @private\n    //  */\n    // public get stroke() : number {\n    //     let result : number = this.getNumber(this.dictionaryProperties.CA);\n    //     return result;\n    // }\n    // /**\n    //  * Gets the `fill` operation alpha value.\n    //  * @private\n    //  */\n    // public get fill() : number {\n    //     let result : number = this.getNumber(this.dictionaryProperties.ca);\n    //     return result;\n    // }\n    // /**\n    //  * Gets the `blend mode`.\n    //  * @private\n    //  */\n    // public get mode() : PdfBlendMode {\n    //     let result : string = this.getName(this.dictionaryProperties.ca);\n    //     return PdfBlendMode.Normal;\n    // }\n    // Constructors\n    /**\n     * Initializes a new instance of the `Transparency` class.\n     * @private\n     */\n    function PdfTransparency(stroke, fill, mode) {\n        // Fields\n        /**\n         * Internal variable to store `dictionary`.\n         * @default new PdfDictionary()\n         * @private\n         */\n        this.dictionary = new PdfDictionary();\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @default new DictionaryProperties()\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        this.dictionary.items.setValue(this.dictionaryProperties.CA, new PdfNumber(stroke));\n        this.dictionary.items.setValue(this.dictionaryProperties.ca, new PdfNumber(fill));\n        this.dictionary.items.setValue(this.dictionaryProperties.BM, new PdfName(mode.toString()));\n    }\n    Object.defineProperty(PdfTransparency.prototype, \"element\", {\n        // // Implementation\n        // /**\n        //  * Gets the `number value`.\n        //  * @private\n        //  */\n        // private getNumber(keyName : string) : number {\n        //     let result : number = 0.0;\n        //     let numb : PdfNumber = this.dictionary.items.getValue(keyName) as PdfNumber;\n        //     result = numb.intValue;\n        //     return result;\n        // }\n        // /**\n        //  * Gets the `name value`.\n        //  * @private\n        //  */\n        // private getName(keyName : string) : string {\n        //     let result : string = null;\n        //     let name : PdfName = this.dictionary.items.getValue(keyName) as PdfName;\n        //     result = name.value;\n        //     return result;\n        // }\n        // IPdfWrapper Members\n        /**\n         * Gets the `element`.\n         * @private\n         */\n        get: function () {\n            return this.dictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfTransparency;\n}());\nexport { PdfTransparency };\n","/**\n * Represent a `collection of automatic fields information`.\n * @private\n */\nvar PdfAutomaticFieldInfoCollection = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the 'PdfPageNumberFieldInfoCollection' class.\n     * @private\n     */\n    function PdfAutomaticFieldInfoCollection() {\n        /**\n         * Internal variable to store instance of `pageNumberFields` class.\n         * @private\n         */\n        this.automaticFieldsInformation = [];\n        //\n    }\n    Object.defineProperty(PdfAutomaticFieldInfoCollection.prototype, \"automaticFields\", {\n        /**\n         * Gets the `page number fields collection`.\n         * @private\n         */\n        get: function () {\n            return this.automaticFieldsInformation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Public methods\n    /// Adds the specified field info.\n    /**\n     * Add page number field into collection.\n     * @private\n     */\n    PdfAutomaticFieldInfoCollection.prototype.add = function (fieldInfo) {\n        return this.automaticFields.push(fieldInfo);\n    };\n    return PdfAutomaticFieldInfoCollection;\n}());\nexport { PdfAutomaticFieldInfoCollection };\n","/**\n * Represents a base class for all page graphics elements.\n */\nvar PdfGraphicsElement = /** @class */ (function () {\n    // Constructors\n    function PdfGraphicsElement() {\n        //\n    }\n    /**\n     * `Draws` the page number field.\n     * @public\n     */\n    PdfGraphicsElement.prototype.drawHelper = function (graphics, x, y) {\n        var bNeedSave = (x !== 0 || y !== 0);\n        var gState = null;\n        // Translate co-ordinates.\n        if (bNeedSave) {\n            // Save state.\n            gState = graphics.save();\n            graphics.translateTransform(x, y);\n        }\n        this.drawInternal(graphics);\n        if (bNeedSave) {\n            // Restore state.\n            graphics.restore(gState);\n        }\n    };\n    return PdfGraphicsElement;\n}());\nexport { PdfGraphicsElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfAutomaticField.ts class for EJ2-PDF\n */\nimport { RectangleF, SizeF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfSolidBrush } from './../../graphics/brushes/pdf-solid-brush';\nimport { PdfColor } from './../../graphics/pdf-color';\nimport { PdfDocument } from './../pdf-document';\nimport { PdfGraphicsElement } from './../../graphics/figures/base/graphics-element';\nimport { PdfAutomaticFieldInfo } from './automatic-field-info';\n/**\n * Represents a fields which is calculated before the document saves.\n */\nvar PdfAutomaticField = /** @class */ (function (_super) {\n    __extends(PdfAutomaticField, _super);\n    // Constructors\n    function PdfAutomaticField() {\n        var _this = _super.call(this) || this;\n        // Fields\n        _this.internalBounds = new RectangleF(0, 0, 0, 0);\n        _this.internalTemplateSize = new SizeF(0, 0);\n        return _this;\n    }\n    Object.defineProperty(PdfAutomaticField.prototype, \"bounds\", {\n        // Properties\n        get: function () {\n            return this.internalBounds;\n        },\n        set: function (value) {\n            this.internalBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"size\", {\n        get: function () {\n            return new SizeF(this.bounds.width, this.bounds.height);\n        },\n        set: function (value) {\n            this.bounds.width = value.width;\n            this.bounds.height = value.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"location\", {\n        get: function () {\n            return new PointF(this.bounds.x, this.bounds.y);\n        },\n        set: function (value) {\n            this.bounds.x = value.x;\n            this.bounds.y = value.y;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"font\", {\n        get: function () {\n            return this.internalFont;\n        },\n        set: function (value) {\n            this.internalFont = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"brush\", {\n        get: function () {\n            return this.internalBrush;\n        },\n        set: function (value) {\n            this.internalBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"pen\", {\n        get: function () {\n            return this.internalPen;\n        },\n        set: function (value) {\n            this.internalPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"stringFormat\", {\n        get: function () {\n            return this.internalStringFormat;\n        },\n        set: function (value) {\n            this.internalStringFormat = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfAutomaticField.prototype.performDrawHelper = function (graphics, location, scalingX, scalingY) {\n        if (this.bounds.height === 0 || this.bounds.width === 0) {\n            var text = this.getValue(graphics);\n            this.internalTemplateSize = this.getFont().measureString(text, this.size, this.stringFormat);\n        }\n    };\n    PdfAutomaticField.prototype.draw = function (arg1, arg2, arg3) {\n        if (typeof arg2 === 'undefined') {\n            var location_1 = new PointF(0, 0);\n            this.draw(arg1, location_1);\n        }\n        else if (arg2 instanceof PointF) {\n            this.draw(arg1, arg2.x, arg2.y);\n        }\n        else {\n            this.drawHelper(arg1, arg2, arg3);\n            var info = new PdfAutomaticFieldInfo(this, new PointF(arg2, arg3));\n            arg1.automaticFields.add(info);\n        }\n    };\n    PdfAutomaticField.prototype.getSize = function () {\n        if (this.bounds.height === 0 || this.bounds.width === 0) {\n            return this.internalTemplateSize;\n        }\n        else {\n            return this.size;\n        }\n    };\n    PdfAutomaticField.prototype.drawInternal = function (graphics) {\n        //\n    };\n    /* tslint:disable */\n    PdfAutomaticField.prototype.getBrush = function () {\n        return (typeof this.internalBrush === 'undefined' || this.internalBrush == null) ? new PdfSolidBrush(new PdfColor(0, 0, 0)) : this.internalBrush;\n    };\n    PdfAutomaticField.prototype.getFont = function () {\n        return (typeof this.internalFont === 'undefined' || this.internalFont == null) ? PdfDocument.defaultFont : this.internalFont;\n    };\n    /* tslint:enable */\n    PdfAutomaticField.prototype.getPageFromGraphics = function (graphics) {\n        if (typeof graphics.page !== 'undefined' && graphics.page !== null) {\n            var page = graphics.page;\n            return page;\n        }\n        else {\n            var page = graphics.currentPage;\n            return page;\n        }\n    };\n    return PdfAutomaticField;\n}(PdfGraphicsElement));\nexport { PdfAutomaticField };\n","/**\n * PdfAutomaticFieldInfo.ts class for EJ2-PDF\n * @private\n */\nimport { PointF } from './../../drawing/pdf-drawing';\nimport { PdfAutomaticField } from './automatic-field';\n/**\n * Represents information about the automatic field.\n * @private\n */\nvar PdfAutomaticFieldInfo = /** @class */ (function () {\n    function PdfAutomaticFieldInfo(field, location, scaleX, scaleY) {\n        // Fields\n        /**\n         * Internal variable to store location of the field.\n         * @private\n         */\n        this.pageNumberFieldLocation = new PointF();\n        /**\n         * Internal variable to store field.\n         * @private\n         */\n        this.pageNumberField = null;\n        /**\n         * Internal variable to store x scaling factor.\n         * @private\n         */\n        this.scaleX = 1;\n        /**\n         * Internal variable to store y scaling factor.\n         * @private\n         */\n        this.scaleY = 1;\n        if (typeof location === 'undefined' && field instanceof PdfAutomaticFieldInfo) {\n            this.pageNumberField = field.field;\n            this.pageNumberFieldLocation = field.location;\n            this.scaleX = field.scalingX;\n            this.scaleY = field.scalingY;\n        }\n        else if (typeof scaleX === 'undefined' && location instanceof PointF && field instanceof PdfAutomaticField) {\n            this.pageNumberField = field;\n            this.pageNumberFieldLocation = location;\n        }\n        else {\n            this.pageNumberField = field;\n            this.pageNumberFieldLocation = location;\n            this.scaleX = scaleX;\n            this.scaleY = scaleY;\n        }\n    }\n    Object.defineProperty(PdfAutomaticFieldInfo.prototype, \"location\", {\n        /* tslint:enable */\n        // Properties\n        /**\n         * Gets or sets the location.\n         * @private\n         */\n        get: function () {\n            return this.pageNumberFieldLocation;\n        },\n        set: function (value) {\n            this.pageNumberFieldLocation = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticFieldInfo.prototype, \"field\", {\n        /**\n         * Gets or sets the field.\n         * @private\n         */\n        get: function () {\n            return this.pageNumberField;\n        },\n        set: function (value) {\n            this.pageNumberField = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticFieldInfo.prototype, \"scalingX\", {\n        /**\n         * Gets or sets the scaling X factor.\n         * @private\n         */\n        get: function () {\n            return this.scaleX;\n        },\n        set: function (value) {\n            this.scaleX = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticFieldInfo.prototype, \"scalingY\", {\n        /**\n         * Gets or sets the scaling Y factor.\n         * @private\n         */\n        get: function () {\n            return this.scaleY;\n        },\n        set: function (value) {\n            this.scaleY = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAutomaticFieldInfo;\n}());\nexport { PdfAutomaticFieldInfo };\n","/**\n * ByteArray class\n * Used to keep information about image stream as byte array.\n * @private\n */\nvar ByteArray = /** @class */ (function () {\n    /**\n     * Initialize the new instance for `byte-array` class\n     * @hidden\n     * @private\n     */\n    function ByteArray(length) {\n        /**\n         * Current stream `position`.\n         * @default 0\n         * @private\n         */\n        this.mPosition = 0;\n        this.buffer = new Uint8Array(length);\n        this.dataView = new DataView(this.buffer.buffer);\n    }\n    Object.defineProperty(ByteArray.prototype, \"position\", {\n        /**\n         * Gets and Sets a current `position` of byte array.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mPosition;\n        },\n        set: function (value) {\n            this.mPosition = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Read` from current stream position.\n     * @default 0\n     * @hidden\n     * @private\n     */\n    ByteArray.prototype.read = function (buffer, offset, count) {\n        for (var index = offset; index < count; index++) {\n            var position = this.position;\n            buffer.buffer[index] = this.readByte(position);\n            this.position++;\n        }\n    };\n    /**\n     * @hidden\n     */\n    ByteArray.prototype.getBuffer = function (index) {\n        return this.buffer[index];\n    };\n    /**\n     * @hidden\n     */\n    ByteArray.prototype.writeFromBase64String = function (base64) {\n        var arr = this.encodedString(base64);\n        this.buffer = arr;\n    };\n    /**\n     * @hidden\n     */\n    ByteArray.prototype.encodedString = function (input) {\n        var keyStr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n        var chr1;\n        var chr2;\n        var chr3;\n        var enc1;\n        var enc2;\n        var enc3;\n        var enc4;\n        var i = 0;\n        var resultIndex = 0;\n        var dataUrlPrefix = 'data:';\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\n        var totalLength = input.length * 3 / 4;\n        if (input.charAt(input.length - 1) === keyStr.charAt(64)) {\n            totalLength--;\n        }\n        var output = new Uint8Array(totalLength | 0);\n        while (i < input.length) {\n            enc1 = keyStr.indexOf(input.charAt(i++));\n            enc2 = keyStr.indexOf(input.charAt(i++));\n            enc3 = keyStr.indexOf(input.charAt(i++));\n            enc4 = keyStr.indexOf(input.charAt(i++));\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n            output[resultIndex++] = chr1;\n            output[resultIndex++] = chr2;\n            output[resultIndex++] = chr3;\n        }\n        return output;\n    };\n    /**\n     * @hidden\n     */\n    ByteArray.prototype.readByte = function (offset) {\n        return (this.buffer[offset]);\n    };\n    Object.defineProperty(ByteArray.prototype, \"internalBuffer\", {\n        /**\n         * @hidden\n         */\n        get: function () {\n            return this.buffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ByteArray.prototype, \"count\", {\n        /**\n         * @hidden\n         */\n        get: function () {\n            return this.buffer.byteLength;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ByteArray;\n}());\nexport { ByteArray };\n","/**\n * `PdfBoolean` class is used to perform boolean related primitive operations.\n * @private\n */\nvar PdfBoolean = /** @class */ (function () {\n    //constructor\n    /**\n     * Initializes a new instance of the `PdfBoolean` class.\n     * @private\n     */\n    function PdfBoolean(value) {\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.currentPosition = -1;\n        this.value = value;\n    }\n    Object.defineProperty(PdfBoolean.prototype, \"status\", {\n        //Properties\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.objectStatus;\n        },\n        set: function (value) {\n            this.objectStatus = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBoolean.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.saving;\n        },\n        set: function (value) {\n            this.saving = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBoolean.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index;\n        },\n        set: function (value) {\n            this.index = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBoolean.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.currentPosition;\n        },\n        set: function (value) {\n            this.currentPosition = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBoolean.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            var rValue = null;\n            return rValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Saves` the object using the specified writer.\n     * @private\n     */\n    PdfBoolean.prototype.save = function (writer) {\n        writer.write(this.boolToStr(this.value));\n    };\n    /**\n     * Creates a `copy of PdfBoolean`.\n     * @private\n     */\n    PdfBoolean.prototype.clone = function (crossTable) {\n        var newNumber = new PdfBoolean(this.value);\n        return newNumber;\n    };\n    // Implementation\n    /**\n     * Converts `boolean to string` - 0/1 'true'/'false'.\n     * @private\n     */\n    PdfBoolean.prototype.boolToStr = function (value) {\n        return value ? 'true' : 'false';\n    };\n    return PdfBoolean;\n}());\nexport { PdfBoolean };\n","/**\n * ImageDecoder class\n */\nimport { ByteArray } from './byte-array';\nimport { PdfStream } from './../../primitives/pdf-stream';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfName } from './../../primitives/pdf-name';\nimport { PdfNumber } from './../../primitives/pdf-number';\nimport { PdfBoolean } from './../../primitives/pdf-boolean';\nimport { PdfDictionary } from './../../primitives/pdf-dictionary';\n/**\n * Specifies the image `format`.\n * @private\n */\nexport var ImageFormat;\n(function (ImageFormat) {\n    /**\n     * Specifies the type of `Unknown`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Unknown\"] = 0] = \"Unknown\";\n    /**\n     * Specifies the type of `Bmp`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Bmp\"] = 1] = \"Bmp\";\n    /**\n     * Specifies the type of `Emf`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Emf\"] = 2] = \"Emf\";\n    /**\n     * Specifies the type of `Gif`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Gif\"] = 3] = \"Gif\";\n    /**\n     * Specifies the type of `Jpeg`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Jpeg\"] = 4] = \"Jpeg\";\n    /**\n     * Specifies the type of `Png`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Png\"] = 5] = \"Png\";\n    /**\n     * Specifies the type of `Wmf`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Wmf\"] = 6] = \"Wmf\";\n    /**\n     * Specifies the type of `Icon`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Icon\"] = 7] = \"Icon\";\n})(ImageFormat || (ImageFormat = {}));\n/**\n * `Decode the image stream`.\n * @private\n */\nvar ImageDecoder = /** @class */ (function () {\n    /**\n     * Initialize the new instance for `image-decoder` class.\n     * @private\n     */\n    function ImageDecoder(stream) {\n        /**\n         * Specifies `format` of image.\n         * @hidden\n         * @private\n         */\n        this.mFormat = ImageFormat.Unknown;\n        /**\n         * `Bits per component`.\n         * @default 8\n         * @hidden\n         * @private\n         */\n        this.mbitsPerComponent = 8;\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @hidden\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        this.mStream = stream;\n        this.initialize();\n    }\n    Object.defineProperty(ImageDecoder.prototype, \"height\", {\n        /**\n         * Gets the `height` of image.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mHeight;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"width\", {\n        /**\n         * Gets the `width` of image.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mWidth;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"bitsPerComponent\", {\n        /**\n         * Gets `bits per component`.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mbitsPerComponent;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"size\", {\n        /**\n         * Gets the `size` of an image data.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mImageData.count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"imageData\", {\n        /**\n         * Gets the value of an `image data`.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mImageData;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"imageDataAsNumberArray\", {\n        /**\n         * Gets the value of an `image data as number array`.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mImageData.internalBuffer.buffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Initialize` image data and image stream.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.initialize = function () {\n        if (this.mFormat === ImageFormat.Unknown && this.checkIfJpeg()) {\n            this.mFormat = ImageFormat.Jpeg;\n            this.parseJpegImage();\n        }\n        this.reset();\n        this.mImageData = new ByteArray(this.mStream.count);\n        this.mStream.read(this.mImageData, 0, this.mImageData.count);\n    };\n    /**\n     * `Reset` stream position into 0.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.reset = function () {\n        this.mStream.position = 0;\n    };\n    /**\n     * `Parse` Jpeg image.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.parseJpegImage = function () {\n        this.reset();\n        var imgData = new ByteArray(this.mStream.count);\n        this.mStream.read(imgData, 0, imgData.count);\n        var i = 4;\n        /* tslint:disable */\n        if (String.fromCharCode(imgData.getBuffer(i + 2)) === 'J' && String.fromCharCode(imgData.getBuffer(i + 3)) === 'F' && String.fromCharCode(imgData.getBuffer(i + 4)) === 'I' && String.fromCharCode(imgData.getBuffer(i + 5)) === 'F' && imgData.getBuffer(i + 6) === 0) {\n            var length_1 = imgData.getBuffer(i) * 256 + imgData.getBuffer(i + 1);\n            while (i + length_1 < imgData.count) {\n                i += length_1;\n                if (imgData.getBuffer(i + 1) === 192) {\n                    this.mHeight = imgData.getBuffer(i + 5) * 256 + imgData.getBuffer(i + 6);\n                    this.mWidth = imgData.getBuffer(i + 7) * 256 + imgData.getBuffer(i + 8);\n                    return;\n                }\n                else {\n                    i += 2;\n                    length_1 = imgData.getBuffer(i) * 256 + imgData.getBuffer(i + 1);\n                }\n            }\n        }\n        /* tslint:enable */\n    };\n    Object.defineProperty(ImageDecoder.prototype, \"format\", {\n        /**\n         * Gets the image `format`.\n         * @private\n         * @hidden\n         */\n        get: function () {\n            return this.mFormat;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Checks if JPG`.\n     * @private\n     * @hidden\n     */\n    ImageDecoder.prototype.checkIfJpeg = function () {\n        this.reset();\n        for (var i = 0; i < ImageDecoder.mJpegHeader.length; i++) {\n            if (ImageDecoder.mJpegHeader[i] !== this.mStream.readByte(i)) {\n                return false;\n            }\n            this.mStream.position++;\n        }\n        return true;\n    };\n    /**\n     * Return image `dictionary`.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.getImageDictionary = function () {\n        if (this.mFormat === ImageFormat.Jpeg) {\n            var tempArrayBuffer = this.imageData.internalBuffer.length;\n            this.imageStream = new PdfStream();\n            this.imageStream.isImage = true;\n            var tempString = '';\n            var decodedString = '';\n            for (var i = 0; i < this.imageDataAsNumberArray.byteLength; i++) {\n                tempString += String.fromCharCode(null, this.mStream.readByte(i));\n            }\n            for (var i = 0; i < tempString.length; i++) {\n                if (i % 2 !== 0) {\n                    decodedString += tempString[i];\n                }\n            }\n            this.imageStream.data = [decodedString];\n            this.imageStream.compress = false;\n            this.imageStream.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.xObject));\n            this.imageStream.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.image));\n            this.imageStream.items.setValue(this.dictionaryProperties.width, new PdfNumber(this.width));\n            this.imageStream.items.setValue(this.dictionaryProperties.height, new PdfNumber(this.height));\n            this.imageStream.items.setValue(this.dictionaryProperties.bitsPerComponent, new PdfNumber(this.bitsPerComponent));\n            this.imageStream.items.setValue(this.dictionaryProperties.filter, new PdfName(this.dictionaryProperties.dctdecode));\n            this.imageStream.items.setValue(this.dictionaryProperties.colorSpace, new PdfName(this.getColorSpace()));\n            this.imageStream.items.setValue(this.dictionaryProperties.decodeParms, this.getDecodeParams());\n            return this.imageStream;\n        }\n        else {\n            return this.imageStream;\n        }\n    };\n    /**\n     * Return `colorSpace` of an image.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.getColorSpace = function () {\n        return this.dictionaryProperties.deviceRgb;\n    };\n    /**\n     * Return `decode parameters` of an image.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.getDecodeParams = function () {\n        var decodeParams = new PdfDictionary();\n        decodeParams.items.setValue(this.dictionaryProperties.columns, new PdfNumber(this.width));\n        decodeParams.items.setValue(this.dictionaryProperties.blackIs1, new PdfBoolean(true));\n        decodeParams.items.setValue(this.dictionaryProperties.k, new PdfNumber(-1));\n        decodeParams.items.setValue(this.dictionaryProperties.predictor, new PdfNumber(15));\n        decodeParams.items.setValue(this.dictionaryProperties.bitsPerComponent, new PdfNumber(this.bitsPerComponent));\n        return decodeParams;\n    };\n    /**\n     * Number array for `png header`.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.mPngHeader = [137, 80, 78, 71, 13, 10, 26, 10];\n    /**\n     * Number Array for `jpeg header`.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.mJpegHeader = [255, 216];\n    /**\n     * Number array for `gif header`.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.GIF_HEADER = 'G,I,F,8';\n    /**\n     * Number array for `bmp header.`\n     * @hidden\n     * @private\n     */\n    ImageDecoder.BMP_HEADER = 'B,M';\n    return ImageDecoder;\n}());\nexport { ImageDecoder };\n","/**\n * Used to perform `convertion between pixels and points`.\n * @private\n */\nvar PdfUnitConverter = /** @class */ (function () {\n    //constructors\n    /**\n     * Initializes a new instance of the `UnitConvertor` class with DPI value.\n     * @private\n     */\n    function PdfUnitConverter(dpi) {\n        this.updateProportionsHelper(dpi);\n    }\n    /**\n     * `Converts` the value, from one graphics unit to another graphics unit.\n     * @private\n     */\n    PdfUnitConverter.prototype.convertUnits = function (value, from, to) {\n        return this.convertFromPixels(this.convertToPixels(value, from), to);\n    };\n    /**\n     * Converts the value `to pixel` from specified graphics unit.\n     * @private\n     */\n    PdfUnitConverter.prototype.convertToPixels = function (value, from) {\n        var index = from;\n        var result = (value * this.proportions[index]);\n        return result;\n    };\n    /**\n     * Converts value, to specified graphics unit `from Pixel`.\n     * @private\n     */\n    PdfUnitConverter.prototype.convertFromPixels = function (value, to) {\n        var index = to;\n        var result = (value / this.proportions[index]);\n        return result;\n    };\n    /**\n     * `Update proportions` matrix according to Graphics settings.\n     * @private\n     */\n    PdfUnitConverter.prototype.updateProportionsHelper = function (pixelPerInch) {\n        this.proportions = [\n            pixelPerInch / 2.54,\n            pixelPerInch / 6.0,\n            1,\n            pixelPerInch / 72.0,\n            pixelPerInch,\n            pixelPerInch / 300.0,\n            pixelPerInch / 25.4 // Millimeter\n        ];\n    };\n    //Fields\n    /**\n     * Indicates default `horizontal resolution`.\n     * @default 96\n     * @private\n     */\n    PdfUnitConverter.horizontalResolution = 96;\n    /**\n     * Indicates default `vertical resolution`.\n     * @default 96\n     * @private\n     */\n    PdfUnitConverter.verticalResolution = 96;\n    return PdfUnitConverter;\n}());\nexport { PdfUnitConverter };\n","import { SizeF } from './../../drawing/pdf-drawing';\nimport { PdfGraphicsUnit } from './../enum';\nimport { PdfUnitConverter } from './../unit-convertor';\n/**\n * `PdfImage` class represents the base class for images and provides functionality for the 'PdfBitmap' class.\n * @private\n */\nvar PdfImage = /** @class */ (function () {\n    function PdfImage() {\n    }\n    Object.defineProperty(PdfImage.prototype, \"width\", {\n        /**\n         * Gets and Sets the `width` of an image.\n         * @private\n         */\n        get: function () {\n            return this.imageWidth;\n        },\n        set: function (value) {\n            this.imageWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfImage.prototype, \"height\", {\n        /**\n         * Gets and Sets the `height` of an image.\n         * @private\n         */\n        get: function () {\n            return this.imageHeight;\n        },\n        set: function (value) {\n            this.imageHeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfImage.prototype, \"size\", {\n        /**\n         * Gets or sets the size of the image.\n         * @private\n         */\n        set: function (value) {\n            this.width = value.width;\n            this.height = value.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfImage.prototype, \"physicalDimension\", {\n        /**\n         * Gets the `physical dimension` of an image.\n         * @private\n         */\n        get: function () {\n            this.imagePhysicalDimension = this.getPointSize(this.width, this.height, this.horizontalResolution, this.verticalResolution);\n            return new SizeF(this.width, this.height);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfImage.prototype, \"element\", {\n        // /**\n        //  * Gets the `image stream as string`.\n        //  * @private\n        //  */\n        // public static fromString(string : string) : PdfImage {\n        //     let image : PdfImage = new PdfBitmap(string);\n        //     return image;\n        // }\n        /**\n         * Gets the `element` image stream.\n         * @private\n         */\n        get: function () {\n            return this.imageStream;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfImage.prototype.getPointSize = function (width, height, horizontalResolution, verticalResolution) {\n        if (typeof horizontalResolution === 'undefined') {\n            var dpiX = PdfUnitConverter.horizontalResolution;\n            var dpiY = PdfUnitConverter.verticalResolution;\n            var size = this.getPointSize(width, height, dpiX, dpiY);\n            return size;\n        }\n        else {\n            var ucX = new PdfUnitConverter(horizontalResolution);\n            var ucY = new PdfUnitConverter(verticalResolution);\n            var ptWidth = ucX.convertUnits(width, PdfGraphicsUnit.Pixel, PdfGraphicsUnit.Point);\n            var ptHeight = ucY.convertUnits(height, PdfGraphicsUnit.Pixel, PdfGraphicsUnit.Point);\n            var size = new SizeF(ptWidth, ptHeight);\n            return size;\n        }\n    };\n    return PdfImage;\n}());\nexport { PdfImage };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfBitmap.ts class for EJ2-PDF\n */\nimport { ImageDecoder } from './../../graphics/images/image-decoder';\nimport { ByteArray } from './../../graphics/images/byte-array';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfImage } from './pdf-image';\n/**\n * The 'PdfBitmap' contains methods and properties to handle the Bitmap images.\n * ```typescript\n * // create a new PDF document.\n * let document : PdfDocument = new PdfDocument();\n * // add a page to the document.\n * let page1 : PdfPage = document.pages.add();\n * // base64 string of an image\n * let imageString : string = '/9j/3+2w7em7HzY/KiijFw … 1OEYRUYrQ45yc5OUtz/9k=';\n * // load the image from the base64 string of original image.\n * let image : PdfBitmap = new PdfBitmap(imageString);\n * // draw the image\n * page1.graphics.drawImage(image, new RectangleF({x : 10, y : 10}, {width : 200, height : 200}));\n * // save the document.\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfBitmap = /** @class */ (function (_super) {\n    __extends(PdfBitmap, _super);\n    /**\n     * Create an instance for `PdfBitmap` class.\n     * @param encodedString Base64 string of an image.\n     * ```typescript\n     * // create a new PDF document.\n     * let document : PdfDocument = new PdfDocument();\n     * // add a page to the document.\n     * let page1 : PdfPage = document.pages.add();\n     * // base64 string of an image\n     * let imageString : string = '/9j/3+2w7em7HzY/KiijFw … 1OEYRUYrQ45yc5OUtz/9k=';\n     * //\n     * // load the image from the base64 string of original image.\n     * let image : PdfBitmap = new PdfBitmap(imageString);\n     * //\n     * // draw the image\n     * page1.graphics.drawImage(image, new RectangleF({x : 10, y : 10}, {width : 200, height : 200}));\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     */\n    function PdfBitmap(encodedString) {\n        var _this = _super.call(this) || this;\n        //Fields\n        /**\n         * Specifies the `status` of an image.\n         * @default true.\n         * @hidden\n         * @private\n         */\n        _this.imageStatus = true;\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @hidden\n         * @private\n         */\n        _this.dictionaryProperties = new DictionaryProperties();\n        _this.loadImage(encodedString);\n        return _this;\n    }\n    /**\n     * `Load image`.\n     * @hidden\n     * @private\n     */\n    PdfBitmap.prototype.loadImage = function (encodedString) {\n        var task = this.initializeAsync(encodedString);\n    };\n    /**\n     * `Initialize` image parameters.\n     * @private\n     */\n    PdfBitmap.prototype.initializeAsync = function (encodedString) {\n        var byteArray = new ByteArray(encodedString.length);\n        byteArray.writeFromBase64String(encodedString);\n        this.decoder = new ImageDecoder(byteArray);\n        this.height = this.decoder.height;\n        this.width = this.decoder.width;\n        // FrameCount = BitmapImageDecoder.FrameCount;\n        this.bitsPerComponent = this.decoder.bitsPerComponent;\n    };\n    /**\n     * `Saves` the image into stream.\n     * @private\n     */\n    PdfBitmap.prototype.save = function () {\n        this.imageStatus = true;\n        this.imageStream = this.decoder.getImageDictionary();\n    };\n    return PdfBitmap;\n}(PdfImage));\nexport { PdfBitmap };\n","/**\n * TtfTableInfo.ts class for EJ2-PDF\n */\nvar TtfTableInfo = /** @class */ (function () {\n    function TtfTableInfo() {\n    }\n    Object.defineProperty(TtfTableInfo.prototype, \"empty\", {\n        //Properties\n        /**\n         * Gets a value indicating whether this table is empty.\n         * @private\n         */\n        get: function () {\n            var empty = (this.offset === this.length && this.length === this.checksum && this.checksum === 0);\n            return empty;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return TtfTableInfo;\n}());\nexport { TtfTableInfo };\n","var TtfNameTable = /** @class */ (function () {\n    function TtfNameTable() {\n    }\n    return TtfNameTable;\n}());\nexport { TtfNameTable };\n","/**\n * TtfNameRecord.ts class for EJ2-PDF\n */\nvar TtfNameRecord = /** @class */ (function () {\n    function TtfNameRecord() {\n    }\n    return TtfNameRecord;\n}());\nexport { TtfNameRecord };\n","/**\n * TtfHeadTable.ts class for EJ2-PDF\n */\nvar TtfHeadTable = /** @class */ (function () {\n    function TtfHeadTable() {\n    }\n    return TtfHeadTable;\n}());\nexport { TtfHeadTable };\n","var TtfMetrics = /** @class */ (function () {\n    function TtfMetrics() {\n    }\n    Object.defineProperty(TtfMetrics.prototype, \"isItalic\", {\n        //Properties\n        /**\n         * Gets a value indicating whether this instance is italic.\n         */\n        get: function () {\n            return ((this.macStyle & 2) !== 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TtfMetrics.prototype, \"isBold\", {\n        /**\n         * Gets a value indicating whether this instance is bold.\n         */\n        get: function () {\n            return ((this.macStyle & 1) !== 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return TtfMetrics;\n}());\nexport { TtfMetrics };\n","/**\n * TtfHorizontalHeaderTable.ts class for EJ2-PDF\n */\nvar TtfHorizontalHeaderTable = /** @class */ (function () {\n    function TtfHorizontalHeaderTable() {\n    }\n    return TtfHorizontalHeaderTable;\n}());\nexport { TtfHorizontalHeaderTable };\n","/**\n * TtfOS2Table.ts class for EJ2-PDF\n * The OS/2 table consists of a set of metrics that are required by Windows and OS/2.\n */\nvar TtfOS2Table = /** @class */ (function () {\n    function TtfOS2Table() {\n    }\n    return TtfOS2Table;\n}());\nexport { TtfOS2Table };\n","/**\n * TtfPostTable.ts class for EJ2-PDF\n */\nvar TtfPostTable = /** @class */ (function () {\n    function TtfPostTable() {\n    }\n    return TtfPostTable;\n}());\nexport { TtfPostTable };\n","/**\n * TtfLongHorMetric.ts class for EJ2-PDF\n */\nvar TtfLongHorMetric = /** @class */ (function () {\n    function TtfLongHorMetric() {\n    }\n    return TtfLongHorMetric;\n}());\nexport { TtfLongHorMetric };\n","/**\n * TtfCmapSubTable.ts class for EJ2-PDF\n */\nvar TtfCmapSubTable = /** @class */ (function () {\n    function TtfCmapSubTable() {\n    }\n    return TtfCmapSubTable;\n}());\nexport { TtfCmapSubTable };\n","/**\n * TtfCmapTable.ts class for EJ2-PDF\n */\nvar TtfCmapTable = /** @class */ (function () {\n    function TtfCmapTable() {\n    }\n    return TtfCmapTable;\n}());\nexport { TtfCmapTable };\n","/**\n * TtfGlyphInfo.ts class for EJ2-PDF\n */\nvar TtfGlyphInfo = /** @class */ (function () {\n    function TtfGlyphInfo() {\n    }\n    Object.defineProperty(TtfGlyphInfo.prototype, \"empty\", {\n        //Properties\n        /**\n         * Gets a value indicating whether this TtfGlyphInfo is empty.\n         */\n        get: function () {\n            var empty = (this.index === this.width && this.width === this.charCode && this.charCode === 0);\n            return empty;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //IComparable implementation\n    /**\n     * Compares two WidthDescriptor objects.\n     */\n    TtfGlyphInfo.prototype.compareTo = function (obj) {\n        var glyph = obj;\n        return this.index - glyph.index;\n    };\n    return TtfGlyphInfo;\n}());\nexport { TtfGlyphInfo };\n","/**\n * TtfLocaTable.ts class for EJ2-PDF\n */\nvar TtfLocaTable = /** @class */ (function () {\n    function TtfLocaTable() {\n    }\n    return TtfLocaTable;\n}());\nexport { TtfLocaTable };\n","/**\n * TtfAppleCmapSubTable.ts class for EJ2-PDF\n */\nvar TtfAppleCmapSubTable = /** @class */ (function () {\n    function TtfAppleCmapSubTable() {\n    }\n    return TtfAppleCmapSubTable;\n}());\nexport { TtfAppleCmapSubTable };\n","/**\n * TtfMicrosoftCmapSubTable.ts class for EJ2-PDF\n */\nvar TtfMicrosoftCmapSubTable = /** @class */ (function () {\n    function TtfMicrosoftCmapSubTable() {\n    }\n    return TtfMicrosoftCmapSubTable;\n}());\nexport { TtfMicrosoftCmapSubTable };\n","/**\n * TtfTrimmedCmapSubTable.ts class for EJ2-PDF\n */\nvar TtfTrimmedCmapSubTable = /** @class */ (function () {\n    function TtfTrimmedCmapSubTable() {\n    }\n    return TtfTrimmedCmapSubTable;\n}());\nexport { TtfTrimmedCmapSubTable };\n","/**\n * TtfLocaTable.ts class for EJ2-PDF\n */\nvar TtfGlyphHeader = /** @class */ (function () {\n    function TtfGlyphHeader() {\n    }\n    return TtfGlyphHeader;\n}());\nexport { TtfGlyphHeader };\n","/**\n * Writes data in BigEndian order.\n */\nvar BigEndianWriter = /** @class */ (function () {\n    //Constructors\n    /**\n     * Creates a new writer.\n     */\n    function BigEndianWriter(capacity) {\n        //Constants\n        /**\n         * Size of Int32 type.\n         */\n        this.int32Size = 4;\n        /**\n         * Size of Int16 type.\n         */\n        this.int16Size = 2;\n        /**\n         * Size of long type.\n         */\n        this.int64Size = 8;\n        this.bufferLength = capacity;\n        this.buffer = [];\n    }\n    Object.defineProperty(BigEndianWriter.prototype, \"data\", {\n        //Properties\n        /**\n         * Gets data written to the writer.\n         */\n        get: function () {\n            if (this.buffer.length < this.bufferLength) {\n                var length_1 = this.bufferLength - this.buffer.length;\n                for (var i = 0; i < length_1; i++) {\n                    this.buffer.push(0);\n                }\n            }\n            return this.buffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BigEndianWriter.prototype, \"position\", {\n        /// <summary>\n        /// Gets position of the internal buffer.\n        /// </summary>\n        get: function () {\n            if (this.internalPosition === undefined || this.internalPosition === null) {\n                this.internalPosition = 0;\n            }\n            return this.internalPosition;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Writes short value.\n     */\n    BigEndianWriter.prototype.writeShort = function (value) {\n        var bytes = [((value & 0x0000ff00) >> 8), value & 0x000000ff];\n        this.flush(bytes);\n    };\n    /**\n     * Writes int value.\n     */\n    BigEndianWriter.prototype.writeInt = function (value) {\n        var i1 = (value & 0xff000000) >> 24;\n        i1 = i1 < 0 ? 256 + i1 : i1;\n        var i2 = (value & 0x00ff0000) >> 16;\n        i2 = i2 < 0 ? 256 + i2 : i2;\n        var i3 = (value & 0x0000ff00) >> 8;\n        i3 = i3 < 0 ? 256 + i3 : i3;\n        var i4 = value & 0x000000ff;\n        i4 = i4 < 0 ? 256 + i4 : i4;\n        var bytes = [(value & 0xff000000) >> 24, (value & 0x00ff0000) >> 16, (value & 0x0000ff00) >> 8, value & 0x000000ff];\n        this.flush(bytes);\n    };\n    /**\n     * Writes u int value.\n     */\n    BigEndianWriter.prototype.writeUInt = function (value) {\n        var buff = [(value & 0xff000000) >> 24, (value & 0x00ff0000) >> 16, (value & 0x0000ff00) >> 8, value & 0x000000ff];\n        this.flush(buff);\n    };\n    /**\n     * Writes string value.\n     */\n    BigEndianWriter.prototype.writeString = function (value) {\n        if (value == null) {\n            throw new Error('Argument Null Exception : value');\n        }\n        var bytes = [];\n        for (var i = 0; i < value.length; i++) {\n            bytes.push(value.charCodeAt(i));\n        }\n        this.flush(bytes);\n    };\n    /**\n     * Writes byte[] value.\n     */\n    BigEndianWriter.prototype.writeBytes = function (value) {\n        this.flush(value);\n    };\n    // //Implementation\n    BigEndianWriter.prototype.flush = function (buff) {\n        if (buff === null) {\n            throw new Error('Argument Null Exception : buff');\n        }\n        var result = [];\n        for (var i = 0; i < this.position; i++) {\n            result.push(this.buffer[i]);\n        }\n        for (var i = 0; i < buff.length; i++) {\n            result.push(buff[i]);\n        }\n        for (var i = this.position; i < this.buffer.length; i++) {\n            result.push(this.buffer[i]);\n        }\n        this.buffer = result;\n        this.internalPosition += buff.length;\n    };\n    return BigEndianWriter;\n}());\nexport { BigEndianWriter };\n","/**\n * TtfReader.ts class for EJ2-PDF\n */\nimport { TtfTableInfo } from './ttf-table-info';\nimport { Dictionary } from './../../collections/dictionary';\nimport { TtfNameTable } from './ttf-name-table';\nimport { TtfNameRecord } from './ttf-name-record';\nimport { TtfHeadTable } from './ttf-head-table';\nimport { TtfMetrics } from './ttf-metrics';\nimport { TtfHorizontalHeaderTable } from './ttf-horizontal-header-table';\nimport { TtfOS2Table } from './ttf-OS2-Table';\nimport { TtfPostTable } from './ttf-post-table';\nimport { TtfLongHorMetric } from './ttf-long-hor-metric';\nimport { TtfCmapSubTable } from './ttf-cmap-sub-table';\nimport { TtfCmapTable } from './ttf-cmap-table';\nimport { TtfGlyphInfo } from './ttf-glyph-info';\nimport { TtfLocaTable } from './ttf-loca-table';\nimport { TtfAppleCmapSubTable } from './ttf-apple-cmap-sub-table';\nimport { TtfMicrosoftCmapSubTable } from './ttf-microsoft-cmap-sub-table';\nimport { TtfTrimmedCmapSubTable } from './ttf-trimmed-cmap-sub-table';\nimport { TtfGlyphHeader } from './ttf-glyph-header';\nimport { Rectangle } from './../../drawing/pdf-drawing';\nimport { StringTokenizer } from './string-tokenizer';\nimport { TtfCmapFormat, TtfCmapEncoding, TtfPlatformID } from './enum';\nimport { TtfMicrosoftEncodingID, TtfMacintoshEncodingID, TtfCompositeGlyphFlags } from './enum';\nimport { BigEndianWriter } from './../../input-output/big-endian-writer';\nvar TtfReader = /** @class */ (function () {\n    //Constructors\n    function TtfReader(fontData) {\n        this.int32Size = 4;\n        this.isTtcFont = false;\n        this.isMacTtf = false;\n        this.metricsName = '';\n        this.isMacTTF = false;\n        this.missedGlyphs = 0;\n        this.tableNames = ['cvt ', 'fpgm', 'glyf', 'head', 'hhea', 'hmtx', 'loca', 'maxp', 'prep'];\n        this.entrySelectors = [0, 0, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4];\n        this.fontData = fontData;\n        this.initialize();\n    }\n    Object.defineProperty(TtfReader.prototype, \"macintosh\", {\n        //Properties\n        /**\n         * Gets glyphs for Macintosh or Symbol fonts (char - key, glyph - value).\n         */\n        get: function () {\n            if (this.macintoshDictionary === null || this.macintoshDictionary === undefined) {\n                this.macintoshDictionary = new Dictionary();\n            }\n            return this.macintoshDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TtfReader.prototype, \"microsoft\", {\n        /**\n         * Gets glyphs for Microsoft or Symbol fonts (char - key, glyph - value).\n         */\n        get: function () {\n            if (this.microsoftDictionary === null || this.microsoftDictionary === undefined) {\n                this.microsoftDictionary = new Dictionary();\n            }\n            return this.microsoftDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TtfReader.prototype, \"macintoshGlyphs\", {\n        /**\n         * Gets glyphs for Macintosh or Symbol fonts (glyph index - key, glyph - value).\n         */\n        get: function () {\n            if (this.internalMacintoshGlyphs === null || this.internalMacintoshGlyphs === undefined) {\n                this.internalMacintoshGlyphs = new Dictionary();\n            }\n            return this.internalMacintoshGlyphs;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TtfReader.prototype, \"microsoftGlyphs\", {\n        /**\n         * Gets glyphs for Microsoft Unicode fonts (glyph index - key, glyph - value).\n         */\n        get: function () {\n            if (this.internalMicrosoftGlyphs === null || this.internalMicrosoftGlyphs === undefined) {\n                this.internalMicrosoftGlyphs = new Dictionary();\n            }\n            return this.internalMicrosoftGlyphs;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    TtfReader.prototype.initialize = function () {\n        if (this.metrics === undefined) {\n            this.metrics = new TtfMetrics();\n        }\n        this.readFontDictionary();\n        var nameTable = this.readNameTable();\n        var headTable = this.readHeadTable();\n        this.initializeFontName(nameTable);\n        this.metrics.macStyle = headTable.macStyle;\n    };\n    TtfReader.prototype.readFontDictionary = function () {\n        this.offset = 0;\n        var version = this.checkPreambula();\n        //this.offset += 4;\n        var numTables = this.readInt16(this.offset);\n        var searchRange = this.readInt16(this.offset);\n        var entrySelector = this.readInt16(this.offset);\n        var rangeShift = this.readInt16(this.offset);\n        if (this.tableDirectory === undefined) {\n            this.tableDirectory = new Dictionary();\n        }\n        for (var i = 0; i < numTables; ++i) {\n            var table = new TtfTableInfo();\n            var tableKey = this.readString(this.int32Size);\n            table.checksum = this.readInt32(this.offset);\n            table.offset = this.readInt32(this.offset);\n            table.length = this.readInt32(this.offset);\n            this.tableDirectory.setValue(tableKey, table);\n        }\n        this.lowestPosition = this.offset;\n        if (!this.isTtcFont) {\n            this.fixOffsets();\n        }\n    };\n    TtfReader.prototype.fixOffsets = function () {\n        var minOffset = Number.MAX_VALUE;\n        // Search for a smallest offset and compare it with the lowest position found.\n        var tableKeys = this.tableDirectory.keys();\n        for (var i = 0; i < tableKeys.length; i++) {\n            var value = this.tableDirectory.getValue(tableKeys[i]);\n            var offset = value.offset;\n            if (minOffset > offset) {\n                minOffset = offset;\n                if (minOffset <= this.lowestPosition) {\n                    break;\n                }\n            }\n        }\n        var shift = minOffset - this.lowestPosition;\n        if (shift !== 0) {\n            var table = new Dictionary();\n            for (var i = 0; i < tableKeys.length; i++) {\n                var value = this.tableDirectory.getValue(tableKeys[i]);\n                value.offset -= shift;\n                table.setValue(tableKeys[i], value);\n            }\n            this.tableDirectory = table;\n        }\n    };\n    TtfReader.prototype.checkPreambula = function () {\n        var version = this.readInt32(this.offset);\n        this.isMacTtf = (version === 0x74727565) ? true : false;\n        if (version !== 0x10000 && version !== 0x74727565 && version !== 0x4f54544f) {\n            this.isTtcFont = true;\n            this.offset = 0;\n            var fontTag = this.readString(4);\n            if (fontTag !== 'ttcf') {\n                throw new Error('Can not read TTF font data');\n            }\n            //skip 4\n            this.offset += 4;\n            var ttcIdentificationNumber = this.readInt32(this.offset);\n            if (ttcIdentificationNumber < 0) {\n                throw new Error('Can not read TTF font data');\n            }\n            this.offset = this.readInt32(this.offset);\n            version = this.readInt32(this.offset);\n        }\n        return version;\n    };\n    TtfReader.prototype.readNameTable = function () {\n        var tableInfo = this.getTable('name');\n        this.offset = tableInfo.offset;\n        var table = new TtfNameTable();\n        table.formatSelector = this.readUInt16(this.offset);\n        table.recordsCount = this.readUInt16(this.offset);\n        table.offset = this.readUInt16(this.offset);\n        table.nameRecords = [];\n        var recordSize = 12;\n        var position = this.offset;\n        for (var i = 0; i < table.recordsCount; i++) {\n            this.offset = position;\n            var record = new TtfNameRecord();\n            record.platformID = this.readUInt16(this.offset);\n            record.encodingID = this.readUInt16(this.offset);\n            record.languageID = this.readUInt16(this.offset);\n            record.nameID = this.readUInt16(this.offset);\n            record.length = this.readUInt16(this.offset);\n            record.offset = this.readUInt16(this.offset);\n            this.offset = tableInfo.offset + table.offset + record.offset;\n            var unicode = (record.platformID === 0 || record.platformID === 3);\n            record.name = this.readString(record.length, unicode);\n            table.nameRecords[i] = record;\n            position += recordSize;\n        }\n        return table;\n    };\n    TtfReader.prototype.readHeadTable = function () {\n        var tableInfo = this.getTable('head');\n        this.offset = tableInfo.offset;\n        var table = new TtfHeadTable();\n        table.version = this.readFixed(this.offset);\n        table.fontRevision = this.readFixed(this.offset);\n        table.checkSumAdjustment = this.readUInt32(this.offset);\n        table.magicNumber = this.readUInt32(this.offset);\n        table.flags = this.readUInt16(this.offset);\n        table.unitsPerEm = this.readUInt16(this.offset);\n        table.created = this.readInt64(this.offset);\n        table.modified = this.readInt64(this.offset);\n        table.xMin = this.readInt16(this.offset);\n        table.yMin = this.readInt16(this.offset);\n        table.xMax = this.readInt16(this.offset);\n        table.yMax = this.readInt16(this.offset);\n        table.macStyle = this.readUInt16(this.offset);\n        table.lowestReadableSize = this.readUInt16(this.offset);\n        table.fontDirectionHint = this.readInt16(this.offset);\n        table.indexToLocalFormat = this.readInt16(this.offset);\n        table.glyphDataFormat = this.readInt16(this.offset);\n        return table;\n    };\n    TtfReader.prototype.readHorizontalHeaderTable = function () {\n        var tableInfo = this.getTable('hhea');\n        this.offset = tableInfo.offset;\n        var table = new TtfHorizontalHeaderTable();\n        table.version = this.readFixed(this.offset);\n        table.ascender = this.readInt16(this.offset);\n        table.descender = this.readInt16(this.offset);\n        table.lineGap = this.readInt16(this.offset);\n        table.advanceWidthMax = this.readUInt16(this.offset);\n        table.minLeftSideBearing = this.readInt16(this.offset);\n        table.minRightSideBearing = this.readInt16(this.offset);\n        table.xMaxExtent = this.readInt16(this.offset);\n        table.caretSlopeRise = this.readInt16(this.offset);\n        table.caretSlopeRun = this.readInt16(this.offset);\n        //skip 2 * 5\n        this.offset += 10;\n        table.metricDataFormat = this.readInt16(this.offset);\n        table.numberOfHMetrics = this.readUInt16(this.offset);\n        return table;\n    };\n    TtfReader.prototype.readOS2Table = function () {\n        var tableInfo = this.getTable('OS/2');\n        this.offset = tableInfo.offset;\n        var table = new TtfOS2Table();\n        table.version = this.readUInt16(this.offset);\n        table.xAvgCharWidth = this.readInt16(this.offset);\n        table.usWeightClass = this.readUInt16(this.offset);\n        table.usWidthClass = this.readUInt16(this.offset);\n        table.fsType = this.readInt16(this.offset);\n        table.ySubscriptXSize = this.readInt16(this.offset);\n        table.ySubscriptYSize = this.readInt16(this.offset);\n        table.ySubscriptXOffset = this.readInt16(this.offset);\n        table.ySubscriptYOffset = this.readInt16(this.offset);\n        table.ySuperscriptXSize = this.readInt16(this.offset);\n        table.ySuperscriptYSize = this.readInt16(this.offset);\n        table.ySuperscriptXOffset = this.readInt16(this.offset);\n        table.ySuperscriptYOffset = this.readInt16(this.offset);\n        table.yStrikeoutSize = this.readInt16(this.offset);\n        table.yStrikeoutPosition = this.readInt16(this.offset);\n        table.sFamilyClass = this.readInt16(this.offset);\n        table.panose = this.readBytes(10);\n        table.ulUnicodeRange1 = this.readUInt32(this.offset);\n        table.ulUnicodeRange2 = this.readUInt32(this.offset);\n        table.ulUnicodeRange3 = this.readUInt32(this.offset);\n        table.ulUnicodeRange4 = this.readUInt32(this.offset);\n        table.vendorIdentifier = this.readBytes(4);\n        table.fsSelection = this.readUInt16(this.offset);\n        table.usFirstCharIndex = this.readUInt16(this.offset);\n        table.usLastCharIndex = this.readUInt16(this.offset);\n        table.sTypoAscender = this.readInt16(this.offset);\n        table.sTypoDescender = this.readInt16(this.offset);\n        table.sTypoLineGap = this.readInt16(this.offset);\n        table.usWinAscent = this.readUInt16(this.offset);\n        table.usWinDescent = this.readUInt16(this.offset);\n        table.ulCodePageRange1 = this.readUInt32(this.offset);\n        table.ulCodePageRange2 = this.readUInt32(this.offset);\n        if (table.version > 1) {\n            table.sxHeight = this.readInt16(this.offset);\n            table.sCapHeight = this.readInt16(this.offset);\n            table.usDefaultChar = this.readUInt16(this.offset);\n            table.usBreakChar = this.readUInt16(this.offset);\n            table.usMaxContext = this.readUInt16(this.offset);\n        }\n        else {\n            table.sxHeight = 0;\n            table.sCapHeight = 0;\n            table.usDefaultChar = 0;\n            table.usBreakChar = 0;\n            table.usMaxContext = 0;\n        }\n        return table;\n    };\n    TtfReader.prototype.readPostTable = function () {\n        var tableInfo = this.getTable('post');\n        this.offset = tableInfo.offset;\n        var table = new TtfPostTable();\n        table.formatType = this.readFixed(this.offset);\n        table.italicAngle = this.readFixed(this.offset);\n        table.underlinePosition = this.readInt16(this.offset);\n        table.underlineThickness = this.readInt16(this.offset);\n        table.isFixedPitch = this.readUInt32(this.offset);\n        table.minType42 = this.readUInt32(this.offset);\n        table.maxType42 = this.readUInt32(this.offset);\n        table.minType1 = this.readUInt32(this.offset);\n        table.maxType1 = this.readUInt32(this.offset);\n        return table;\n    };\n    /**\n     * Reads Width of the glyphs.\n     */\n    TtfReader.prototype.readWidthTable = function (glyphCount, unitsPerEm) {\n        var tableInfo = this.getTable('hmtx');\n        this.offset = tableInfo.offset;\n        var width = [];\n        for (var i = 0; i < glyphCount; i++) {\n            var glyph = new TtfLongHorMetric();\n            glyph.advanceWidth = this.readUInt16(this.offset);\n            glyph.lsb = this.readInt16(this.offset);\n            var glyphWidth = glyph.advanceWidth * 1000 / unitsPerEm;\n            width.push(Math.floor(glyphWidth));\n        }\n        return width;\n    };\n    /**\n     * Reads the cmap table.\n     */\n    TtfReader.prototype.readCmapTable = function () {\n        var tableInfo = this.getTable('cmap');\n        this.offset = tableInfo.offset;\n        var table = new TtfCmapTable();\n        table.version = this.readUInt16(this.offset);\n        table.tablesCount = this.readUInt16(this.offset);\n        var position = this.offset;\n        var subTables = [];\n        for (var i = 0; i < table.tablesCount; i++) {\n            this.offset = position;\n            var subTable = new TtfCmapSubTable();\n            subTable.platformID = this.readUInt16(this.offset);\n            subTable.encodingID = this.readUInt16(this.offset);\n            subTable.offset = this.readUInt32(this.offset);\n            position = this.offset;\n            this.readCmapSubTable(subTable);\n            subTables[i] = subTable;\n        }\n        return subTables;\n    };\n    /**\n     * Reads the cmap sub table.\n     */\n    TtfReader.prototype.readCmapSubTable = function (subTable) {\n        var tableInfo = this.getTable('cmap');\n        this.offset = tableInfo.offset + subTable.offset;\n        var format = this.readUInt16(this.offset);\n        var encoding = this.getCmapEncoding(subTable.platformID, subTable.encodingID);\n        var platform = (encoding === TtfCmapEncoding.Macintosh) ? TtfPlatformID.Macintosh : TtfPlatformID.Microsoft;\n        if (encoding !== TtfCmapEncoding.Unknown) {\n            switch (format) {\n                case TtfCmapFormat.Apple:\n                    this.readAppleCmapTable(subTable, encoding);\n                    break;\n                case TtfCmapFormat.Microsoft:\n                    this.readMicrosoftCmapTable(subTable, encoding);\n                    break;\n                case TtfCmapFormat.Trimmed:\n                    this.readTrimmedCmapTable(subTable, encoding);\n                    break;\n            }\n        }\n    };\n    /**\n     * Reads Symbol cmap table.\n     */\n    TtfReader.prototype.readAppleCmapTable = function (subTable, encoding) {\n        var tableInfo = this.getTable('cmap');\n        this.offset = tableInfo.offset + subTable.offset;\n        var table = new TtfAppleCmapSubTable();\n        table.format = this.readUInt16(this.offset);\n        table.length = this.readUInt16(this.offset);\n        table.version = this.readUInt16(this.offset);\n        if (this.maxMacIndex === null || this.maxMacIndex === undefined) {\n            this.maxMacIndex = 0;\n        }\n        for (var i = 0; i < 256; ++i) {\n            var glyphInfo = new TtfGlyphInfo();\n            glyphInfo.index = this.readByte(this.offset);\n            glyphInfo.width = this.getWidth(glyphInfo.index);\n            glyphInfo.charCode = i;\n            this.macintosh.setValue(i, glyphInfo);\n            this.addGlyph(glyphInfo, encoding);\n            // NOTE: this code fixes char codes that extends 0x100. However, it might corrupt something.\n            this.maxMacIndex = Math.max(i, this.maxMacIndex);\n        }\n    };\n    /**\n     * Reads Symbol cmap table.\n     */\n    TtfReader.prototype.readMicrosoftCmapTable = function (subTable, encoding) {\n        var tableInfo = this.getTable('cmap');\n        this.offset = tableInfo.offset + subTable.offset;\n        var collection = (encoding === TtfCmapEncoding.Unicode) ? this.microsoft : this.macintosh;\n        var table = new TtfMicrosoftCmapSubTable();\n        table.format = this.readUInt16(this.offset);\n        table.length = this.readUInt16(this.offset);\n        table.version = this.readUInt16(this.offset);\n        table.segCountX2 = this.readUInt16(this.offset);\n        table.searchRange = this.readUInt16(this.offset);\n        table.entrySelector = this.readUInt16(this.offset);\n        table.rangeShift = this.readUInt16(this.offset);\n        var segCount = table.segCountX2 / 2;\n        table.endCount = this.readUshortArray(segCount);\n        table.reservedPad = this.readUInt16(this.offset);\n        table.startCount = this.readUshortArray(segCount);\n        table.idDelta = this.readUshortArray(segCount);\n        table.idRangeOffset = this.readUshortArray(segCount);\n        var length = (table.length / 2 - 8) - (segCount * 4);\n        table.glyphID = this.readUshortArray(length);\n        // Process glyphIdArray array.\n        var codeOffset = 0;\n        var index = 0;\n        for (var j = 0; j < segCount; j++) {\n            for (var k = table.startCount[j]; k <= table.endCount[j] && k !== 65535; k++) {\n                if (table.idRangeOffset[j] === 0) {\n                    codeOffset = (k + table.idDelta[j]) & 65535;\n                }\n                else {\n                    index = j + table.idRangeOffset[j] / 2 - segCount + k - table.startCount[j];\n                    if (index >= table.glyphID.length) {\n                        continue;\n                    }\n                    codeOffset = (table.glyphID[index] + table.idDelta[j]) & 65535;\n                }\n                var glyph = new TtfGlyphInfo();\n                glyph.index = codeOffset;\n                glyph.width = this.getWidth(glyph.index);\n                var id = (encoding === TtfCmapEncoding.Symbol) ? ((k & 0xff00) === 0xf000 ? k & 0xff : k) : k;\n                glyph.charCode = id;\n                collection.setValue(id, glyph);\n                this.addGlyph(glyph, encoding);\n            }\n        }\n    };\n    /**\n     * Reads Trimed cmap table.\n     */\n    TtfReader.prototype.readTrimmedCmapTable = function (subTable, encoding) {\n        var tableInfo = this.getTable('cmap');\n        this.offset = tableInfo.offset + subTable.offset;\n        var table = new TtfTrimmedCmapSubTable();\n        table.format = this.readUInt16(this.offset);\n        table.length = this.readUInt16(this.offset);\n        table.version = this.readUInt16(this.offset);\n        table.firstCode = this.readUInt16(this.offset);\n        table.entryCount = this.readUInt16(this.offset);\n        for (var i = 0; i < table.entryCount; ++i) {\n            var glyphInfo = new TtfGlyphInfo();\n            glyphInfo.index = this.readUInt16(this.offset);\n            glyphInfo.width = this.getWidth(glyphInfo.index);\n            glyphInfo.charCode = i + table.firstCode;\n            this.macintosh.setValue(i, glyphInfo);\n            this.addGlyph(glyphInfo, encoding);\n            // NOTE: this code fixes char codes that extends 0x100. However, it might corrupt something.\n            this.maxMacIndex = Math.max(i, this.maxMacIndex);\n        }\n    };\n    TtfReader.prototype.initializeFontName = function (nameTable) {\n        for (var i = 0; i < nameTable.recordsCount; i++) {\n            var record = nameTable.nameRecords[i];\n            if (record.nameID === 1) {\n                //font family\n                this.metrics.fontFamily = record.name;\n            }\n            else if (record.nameID === 6) {\n                //post script name\n                this.metrics.postScriptName = record.name;\n            }\n            /* tslint:disable */\n            if (this.metrics.fontFamily !== null && this.metrics.fontFamily !== undefined && this.metrics.postScriptName !== null && this.metrics.postScriptName !== undefined) {\n                break;\n            }\n            /* tslint:disable */\n        }\n    };\n    TtfReader.prototype.getTable = function (name) {\n        // if (name === null) {\n        //     throw new Error('Argument Null Exception : name');\n        // }\n        var table = new TtfTableInfo();\n        var obj;\n        if (this.tableDirectory.containsKey(name)) {\n            obj = this.tableDirectory.getValue(name);\n        }\n        if (obj !== null && obj !== undefined) {\n            table = obj;\n        }\n        return table;\n    };\n    /**\n     * Returns width of the glyph.\n     */\n    TtfReader.prototype.getWidth = function (glyphCode) {\n        glyphCode = (glyphCode < this.width.length) ? glyphCode : this.width.length - 1;\n        return this.width[glyphCode];\n    };\n    /**\n     * Gets CMAP encoding based on platform ID and encoding ID.\n     */\n    /* tslint:disable */\n    TtfReader.prototype.getCmapEncoding = function (platformID, encodingID) {\n        var format = TtfCmapEncoding.Unknown;\n        if (platformID == TtfPlatformID.Microsoft && encodingID == TtfMicrosoftEncodingID.Undefined) {\n            // When building a symbol font for Windows,\n            // the platform ID should be 3 and the encoding ID should be 0.\n            format = TtfCmapEncoding.Symbol;\n        }\n        else if (platformID == TtfPlatformID.Microsoft && encodingID == TtfMicrosoftEncodingID.Unicode) {\n            // When building a Unicode font for Windows,\n            // the platform ID should be 3 and the encoding ID should be 1.\n            format = TtfCmapEncoding.Unicode;\n        }\n        else if (platformID == TtfPlatformID.Macintosh && encodingID == TtfMacintoshEncodingID.Roman) {\n            // When building a font that will be used on the Macintosh,\n            // the platform ID should be 1 and the encoding ID should be 0.\n            format = TtfCmapEncoding.Macintosh;\n        }\n        return format;\n    };\n    /* tslint:enable */\n    /**\n     * Adds glyph to the collection.\n     */\n    TtfReader.prototype.addGlyph = function (glyph, encoding) {\n        var collection = null;\n        switch (encoding) {\n            case TtfCmapEncoding.Unicode:\n                collection = this.microsoftGlyphs;\n                break;\n            case TtfCmapEncoding.Macintosh:\n            case TtfCmapEncoding.Symbol:\n                collection = this.macintoshGlyphs;\n                break;\n        }\n        collection.setValue(glyph.index, glyph);\n    };\n    /**\n     * Initializes metrics.\n     */\n    /* tslint:disable */\n    TtfReader.prototype.initializeMetrics = function (nameTable, headTable, horizontalHeadTable, os2Table, postTable, cmapTables) {\n        /* tslint:enable */\n        // if (cmapTables === null) {\n        //     throw new Error('ArgumentNullException : cmapTables');\n        // }\n        this.initializeFontName(nameTable);\n        // Get font encoding.\n        var bSymbol = false;\n        for (var i = 0; i < cmapTables.length; i++) {\n            var subTable = cmapTables[i];\n            var encoding = this.getCmapEncoding(subTable.platformID, subTable.encodingID);\n            if (encoding === TtfCmapEncoding.Symbol) {\n                bSymbol = true;\n                break;\n            }\n        }\n        this.metrics.isSymbol = bSymbol;\n        this.metrics.macStyle = headTable.macStyle;\n        this.metrics.isFixedPitch = (postTable.isFixedPitch !== 0);\n        this.metrics.italicAngle = postTable.italicAngle;\n        var factor = 1000 / headTable.unitsPerEm;\n        this.metrics.winAscent = os2Table.sTypoAscender * factor;\n        this.metrics.macAscent = horizontalHeadTable.ascender * factor;\n        //m_metrics.MacAscent = os2Table.UsWinAscent * factor;\n        // NOTE: This is stange workaround. The value is good if os2Table.SCapHeight != 0, otherwise it should be properly computed.\n        this.metrics.capHeight = (os2Table.sCapHeight !== 0) ? os2Table.sCapHeight : 0.7 * headTable.unitsPerEm * factor;\n        this.metrics.winDescent = os2Table.sTypoDescender * factor;\n        this.metrics.macDescent = horizontalHeadTable.descender * factor;\n        //m_metrics.MacDescent = -os2Table.UsWinDescent * factor;\n        this.metrics.leading = (os2Table.sTypoAscender - os2Table.sTypoDescender + os2Table.sTypoLineGap) * factor;\n        this.metrics.lineGap = Math.ceil(horizontalHeadTable.lineGap * factor);\n        var left = headTable.xMin * factor;\n        var top = Math.ceil(this.metrics.macAscent + this.metrics.lineGap);\n        var right = headTable.xMax * factor;\n        var bottom = this.metrics.macDescent;\n        this.metrics.fontBox = new Rectangle(left, top, right, bottom);\n        // NOTE: Strange!\n        this.metrics.stemV = 80;\n        this.metrics.widthTable = this.updateWidth();\n        this.metrics.contains = this.tableDirectory.containsKey('CFF');\n        this.metrics.subScriptSizeFactor = headTable.unitsPerEm / os2Table.ySubscriptYSize;\n        this.metrics.superscriptSizeFactor = headTable.unitsPerEm / os2Table.ySuperscriptYSize;\n    };\n    /**\n     * Updates chars structure which is used in the case of ansi encoding (256 bytes).\n     */\n    TtfReader.prototype.updateWidth = function () {\n        var count = 256;\n        var bytes = [];\n        if (this.metrics.isSymbol) {\n            for (var i = 0; i < count; i++) {\n                var glyphInfo = this.getGlyph(String.fromCharCode(i));\n                bytes[i] = (glyphInfo.empty) ? 0 : glyphInfo.width;\n            }\n        }\n        else {\n            var byteToProcess = [];\n            var unknown = '?';\n            var space = String.fromCharCode(32);\n            for (var i = 0; i < count; i++) {\n                byteToProcess[0] = i;\n                var text = this.getString(byteToProcess, 0, byteToProcess.length);\n                var ch = (text.length > 0) ? text[0] : unknown;\n                var glyphInfo = this.getGlyph(ch);\n                if (!glyphInfo.empty) {\n                    bytes[i] = glyphInfo.width;\n                }\n                else {\n                    glyphInfo = this.getGlyph(space);\n                    bytes[i] = (glyphInfo.empty) ? 0 : glyphInfo.width;\n                }\n            }\n        }\n        return bytes;\n    };\n    /**\n     * Returns default glyph.\n     */\n    TtfReader.prototype.getDefaultGlyph = function () {\n        var glyph = this.getGlyph(StringTokenizer.whiteSpace);\n        return glyph;\n    };\n    /**\n     * Reads unicode string from byte array.\n     */\n    TtfReader.prototype.getString = function (byteToProcess, start, length) {\n        var result = '';\n        for (var index = 0; index < length; index++) {\n            result += String.fromCharCode(byteToProcess[index + start]);\n        }\n        return result;\n    };\n    /**\n     * Reads loca table.\n     */\n    TtfReader.prototype.readLocaTable = function (bShort) {\n        var tableInfo = this.getTable('loca');\n        this.offset = tableInfo.offset;\n        var table = new TtfLocaTable();\n        var buffer = null;\n        if (bShort) {\n            var len = tableInfo.length / 2;\n            buffer = [];\n            for (var i = 0; i < len; i++) {\n                buffer[i] = this.readUInt16(this.offset) * 2;\n            }\n        }\n        else {\n            var len = tableInfo.length / 4;\n            buffer = [];\n            for (var i = 0; i < len; i++) {\n                buffer[i] = this.readUInt32(this.offset);\n            }\n        }\n        table.offsets = buffer;\n        return table;\n    };\n    /**\n     * Updates hash table of used glyphs.\n     */\n    TtfReader.prototype.updateGlyphChars = function (glyphChars, locaTable) {\n        // if (glyphChars === null) {\n        //     throw new Error('Argument Null Exception : glyphChars');\n        // }\n        // Add zero key.\n        if (!glyphChars.containsKey(0)) {\n            glyphChars.setValue(0, 0);\n        }\n        var clone = new Dictionary();\n        var glyphCharKeys = glyphChars.keys();\n        for (var i = 0; i < glyphCharKeys.length; i++) {\n            clone.setValue(glyphCharKeys[i], glyphChars.getValue(glyphCharKeys[i]));\n        }\n        for (var i = 0; i < glyphCharKeys.length; i++) {\n            var nextKey = glyphCharKeys[i];\n            this.processCompositeGlyph(glyphChars, nextKey, locaTable);\n        }\n    };\n    /**\n     * Checks if glyph is composite or not.\n     */\n    TtfReader.prototype.processCompositeGlyph = function (glyphChars, glyph, locaTable) {\n        // if (glyphChars === null) {\n        //     throw new Error('Argument Null Exception : glyphChars');\n        // }\n        // Is in range.\n        if (glyph < locaTable.offsets.length - 1) {\n            var glyphOffset = locaTable.offsets[glyph];\n            if (glyphOffset !== locaTable.offsets[glyph + 1]) {\n                var tableInfo = this.getTable('glyf');\n                this.offset = tableInfo.offset + glyphOffset;\n                var glyphHeader = new TtfGlyphHeader();\n                glyphHeader.numberOfContours = this.readInt16(this.offset);\n                glyphHeader.xMin = this.readInt16(this.offset);\n                glyphHeader.yMin = this.readInt16(this.offset);\n                glyphHeader.xMax = this.readInt16(this.offset);\n                glyphHeader.yMax = this.readInt16(this.offset);\n                // Glyph is composite.\n                if (glyphHeader.numberOfContours < 0) {\n                    var skipBytes = 0;\n                    var entry = true;\n                    while (entry) {\n                        var flags = this.readUInt16(this.offset);\n                        var glyphIndex = this.readUInt16(this.offset);\n                        if (!glyphChars.containsKey(glyphIndex)) {\n                            glyphChars.setValue(glyphIndex, 0);\n                        }\n                        if ((flags & TtfCompositeGlyphFlags.MoreComponents) === 0) {\n                            break;\n                        }\n                        skipBytes = ((flags & TtfCompositeGlyphFlags.Arg1And2AreWords) !== 0) ? 4 : 2;\n                        if ((flags & TtfCompositeGlyphFlags.WeHaveScale) !== 0) {\n                            skipBytes += 2;\n                        }\n                        else if ((flags & TtfCompositeGlyphFlags.WeHaveAnXyScale) !== 0) {\n                            skipBytes += 4;\n                        }\n                        else if ((flags & TtfCompositeGlyphFlags.WeHaveTwoByTwo) !== 0) {\n                            skipBytes += 2 * 4;\n                        }\n                        this.offset += skipBytes;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Creates new glyph tables based on chars that are used for output.\n     */\n    /* tslint:disable */\n    TtfReader.prototype.generateGlyphTable = function (glyphChars, locaTable, newLocaTable, newGlyphTable) {\n        /* tslint:enable */\n        // if (glyphChars === null) {\n        //     throw new Error('Argument Null Exception : glyphChars');\n        // }\n        newLocaTable = [];\n        // Sorting used glyphs keys.\n        var activeGlyphs = glyphChars.keys();\n        activeGlyphs.sort(function (a, b) { return a - b; });\n        var glyphSize = 0;\n        for (var i = 0; i < activeGlyphs.length; i++) {\n            var glyphIndex = activeGlyphs[i];\n            if (locaTable.offsets.length > 0) {\n                glyphSize += locaTable.offsets[glyphIndex + 1] - locaTable.offsets[glyphIndex];\n            }\n        }\n        var glyphSizeAligned = this.align(glyphSize);\n        newGlyphTable = [];\n        for (var i = 0; i < glyphSizeAligned; i++) {\n            newGlyphTable.push(0);\n        }\n        var nextGlyphOffset = 0;\n        var nextGlyphIndex = 0;\n        var table = this.getTable('glyf');\n        // Creating NewLocaTable - that would hold offsets for filtered glyphs.\n        for (var i = 0; i < locaTable.offsets.length; i++) {\n            newLocaTable.push(nextGlyphOffset);\n            if (nextGlyphIndex < activeGlyphs.length && activeGlyphs[nextGlyphIndex] === i) {\n                ++nextGlyphIndex;\n                newLocaTable[i] = nextGlyphOffset;\n                var oldGlyphOffset = locaTable.offsets[i];\n                var oldNextGlyphOffset = locaTable.offsets[i + 1] - oldGlyphOffset;\n                if (oldNextGlyphOffset > 0) {\n                    this.offset = table.offset + oldGlyphOffset;\n                    var result = this.read(newGlyphTable, nextGlyphOffset, oldNextGlyphOffset);\n                    newGlyphTable = result.buffer;\n                    nextGlyphOffset += oldNextGlyphOffset;\n                }\n            }\n        }\n        return { glyphTableSize: glyphSize, newLocaTable: newLocaTable, newGlyphTable: newGlyphTable };\n    };\n    /**\n     * Updates new Loca table.\n     */\n    /* tslint:disable */\n    TtfReader.prototype.updateLocaTable = function (newLocaTable, bLocaIsShort, newLocaTableOut) {\n        /* tslint:enable */\n        if (newLocaTable === null) {\n            throw new Error('Argument Null Exception : newLocaTable');\n        }\n        var size = (bLocaIsShort) ? newLocaTable.length * 2 : newLocaTable.length * 4;\n        var count = this.align(size);\n        //BigEndianWiter\n        var writer = new BigEndianWriter(count);\n        for (var i = 0; i < newLocaTable.length; i++) {\n            var value = newLocaTable[i];\n            if (bLocaIsShort) {\n                value /= 2;\n                writer.writeShort(value);\n            }\n            else {\n                writer.writeInt(value);\n            }\n        }\n        return { newLocaUpdated: writer.data, newLocaSize: size };\n    };\n    /**\n     * Aligns number to be divisible on 4.\n     */\n    TtfReader.prototype.align = function (value) {\n        return (value + 3) & (~3);\n    };\n    /**\n     * Returns font program data.\n     */\n    /* tslint:disable */\n    TtfReader.prototype.getFontProgram = function (newLocaTableOut, newGlyphTable, glyphTableSize, locaTableSize) {\n        /* tslint:enable */\n        if (newLocaTableOut === null) {\n            throw new Error('Argument Null Exception : newLocaTableOut');\n        }\n        if (newGlyphTable === null) {\n            throw new Error('Argument Null Exception : newGlyphTable');\n        }\n        var tableNames = this.tableNames;\n        var result = this.getFontProgramLength(newLocaTableOut, newGlyphTable, 0);\n        var fontProgramLength = result.fontProgramLength;\n        var numTables = result.numTables;\n        var writer = new BigEndianWriter(fontProgramLength);\n        writer.writeInt(0x10000);\n        writer.writeShort(numTables);\n        var entrySelector = this.entrySelectors[numTables];\n        writer.writeShort((1 << (entrySelector & 31)) * 16);\n        writer.writeShort(entrySelector);\n        writer.writeShort((numTables - (1 << (entrySelector & 31))) * 16);\n        // Writing to destination buffer - checksums && sizes of used tables.\n        this.writeCheckSums(writer, numTables, newLocaTableOut, newGlyphTable, glyphTableSize, locaTableSize);\n        // // Writing to destination buffer - used glyphs.\n        this.writeGlyphs(writer, newLocaTableOut, newGlyphTable);\n        return writer.data;\n    };\n    /* tslint:disable */\n    TtfReader.prototype.getFontProgramLength = function (newLocaTableOut, newGlyphTable, numTables) {\n        /* tslint:enable */\n        if (newLocaTableOut === null) {\n            throw new Error('Argument Null Exception : newLocaTableOut');\n        }\n        if (newGlyphTable === null) {\n            throw new Error('Argument Null Exception : newGlyphTable');\n        }\n        // glyf and loca are used by default;\n        numTables = 2;\n        var tableNames = this.tableNames;\n        var fontProgramLength = 0;\n        for (var i = 0; i < tableNames.length; i++) {\n            var tableName = tableNames[i];\n            if (tableName !== 'glyf' && tableName !== 'loca') {\n                var table = this.getTable(tableName);\n                if (!table.empty) {\n                    ++numTables;\n                    fontProgramLength += this.align(table.length);\n                }\n            }\n        }\n        fontProgramLength += newLocaTableOut.length;\n        fontProgramLength += newGlyphTable.length;\n        var usedTablesSize = numTables * 16 + (3 * 4);\n        fontProgramLength += usedTablesSize;\n        return { fontProgramLength: fontProgramLength, numTables: numTables };\n    };\n    /**\n     * Writing to destination buffer - checksums and sizes of used tables.\n     */\n    /* tslint:disable */\n    TtfReader.prototype.writeCheckSums = function (writer, numTables, newLocaTableOut, newGlyphTable, glyphTableSize, locaTableSize) {\n        /* tslint:enable */\n        if (writer === null) {\n            throw new Error('Argument Null Exception : writer');\n        }\n        if (newLocaTableOut === null) {\n            throw new Error('Argument Null Exception : newLocaTableOut');\n        }\n        if (newGlyphTable === null) {\n            throw new Error('Argument Null Exception : newGlyphTable');\n        }\n        var tableNames = this.tableNames;\n        var usedTablesSize = numTables * 16 + (3 * 4);\n        var nextTableSize = 0;\n        for (var i = 0; i < tableNames.length; i++) {\n            var tableName = tableNames[i];\n            var tableInfo = this.getTable(tableName);\n            if (tableInfo.empty) {\n                continue;\n            }\n            writer.writeString(tableName);\n            if (tableName === 'glyf') {\n                var checksum = this.calculateCheckSum(newGlyphTable);\n                writer.writeInt(checksum);\n                nextTableSize = glyphTableSize;\n            }\n            else if (tableName === 'loca') {\n                var checksum = this.calculateCheckSum(newLocaTableOut);\n                writer.writeInt(checksum);\n                nextTableSize = locaTableSize;\n            }\n            else {\n                writer.writeInt(tableInfo.checksum);\n                nextTableSize = tableInfo.length;\n            }\n            writer.writeUInt(usedTablesSize);\n            writer.writeUInt(nextTableSize);\n            usedTablesSize += this.align(nextTableSize);\n        }\n    };\n    /**\n     * Gets checksum from source buffer.\n     */\n    TtfReader.prototype.calculateCheckSum = function (bytes) {\n        if (bytes === null) {\n            throw new Error('Argument Null Exception : bytes');\n        }\n        var pos = 0;\n        var byte1 = 0;\n        var byte2 = 0;\n        var byte3 = 0;\n        var byte4 = 0;\n        for (var i = 0; i < (bytes.length + 1) / 4; i++) {\n            byte4 += (bytes[pos++] & 255);\n            byte3 += (bytes[pos++] & 255);\n            byte2 += (bytes[pos++] & 255);\n            byte1 += (bytes[pos++] & 255);\n        }\n        var result = byte1;\n        result += (byte2 << 8);\n        result += (byte3 << 16);\n        result += (byte4 << 24);\n        return result;\n    };\n    /**\n     * Writing to destination buffer - used glyphs.\n     */\n    TtfReader.prototype.writeGlyphs = function (writer, newLocaTable, newGlyphTable) {\n        if (writer === null) {\n            throw new Error('Argument Null Exception : writer');\n        }\n        if (newLocaTable === null) {\n            throw new Error('Argument Null Exception : newLocaTableOut');\n        }\n        if (newGlyphTable === null) {\n            throw new Error('Argument Null Exception : newGlyphTable');\n        }\n        var tableNames = this.tableNames;\n        for (var i = 0; i < tableNames.length; i++) {\n            var tableName = tableNames[i];\n            var tableInfo = this.getTable(tableName);\n            if (tableInfo.empty) {\n                continue;\n            }\n            if (tableName === 'glyf') {\n                writer.writeBytes(newGlyphTable);\n            }\n            else if (tableName === 'loca') {\n                writer.writeBytes(newLocaTable);\n            }\n            else {\n                var count = this.align(tableInfo.length);\n                var buff = [];\n                for (var i_1 = 0; i_1 < count; i_1++) {\n                    buff.push(0);\n                }\n                this.offset = tableInfo.offset;\n                var result = this.read(buff, 0, tableInfo.length);\n                writer.writeBytes(result.buffer);\n            }\n        }\n    };\n    //public methods\n    /**\n     * Sets position value of font data.\n     */\n    TtfReader.prototype.setOffset = function (offset) {\n        this.offset = offset;\n    };\n    /**\n     * Creates font Internals\n     * @private\n     */\n    TtfReader.prototype.createInternals = function () {\n        this.metrics = new TtfMetrics();\n        var nameTable = this.readNameTable();\n        var headTable = this.readHeadTable();\n        this.bIsLocaShort = (headTable.indexToLocalFormat === 0);\n        var horizontalHeadTable = this.readHorizontalHeaderTable();\n        var os2Table = this.readOS2Table();\n        var postTable = this.readPostTable();\n        this.width = this.readWidthTable(horizontalHeadTable.numberOfHMetrics, headTable.unitsPerEm);\n        var subTables = this.readCmapTable();\n        this.initializeMetrics(nameTable, headTable, horizontalHeadTable, os2Table, postTable, subTables);\n    };\n    TtfReader.prototype.getGlyph = function (charCode) {\n        if (typeof charCode === 'number') {\n            var obj1 = null;\n            if (!this.metrics.isSymbol && this.microsoftGlyphs != null) {\n                if (this.microsoftGlyphs.containsKey(charCode)) {\n                    obj1 = this.microsoftGlyphs.getValue(charCode);\n                }\n            }\n            else if (this.metrics.isSymbol && this.macintoshGlyphs != null) {\n                if (this.macintoshGlyphs.containsKey(charCode)) {\n                    obj1 = this.macintoshGlyphs.getValue(charCode);\n                }\n            }\n            var glyph = (obj1 != null) ? obj1 : this.getDefaultGlyph();\n            return glyph;\n        }\n        else {\n            var obj = null;\n            var code = charCode.charCodeAt(0);\n            if (!this.metrics.isSymbol && this.microsoft !== null) {\n                if (this.microsoft.containsKey(code)) {\n                    obj = this.microsoft.getValue(code);\n                    if (code !== StringTokenizer.whiteSpace.charCodeAt(0)) {\n                        this.isFontPresent = true;\n                    }\n                }\n                else if (code !== StringTokenizer.whiteSpace.charCodeAt(0)) {\n                    this.isFontPresent = false;\n                }\n            }\n            else if (this.metrics.isSymbol && this.macintosh !== null || this.isMacTTF) {\n                // NOTE: this code fixes char codes that extends 0x100. However, it might corrupt something.\n                if (this.maxMacIndex !== 0) {\n                    code %= this.maxMacIndex + 1;\n                }\n                else {\n                    code = ((code & 0xff00) === 0xf000 ? code & 0xff : code);\n                }\n                if (this.macintosh.containsKey(code)) {\n                    obj = this.macintosh.getValue(code);\n                    this.isFontPresent = true;\n                }\n            }\n            // Fix for StackOverFlow exception in XPS to PDF converter\n            if (charCode === StringTokenizer.whiteSpace && obj === null) {\n                obj = new TtfGlyphInfo();\n            }\n            var glyph = (obj !== null) ? obj : this.getDefaultGlyph();\n            return glyph;\n        }\n    };\n    /**\n     * Gets hash table with chars indexed by glyph index.\n     */\n    TtfReader.prototype.getGlyphChars = function (chars) {\n        if (chars === null || chars === undefined) {\n            throw new Error('Argument Null Exception : chars');\n        }\n        var dictionary = new Dictionary();\n        var charKeys = chars.keys();\n        for (var i = 0; i < charKeys.length; i++) {\n            var ch = charKeys[i];\n            var glyph = this.getGlyph(ch);\n            if (!glyph.empty) {\n                dictionary.setValue(glyph.index, ch.charCodeAt(0));\n            }\n        }\n        return dictionary;\n    };\n    /**\n     * Gets all glyphs.\n     */\n    TtfReader.prototype.getAllGlyphs = function () {\n        var allGlyphInfo = [];\n        var info = new TtfGlyphInfo();\n        var index = 0;\n        for (var i = 0; i < this.width.length; i++) {\n            var width = this.width[i];\n            info.index = index;\n            info.width = width;\n            allGlyphInfo.push(info);\n            index++;\n        }\n        return allGlyphInfo;\n    };\n    /**\n     * Reads a font's program.\n     * @private\n     */\n    TtfReader.prototype.readFontProgram = function (chars) {\n        var glyphChars = this.getGlyphChars(chars);\n        var locaTable = this.readLocaTable(this.bIsLocaShort);\n        if (glyphChars.size() < chars.size()) {\n            this.missedGlyphs = chars.size() - glyphChars.size();\n        }\n        this.updateGlyphChars(glyphChars, locaTable);\n        /* tslint:disable */\n        var result1 = this.generateGlyphTable(glyphChars, locaTable, null, null);\n        /* tslint:enable */\n        var glyphTableSize = result1.glyphTableSize;\n        var newLocaTable = result1.newLocaTable;\n        var newGlyphTable = result1.newGlyphTable;\n        var result2 = this.updateLocaTable(newLocaTable, this.bIsLocaShort, null);\n        var newLocaSize = result2.newLocaSize;\n        var newLocaUpdated = result2.newLocaUpdated;\n        var fontProgram = this.getFontProgram(newLocaUpdated, newGlyphTable, glyphTableSize, newLocaSize);\n        return fontProgram;\n    };\n    /**\n     * Reconverts string to be in proper format saved into PDF file.\n     */\n    TtfReader.prototype.convertString = function (text) {\n        if (text === null) {\n            throw new Error('Argument Null Exception : text');\n        }\n        var glyph = '';\n        var i = 0;\n        for (var k = 0; k < text.length; k++) {\n            var ch = text[k];\n            var glyphInfo = this.getGlyph(ch);\n            if (!glyphInfo.empty) {\n                glyph += String.fromCharCode(glyphInfo.index);\n                i++;\n            }\n        }\n        return glyph;\n    };\n    /**\n     * Gets char width.\n     */\n    TtfReader.prototype.getCharWidth = function (code) {\n        var glyphInfo = this.getGlyph(code);\n        glyphInfo = (!glyphInfo.empty) ? glyphInfo : this.getDefaultGlyph();\n        var codeWidth = (!glyphInfo.empty) ? glyphInfo.width : 0;\n        return codeWidth;\n    };\n    TtfReader.prototype.readString = function (length, isUnicode) {\n        if (isUnicode === undefined) {\n            return this.readString(length, false);\n        }\n        else {\n            //let buffer : number[] = this.readBytes(length);\n            var result = '';\n            if (isUnicode) {\n                for (var i = 0; i < length; i++) {\n                    if (i % 2 !== 0) {\n                        result += String.fromCharCode(this.fontData[this.offset]);\n                    }\n                    this.offset += 1;\n                }\n            }\n            else {\n                for (var i = 0; i < length; i++) {\n                    result += String.fromCharCode(this.fontData[this.offset]);\n                    this.offset += 1;\n                }\n            }\n            return result;\n        }\n    };\n    TtfReader.prototype.readFixed = function (offset) {\n        var integer = this.readInt16(offset);\n        var sFraction = this.readInt16(offset + 2);\n        var fraction = sFraction / 16384;\n        return integer + fraction;\n    };\n    TtfReader.prototype.readInt32 = function (offset) {\n        var i1 = this.fontData[offset + 3];\n        var i2 = this.fontData[offset + 2];\n        var i3 = this.fontData[offset + 1];\n        var i4 = this.fontData[offset];\n        this.offset += 4;\n        return i1 + (i2 << 8) + (i3 << 16) + (i4 << 24);\n    };\n    TtfReader.prototype.readUInt32 = function (offset) {\n        var i1 = this.fontData[offset + 3];\n        var i2 = this.fontData[offset + 2];\n        var i3 = this.fontData[offset + 1];\n        var i4 = this.fontData[offset];\n        this.offset += 4;\n        return (i1 | i2 << 8 | i3 << 16 | i4 << 24);\n    };\n    // private readInt16(offset : number) : number {\n    //     let result : number = (this.fontData[offset] << 8) + this.fontData[offset + 1];\n    //     this.offset += 2;\n    //     return result;\n    // }\n    TtfReader.prototype.readInt16 = function (offset) {\n        var result = (this.fontData[offset] << 8) + this.fontData[offset + 1];\n        result = result & (1 << 15) ? result - 0x10000 : result;\n        this.offset += 2;\n        return result;\n    };\n    TtfReader.prototype.readInt64 = function (offset) {\n        var low = this.readInt32(offset + 4);\n        var n = this.readInt32(offset) * 4294967296.0 + low;\n        if (low < 0) {\n            n += 4294967296;\n        }\n        return n;\n    };\n    TtfReader.prototype.readUInt16 = function (offset) {\n        var result = (this.fontData[offset] << 8) | this.fontData[offset + 1];\n        this.offset += 2;\n        return result;\n    };\n    /**\n     * Reads ushort array.\n     */\n    TtfReader.prototype.readUshortArray = function (length) {\n        var buffer = [];\n        for (var i = 0; i < length; i++) {\n            buffer[i] = this.readUInt16(this.offset);\n        }\n        return buffer;\n    };\n    TtfReader.prototype.readBytes = function (length) {\n        var result = [];\n        for (var i = 0; i < length; i++) {\n            result.push(this.fontData[this.offset]);\n            this.offset += 1;\n        }\n        return result;\n    };\n    TtfReader.prototype.readByte = function (offset) {\n        var result = this.fontData[offset];\n        this.offset += 1;\n        return result;\n    };\n    /**\n     * Reads bytes to array in BigEndian order.\n     * @private\n     */\n    TtfReader.prototype.read = function (buffer, index, count) {\n        if (buffer === null) {\n            throw new Error('Argument Null Exception : buffer');\n        }\n        var written = 0;\n        var read = 0;\n        do {\n            for (var i = 0; (i < count - written) && (this.offset + i < this.fontData.length); i++) {\n                buffer[index + i] = this.fontData[this.offset + i];\n            }\n            read = count - written;\n            this.offset += read;\n            written += read;\n        } while (written < count);\n        return { buffer: buffer, written: written };\n    };\n    return TtfReader;\n}());\nexport { TtfReader };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfFont } from './pdf-font';\nimport { PdfSubSuperScript } from './enum';\nimport { PdfArray } from './../../primitives/pdf-array';\n/**\n * `Metrics` of the font.\n * @private\n */\nvar PdfFontMetrics = /** @class */ (function () {\n    function PdfFontMetrics() {\n        /**\n         * `Line gap`.\n         * @private\n         */\n        this.lineGap = 0;\n    }\n    //  Public methods\n    /**\n     * Returns `ascent` taking into consideration font`s size.\n     * @private\n     */\n    PdfFontMetrics.prototype.getAscent = function (format) {\n        var returnValue = this.ascent * PdfFont.charSizeMultiplier * this.getSize(format);\n        return returnValue;\n    };\n    /**\n     * Returns `descent` taking into consideration font`s size.\n     * @private\n     */\n    PdfFontMetrics.prototype.getDescent = function (format) {\n        var returnValue = this.descent * PdfFont.charSizeMultiplier * this.getSize(format);\n        return returnValue;\n    };\n    /**\n     * Returns `Line gap` taking into consideration font`s size.\n     * @private\n     */\n    PdfFontMetrics.prototype.getLineGap = function (format) {\n        var returnValue = this.lineGap * PdfFont.charSizeMultiplier * this.getSize(format);\n        return returnValue;\n    };\n    /**\n     * Returns `height` taking into consideration font`s size.\n     * @private\n     */\n    PdfFontMetrics.prototype.getHeight = function (format) {\n        var height;\n        var clearTypeFonts = ['cambria', 'candara', 'constantia', 'corbel', 'cariadings'];\n        var clearTypeFontCollection = [];\n        for (var index = 0; index < clearTypeFonts.length; index++) {\n            var font = clearTypeFonts[index];\n            clearTypeFontCollection.push(font);\n        }\n        if (this.getDescent(format) < 0) {\n            // if ((clearTypeFontCollection.indexOf(this.name.toLowerCase()) !== -1) && !this.isUnicodeFont) {\n            //     height = (this.GetAscent(format) - this.GetDescent(format) - this.GetLineGap(format));\n            // } else {\n            height = (this.getAscent(format) - this.getDescent(format) + this.getLineGap(format));\n            // }\n        }\n        else {\n            height = (this.getAscent(format) + this.getDescent(format) + this.getLineGap(format));\n        }\n        return height;\n    };\n    /**\n     * Calculates `size` of the font depending on the subscript/superscript value.\n     * @private\n     */\n    PdfFontMetrics.prototype.getSize = function (format) {\n        var size = this.size;\n        if (format != null) {\n            switch (format.subSuperScript) {\n                case PdfSubSuperScript.SubScript:\n                    size /= this.subScriptSizeFactor;\n                    break;\n                case PdfSubSuperScript.SuperScript:\n                    size /= this.superscriptSizeFactor;\n                    break;\n            }\n        }\n        return size;\n    };\n    /**\n     * `Clones` the metrics.\n     * @private\n     */\n    PdfFontMetrics.prototype.clone = function () {\n        var metrics = this;\n        metrics.widthTable = WidthTable.clone();\n        return metrics;\n    };\n    Object.defineProperty(PdfFontMetrics.prototype, \"widthTable\", {\n        //  Properies\n        /**\n         * Gets or sets the `width table`.\n         * @private\n         */\n        get: function () {\n            return this.internalWidthTable;\n        },\n        set: function (value) {\n            this.internalWidthTable = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfFontMetrics;\n}());\nexport { PdfFontMetrics };\nvar WidthTable = /** @class */ (function () {\n    function WidthTable() {\n    }\n    /**\n     * Static `clones` this instance of the WidthTable class.\n     * @private\n     */\n    WidthTable.clone = function () {\n        return null;\n    };\n    return WidthTable;\n}());\nexport { WidthTable };\nvar StandardWidthTable = /** @class */ (function (_super) {\n    __extends(StandardWidthTable, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `StandardWidthTable` class.\n     * @private\n     */\n    function StandardWidthTable(widths) {\n        var _this = _super.call(this) || this;\n        if (widths == null) {\n            throw new Error('ArgumentNullException:widths');\n        }\n        _this.widths = widths;\n        return _this;\n    }\n    //Properties\n    /**\n     * Gets the `32 bit number` at the specified index.\n     * @private\n     */\n    StandardWidthTable.prototype.items = function (index) {\n        if (index < 0 || index >= this.widths.length) {\n            throw new Error('ArgumentOutOfRangeException:index, The character is not supported by the font.');\n        }\n        var result = this.widths[index];\n        return result;\n    };\n    Object.defineProperty(StandardWidthTable.prototype, \"length\", {\n        /**\n         * Gets the `length` of the internal array.\n         * @private\n         */\n        get: function () {\n            return this.widths.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Overrides\n    /**\n     * `Clones` this instance of the WidthTable class.\n     * @private\n     */\n    StandardWidthTable.prototype.clone = function () {\n        var swt = this;\n        swt.widths = this.widths;\n        return swt;\n    };\n    /**\n     * Converts width table to a `PDF array`.\n     * @private\n     */\n    StandardWidthTable.prototype.toArray = function () {\n        var arr = new PdfArray(this.widths);\n        return arr;\n    };\n    return StandardWidthTable;\n}(WidthTable));\nexport { StandardWidthTable };\n","/**\n * TrueTypeFont.ts class for EJ2-PDF\n */\nimport { ByteArray } from './../../graphics/images/index';\nimport { TtfReader } from './ttf-reader';\nimport { PdfDictionary, SaveDescendantFontEventHandler, SaveFontDictionaryEventHandler } from './../../primitives/pdf-dictionary';\nimport { SaveFontProgramEventHandler, SaveCmapEventHandler } from './../../primitives/pdf-stream';\nimport { PdfStream } from './../../primitives/pdf-stream';\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfName } from './../../primitives/pdf-name';\nimport { PdfNumber } from './../../primitives/pdf-number';\nimport { PdfString } from './../../primitives/pdf-string';\nimport { PdfReferenceHolder } from './../../primitives/pdf-reference';\nimport { PdfFontMetrics } from './pdf-font-metrics';\nimport { StandardWidthTable } from './pdf-font-metrics';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { Dictionary } from './../../collections/dictionary';\nimport { FontDescriptorFlags } from './enum';\nimport { RectangleF } from './../../drawing/pdf-drawing';\nimport { Operators } from './../../input-output/pdf-operators';\nvar UnicodeTrueTypeFont = /** @class */ (function () {\n    /* tslint:enable */\n    //Constructors\n    /**\n     * Initializes a new instance of the `PdfTrueTypeFont` class.\n     * @private\n     */\n    function UnicodeTrueTypeFont(base64String, size) {\n        // Fields\n        this.nameString = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n        /**\n         * Specifies the Internal variable to store fields of `PdfDictionaryProperties`.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Indicates whether the font program is compressed or not.\n         * @private\n         */\n        this.isCompress = false;\n        /**\n         * Indicates whether the font is embedded or not.\n         */\n        this.isEmbedFont = false;\n        /**\n         * Cmap table's start prefix.\n         */\n        /* tslint:disable */\n        this.cmapPrefix = '/CIDInit /ProcSet findresource begin\\n12 dict begin\\nbegincmap' + Operators.newLine + '/CIDSystemInfo << /Registry (Adobe)/Ordering (UCS)/Supplement 0>> def\\n/CMapName ' + '/Adobe-Identity-UCS def\\n/CMapType 2 def\\n1 begincodespacerange' + Operators.newLine;\n        /* tslint:enable */\n        /**\n         * Cmap table's start suffix.\n         */\n        this.cmapEndCodespaceRange = 'endcodespacerange' + Operators.newLine;\n        /**\n         * Cmap's begin range marker.\n         */\n        this.cmapBeginRange = 'beginbfrange' + Operators.newLine;\n        /**\n         * Cmap's end range marker.\n         */\n        this.cmapEndRange = 'endbfrange' + Operators.newLine;\n        /**\n         * Cmap table's end\n         */\n        /* tslint:disable */\n        this.cmapSuffix = 'endbfrange\\nendcmap\\nCMapName currentdict ' + '/CMap defineresource pop\\nend end' + Operators.newLine;\n        if (base64String === null || base64String === undefined) {\n            throw new Error('ArgumentNullException:base64String');\n        }\n        this.fontSize = size;\n        this.fontString = base64String;\n        this.Initialize();\n    }\n    //Implementation\n    /**\n     * Returns width of the char symbol.\n     */\n    UnicodeTrueTypeFont.prototype.getCharWidth = function (charCode) {\n        var codeWidth = this.ttfReader.getCharWidth(charCode);\n        return codeWidth;\n    };\n    /**\n     * Returns width of the text line.\n     */\n    UnicodeTrueTypeFont.prototype.getLineWidth = function (line) {\n        // if (line == null) {\n        //     throw new Error('ArgumentNullException : line');\n        // }\n        var width = 0;\n        for (var i = 0, len = line.length; i < len; i++) {\n            var ch = line[i];\n            var charWidth = this.getCharWidth(ch);\n            width += charWidth;\n        }\n        return width;\n    };\n    /**\n     * Initializes a new instance of the `PdfTrueTypeFont` class.\n     * @private\n     */\n    UnicodeTrueTypeFont.prototype.Initialize = function () {\n        var byteArray = new ByteArray(this.fontString.length);\n        byteArray.writeFromBase64String(this.fontString);\n        this.fontData = byteArray.internalBuffer;\n        this.ttfReader = new TtfReader(this.fontData);\n        this.ttfMetrics = this.ttfReader.metrics;\n    };\n    UnicodeTrueTypeFont.prototype.createInternals = function () {\n        this.fontDictionary = new PdfDictionary();\n        this.fontProgram = new PdfStream();\n        this.cmap = new PdfStream();\n        this.descendantFont = new PdfDictionary();\n        this.metrics = new PdfFontMetrics();\n        this.ttfReader.createInternals();\n        this.ttfMetrics = this.ttfReader.metrics;\n        this.initializeMetrics();\n        // Create all the dictionaries of the font.\n        this.subsetName = this.getFontName();\n        this.createDescendantFont();\n        this.createCmap();\n        this.createFontDictionary();\n        this.createFontProgram();\n    };\n    UnicodeTrueTypeFont.prototype.getInternals = function () {\n        return this.fontDictionary;\n    };\n    /**\n     * Initializes metrics.\n     */\n    UnicodeTrueTypeFont.prototype.initializeMetrics = function () {\n        var ttfMetrics = this.ttfReader.metrics;\n        this.metrics.ascent = ttfMetrics.macAscent;\n        this.metrics.descent = ttfMetrics.macDescent;\n        this.metrics.height = ttfMetrics.macAscent - ttfMetrics.macDescent + ttfMetrics.lineGap;\n        this.metrics.name = ttfMetrics.fontFamily;\n        this.metrics.postScriptName = ttfMetrics.postScriptName;\n        this.metrics.size = this.fontSize;\n        this.metrics.widthTable = new StandardWidthTable(ttfMetrics.widthTable);\n        this.metrics.lineGap = ttfMetrics.lineGap;\n        this.metrics.subScriptSizeFactor = ttfMetrics.subScriptSizeFactor;\n        this.metrics.superscriptSizeFactor = ttfMetrics.superscriptSizeFactor;\n        this.metrics.isBold = ttfMetrics.isBold;\n    };\n    /**\n     * Gets random string.\n     */\n    UnicodeTrueTypeFont.prototype.getFontName = function () {\n        var builder = '';\n        var name;\n        // if (this.isEmbed === false) {\n        for (var i = 0; i < 6; i++) {\n            var index = Math.floor(Math.random() * (25 - 0 + 1)) + 0;\n            builder += this.nameString[index];\n        }\n        builder += '+';\n        // }\n        builder += this.ttfReader.metrics.postScriptName;\n        name = builder.toString();\n        // if (name === '') {\n        //     name = this.ttfReader.metrics.fontFamily;\n        // }\n        name = this.formatName(name);\n        return name;\n    };\n    /**\n     * Generates name of the font.\n     */\n    UnicodeTrueTypeFont.prototype.formatName = function (fontName) {\n        // if (fontName === null) {\n        //     throw new Error('ArgumentNullException : fontName');\n        // }\n        // if (fontName === '') {\n        //     throw new Error('ArgumentOutOfRangeException : fontName, Parameter can not be empty');\n        // }\n        var ret = fontName.replace('(', '#28');\n        ret = ret.replace(')', '#29');\n        ret = ret.replace('[', '#5B');\n        ret = ret.replace(']', '#5D');\n        ret = ret.replace('<', '#3C');\n        ret = ret.replace('>', '#3E');\n        ret = ret.replace('{', '#7B');\n        ret = ret.replace('}', '#7D');\n        ret = ret.replace('/', '#2F');\n        ret = ret.replace('%', '#25');\n        return ret.replace(' ', '#20');\n    };\n    /**\n     * Creates descendant font.\n     */\n    UnicodeTrueTypeFont.prototype.createDescendantFont = function () {\n        // Set property used to clone Font every time\n        this.descendantFont.isFont = true;\n        this.descendantFont.descendantFontBeginSave = new SaveDescendantFontEventHandler(this);\n        this.descendantFont.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.font));\n        this.descendantFont.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.cIDFontType2));\n        this.descendantFont.items.setValue(this.dictionaryProperties.baseFont, new PdfName(this.subsetName));\n        this.descendantFont.items.setValue(this.dictionaryProperties.cIDToGIDMap, new PdfName(this.dictionaryProperties.identity));\n        this.descendantFont.items.setValue(this.dictionaryProperties.dw, new PdfNumber(1000));\n        this.fontDescriptor = this.createFontDescriptor();\n        this.descendantFont.items.setValue(this.dictionaryProperties.fontDescriptor, new PdfReferenceHolder(this.fontDescriptor));\n        var systemInfo = this.createSystemInfo();\n        this.descendantFont.items.setValue(this.dictionaryProperties.cIDSystemInfo, systemInfo);\n    };\n    /**\n     * Creates font descriptor.\n     */\n    UnicodeTrueTypeFont.prototype.createFontDescriptor = function () {\n        var descriptor = new PdfDictionary();\n        var metrics = this.ttfReader.metrics;\n        // Set property used to clone Font every time\n        descriptor.isFont = true;\n        descriptor.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.fontDescriptor));\n        descriptor.items.setValue(this.dictionaryProperties.fontName, new PdfName(this.subsetName));\n        descriptor.items.setValue(this.dictionaryProperties.flags, new PdfNumber(this.getDescriptorFlags()));\n        descriptor.items.setValue(this.dictionaryProperties.fontBBox, PdfArray.fromRectangle(this.getBoundBox()));\n        descriptor.items.setValue(this.dictionaryProperties.missingWidth, new PdfNumber(metrics.widthTable[32]));\n        descriptor.items.setValue(this.dictionaryProperties.stemV, new PdfNumber(metrics.stemV));\n        descriptor.items.setValue(this.dictionaryProperties.italicAngle, new PdfNumber(metrics.italicAngle));\n        descriptor.items.setValue(this.dictionaryProperties.capHeight, new PdfNumber(metrics.capHeight));\n        descriptor.items.setValue(this.dictionaryProperties.ascent, new PdfNumber(metrics.winAscent));\n        descriptor.items.setValue(this.dictionaryProperties.descent, new PdfNumber(metrics.winDescent));\n        descriptor.items.setValue(this.dictionaryProperties.leading, new PdfNumber(metrics.leading));\n        descriptor.items.setValue(this.dictionaryProperties.avgWidth, new PdfNumber(metrics.widthTable[32]));\n        descriptor.items.setValue(this.dictionaryProperties.fontFile2, new PdfReferenceHolder(this.fontProgram));\n        descriptor.items.setValue(this.dictionaryProperties.maxWidth, new PdfNumber(metrics.widthTable[32]));\n        descriptor.items.setValue(this.dictionaryProperties.xHeight, new PdfNumber(0));\n        descriptor.items.setValue(this.dictionaryProperties.stemH, new PdfNumber(0));\n        return descriptor;\n    };\n    /**\n     * Generates cmap.\n     * @private\n     */\n    UnicodeTrueTypeFont.prototype.createCmap = function () {\n        this.cmap.cmapBeginSave = new SaveCmapEventHandler(this);\n    };\n    /**\n     * Generates font dictionary.\n     */\n    UnicodeTrueTypeFont.prototype.createFontDictionary = function () {\n        // Set property used to clone Font every time\n        this.fontDictionary.isFont = true;\n        this.fontDictionary.fontDictionaryBeginSave = new SaveFontDictionaryEventHandler(this);\n        this.fontDictionary.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.font));\n        this.fontDictionary.items.setValue(this.dictionaryProperties.baseFont, new PdfName(this.subsetName));\n        this.fontDictionary.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.type0));\n        this.fontDictionary.items.setValue(this.dictionaryProperties.encoding, new PdfName(this.dictionaryProperties.identityH));\n        var descFonts = new PdfArray();\n        var reference = new PdfReferenceHolder(this.descendantFont);\n        // Set property used to clone Font every time\n        descFonts.isFont = true;\n        descFonts.add(reference);\n        this.fontDictionary.items.setValue(this.dictionaryProperties.descendantFonts, descFonts);\n    };\n    /**\n     * Creates font program.\n     */\n    UnicodeTrueTypeFont.prototype.createFontProgram = function () {\n        this.fontProgram.fontProgramBeginSave = new SaveFontProgramEventHandler(this);\n    };\n    /**\n     * Creates system info dictionary for CID font.\n     * @private\n     */\n    UnicodeTrueTypeFont.prototype.createSystemInfo = function () {\n        var systemInfo = new PdfDictionary();\n        systemInfo.items.setValue(this.dictionaryProperties.registry, new PdfString('Adobe'));\n        systemInfo.items.setValue(this.dictionaryProperties.ordering, new PdfString(this.dictionaryProperties.identity));\n        systemInfo.items.setValue(this.dictionaryProperties.supplement, new PdfNumber(0));\n        return systemInfo;\n    };\n    /**\n     * Runs before font Dictionary will be saved.\n     */\n    UnicodeTrueTypeFont.prototype.descendantFontBeginSave = function () {\n        if (this.usedChars !== null && this.usedChars !== undefined && this.usedChars.size() > 0) {\n            var width = this.getDescendantWidth();\n            if (width !== null) {\n                this.descendantFont.items.setValue(this.dictionaryProperties.w, width);\n            }\n        }\n    };\n    /**\n     * Runs before font Dictionary will be saved.\n     */\n    UnicodeTrueTypeFont.prototype.cmapBeginSave = function () {\n        this.generateCmap();\n    };\n    /**\n     * Runs before font Dictionary will be saved.\n     */\n    /* tslint:disable */\n    UnicodeTrueTypeFont.prototype.fontDictionaryBeginSave = function () {\n        if (this.usedChars !== null && this.usedChars !== undefined && this.usedChars.size() > 0 && !this.fontDictionary.containsKey(this.dictionaryProperties.toUnicode)) {\n            this.fontDictionary.items.setValue(this.dictionaryProperties.toUnicode, new PdfReferenceHolder(this.cmap));\n        }\n    };\n    /* tslint:enable */\n    /**\n     * Runs before font program stream save.\n     */\n    UnicodeTrueTypeFont.prototype.fontProgramBeginSave = function () {\n        this.isCompress = true;\n        this.generateFontProgram();\n    };\n    /**\n     * Gets width description pad array for c i d font.\n     */\n    UnicodeTrueTypeFont.prototype.getDescendantWidth = function () {\n        var array = new PdfArray();\n        if (this.usedChars !== null && this.usedChars !== undefined && this.usedChars.size() > 0) {\n            var glyphInfo = [];\n            // if (!this.isEmbedFont) {\n            var keys = this.usedChars.keys();\n            for (var i = 0; i < keys.length; i++) {\n                var chLen = keys[i];\n                var glyph = this.ttfReader.getGlyph(chLen);\n                if (glyph.empty) {\n                    continue;\n                }\n                glyphInfo.push(glyph);\n            }\n            // } else {\n            //     glyphInfo = this.ttfReader.getAllGlyphs();\n            // }\n            glyphInfo.sort(function (a, b) { return a.index - b.index; });\n            var firstGlyphIndex = 0;\n            var lastGlyphIndex = 0;\n            var firstGlyphIndexWasSet = false;\n            var widthDetails = new PdfArray();\n            // if (!this.isEmbedFont) {\n            for (var i = 0; i < glyphInfo.length; i++) {\n                var glyph = glyphInfo[i];\n                if (!firstGlyphIndexWasSet) {\n                    firstGlyphIndexWasSet = true;\n                    firstGlyphIndex = glyph.index;\n                    lastGlyphIndex = glyph.index - 1;\n                }\n                if ((lastGlyphIndex + 1 !== glyph.index || (i + 1 === glyphInfo.length)) && glyphInfo.length > 1) {\n                    // Add glyph index / width.\n                    array.add(new PdfNumber(firstGlyphIndex));\n                    if (i !== 0) {\n                        array.add(widthDetails);\n                    }\n                    firstGlyphIndex = glyph.index;\n                    widthDetails = new PdfArray();\n                }\n                widthDetails.add(new PdfNumber(glyph.width));\n                if (i + 1 === glyphInfo.length) {\n                    array.add(new PdfNumber(firstGlyphIndex));\n                    array.add(widthDetails);\n                }\n                lastGlyphIndex = glyph.index;\n            }\n            // } else {\n            //     for (let i : number = 0; i < glyphInfo.length; i++) {\n            //         let glyph : TtfGlyphInfo = glyphInfo[i];\n            //         if (!firstGlyphIndexWasSet) {\n            //             firstGlyphIndexWasSet = true;\n            //             lastGlyphIndex = glyph.index - 1;\n            //         }\n            //         firstGlyphIndex = glyph.index;\n            //         if ((lastGlyphIndex + 1 === glyph.index || (i + 1 === glyphInfo.length)) && glyphInfo.length > 1) {\n            //             // Add glyph index / width.\n            //             widthDetails.add(new PdfNumber(glyph.width));\n            //             array.add(new PdfNumber(firstGlyphIndex));\n            //             array.add(widthDetails);\n            //             widthDetails = new PdfArray();\n            //         }\n            //         lastGlyphIndex = glyph.index;\n            //     }\n            // }\n        }\n        return array;\n    };\n    /**\n     * Creates cmap.\n     */\n    UnicodeTrueTypeFont.prototype.generateCmap = function () {\n        if (this.usedChars !== null && this.usedChars !== undefined && this.usedChars.size() > 0) {\n            var glyphChars = this.ttfReader.getGlyphChars(this.usedChars);\n            if (glyphChars.size() > 0) {\n                var keys = glyphChars.keys().sort();\n                // add first and last glyph indexes\n                var first = keys[0];\n                var last = keys[keys.length - 1];\n                var middlePart = this.toHexString(first, false) + this.toHexString(last, false) + Operators.newLine;\n                var builder = '';\n                builder += this.cmapPrefix;\n                builder += middlePart;\n                builder += this.cmapEndCodespaceRange;\n                var nextRange = 0;\n                for (var i = 0; i < keys.length; i++) {\n                    if (nextRange === 0) {\n                        if (i !== 0) {\n                            builder += this.cmapEndRange;\n                        }\n                        nextRange = Math.min(100, keys.length - i);\n                        builder += nextRange;\n                        builder += Operators.whiteSpace;\n                        builder += this.cmapBeginRange;\n                    }\n                    nextRange -= 1;\n                    var key = keys[i];\n                    /* tslint:disable */\n                    builder += this.toHexString(key, true) + this.toHexString(key, true) + this.toHexString(glyphChars.getValue(key), true) + '\\n';\n                    /* tslint:enable */\n                }\n                builder += this.cmapSuffix;\n                this.cmap.clearStream();\n                this.cmap.isFont = true;\n                this.cmap.write(builder);\n            }\n        }\n    };\n    /**\n     * Generates font program.\n     */\n    UnicodeTrueTypeFont.prototype.generateFontProgram = function () {\n        var fontProgram = null;\n        this.usedChars = (this.usedChars === null || this.usedChars === undefined) ? new Dictionary() : this.usedChars;\n        this.ttfReader.setOffset(0);\n        fontProgram = this.ttfReader.readFontProgram(this.usedChars);\n        this.fontProgram.clearStream();\n        this.fontProgram.isFont = true;\n        this.fontProgram.writeBytes(fontProgram);\n    };\n    /**\n     * Calculates flags for the font descriptor.\n     * @private\n     */\n    UnicodeTrueTypeFont.prototype.getDescriptorFlags = function () {\n        var flags = 0;\n        var metrics = this.ttfReader.metrics;\n        if (metrics.isFixedPitch) {\n            flags |= FontDescriptorFlags.FixedPitch;\n        }\n        if (metrics.isSymbol) {\n            flags |= FontDescriptorFlags.Symbolic;\n        }\n        else {\n            flags |= FontDescriptorFlags.Nonsymbolic;\n        }\n        if (metrics.isItalic) {\n            flags |= FontDescriptorFlags.Italic;\n        }\n        if (metrics.isBold) {\n            flags |= FontDescriptorFlags.ForceBold;\n        }\n        return flags;\n    };\n    /**\n     * Calculates BoundBox of the descriptor.\n     * @private\n     */\n    UnicodeTrueTypeFont.prototype.getBoundBox = function () {\n        var rect = this.ttfReader.metrics.fontBox;\n        var width = Math.abs(rect.right - rect.left);\n        var height = Math.abs(rect.top - rect.bottom);\n        var rectangle = new RectangleF(rect.left, rect.bottom, width, height);\n        return rectangle;\n    };\n    /**\n     * Converts integer of decimal system to hex integer.\n     */\n    UnicodeTrueTypeFont.prototype.toHexString = function (n, isCaseChange) {\n        var s = n.toString(16);\n        if (isCaseChange) {\n            s = s.toUpperCase();\n        }\n        return '<0000'.substring(0, 5 - s.length) + s + '>';\n    };\n    /**\n     * Stores used symbols.\n     */\n    UnicodeTrueTypeFont.prototype.setSymbols = function (text) {\n        if (text === null) {\n            throw new Error('Argument Null Exception : text');\n        }\n        if (this.usedChars === null || this.usedChars === undefined) {\n            this.usedChars = new Dictionary();\n        }\n        for (var i = 0; i < text.length; i++) {\n            var ch = text[i];\n            this.usedChars.setValue(ch, String.fromCharCode(0));\n        }\n        // else {\n        //     if (text === null) {\n        //         throw new Error('Argument Null Exception : glyphs');\n        //     }\n        //     if (this.usedChars === null || this.usedChars === undefined) {\n        //             this.usedChars = new Dictionary<string, string>();\n        //     }\n        //     for (let i : number = 0; i < text.length; i++) {\n        //         let glyphIndex : number = text[i];\n        //         let glyph : TtfGlyphInfo =  this.ttfReader.getGlyph(glyphIndex);\n        //         if (!glyph == null) {\n        //             let c : string = glyph.charCode.toLocaleString();\n        //             this.usedChars.setValue(c, String.fromCharCode(0));\n        //         }\n        //     }\n        // }\n        if (this.isEmbedFont === false) {\n            this.getDescendantWidth();\n        }\n    };\n    return UnicodeTrueTypeFont;\n}());\nexport { UnicodeTrueTypeFont };\n","/**\n * ArabicShapeRenderer.ts class for EJ2-PDF\n */\nimport { Dictionary } from './../../../collections/dictionary';\nvar ArabicShapeRenderer = /** @class */ (function () {\n    //#endregion\n    //#region Constructor\n    function ArabicShapeRenderer() {\n        //#region Constants\n        this.arabicCharTable = [['\\u0621', '\\uFE80'], ['\\u0622', '\\uFE81', '\\uFE82'],\n            ['\\u0623', '\\uFE83', '\\uFE84'],\n            ['\\u0624', '\\uFE85', '\\uFE86'],\n            ['\\u0625', '\\uFE87', '\\uFE88'],\n            ['\\u0626', '\\uFE89', '\\uFE8A', '\\uFE8B', '\\uFE8C'],\n            ['\\u0627', '\\uFE8D', '\\uFE8E'],\n            ['\\u0628', '\\uFE8F', '\\uFE90', '\\uFE91', '\\uFE92'],\n            ['\\u0629', '\\uFE93', '\\uFE94'],\n            ['\\u062A', '\\uFE95', '\\uFE96', '\\uFE97', '\\uFE98'],\n            ['\\u062B', '\\uFE99', '\\uFE9A', '\\uFE9B', '\\uFE9C'],\n            ['\\u062C', '\\uFE9D', '\\uFE9E', '\\uFE9F', '\\uFEA0'],\n            ['\\u062D', '\\uFEA1', '\\uFEA2', '\\uFEA3', '\\uFEA4'],\n            ['\\u062E', '\\uFEA5', '\\uFEA6', '\\uFEA7', '\\uFEA8'],\n            ['\\u062F', '\\uFEA9', '\\uFEAA'],\n            ['\\u0630', '\\uFEAB', '\\uFEAC'],\n            ['\\u0631', '\\uFEAD', '\\uFEAE'],\n            ['\\u0632', '\\uFEAF', '\\uFEB0'],\n            ['\\u0633', '\\uFEB1', '\\uFEB2', '\\uFEB3', '\\uFEB4'],\n            ['\\u0634', '\\uFEB5', '\\uFEB6', '\\uFEB7', '\\uFEB8'],\n            ['\\u0635', '\\uFEB9', '\\uFEBA', '\\uFEBB', '\\uFEBC'],\n            ['\\u0636', '\\uFEBD', '\\uFEBE', '\\uFEBF', '\\uFEC0'],\n            ['\\u0637', '\\uFEC1', '\\uFEC2', '\\uFEC3', '\\uFEC4'],\n            ['\\u0638', '\\uFEC5', '\\uFEC6', '\\uFEC7', '\\uFEC8'],\n            ['\\u0639', '\\uFEC9', '\\uFECA', '\\uFECB', '\\uFECC'],\n            ['\\u063A', '\\uFECD', '\\uFECE', '\\uFECF', '\\uFED0'],\n            ['\\u0640', '\\u0640', '\\u0640', '\\u0640', '\\u0640'],\n            ['\\u0641', '\\uFED1', '\\uFED2', '\\uFED3', '\\uFED4'],\n            ['\\u0642', '\\uFED5', '\\uFED6', '\\uFED7', '\\uFED8'],\n            ['\\u0643', '\\uFED9', '\\uFEDA', '\\uFEDB', '\\uFEDC'],\n            ['\\u0644', '\\uFEDD', '\\uFEDE', '\\uFEDF', '\\uFEE0'],\n            ['\\u0645', '\\uFEE1', '\\uFEE2', '\\uFEE3', '\\uFEE4'],\n            ['\\u0646', '\\uFEE5', '\\uFEE6', '\\uFEE7', '\\uFEE8'],\n            ['\\u0647', '\\uFEE9', '\\uFEEA', '\\uFEEB', '\\uFEEC'],\n            ['\\u0648', '\\uFEED', '\\uFEEE'],\n            ['\\u0649', '\\uFEEF', '\\uFEF0', '\\uFBE8', '\\uFBE9'],\n            ['\\u064A', '\\uFEF1', '\\uFEF2', '\\uFEF3', '\\uFEF4'],\n            ['\\u0671', '\\uFB50', '\\uFB51'],\n            ['\\u0679', '\\uFB66', '\\uFB67', '\\uFB68', '\\uFB69'],\n            ['\\u067A', '\\uFB5E', '\\uFB5F', '\\uFB60', '\\uFB61'],\n            ['\\u067B', '\\uFB52', '\\uFB53', '\\uFB54', '\\uFB55'],\n            ['\\u067E', '\\uFB56', '\\uFB57', '\\uFB58', '\\uFB59'],\n            ['\\u067F', '\\uFB62', '\\uFB63', '\\uFB64', '\\uFB65'],\n            ['\\u0680', '\\uFB5A', '\\uFB5B', '\\uFB5C', '\\uFB5D'],\n            ['\\u0683', '\\uFB76', '\\uFB77', '\\uFB78', '\\uFB79'],\n            ['\\u0684', '\\uFB72', '\\uFB73', '\\uFB74', '\\uFB75'],\n            ['\\u0686', '\\uFB7A', '\\uFB7B', '\\uFB7C', '\\uFB7D'],\n            ['\\u0687', '\\uFB7E', '\\uFB7F', '\\uFB80', '\\uFB81'],\n            ['\\u0688', '\\uFB88', '\\uFB89'],\n            ['\\u068C', '\\uFB84', '\\uFB85'],\n            ['\\u068D', '\\uFB82', '\\uFB83'],\n            ['\\u068E', '\\uFB86', '\\uFB87'],\n            ['\\u0691', '\\uFB8C', '\\uFB8D'],\n            ['\\u0698', '\\uFB8A', '\\uFB8B'],\n            ['\\u06A4', '\\uFB6A', '\\uFB6B', '\\uFB6C', '\\uFB6D'],\n            ['\\u06A6', '\\uFB6E', '\\uFB6F', '\\uFB70', '\\uFB71'],\n            ['\\u06A9', '\\uFB8E', '\\uFB8F', '\\uFB90', '\\uFB91'],\n            ['\\u06AD', '\\uFBD3', '\\uFBD4', '\\uFBD5', '\\uFBD6'],\n            ['\\u06AF', '\\uFB92', '\\uFB93', '\\uFB94', '\\uFB95'],\n            ['\\u06B1', '\\uFB9A', '\\uFB9B', '\\uFB9C', '\\uFB9D'],\n            ['\\u06B3', '\\uFB96', '\\uFB97', '\\uFB98', '\\uFB99'],\n            ['\\u06BA', '\\uFB9E', '\\uFB9F'],\n            ['\\u06BB', '\\uFBA0', '\\uFBA1', '\\uFBA2', '\\uFBA3'],\n            ['\\u06BE', '\\uFBAA', '\\uFBAB', '\\uFBAC', '\\uFBAD'],\n            ['\\u06C0', '\\uFBA4', '\\uFBA5'],\n            ['\\u06C1', '\\uFBA6', '\\uFBA7', '\\uFBA8', '\\uFBA9'],\n            ['\\u06C5', '\\uFBE0', '\\uFBE1'],\n            ['\\u06C6', '\\uFBD9', '\\uFBDA'],\n            ['\\u06C7', '\\uFBD7', '\\uFBD8'],\n            ['\\u06C8', '\\uFBDB', '\\uFBDC'],\n            ['\\u06C9', '\\uFBE2', '\\uFBE3'],\n            ['\\u06CB', '\\uFBDE', '\\uFBDF'],\n            ['\\u06CC', '\\uFBFC', '\\uFBFD', '\\uFBFE', '\\uFBFF'],\n            ['\\u06D0', '\\uFBE4', '\\uFBE5', '\\uFBE6', '\\uFBE7'],\n            ['\\u06D2', '\\uFBAE', '\\uFBAF'],\n            ['\\u06D3', '\\uFBB0', '\\uFBB1']\n        ];\n        this.alef = '\\u0627';\n        this.alefHamza = '\\u0623';\n        this.alefHamzaBelow = '\\u0625';\n        this.alefMadda = '\\u0622';\n        this.lam = '\\u0644';\n        this.hamza = '\\u0621';\n        this.zeroWidthJoiner = '\\u200D';\n        this.hamzaAbove = '\\u0654';\n        this.hamzaBelow = '\\u0655';\n        this.wawHamza = '\\u0624';\n        this.yehHamza = '\\u0626';\n        this.waw = '\\u0648';\n        this.alefMaksura = '\\u0649';\n        this.yeh = '\\u064A';\n        this.farsiYeh = '\\u06CC';\n        this.shadda = '\\u0651';\n        this.madda = '\\u0653';\n        this.lwa = '\\uFEFB';\n        this.lwawh = '\\uFEF7';\n        this.lwawhb = '\\uFEF9';\n        this.lwawm = '\\uFEF5';\n        this.bwhb = '\\u06D3';\n        this.fathatan = '\\u064B';\n        this.superScriptalef = '\\u0670';\n        this.vowel = 0x1;\n        // #endregion\n        //#region Fields\n        this.arabicMapTable = new Dictionary();\n        for (var i = 0; i < this.arabicCharTable.length; i++) {\n            this.arabicMapTable.setValue(this.arabicCharTable[i][0], this.arabicCharTable[i]);\n        }\n    }\n    //#endregion\n    //#region implementation\n    ArabicShapeRenderer.prototype.getCharacterShape = function (input, index) {\n        if ((input >= this.hamza) && (input <= this.bwhb)) {\n            var value = [];\n            if (this.arabicMapTable.getValue(input)) {\n                value = this.arabicMapTable.getValue(input);\n                return value[index + 1];\n            }\n        }\n        else if (input >= this.lwawm && input <= this.lwa) {\n            return (input);\n        }\n        return input;\n    };\n    ArabicShapeRenderer.prototype.shape = function (text, level) {\n        var builder = '';\n        var str2 = '';\n        for (var i = 0; i < text.length; i++) {\n            var c = text[i];\n            if (c >= '؀' && c <= 'ۿ') {\n                //if(c>= 0x0600.toString() && c<= 0x06FF.toString()) {\n                str2 = str2 + c;\n            }\n            else {\n                if (str2.length > 0) {\n                    var st = this.doShape(str2.toString(), 0);\n                    builder = builder + st;\n                    str2 = '';\n                }\n                builder = builder + c;\n            }\n        }\n        if (str2.length > 0) {\n            var st = this.doShape(str2.toString(), 0);\n            builder = builder + st;\n        }\n        return builder.toString();\n    };\n    ArabicShapeRenderer.prototype.doShape = function (input, level) {\n        var str = '';\n        var ligature = 0;\n        var len = 0;\n        var i = 0;\n        var next = '';\n        var previous = new ArabicShape();\n        var present = new ArabicShape();\n        while (i < input.length) {\n            next = input[i++];\n            ligature = this.ligature(next, present);\n            if (ligature === 0) {\n                var shapeCount = this.getShapeCount(next);\n                len = (shapeCount === 1) ? 0 : 2;\n                if (previous.Shapes > 2) {\n                    len += 1;\n                }\n                len = len % (present.Shapes);\n                present.Value = this.getCharacterShape(present.Value, len);\n                str = this.append(str, previous, level);\n                previous = present;\n                present = new ArabicShape();\n                present.Value = next;\n                present.Shapes = shapeCount;\n                present.Ligature++;\n            }\n        }\n        len = (previous.Shapes > 2) ? 1 : 0;\n        len = len % (present.Shapes);\n        present.Value = this.getCharacterShape(present.Value, len);\n        str = this.append(str, previous, level);\n        str = this.append(str, present, level);\n        return str.toString();\n    };\n    ArabicShapeRenderer.prototype.append = function (builder, shape, level) {\n        if (shape.Value !== '') {\n            builder = builder + shape.Value;\n            shape.Ligature -= 1;\n            if (shape.Type !== '') {\n                if ((level & this.vowel) === 0) {\n                    builder = builder + shape.Type;\n                    shape.Ligature -= 1;\n                }\n                else {\n                    shape.Ligature -= 1;\n                }\n            }\n            if (shape.vowel !== '') {\n                if ((level & this.vowel) === 0) {\n                    builder = builder + shape.vowel;\n                    shape.Ligature -= 1;\n                }\n                else {\n                    shape.Ligature -= 1;\n                }\n            }\n        }\n        return builder;\n    };\n    ArabicShapeRenderer.prototype.ligature = function (value, shape) {\n        if (shape.Value !== '') {\n            var result = 0;\n            if ((value >= this.fathatan && value <= this.hamzaBelow) || value === this.superScriptalef) {\n                result = 1;\n                if ((shape.vowel !== '') && (value !== this.shadda)) {\n                    result = 2;\n                }\n                if (value === this.shadda) {\n                    if (shape.Type == null) {\n                        shape.Type = this.shadda;\n                    }\n                    else {\n                        return 0;\n                    }\n                }\n                else if (value === this.hamzaBelow) {\n                    if (shape.Value === this.alef) {\n                        shape.Value = this.alefHamzaBelow;\n                        result = 2;\n                    }\n                    else if (value === this.lwa) {\n                        shape.Value = this.lwawhb;\n                        result = 2;\n                    }\n                    else {\n                        shape.Type = this.hamzaBelow;\n                    }\n                }\n                else if (value === this.hamzaAbove) {\n                    if (shape.Value === this.alef) {\n                        shape.Value = this.alefHamza;\n                        result = 2;\n                    }\n                    else if (shape.Value === this.lwa) {\n                        shape.Value = this.lwawh;\n                        result = 2;\n                    }\n                    else if (shape.Value === this.waw) {\n                        shape.Value = this.wawHamza;\n                        result = 2;\n                    }\n                    else if (shape.Value === this.yeh || shape.Value === this.alefMaksura || shape.Value === this.farsiYeh) {\n                        shape.Value = this.yehHamza;\n                        result = 2;\n                    }\n                    else {\n                        shape.Type = this.hamzaAbove;\n                    }\n                }\n                else if (value === this.madda) {\n                    if (shape.Value === this.alef) {\n                        shape.Value = this.alefMadda;\n                        result = 2;\n                    }\n                }\n                else {\n                    shape.vowel = value;\n                }\n                if (result === 1) {\n                    shape.Ligature++;\n                }\n                return result;\n            }\n            if (shape.vowel !== '') {\n                return 0;\n            }\n            if (shape.Value === this.lam) {\n                if (value === this.alef) {\n                    shape.Value = this.lwa;\n                    shape.Shapes = 2;\n                    result = 3;\n                }\n                else if (value === this.alefHamza) {\n                    shape.Value = this.lwawh;\n                    shape.Shapes = 2;\n                    result = 3;\n                }\n                else if (value === this.alefHamzaBelow) {\n                    shape.Value = this.lwawhb;\n                    shape.Shapes = 2;\n                    result = 3;\n                }\n                else if (value === this.alefMadda) {\n                    shape.Value = this.lwawm;\n                    shape.Shapes = 2;\n                    result = 3;\n                }\n            }\n            // else if (shape.Value === '') {\n            //     shape.Value = value;\n            //     shape.Shapes = this.getShapeCount(value);\n            //     result = 1;\n            // }\n            return result;\n        }\n        else {\n            return 0;\n        }\n    };\n    ArabicShapeRenderer.prototype.getShapeCount = function (shape) {\n        if ((shape >= this.hamza) && (shape <= this.bwhb) && !((shape >= this.fathatan && shape <= this.hamzaBelow)\n            || shape === this.superScriptalef)) {\n            var c = [];\n            if (this.arabicMapTable.getValue(shape)) {\n                c = this.arabicMapTable.getValue(shape);\n                return c.length - 1;\n            }\n        }\n        else if (shape === this.zeroWidthJoiner) {\n            return 4;\n        }\n        return 1;\n    };\n    return ArabicShapeRenderer;\n}());\nexport { ArabicShapeRenderer };\n//#endregion\n//#region Internals\nvar ArabicShape = /** @class */ (function () {\n    function ArabicShape() {\n        //#region Fields\n        this.shapeValue = '';\n        this.shapeType = '';\n        this.shapeVowel = '';\n        this.shapeLigature = 0;\n        this.shapeShapes = 1;\n        //#endregion\n    }\n    Object.defineProperty(ArabicShape.prototype, \"Value\", {\n        //#endregion\n        //#region Properties \n        /**\n         * Gets or sets the values.\n         * @private\n         */\n        get: function () {\n            return this.shapeValue;\n        },\n        set: function (value) {\n            this.shapeValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArabicShape.prototype, \"Type\", {\n        /**\n         * Gets or sets the values.\n         * @private\n         */\n        get: function () {\n            return this.shapeType;\n        },\n        set: function (value) {\n            this.shapeType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArabicShape.prototype, \"vowel\", {\n        /**\n         * Gets or sets the values.\n         * @private\n         */\n        get: function () {\n            return this.shapeVowel;\n        },\n        set: function (value) {\n            this.shapeVowel = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArabicShape.prototype, \"Ligature\", {\n        /**\n         * Gets or sets the values.\n         * @private\n         */\n        get: function () {\n            return this.shapeLigature;\n        },\n        set: function (value) {\n            this.shapeLigature = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArabicShape.prototype, \"Shapes\", {\n        /**\n         * Gets or sets the values.\n         * @private\n         */\n        get: function () {\n            return this.shapeShapes;\n        },\n        set: function (value) {\n            this.shapeShapes = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ArabicShape;\n}());\nexport { ArabicShape };\n//#endregion\n","/**\n * Bidi.ts class for EJ2-PDF\n */\nimport { Dictionary } from './../../../collections/dictionary';\n/**\n * `Metrics` of the font.\n * @private\n */\nvar Bidi = /** @class */ (function () {\n    //#endregion\n    //#region Constructor\n    function Bidi() {\n        //#region Fields\n        this.indexes = [];\n        this.indexLevels = [];\n        this.mirroringShapeCharacters = new Dictionary();\n        this.update();\n    }\n    //#endregion\n    //#region implementation\n    Bidi.prototype.doMirrorShaping = function (text) {\n        var result = [];\n        for (var i = 0; i < text.length; i++) {\n            if (((this.indexLevels[i] & 1) === 1) && this.mirroringShapeCharacters.containsKey(text[i].charCodeAt(0))) {\n                result[i] = String.fromCharCode(this.mirroringShapeCharacters.getValue(text[i].charCodeAt(0)));\n            }\n            else {\n                result[i] = text[i].toString();\n            }\n        }\n        var res = '';\n        for (var j = 0; j < result.length; j++) {\n            res = res + result[j];\n        }\n        return res;\n    };\n    Bidi.prototype.getLogicalToVisualString = function (inputText, isRtl) {\n        var rtlCharacters = new RtlCharacters();\n        this.indexLevels = rtlCharacters.getVisualOrder(inputText, isRtl);\n        this.setDefaultIndexLevel();\n        this.doOrder(0, this.indexLevels.length - 1);\n        var text = this.doMirrorShaping(inputText);\n        //let text : string = inputText;\n        var resultBuilder = '';\n        for (var i = 0; i < this.indexes.length; i++) {\n            var index = this.indexes[i];\n            resultBuilder += text[index];\n        }\n        return resultBuilder.toString();\n    };\n    Bidi.prototype.setDefaultIndexLevel = function () {\n        for (var i = 0; i < this.indexLevels.length; i++) {\n            this.indexes[i] = i;\n        }\n    };\n    Bidi.prototype.doOrder = function (sIndex, eIndex) {\n        var max = this.indexLevels[sIndex];\n        var min = max;\n        var odd = max;\n        var even = max;\n        for (var i = sIndex + 1; i <= eIndex; ++i) {\n            var data = this.indexLevels[i];\n            if (data > max) {\n                max = data;\n            }\n            else if (data < min) {\n                min = data;\n            }\n            odd &= data;\n            even |= data;\n        }\n        if ((even & 1) === 0) {\n            return;\n        }\n        if ((odd & 1) === 1) {\n            this.reArrange(sIndex, eIndex + 1);\n            return;\n        }\n        min |= 1;\n        while (max >= min) {\n            var pstart = sIndex;\n            /*tslint:disable:no-constant-condition */\n            while (true) {\n                while (pstart <= eIndex) {\n                    if (this.indexLevels[pstart] >= max) {\n                        break;\n                    }\n                    pstart += 1;\n                }\n                if (pstart > eIndex) {\n                    break;\n                }\n                var pend = pstart + 1;\n                while (pend <= eIndex) {\n                    if (this.indexLevels[pend] < max) {\n                        break;\n                    }\n                    pend += 1;\n                }\n                this.reArrange(pstart, pend);\n                pstart = pend + 1;\n            }\n            max -= 1;\n        }\n    };\n    Bidi.prototype.reArrange = function (i, j) {\n        var length = (i + j) / 2;\n        --j;\n        for (; i < length; ++i, --j) {\n            var temp = this.indexes[i];\n            this.indexes[i] = this.indexes[j];\n            this.indexes[j] = temp;\n        }\n    };\n    Bidi.prototype.update = function () {\n        this.mirroringShapeCharacters.setValue(40, 41);\n        this.mirroringShapeCharacters.setValue(41, 40);\n        this.mirroringShapeCharacters.setValue(60, 62);\n        this.mirroringShapeCharacters.setValue(62, 60);\n        this.mirroringShapeCharacters.setValue(91, 93);\n        this.mirroringShapeCharacters.setValue(93, 91);\n        this.mirroringShapeCharacters.setValue(123, 125);\n        this.mirroringShapeCharacters.setValue(125, 123);\n        this.mirroringShapeCharacters.setValue(171, 187);\n        this.mirroringShapeCharacters.setValue(187, 171);\n        this.mirroringShapeCharacters.setValue(8249, 8250);\n        this.mirroringShapeCharacters.setValue(8250, 8249);\n        this.mirroringShapeCharacters.setValue(8261, 8262);\n        this.mirroringShapeCharacters.setValue(8262, 8261);\n        this.mirroringShapeCharacters.setValue(8317, 8318);\n        this.mirroringShapeCharacters.setValue(8318, 8317);\n        this.mirroringShapeCharacters.setValue(8333, 8334);\n        this.mirroringShapeCharacters.setValue(8334, 8333);\n        this.mirroringShapeCharacters.setValue(8712, 8715);\n        this.mirroringShapeCharacters.setValue(8713, 8716);\n        this.mirroringShapeCharacters.setValue(8714, 8717);\n        this.mirroringShapeCharacters.setValue(8715, 8712);\n        this.mirroringShapeCharacters.setValue(8716, 8713);\n        this.mirroringShapeCharacters.setValue(8717, 8714);\n        this.mirroringShapeCharacters.setValue(8725, 10741);\n        this.mirroringShapeCharacters.setValue(8764, 8765);\n        this.mirroringShapeCharacters.setValue(8765, 8764);\n        this.mirroringShapeCharacters.setValue(8771, 8909);\n        this.mirroringShapeCharacters.setValue(8786, 8787);\n        this.mirroringShapeCharacters.setValue(8787, 8786);\n        this.mirroringShapeCharacters.setValue(8788, 8789);\n        this.mirroringShapeCharacters.setValue(8789, 8788);\n        this.mirroringShapeCharacters.setValue(8804, 8805);\n        this.mirroringShapeCharacters.setValue(8805, 8804);\n        this.mirroringShapeCharacters.setValue(8806, 8807);\n        this.mirroringShapeCharacters.setValue(8807, 8806);\n        this.mirroringShapeCharacters.setValue(8808, 8809);\n        this.mirroringShapeCharacters.setValue(8809, 8808);\n        this.mirroringShapeCharacters.setValue(8810, 8811);\n        this.mirroringShapeCharacters.setValue(8811, 8810);\n        this.mirroringShapeCharacters.setValue(8814, 8815);\n        this.mirroringShapeCharacters.setValue(8815, 8814);\n        this.mirroringShapeCharacters.setValue(8816, 8817);\n        this.mirroringShapeCharacters.setValue(8817, 8816);\n        this.mirroringShapeCharacters.setValue(8818, 8819);\n        this.mirroringShapeCharacters.setValue(8819, 8818);\n        this.mirroringShapeCharacters.setValue(8820, 8821);\n        this.mirroringShapeCharacters.setValue(8821, 8820);\n        this.mirroringShapeCharacters.setValue(8822, 8823);\n        this.mirroringShapeCharacters.setValue(8823, 8822);\n        this.mirroringShapeCharacters.setValue(8824, 8825);\n        this.mirroringShapeCharacters.setValue(8825, 8824);\n        this.mirroringShapeCharacters.setValue(8826, 8827);\n        this.mirroringShapeCharacters.setValue(8827, 8826);\n        this.mirroringShapeCharacters.setValue(8828, 8829);\n        this.mirroringShapeCharacters.setValue(8829, 8828);\n        this.mirroringShapeCharacters.setValue(8830, 8831);\n        this.mirroringShapeCharacters.setValue(8831, 8830);\n        this.mirroringShapeCharacters.setValue(8832, 8833);\n        this.mirroringShapeCharacters.setValue(8833, 8832);\n        this.mirroringShapeCharacters.setValue(8834, 8835);\n        this.mirroringShapeCharacters.setValue(8835, 8834);\n        this.mirroringShapeCharacters.setValue(8836, 8837);\n        this.mirroringShapeCharacters.setValue(8837, 8836);\n        this.mirroringShapeCharacters.setValue(8838, 8839);\n        this.mirroringShapeCharacters.setValue(8839, 8838);\n        this.mirroringShapeCharacters.setValue(8840, 8841);\n        this.mirroringShapeCharacters.setValue(8841, 8840);\n        this.mirroringShapeCharacters.setValue(8842, 8843);\n        this.mirroringShapeCharacters.setValue(8843, 8842);\n        this.mirroringShapeCharacters.setValue(8847, 8848);\n        this.mirroringShapeCharacters.setValue(8848, 8847);\n        this.mirroringShapeCharacters.setValue(8849, 8850);\n        this.mirroringShapeCharacters.setValue(8850, 8849);\n        this.mirroringShapeCharacters.setValue(8856, 10680);\n        this.mirroringShapeCharacters.setValue(8866, 8867);\n        this.mirroringShapeCharacters.setValue(8867, 8866);\n        this.mirroringShapeCharacters.setValue(8870, 10974);\n        this.mirroringShapeCharacters.setValue(8872, 10980);\n        this.mirroringShapeCharacters.setValue(8873, 10979);\n        this.mirroringShapeCharacters.setValue(8875, 10981);\n        this.mirroringShapeCharacters.setValue(8880, 8881);\n        this.mirroringShapeCharacters.setValue(8881, 8880);\n        this.mirroringShapeCharacters.setValue(8882, 8883);\n        this.mirroringShapeCharacters.setValue(8883, 8882);\n        this.mirroringShapeCharacters.setValue(8884, 8885);\n        this.mirroringShapeCharacters.setValue(8885, 8884);\n        /*tslint:disable:max-func-body-length */\n        this.mirroringShapeCharacters.setValue(8886, 8887);\n        this.mirroringShapeCharacters.setValue(8887, 8886);\n        this.mirroringShapeCharacters.setValue(8905, 8906);\n        this.mirroringShapeCharacters.setValue(8906, 8905);\n        this.mirroringShapeCharacters.setValue(8907, 8908);\n        this.mirroringShapeCharacters.setValue(8908, 8907);\n        this.mirroringShapeCharacters.setValue(8909, 8771);\n        this.mirroringShapeCharacters.setValue(8912, 8913);\n        this.mirroringShapeCharacters.setValue(8913, 8912);\n        this.mirroringShapeCharacters.setValue(8918, 8919);\n        this.mirroringShapeCharacters.setValue(8919, 8918);\n        this.mirroringShapeCharacters.setValue(8920, 8921);\n        this.mirroringShapeCharacters.setValue(8921, 8920);\n        this.mirroringShapeCharacters.setValue(8922, 8923);\n        this.mirroringShapeCharacters.setValue(8923, 8922);\n        this.mirroringShapeCharacters.setValue(8924, 8925);\n        this.mirroringShapeCharacters.setValue(8925, 8924);\n        this.mirroringShapeCharacters.setValue(8926, 8927);\n        this.mirroringShapeCharacters.setValue(8927, 8926);\n        this.mirroringShapeCharacters.setValue(8928, 8929);\n        this.mirroringShapeCharacters.setValue(8929, 8928);\n        this.mirroringShapeCharacters.setValue(8930, 8931);\n        this.mirroringShapeCharacters.setValue(8931, 8930);\n        this.mirroringShapeCharacters.setValue(8932, 8933);\n        this.mirroringShapeCharacters.setValue(8933, 8932);\n        this.mirroringShapeCharacters.setValue(8934, 8935);\n        this.mirroringShapeCharacters.setValue(8935, 8934);\n        this.mirroringShapeCharacters.setValue(8936, 8937);\n        this.mirroringShapeCharacters.setValue(8937, 8936);\n        this.mirroringShapeCharacters.setValue(8938, 8939);\n        this.mirroringShapeCharacters.setValue(8939, 8938);\n        this.mirroringShapeCharacters.setValue(8940, 8941);\n        this.mirroringShapeCharacters.setValue(8941, 8940);\n        this.mirroringShapeCharacters.setValue(8944, 8945);\n        this.mirroringShapeCharacters.setValue(8945, 8944);\n        this.mirroringShapeCharacters.setValue(8946, 8954);\n        this.mirroringShapeCharacters.setValue(8947, 8955);\n        this.mirroringShapeCharacters.setValue(8948, 8956);\n        this.mirroringShapeCharacters.setValue(8950, 8957);\n        this.mirroringShapeCharacters.setValue(8951, 8958);\n        this.mirroringShapeCharacters.setValue(8954, 8946);\n        this.mirroringShapeCharacters.setValue(8955, 8947);\n        this.mirroringShapeCharacters.setValue(8956, 8948);\n        this.mirroringShapeCharacters.setValue(8957, 8950);\n        this.mirroringShapeCharacters.setValue(8958, 8951);\n        this.mirroringShapeCharacters.setValue(8968, 8969);\n        this.mirroringShapeCharacters.setValue(8969, 8968);\n        this.mirroringShapeCharacters.setValue(8970, 8971);\n        this.mirroringShapeCharacters.setValue(8971, 8970);\n        this.mirroringShapeCharacters.setValue(9001, 9002);\n        this.mirroringShapeCharacters.setValue(9002, 9001);\n        this.mirroringShapeCharacters.setValue(10088, 10089);\n        this.mirroringShapeCharacters.setValue(10089, 10088);\n        this.mirroringShapeCharacters.setValue(10090, 10091);\n        this.mirroringShapeCharacters.setValue(10091, 10090);\n        this.mirroringShapeCharacters.setValue(10092, 10093);\n        this.mirroringShapeCharacters.setValue(10093, 10092);\n        this.mirroringShapeCharacters.setValue(10094, 10095);\n        this.mirroringShapeCharacters.setValue(10095, 10094);\n        this.mirroringShapeCharacters.setValue(10096, 10097);\n        this.mirroringShapeCharacters.setValue(10097, 10096);\n        this.mirroringShapeCharacters.setValue(10098, 10099);\n        this.mirroringShapeCharacters.setValue(10099, 10098);\n        this.mirroringShapeCharacters.setValue(10100, 10101);\n        this.mirroringShapeCharacters.setValue(10101, 10100);\n        this.mirroringShapeCharacters.setValue(10197, 10198);\n        this.mirroringShapeCharacters.setValue(10198, 10197);\n        this.mirroringShapeCharacters.setValue(10205, 10206);\n        this.mirroringShapeCharacters.setValue(10206, 10205);\n        this.mirroringShapeCharacters.setValue(10210, 10211);\n        this.mirroringShapeCharacters.setValue(10211, 10210);\n        this.mirroringShapeCharacters.setValue(10212, 10213);\n        this.mirroringShapeCharacters.setValue(10213, 10212);\n        this.mirroringShapeCharacters.setValue(10214, 10215);\n        this.mirroringShapeCharacters.setValue(10215, 10214);\n        this.mirroringShapeCharacters.setValue(10216, 10217);\n        this.mirroringShapeCharacters.setValue(10217, 10216);\n        this.mirroringShapeCharacters.setValue(10218, 10219);\n        this.mirroringShapeCharacters.setValue(10219, 10218);\n        this.mirroringShapeCharacters.setValue(10627, 10628);\n        this.mirroringShapeCharacters.setValue(10628, 10627);\n        this.mirroringShapeCharacters.setValue(10629, 10630);\n        this.mirroringShapeCharacters.setValue(10630, 10629);\n        this.mirroringShapeCharacters.setValue(10631, 10632);\n        this.mirroringShapeCharacters.setValue(10632, 10631);\n        this.mirroringShapeCharacters.setValue(10633, 10634);\n        this.mirroringShapeCharacters.setValue(10634, 10633);\n        this.mirroringShapeCharacters.setValue(10635, 10636);\n        this.mirroringShapeCharacters.setValue(10636, 10635);\n        this.mirroringShapeCharacters.setValue(10637, 10640);\n        this.mirroringShapeCharacters.setValue(10638, 10639);\n        this.mirroringShapeCharacters.setValue(10639, 10638);\n        this.mirroringShapeCharacters.setValue(10640, 10637);\n        this.mirroringShapeCharacters.setValue(10641, 10642);\n        this.mirroringShapeCharacters.setValue(10642, 10641);\n        this.mirroringShapeCharacters.setValue(10643, 10644);\n        this.mirroringShapeCharacters.setValue(10644, 10643);\n        this.mirroringShapeCharacters.setValue(10645, 10646);\n        this.mirroringShapeCharacters.setValue(10646, 10645);\n        this.mirroringShapeCharacters.setValue(10647, 10648);\n        this.mirroringShapeCharacters.setValue(10648, 10647);\n        this.mirroringShapeCharacters.setValue(10680, 8856);\n        this.mirroringShapeCharacters.setValue(10688, 10689);\n        this.mirroringShapeCharacters.setValue(10689, 10688);\n        this.mirroringShapeCharacters.setValue(10692, 10693);\n        this.mirroringShapeCharacters.setValue(10693, 10692);\n        this.mirroringShapeCharacters.setValue(10703, 10704);\n        this.mirroringShapeCharacters.setValue(10704, 10703);\n        this.mirroringShapeCharacters.setValue(10705, 10706);\n        this.mirroringShapeCharacters.setValue(10706, 10705);\n        this.mirroringShapeCharacters.setValue(10708, 10709);\n        this.mirroringShapeCharacters.setValue(10709, 10708);\n        this.mirroringShapeCharacters.setValue(10712, 10713);\n        this.mirroringShapeCharacters.setValue(10713, 10712);\n        this.mirroringShapeCharacters.setValue(10714, 10715);\n        this.mirroringShapeCharacters.setValue(10715, 10714);\n        this.mirroringShapeCharacters.setValue(10741, 8725);\n        this.mirroringShapeCharacters.setValue(10744, 10745);\n        this.mirroringShapeCharacters.setValue(10745, 10744);\n        this.mirroringShapeCharacters.setValue(10748, 10749);\n        this.mirroringShapeCharacters.setValue(10749, 10748);\n        this.mirroringShapeCharacters.setValue(10795, 10796);\n        this.mirroringShapeCharacters.setValue(10796, 10795);\n        this.mirroringShapeCharacters.setValue(10797, 10796);\n        this.mirroringShapeCharacters.setValue(10798, 10797);\n        this.mirroringShapeCharacters.setValue(10804, 10805);\n        this.mirroringShapeCharacters.setValue(10805, 10804);\n        this.mirroringShapeCharacters.setValue(10812, 10813);\n        this.mirroringShapeCharacters.setValue(10813, 10812);\n        this.mirroringShapeCharacters.setValue(10852, 10853);\n        this.mirroringShapeCharacters.setValue(10853, 10852);\n        this.mirroringShapeCharacters.setValue(10873, 10874);\n        this.mirroringShapeCharacters.setValue(10874, 10873);\n        this.mirroringShapeCharacters.setValue(10877, 10878);\n        this.mirroringShapeCharacters.setValue(10878, 10877);\n        this.mirroringShapeCharacters.setValue(10879, 10880);\n        this.mirroringShapeCharacters.setValue(10880, 10879);\n        this.mirroringShapeCharacters.setValue(10881, 10882);\n        this.mirroringShapeCharacters.setValue(10882, 10881);\n        this.mirroringShapeCharacters.setValue(10883, 10884);\n        this.mirroringShapeCharacters.setValue(10884, 10883);\n        this.mirroringShapeCharacters.setValue(10891, 10892);\n        this.mirroringShapeCharacters.setValue(10892, 10891);\n        this.mirroringShapeCharacters.setValue(10897, 10898);\n        this.mirroringShapeCharacters.setValue(10898, 10897);\n        this.mirroringShapeCharacters.setValue(10899, 10900);\n        this.mirroringShapeCharacters.setValue(10900, 10899);\n        this.mirroringShapeCharacters.setValue(10901, 10902);\n        this.mirroringShapeCharacters.setValue(10902, 10901);\n        this.mirroringShapeCharacters.setValue(10903, 10904);\n        this.mirroringShapeCharacters.setValue(10904, 10903);\n        this.mirroringShapeCharacters.setValue(10905, 10906);\n        this.mirroringShapeCharacters.setValue(10906, 10905);\n        this.mirroringShapeCharacters.setValue(10907, 10908);\n        this.mirroringShapeCharacters.setValue(10908, 10907);\n        this.mirroringShapeCharacters.setValue(10913, 10914);\n        this.mirroringShapeCharacters.setValue(10914, 10913);\n        this.mirroringShapeCharacters.setValue(10918, 10919);\n        this.mirroringShapeCharacters.setValue(10919, 10918);\n        this.mirroringShapeCharacters.setValue(10920, 10921);\n        this.mirroringShapeCharacters.setValue(10921, 10920);\n        this.mirroringShapeCharacters.setValue(10922, 10923);\n        this.mirroringShapeCharacters.setValue(10923, 10922);\n        this.mirroringShapeCharacters.setValue(10924, 10925);\n        this.mirroringShapeCharacters.setValue(10925, 10924);\n        this.mirroringShapeCharacters.setValue(10927, 10928);\n        this.mirroringShapeCharacters.setValue(10928, 10927);\n        this.mirroringShapeCharacters.setValue(10931, 10932);\n        this.mirroringShapeCharacters.setValue(10932, 10931);\n        this.mirroringShapeCharacters.setValue(10939, 10940);\n        this.mirroringShapeCharacters.setValue(10940, 10939);\n        this.mirroringShapeCharacters.setValue(10941, 10942);\n        this.mirroringShapeCharacters.setValue(10942, 10941);\n        this.mirroringShapeCharacters.setValue(10943, 10944);\n        this.mirroringShapeCharacters.setValue(10944, 10943);\n        this.mirroringShapeCharacters.setValue(10945, 10946);\n        this.mirroringShapeCharacters.setValue(10946, 10945);\n        this.mirroringShapeCharacters.setValue(10947, 10948);\n        this.mirroringShapeCharacters.setValue(10948, 10947);\n        this.mirroringShapeCharacters.setValue(10949, 10950);\n        this.mirroringShapeCharacters.setValue(10950, 10949);\n        this.mirroringShapeCharacters.setValue(10957, 10958);\n        this.mirroringShapeCharacters.setValue(10958, 10957);\n        this.mirroringShapeCharacters.setValue(10959, 10960);\n        this.mirroringShapeCharacters.setValue(10960, 10959);\n        this.mirroringShapeCharacters.setValue(10961, 10962);\n        this.mirroringShapeCharacters.setValue(10962, 10961);\n        this.mirroringShapeCharacters.setValue(10963, 10964);\n        this.mirroringShapeCharacters.setValue(10964, 10963);\n        this.mirroringShapeCharacters.setValue(10965, 10966);\n        this.mirroringShapeCharacters.setValue(10966, 10965);\n        this.mirroringShapeCharacters.setValue(10974, 8870);\n        this.mirroringShapeCharacters.setValue(10979, 8873);\n        this.mirroringShapeCharacters.setValue(10980, 8872);\n        this.mirroringShapeCharacters.setValue(10981, 8875);\n        this.mirroringShapeCharacters.setValue(10988, 10989);\n        this.mirroringShapeCharacters.setValue(10989, 10988);\n        this.mirroringShapeCharacters.setValue(10999, 11000);\n        this.mirroringShapeCharacters.setValue(11000, 10999);\n        this.mirroringShapeCharacters.setValue(11001, 11002);\n        this.mirroringShapeCharacters.setValue(11002, 11001);\n        this.mirroringShapeCharacters.setValue(12296, 12297);\n        this.mirroringShapeCharacters.setValue(12297, 12296);\n        this.mirroringShapeCharacters.setValue(12298, 12299);\n        this.mirroringShapeCharacters.setValue(12299, 12298);\n        this.mirroringShapeCharacters.setValue(12300, 12301);\n        this.mirroringShapeCharacters.setValue(12301, 12300);\n        this.mirroringShapeCharacters.setValue(12302, 12303);\n        this.mirroringShapeCharacters.setValue(12303, 12302);\n        this.mirroringShapeCharacters.setValue(12304, 12305);\n        this.mirroringShapeCharacters.setValue(12305, 12304);\n        this.mirroringShapeCharacters.setValue(12308, 12309);\n        this.mirroringShapeCharacters.setValue(12309, 12308);\n        this.mirroringShapeCharacters.setValue(12310, 12311);\n        this.mirroringShapeCharacters.setValue(12311, 12310);\n        this.mirroringShapeCharacters.setValue(12312, 12313);\n        this.mirroringShapeCharacters.setValue(12313, 12312);\n        this.mirroringShapeCharacters.setValue(12314, 12315);\n        this.mirroringShapeCharacters.setValue(12315, 12314);\n        this.mirroringShapeCharacters.setValue(65288, 65289);\n        this.mirroringShapeCharacters.setValue(65289, 65288);\n        this.mirroringShapeCharacters.setValue(65308, 65310);\n        this.mirroringShapeCharacters.setValue(65310, 65308);\n        this.mirroringShapeCharacters.setValue(65339, 65341);\n        this.mirroringShapeCharacters.setValue(65341, 65339);\n        this.mirroringShapeCharacters.setValue(65371, 65373);\n        this.mirroringShapeCharacters.setValue(65373, 65371);\n        this.mirroringShapeCharacters.setValue(65375, 65376);\n        this.mirroringShapeCharacters.setValue(65376, 65375);\n        this.mirroringShapeCharacters.setValue(65378, 65379);\n        this.mirroringShapeCharacters.setValue(65379, 65378);\n    };\n    return Bidi;\n}());\nexport { Bidi };\nvar RtlCharacters = /** @class */ (function () {\n    //#endregion\n    //#region constructors\n    function RtlCharacters() {\n        //#region fields\n        /// <summary>\n        /// Specifies the character types.\n        /// </summary>\n        this.types = [];\n        /// <summary>\n        /// Specifies the text order (RTL or LTR).\n        /// </summary>\n        this.textOrder = -1;\n        /// <summary>\n        /// Specifies the RTL character types.\n        /// </summary>\n        /* tslint:disable-next-line:prefer-array-literal */\n        this.rtlCharacterTypes = new Array(65536);\n        //#endregion\n        //#region constants\n        /// <summary>\n        /// Left-to-Right (Non-European or non-Arabic digits).\n        /// </summary>\n        this.L = 0;\n        /// <summary>\n        /// Left-to-Right Embedding\n        /// </summary>\n        this.LRE = 1;\n        /// <summary>\n        /// Left-to-Right Override\n        /// </summary>\n        this.LRO = 2;\n        /// <summary>\n        /// Right-to-Left (Hebrew alphabet, and related punctuation).\n        /// </summary>\n        this.R = 3;\n        /// <summary>\n        /// Right-to-Left Arabic \n        /// </summary>\n        this.AL = 4;\n        /// <summary>\n        /// Right-to-Left Embedding.\n        /// </summary>\n        this.RLE = 5;\n        /// <summary>\n        /// Right-to-Left Override\n        /// </summary>\n        this.RLO = 6;\n        /// <summary>\n        /// Pop Directional Format\n        /// </summary>\n        this.PDF = 7;\n        /// <summary>\n        /// European Number (European digits, Eastern Arabic-Indic digits).\n        /// </summary>\n        this.EN = 8;\n        /// <summary>\n        /// European Number Separator (Plus sign, Minus sign).\n        /// </summary>\n        this.ES = 9;\n        /// <summary>\n        /// European Number Terminator (Degree sign, currency symbols).\n        /// </summary>\n        this.ET = 10;\n        /// <summary>\n        /// Arabic Number (Arabic-Indic digits, Arabic decimal and thousands separators).\n        /// </summary>\n        this.AN = 11;\n        /// <summary>\n        /// Common Number Separator (Colon, Comma, Full Stop, No-Break Space.\n        /// </summary>\n        this.CS = 12;\n        /// <summary>\n        /// Nonspacing Mark (Characters with the General_Category values).\n        /// </summary>\n        this.NSM = 13;\n        /// <summary>\n        /// Boundary Neutral (Default ignorables, non-characters, and control characters, other than those explicitly given other types.)\n        /// </summary>\n        this.BN = 14;\n        /// <summary>\n        /// Paragraph Separator (Paragraph separator, appropriate Newline Functions, higher-level protocol paragraph determination).\n        /// </summary>\n        this.B = 15;\n        /// <summary>\n        /// \tSegment Separator (tab).\n        /// </summary>\n        this.S = 16;\n        /// <summary>\n        /// Whitespace (Space, Figure space, Line separator, Form feed, General Punctuation spaces).\n        /// </summary>\n        this.WS = 17;\n        /// <summary>\n        /// Other Neutrals (All other characters, including object replacement character).\n        /// </summary>\n        this.ON = 18;\n        /// <summary>\n        /// RTL character types.\n        /// </summary>\n        this.charTypes = [\n            this.L, this.EN, this.BN, this.ES, this.ES, this.S, this.ET, this.ET, this.B, this.AN, this.AN, this.S, this.CS, this.CS,\n            this.WS, this.NSM, this.NSM, this.B, this.BN, 27, this.BN, 28, 30, this.B, 31, 31, this.S, 32, 32, this.WS, 33, 34,\n            this.ON, 35, 37, this.ET, 38, 42, this.ON, 43, 43, this.ET, 44, 44, this.CS, 45, 45, this.ET, 46, 46, this.CS,\n            47, 47, this.CS, 48, 57, this.EN, 58, 58, this.CS, 59, 64, this.ON, 65, 90, this.L, 91, 96, this.ON, 97, 122, this.L,\n            123, 126, this.ON, 127, 132, this.BN, 133, 133, this.B, 134, 159, this.BN, 160, 160, this.CS,\n            161, 161, this.ON, 162, 165, this.ET, 166, 169, this.ON, 170, 170, this.L, 171, 175, this.ON,\n            176, 177, this.ET, 178, 179, this.EN, 180, 180, this.ON, 181, 181, this.L, 182, 184, this.ON,\n            185, 185, this.EN, 186, 186, this.L, 187, 191, this.ON, 192, 214, this.L, 215, 215, this.ON,\n            216, 246, this.L, 247, 247, this.ON, 248, 696, this.L, 697, 698, this.ON, 699, 705, this.L,\n            706, 719, this.ON, 720, 721, this.L, 722, 735, this.ON, 736, 740, this.L, 741, 749, this.ON,\n            750, 750, this.L, 751, 767, this.ON, 768, 855, this.NSM, 856, 860, this.L, 861, 879, this.NSM,\n            880, 883, this.L, 884, 885, this.ON, 886, 893, this.L, 894, 894, this.ON, 895, 899, this.L,\n            900, 901, this.ON, 902, 902, this.L, 903, 903, this.ON, 904, 1013, this.L, 1014, 1014, this.ON,\n            1015, 1154, this.L, 1155, 1158, this.NSM, 1159, 1159, this.L, 1160, 1161, this.NSM,\n            1162, 1417, this.L, 1418, 1418, this.ON, 1419, 1424, this.L, 1425, 1441, this.NSM,\n            1442, 1442, this.L, 1443, 1465, this.NSM, 1466, 1466, this.L, 1467, 1469, this.NSM,\n            1470, 1470, this.R, 1471, 1471, this.NSM, 1472, 1472, this.R, 1473, 1474, this.NSM,\n            1475, 1475, this.R, 1476, 1476, this.NSM, 1477, 1487, this.L, 1488, 1514, this.R,\n            1515, 1519, this.L, 1520, 1524, this.R, 1525, 1535, this.L, 1536, 1539, this.AL,\n            1540, 1547, this.L, 1548, 1548, this.CS, 1549, 1549, this.AL, 1550, 1551, this.ON,\n            1552, 1557, this.NSM, 1558, 1562, this.L, 1563, 1563, this.AL, 1564, 1566, this.L,\n            1567, 1567, this.AL, 1568, 1568, this.L, 1569, 1594, this.AL, 1595, 1599, this.L,\n            1600, 1610, this.AL, 1611, 1624, this.NSM, 1625, 1631, this.L, 1632, 1641, this.AN,\n            1642, 1642, this.ET, 1643, 1644, this.AN, 1645, 1647, this.AL, 1648, 1648, this.NSM,\n            1649, 1749, this.AL, 1750, 1756, this.NSM, 1757, 1757, this.AL, 1758, 1764, this.NSM,\n            1765, 1766, this.AL, 1767, 1768, this.NSM, 1769, 1769, this.ON, 1770, 1773, this.NSM,\n            1774, 1775, this.AL, 1776, 1785, this.EN, 1786, 1805, this.AL, 1806, 1806, this.L,\n            1807, 1807, this.BN, 1808, 1808, this.AL, 1809, 1809, this.NSM, 1810, 1839, this.AL,\n            1840, 1866, this.NSM, 1867, 1868, this.L, 1869, 1871, this.AL, 1872, 1919, this.L,\n            1920, 1957, this.AL, 1958, 1968, this.NSM, 1969, 1969, this.AL, 1970, 2304, this.L,\n            2305, 2306, this.NSM, 2307, 2363, this.L, 2364, 2364, this.NSM, 2365, 2368, this.L,\n            2369, 2376, this.NSM, 2377, 2380, this.L, 2381, 2381, this.NSM, 2382, 2384, this.L,\n            2385, 2388, this.NSM, 2389, 2401, this.L, 2402, 2403, this.NSM, 2404, 2432, this.L,\n            2433, 2433, this.NSM, 2434, 2491, this.L, 2492, 2492, this.NSM, 2493, 2496, this.L,\n            2497, 2500, this.NSM, 2501, 2508, this.L, 2509, 2509, this.NSM, 2510, 2529, this.L,\n            2530, 2531, this.NSM, 2532, 2545, this.L, 2546, 2547, this.ET, 2548, 2560, this.L,\n            2561, 2562, this.NSM, 2563, 2619, this.L, 2620, 2620, this.NSM, 2621, 2624, this.L,\n            2625, 2626, this.NSM, 2627, 2630, this.L, 2631, 2632, this.NSM, 2633, 2634, this.L,\n            2635, 2637, this.NSM, 2638, 2671, this.L, 2672, 2673, this.NSM, 2674, 2688, this.L,\n            2689, 2690, this.NSM, 2691, 2747, this.L, 2748, 2748, this.NSM, 2749, 2752, this.L,\n            2753, 2757, this.NSM, 2758, 2758, this.L, 2759, 2760, this.NSM, 2761, 2764, this.L,\n            2765, 2765, this.NSM, 2766, 2785, this.L, 2786, 2787, this.NSM, 2788, 2800, this.L,\n            2801, 2801, this.ET, 2802, 2816, this.L, 2817, 2817, this.NSM, 2818, 2875, this.L,\n            2876, 2876, this.NSM, 2877, 2878, this.L, 2879, 2879, this.NSM, 2880, 2880, this.L,\n            2881, 2883, this.NSM, 2884, 2892, this.L, 2893, 2893, this.NSM, 2894, 2901, this.L,\n            2902, 2902, this.NSM, 2903, 2945, this.L, 2946, 2946, this.NSM, 2947, 3007, this.L,\n            3008, 3008, this.NSM, 3009, 3020, this.L, 3021, 3021, this.NSM, 3022, 3058, this.L,\n            3059, 3064, this.ON, 3065, 3065, this.ET, 3066, 3066, this.ON, 3067, 3133, this.L,\n            3134, 3136, this.NSM, 3137, 3141, this.L, 3142, 3144, this.NSM, 3145, 3145, this.L,\n            3146, 3149, this.NSM, 3150, 3156, this.L, 3157, 3158, this.NSM, 3159, 3259, this.L,\n            3260, 3260, this.NSM, 3261, 3275, this.L, 3276, 3277, this.NSM, 3278, 3392, this.L,\n            3393, 3395, this.NSM, 3396, 3404, this.L, 3405, 3405, this.NSM, 3406, 3529, this.L,\n            3530, 3530, this.NSM, 3531, 3537, this.L, 3538, 3540, this.NSM, 3541, 3541, this.L,\n            3542, 3542, this.NSM, 3543, 3632, this.L, 3633, 3633, this.NSM, 3634, 3635, this.L,\n            3636, 3642, this.NSM, 3643, 3646, this.L, 3647, 3647, this.ET, 3648, 3654, this.L,\n            3655, 3662, this.NSM, 3663, 3760, this.L, 3761, 3761, this.NSM, 3762, 3763, this.L,\n            3764, 3769, this.NSM, 3770, 3770, this.L, 3771, 3772, this.NSM, 3773, 3783, this.L,\n            3784, 3789, this.NSM, 3790, 3863, this.L, 3864, 3865, this.NSM, 3866, 3892, this.L,\n            3893, 3893, this.NSM, 3894, 3894, this.L, 3895, 3895, this.NSM, 3896, 3896, this.L,\n            3897, 3897, this.NSM, 3898, 3901, this.ON, 3902, 3952, this.L, 3953, 3966, this.NSM,\n            3967, 3967, this.L, 3968, 3972, this.NSM, 3973, 3973, this.L, 3974, 3975, this.NSM,\n            3976, 3983, this.L, 3984, 3991, this.NSM, 3992, 3992, this.L, 3993, 4028, this.NSM,\n            4029, 4037, this.L, 4038, 4038, this.NSM, 4039, 4140, this.L, 4141, 4144, this.NSM,\n            4145, 4145, this.L, 4146, 4146, this.NSM, 4147, 4149, this.L, 4150, 4151, this.NSM,\n            4152, 4152, this.L, 4153, 4153, this.NSM, 4154, 4183, this.L, 4184, 4185, this.NSM,\n            4186, 5759, this.L, 5760, 5760, this.WS, 5761, 5786, this.L, 5787, 5788, this.ON,\n            5789, 5905, this.L, 5906, 5908, this.NSM, 5909, 5937, this.L, 5938, 5940, this.NSM,\n            5941, 5969, this.L, 5970, 5971, this.NSM, 5972, 6001, this.L, 6002, 6003, this.NSM,\n            6004, 6070, this.L, 6071, 6077, this.NSM, 6078, 6085, this.L, 6086, 6086, this.NSM,\n            6087, 6088, this.L, 6089, 6099, this.NSM, 6100, 6106, this.L, 6107, 6107, this.ET,\n            6108, 6108, this.L, 6109, 6109, this.NSM, 6110, 6127, this.L, 6128, 6137, this.ON,\n            6138, 6143, this.L, 6144, 6154, this.ON, 6155, 6157, this.NSM, 6158, 6158, this.WS,\n            6159, 6312, this.L, 6313, 6313, this.NSM, 6314, 6431, this.L, 6432, 6434, this.NSM,\n            6435, 6438, this.L, 6439, 6443, this.NSM, 6444, 6449, this.L, 6450, 6450, this.NSM,\n            6451, 6456, this.L, 6457, 6459, this.NSM, 6460, 6463, this.L, 6464, 6464, this.ON,\n            6465, 6467, this.L, 6468, 6469, this.ON, 6470, 6623, this.L, 6624, 6655, this.ON,\n            6656, 8124, this.L, 8125, 8125, this.ON, 8126, 8126, this.L, 8127, 8129, this.ON,\n            8130, 8140, this.L, 8141, 8143, this.ON, 8144, 8156, this.L, 8157, 8159, this.ON,\n            8160, 8172, this.L, 8173, 8175, this.ON, 8176, 8188, this.L, 8189, 8190, this.ON,\n            8191, 8191, this.L, 8192, 8202, this.WS, 8203, 8205, this.BN, 8206, 8206, this.L,\n            8207, 8207, this.R, 8208, 8231, this.ON, 8232, 8232, this.WS, 8233, 8233, this.B,\n            8234, 8234, this.LRE, 8235, 8235, this.RLE, 8236, 8236, this.PDF, 8237, 8237, this.LRO,\n            8238, 8238, this.RLO, 8239, 8239, this.WS, 8240, 8244, this.ET, 8245, 8276, this.ON,\n            8277, 8278, this.L, 8279, 8279, this.ON, 8280, 8286, this.L, 8287, 8287, this.WS,\n            8288, 8291, this.BN, 8292, 8297, this.L, 8298, 8303, this.BN, 8304, 8304, this.EN,\n            8305, 8307, this.L, 8308, 8313, this.EN, 8314, 8315, this.ET, 8316, 8318, this.ON,\n            8319, 8319, this.L, 8320, 8329, this.EN, 8330, 8331, this.ET, 8332, 8334, this.ON,\n            8335, 8351, this.L, 8352, 8369, this.ET, 8370, 8399, this.L, 8400, 8426, this.NSM,\n            8427, 8447, this.L, 8448, 8449, this.ON, 8450, 8450, this.L, 8451, 8454, this.ON,\n            8455, 8455, this.L, 8456, 8457, this.ON, 8458, 8467, this.L, 8468, 8468, this.ON,\n            8469, 8469, this.L, 8470, 8472, this.ON, 8473, 8477, this.L, 8478, 8483, this.ON,\n            8484, 8484, this.L, 8485, 8485, this.ON, 8486, 8486, this.L, 8487, 8487, this.ON,\n            8488, 8488, this.L, 8489, 8489, this.ON, 8490, 8493, this.L, 8494, 8494, this.ET,\n            8495, 8497, this.L, 8498, 8498, this.ON, 8499, 8505, this.L, 8506, 8507, this.ON,\n            8508, 8511, this.L, 8512, 8516, this.ON, 8517, 8521, this.L, 8522, 8523, this.ON,\n            8524, 8530, this.L, 8531, 8543, this.ON, 8544, 8591, this.L, 8592, 8721, this.ON,\n            8722, 8723, this.ET, 8724, 9013, this.ON, 9014, 9082, this.L, 9083, 9108, this.ON,\n            9109, 9109, this.L, 9110, 9168, this.ON, 9169, 9215, this.L, 9216, 9254, this.ON,\n            9255, 9279, this.L, 9280, 9290, this.ON, 9291, 9311, this.L, 9312, 9371, this.EN,\n            9372, 9449, this.L, 9450, 9450, this.EN, 9451, 9751, this.ON, 9752, 9752, this.L,\n            9753, 9853, this.ON, 9854, 9855, this.L, 9856, 9873, this.ON, 9874, 9887, this.L,\n            9888, 9889, this.ON, 9890, 9984, this.L, 9985, 9988, this.ON, 9989, 9989, this.L,\n            9990, 9993, this.ON, 9994, 9995, this.L, 9996, 10023, this.ON, 10024, 10024, this.L,\n            10025, 10059, this.ON, 10060, 10060, this.L, 10061, 10061, this.ON, 10062, 10062, this.L,\n            10063, 10066, this.ON, 10067, 10069, this.L, 10070, 10070, this.ON, 10071, 10071, this.L,\n            10072, 10078, this.ON, 10079, 10080, this.L, 10081, 10132, this.ON, 10133, 10135, this.L,\n            10136, 10159, this.ON, 10160, 10160, this.L, 10161, 10174, this.ON, 10175, 10191, this.L,\n            10192, 10219, this.ON, 10220, 10223, this.L, 10224, 11021, this.ON, 11022, 11903, this.L,\n            11904, 11929, this.ON, 11930, 11930, this.L, 11931, 12019, this.ON, 12020, 12031, this.L,\n            12032, 12245, this.ON, 12246, 12271, this.L, 12272, 12283, this.ON, 12284, 12287, this.L,\n            12288, 12288, this.WS, 12289, 12292, this.ON, 12293, 12295, this.L, 12296, 12320, this.ON,\n            12321, 12329, this.L, 12330, 12335, this.NSM, 12336, 12336, this.ON, 12337, 12341, this.L,\n            12342, 12343, this.ON, 12344, 12348, this.L, 12349, 12351, this.ON, 12352, 12440, this.L,\n            12441, 12442, this.NSM, 12443, 12444, this.ON, 12445, 12447, this.L, 12448, 12448, this.ON,\n            12449, 12538, this.L, 12539, 12539, this.ON, 12540, 12828, this.L, 12829, 12830, this.ON,\n            12831, 12879, this.L, 12880, 12895, this.ON, 12896, 12923, this.L, 12924, 12925, this.ON,\n            12926, 12976, this.L, 12977, 12991, this.ON, 12992, 13003, this.L, 13004, 13007, this.ON,\n            13008, 13174, this.L, 13175, 13178, this.ON, 13179, 13277, this.L, 13278, 13279, this.ON,\n            13280, 13310, this.L, 13311, 13311, this.ON, 13312, 19903, this.L, 19904, 19967, this.ON,\n            19968, 42127, this.L, 42128, 42182, this.ON, 42183, 64284, this.L, 64285, 64285, this.R,\n            64286, 64286, this.NSM, 64287, 64296, this.R, 64297, 64297, this.ET, 64298, 64310, this.R,\n            64311, 64311, this.L, 64312, 64316, this.R, 64317, 64317, this.L, 64318, 64318, this.R,\n            64319, 64319, this.L, 64320, 64321, this.R, 64322, 64322, this.L, 64323, 64324, this.R,\n            64325, 64325, this.L, 64326, 64335, this.R, 64336, 64433, this.AL, 64434, 64466, this.L,\n            64467, 64829, this.AL, 64830, 64831, this.ON, 64832, 64847, this.L, 64848, 64911, this.AL,\n            64912, 64913, this.L, 64914, 64967, this.AL, 64968, 65007, this.L, 65008, 65020, this.AL,\n            65021, 65021, this.ON, 65022, 65023, this.L, 65024, 65039, this.NSM, 65040, 65055, this.L,\n            65056, 65059, this.NSM, 65060, 65071, this.L, 65072, 65103, this.ON, 65104, 65104, this.CS,\n            65105, 65105, this.ON, 65106, 65106, this.CS, 65107, 65107, this.L, 65108, 65108, this.ON,\n            65109, 65109, this.CS, 65110, 65118, this.ON, 65119, 65119, this.ET, 65120, 65121, this.ON,\n            65122, 65123, this.ET, 65124, 65126, this.ON, 65127, 65127, this.L, 65128, 65128, this.ON,\n            65129, 65130, this.ET, 65131, 65131, this.ON, 65132, 65135, this.L, 65136, 65140, this.AL,\n            65141, 65141, this.L, 65142, 65276, this.AL, 65277, 65278, this.L, 65279, 65279, this.BN,\n            65280, 65280, this.L, 65281, 65282, this.ON, 65283, 65285, this.ET, 65286, 65290, this.ON,\n            65291, 65291, this.ET, 65292, 65292, this.CS, 65293, 65293, this.ET, 65294, 65294, this.CS,\n            65295, 65295, this.ES, 65296, 65305, this.EN, 65306, 65306, this.CS, 65307, 65312, this.ON,\n            65313, 65338, this.L, 65339, 65344, this.ON, 65345, 65370, this.L, 65371, 65381, this.ON,\n            65382, 65503, this.L, 65504, 65505, this.ET, 65506, 65508, this.ON, 65509, 65510, this.ET,\n            65511, 65511, this.L, 65512, 65518, this.ON, 65519, 65528, this.L, 65529, 65531, this.BN,\n            65532, 65533, this.ON, 65534, 65535, this.L\n        ];\n        for (var i = 0; i < this.charTypes.length; ++i) {\n            var start = this.charTypes[i];\n            var end = this.charTypes[++i];\n            var b = this.charTypes[++i];\n            while (start <= end) {\n                this.rtlCharacterTypes[start++] = b;\n            }\n        }\n    }\n    //#endregion\n    //#region implementation\n    RtlCharacters.prototype.getVisualOrder = function (inputText, isRtl) {\n        this.types = this.getCharacterCode(inputText);\n        this.textOrder = isRtl ? this.LRE : this.L;\n        this.doVisualOrder();\n        var result = [];\n        for (var i = 0; i < this.levels.length; i++) {\n            result[i] = this.levels[i];\n        }\n        return result;\n    };\n    RtlCharacters.prototype.getCharacterCode = function (text) {\n        var characterCodes = [];\n        for (var i = 0; i < text.length; i++) {\n            characterCodes[i] = this.rtlCharacterTypes[text[i].charCodeAt(0)];\n        }\n        return characterCodes;\n    };\n    RtlCharacters.prototype.setDefaultLevels = function () {\n        for (var i = 0; i < this.length; i++) {\n            this.levels[i] = this.textOrder;\n        }\n    };\n    RtlCharacters.prototype.setLevels = function () {\n        this.setDefaultLevels();\n        for (var n = 0; n < this.length; ++n) {\n            var level = this.levels[n];\n            if ((level & 0x80) !== 0) {\n                level &= 0x7f;\n                this.result[n] = ((level & 0x1) === 0) ? this.L : this.R;\n            }\n            this.levels[n] = level;\n        }\n    };\n    RtlCharacters.prototype.updateLevels = function (index, level, length) {\n        if ((level & 1) === 0) {\n            for (var i = index; i < length; ++i) {\n                if (this.result[i] === this.R) {\n                    this.levels[i] += 1;\n                }\n                else if (this.result[i] !== this.L) {\n                    this.levels[i] += 2;\n                }\n            }\n        }\n        else {\n            for (var i = index; i < length; ++i) {\n                if (this.result[i] !== this.R) {\n                    this.levels[i] += 1;\n                }\n            }\n        }\n    };\n    RtlCharacters.prototype.doVisualOrder = function () {\n        this.length = this.types.length;\n        this.result = this.types;\n        this.levels = [];\n        this.setLevels();\n        this.length = this.getEmbeddedCharactersLength();\n        var preview = this.textOrder;\n        var i = 0;\n        while (i < this.length) {\n            var level = this.levels[i];\n            var preType = ((Math.max(preview, level) & 0x1) === 0) ? this.L : this.R;\n            var length_1 = i + 1;\n            while (length_1 < this.length && this.levels[length_1] === level) {\n                ++length_1;\n            }\n            var success = length_1 < this.length ? this.levels[length_1] : this.textOrder;\n            var type = ((Math.max(success, level) & 0x1) === 0) ? this.L : this.R;\n            this.checkNSM(i, length_1, level, preType, type);\n            this.updateLevels(i, level, length_1);\n            preview = level;\n            i = length_1;\n        }\n        this.checkEmbeddedCharacters(this.length);\n    };\n    RtlCharacters.prototype.getEmbeddedCharactersLength = function () {\n        var index = 0;\n        for (var i = 0; i < this.length; ++i) {\n            if (!(this.types[i] === this.LRE || this.types[i] === this.RLE || this.types[i] === this.LRO ||\n                this.types[i] === this.RLO || this.types[i] === this.PDF || this.types[i] === this.BN)) {\n                this.result[index] = this.result[i];\n                this.levels[index] = this.levels[i];\n                index++;\n            }\n        }\n        return index;\n    };\n    RtlCharacters.prototype.checkEmbeddedCharacters = function (length) {\n        for (var i = this.types.length - 1; i >= 0; --i) {\n            if (this.types[i] === this.LRE || this.types[i] === this.RLE || this.types[i] === this.LRO ||\n                this.types[i] === this.RLO || this.types[i] === this.PDF || this.types[i] === this.BN) {\n                this.result[i] = this.types[i];\n                this.levels[i] = -1;\n            }\n            else {\n                length -= 1;\n                this.result[i] = this.result[length];\n                this.levels[i] = this.levels[length];\n            }\n        }\n        for (var i = 0; i < this.types.length; i++) {\n            if (this.levels[i] === -1) {\n                if (i === 0) {\n                    this.levels[i] = this.textOrder;\n                }\n                else {\n                    this.levels[i] = this.levels[i - 1];\n                }\n            }\n        }\n    };\n    RtlCharacters.prototype.checkNSM = function (index, length, level, startType, endType) {\n        var charType = startType;\n        for (var i = index; i < length; ++i) {\n            if (this.result[i] === this.NSM) {\n                this.result[i] = charType;\n            }\n            else {\n                charType = this.result[i];\n            }\n        }\n        this.checkEuropeanDigits(index, length, level, startType, endType);\n    };\n    RtlCharacters.prototype.checkEuropeanDigits = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this.result[i] === this.EN) {\n                for (var j = i - 1; j >= index; --j) {\n                    if (this.result[j] === this.L || this.result[j] === this.R || this.result[j] === this.AL) {\n                        if (this.result[j] === this.AL) {\n                            this.result[i] = this.AN;\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n        this.checkArabicCharacters(index, length, level, startType, endType);\n    };\n    RtlCharacters.prototype.checkArabicCharacters = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this.result[i] === this.AL) {\n                this.result[i] = this.R;\n            }\n        }\n        this.checkEuropeanNumberSeparator(index, length, level, startType, endType);\n    };\n    RtlCharacters.prototype.checkEuropeanNumberSeparator = function (index, length, level, startType, endType) {\n        for (var i = index + 1; i < length - 1; ++i) {\n            if (this.result[i] === this.ES || this.result[i] === this.CS) {\n                var preview = this.result[i - 1];\n                var success = this.result[i + 1];\n                if (preview === this.EN && success === this.EN) {\n                    this.result[i] = this.EN;\n                }\n                else if (this.result[i] === this.CS && preview === this.AN && success === this.AN) {\n                    this.result[i] = this.AN;\n                }\n            }\n        }\n        this.checkEuropeanNumberTerminator(index, length, level, startType, endType);\n    };\n    RtlCharacters.prototype.checkEuropeanNumberTerminator = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this.result[i] === this.ET) {\n                var s = i;\n                var b = [];\n                b.push(this.ET);\n                var l = this.getLength(s, length, b);\n                var data = s === index ? startType : this.result[s - 1];\n                if (data !== this.EN) {\n                    data = (l === length) ? endType : this.result[l];\n                }\n                if (data === this.EN) {\n                    for (var j = s; j < l; ++j) {\n                        this.result[j] = this.EN;\n                    }\n                }\n                i = l;\n            }\n        }\n        this.checkOtherNeutrals(index, length, level, startType, endType);\n    };\n    RtlCharacters.prototype.checkOtherNeutrals = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this.result[i] === this.ES || this.result[i] === this.ET || this.result[i] === this.CS) {\n                this.result[i] = this.ON;\n            }\n        }\n        this.checkOtherCharacters(index, length, level, startType, endType);\n    };\n    RtlCharacters.prototype.checkOtherCharacters = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this.result[i] === this.EN) {\n                var pst = startType;\n                for (var j = i - 1; j >= index; --j) {\n                    if (this.result[j] === this.L || this.result[j] === this.R) {\n                        pst = this.result[j];\n                        break;\n                    }\n                }\n                if (pst === this.L) {\n                    this.result[i] = this.L;\n                }\n            }\n        }\n        this.checkCommanCharacters(index, length, level, startType, endType);\n    };\n    RtlCharacters.prototype.getLength = function (index, length, validSet) {\n        --index;\n        while (++index < length) {\n            var t = this.result[index];\n            for (var i = 0; i < validSet.length; ++i) {\n                if (t === validSet[i]) {\n                    index = this.getLength(++index, length, validSet);\n                }\n            }\n            return index;\n        }\n        return length;\n    };\n    RtlCharacters.prototype.checkCommanCharacters = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this.result[i] === this.WS || this.result[i] === this.ON || this.result[i] === this.B ||\n                this.result[i] === this.S) {\n                var s = i;\n                var byte = [this.B, this.S, this.WS, this.ON];\n                var l = this.getLength(s, length, byte);\n                var lt = 0;\n                var tt = 0;\n                var rt = 0;\n                if (s === index) {\n                    lt = startType;\n                }\n                else {\n                    lt = this.result[s - 1];\n                    if (lt === this.AN) {\n                        lt = this.R;\n                    }\n                    else if (lt === this.EN) {\n                        lt = this.R;\n                    }\n                }\n                if (l === length) {\n                    tt = endType;\n                }\n                else {\n                    tt = this.result[l];\n                    if (tt === this.AN) {\n                        tt = this.R;\n                    }\n                    else if (tt === this.EN) {\n                        tt = this.R;\n                    }\n                }\n                if (lt === tt) {\n                    rt = lt;\n                }\n                else {\n                    rt = ((level & 0x1) === 0) ? this.L : this.R;\n                }\n                for (var j = s; j < l; ++j) {\n                    this.result[j] = rt;\n                }\n                i = l;\n            }\n        }\n    };\n    return RtlCharacters;\n}());\nexport { RtlCharacters };\n","import { PdfString } from './../../primitives/pdf-string';\nimport { ArabicShapeRenderer } from './rtl/rtl-text-shape';\nimport { PdfTextDirection } from './../enum';\nimport { Bidi } from './rtl/rtl-bidirectional';\n/**\n * `Metrics` of the font.\n * @private\n */\nvar RtlRenderer = /** @class */ (function () {\n    function RtlRenderer() {\n        //region Constants\n        /// Open bracket symbol.\n        /// </summary>\n        this.openBracket = '(';\n        /// <summary>\n        /// Close bracket symbol.\n        /// </summary>\n        this.closeBracket = ')';\n        //#endregion\n    }\n    //#region Constructors\n    /// <summary>\n    /// Initializes a new instance of the <see cref=\"RtlRenderer\"/> class.\n    /// </summary>\n    // public constructor() {\n    // }\n    //#region Public Methods\n    /// <summary>\n    /// Layouts text. Changes blocks position in the RTL text.\n    /// Ligates the text if needed.\n    /// </summary>\n    /// <param name=\"line\">Line of the text.</param>\n    /// <param name=\"font\">Font to be used for string printing.</param>\n    /// <param name=\"rtl\">Font alignment.</param>\n    /// <param name=\"wordSpace\">Indicates whether Word Spacing used or not.</param>\n    /// <returns>Layout string.</returns>\n    RtlRenderer.prototype.layout = function (line, font, rtl, wordSpace, format) {\n        if (line == null) {\n            throw new Error('ArgumentNullException : line');\n        }\n        if (font == null) {\n            throw new Error('ArgumentNullException : font');\n        }\n        var result = [];\n        if (font.Unicode) {\n            result = this.customLayout(line, rtl, format, font, wordSpace);\n        }\n        else {\n            result = [];\n            result[0] = line;\n        }\n        return result;\n    };\n    /// <summary>\n    /// Layouts a string and splits it by the words and using correct lay outing.\n    /// </summary>\n    /// <param name=\"line\">Text line.</param>\n    /// <param name=\"font\">Font object.</param>\n    /// <param name=\"rtl\">Indicates whether RTL should be applied.</param>\n    /// <param name=\"wordSpace\">Indicates whether word spacing is used.</param>\n    /// <returns>Array of words if converted, null otherwise.</returns>\n    RtlRenderer.prototype.splitLayout = function (line, font, rtl, wordSpace, format) {\n        if (line == null) {\n            throw new Error('ArgumentNullException : line');\n        }\n        if (font == null) {\n            throw new Error('ArgumentNullException : font');\n        }\n        var words = [];\n        var system = false;\n        if (!system || words == null) {\n            words = this.customSplitLayout(line, font, rtl, wordSpace, format);\n        }\n        return words;\n    };\n    //#endregion\n    //#region Implementation\n    // private isEnglish( word : string) : boolean\n    // {\n    //     let c : string = (word.length > 0) ? word[0] : '';\n    //     return (c >= '0' && c < 'ÿ');\n    // }\n    // private keepOrder( words : string, startIndex : number, count: number, result : string[], resultIndex : number) : void\n    // {\n    //     for (let i : number = 0, ri = resultIndex - count + 1; i < count; ++i, ++ri) {\n    //         result[ri] = words[i + startIndex];\n    //     }\n    // }\n    /// <summary>\n    /// Uses system API to layout the text.\n    /// </summary>\n    /// <param name=\"line\">Line of the text to be layouted.</param>\n    /// <param name=\"font\">Font which is used for text printing.</param>\n    /// <param name=\"rtl\">Indicates whether we use RTL or RTL lay outing of the text container.</param>\n    /// <returns>Layout string.</returns>\n    /* tslint:disable-next-line:max-line-length */\n    RtlRenderer.prototype.getGlyphIndex = function (line, font, rtl, /*out*/ glyphs, custom) {\n        var success = true;\n        var fail = false;\n        if (line == null) {\n            throw new Error('ArgumentNullException : line');\n        }\n        if (font == null) {\n            throw new Error('ArgumentNullException : font');\n        }\n        glyphs = null;\n        if (line.length === 0) {\n            return { success: fail, glyphs: glyphs };\n        }\n        var renderer = new ArabicShapeRenderer();\n        var text = renderer.shape(line, 0);\n        var internalFont = font.fontInternal;\n        var ttfReader = internalFont.ttfReader;\n        glyphs = new Uint16Array(text.length);\n        var i = 0;\n        for (var k = 0, len = text.length; k < len; k++) {\n            var ch = text[k];\n            var glyphInfo = ttfReader.getGlyph(ch);\n            if (glyphInfo !== null && typeof glyphInfo !== 'undefined') {\n                glyphs[i++] = (glyphInfo).index;\n            }\n        }\n        return { success: success, glyphs: glyphs };\n    };\n    /* tslint:disable-next-line:max-line-length */\n    RtlRenderer.prototype.customLayout = function (line, rtl, format, font, wordSpace) {\n        if (wordSpace === null || typeof wordSpace === 'undefined') {\n            if (line == null) {\n                throw new Error('ArgumentNullException : line');\n            }\n            var result = null;\n            //bidirectional order.\n            if (format !== null && format.textDirection !== PdfTextDirection.None) {\n                var bidi = new Bidi();\n                result = bidi.getLogicalToVisualString(line, rtl);\n            }\n            return result;\n        }\n        else {\n            if (line == null) {\n                throw new Error('ArgumentNullException : line');\n            }\n            if (font == null) {\n                throw new Error('ArgumentNullException : font');\n            }\n            var layouted = null;\n            if (format !== null && format.textDirection !== PdfTextDirection.None) {\n                var renderer = new ArabicShapeRenderer();\n                var txt = renderer.shape(line, 0);\n                layouted = this.customLayout(txt, rtl, format);\n            }\n            // else {\n            //     layouted = this.customLayout(line, rtl, format);\n            // }\n            // We have unicode font, but from the file.        \n            var result = [];\n            // Split the text by words if word spacing is not default.\n            if (wordSpace) {\n                var words = layouted.split('');\n                var count = words.length;\n                for (var i = 0; i < count; i++) {\n                    words[i] = this.addChars(font, words[i]);\n                }\n                result = words;\n            }\n            else {\n                result = [];\n                result[0] = this.addChars(font, layouted);\n            }\n            return result;\n        }\n    };\n    /// <summary>\n    /// Add information about used glyphs to the font.\n    /// </summary>\n    /// <param name=\"font\">Font used for text rendering.</param>\n    /// <param name=\"glyphs\">Array of used glyphs.</param>\n    /// <returns>String in the form to be written to the file.</returns>\n    RtlRenderer.prototype.addChars = function (font, glyphs) {\n        var line = glyphs;\n        if (font == null) {\n            throw new Error('ArgumentNullException : font');\n        }\n        if (line == null) {\n            throw new Error('ArgumentNullException : line');\n        }\n        var text = line;\n        var internalFont = font.fontInternal;\n        var ttfReader = internalFont.ttfReader;\n        font.setSymbols(text);\n        // Reconvert string according to unicode standard.\n        text = ttfReader.convertString(text);\n        var bytes = PdfString.toUnicodeArray(text, false);\n        text = PdfString.byteToString(bytes);\n        return text;\n        // else {\n        //     if (font == null) {\n        //         throw new Error('ArgumentNullException : font');\n        //     }\n        //     if (glyphs == null) {\n        //         throw new Error('ArgumentNullException : glyphs');\n        //     }\n        //     // Mark the chars as used.\n        //     let text : string = '';\n        //     font.setSymbols(glyphs);\n        //     // Create string from the glyphs.\n        //     \n        //     let chars : string[] = [];\n        //     for (let i : number = 0; i < glyphs.length; i++) {\n        //         chars[i] = glyphs[i].toString();\n        //     }\n        //     for (let j : number = 0 ; j < chars.length; j++) {\n        //         text = text + chars[j];\n        //     }\n        //     let bytes : number[] = PdfString.toUnicodeArray(text, false);\n        //     text = PdfString.byteToString(bytes);\n        //     return text;\n        // }\n    };\n    /// <summary>\n    /// Layouts a string and splits it by the words by using custom lay outing.\n    /// </summary>\n    /// <param name=\"line\">Text line.</param>\n    /// <param name=\"font\">Font object.</param>\n    /// <param name=\"rtl\">Indicates whether RTL should be applied.</param>\n    /// <param name=\"wordSpace\">Indicates whether word spacing is used.</param>\n    /// <returns>Array of words if converted, null otherwise.</returns>\n    /* tslint:disable-next-line:max-line-length */\n    RtlRenderer.prototype.customSplitLayout = function (line, font, rtl, wordSpace, format) {\n        if (line == null) {\n            throw new Error('ArgumentNullException : line');\n        }\n        if (font == null) {\n            throw new Error('ArgumentNullException : font');\n        }\n        var reversedLine = this.customLayout(line, rtl, format);\n        var words = reversedLine.split('');\n        return words;\n    };\n    return RtlRenderer;\n}());\nexport { RtlRenderer };\n","/**\n * PdfGraphics.ts class for EJ2-PDF\n */\nimport { PdfColorSpace, TextRenderingMode, PdfFillMode, PdfTextAlignment } from './enum';\nimport { PdfVerticalAlignment, PdfBlendMode } from './enum';\nimport { PdfSubSuperScript } from './fonts/enum';\nimport { PdfStreamWriter } from './../input-output/pdf-stream-writer';\nimport { PdfPen } from './pdf-pen';\nimport { PdfBrush } from './brushes/pdf-brush';\nimport { PdfSolidBrush } from './brushes/pdf-solid-brush';\nimport { PdfFont } from './fonts/pdf-font';\nimport { PdfTransformationMatrix } from './pdf-transformation-matrix';\nimport { PointF, SizeF, RectangleF } from './../drawing/pdf-drawing';\nimport { ProcedureSets } from './constants';\nimport { PdfString } from './../primitives/pdf-string';\nimport { PdfStringFormat } from './fonts/pdf-string-format';\nimport { TemporaryDictionary } from './../collections/object-object-pair/dictionary';\nimport { PdfTransparency } from './pdf-transparency';\nimport { PdfStringLayouter, LineType } from './fonts/string-layouter';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { StringTokenizer } from './fonts/string-tokenizer';\nimport { PdfAutomaticFieldInfoCollection } from './../document/automatic-fields/automatic-field-info-collection';\nimport { PdfAutomaticFieldInfo } from './../document/automatic-fields/automatic-field-info';\nimport { Operators } from './../input-output/pdf-operators';\nimport { UnicodeTrueTypeFont } from './fonts/unicode-true-type-font';\nimport { InternalEnum } from './../primitives/pdf-string';\nimport { RtlRenderer } from './fonts/rtl-renderer';\nimport { PdfTextDirection } from './enum';\n/**\n * `PdfGraphics` class represents a graphics context of the objects.\n * It's used for performing all the graphics operations.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * // set the font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * //\n * //graphics of the page\n * let page1Graphics : PdfGraphics = page1.graphics;\n * // draw the text on the page1 graphics\n * page1Graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * //\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfGraphics = /** @class */ (function () {\n    function PdfGraphics(arg1, arg2, arg3) {\n        /**\n         * Represents the `Current color space`.\n         * @private\n         */\n        this.currentColorSpace = PdfColorSpace.Rgb;\n        /**\n         * Stores `previous rendering mode`.\n         * @private\n         */\n        this.previousTextRenderingMode = TextRenderingMode.Fill;\n        /**\n         * Previous `character spacing` value or 0.\n         * @private\n         */\n        this.previousCharacterSpacing = 0.0;\n        /**\n         * Previous `word spacing` value or 0.\n         * @private\n         */\n        this.previousWordSpacing = 0.0;\n        /**\n         * The `previously used text scaling` value.\n         * @private\n         */\n        this.previousTextScaling = 100.0;\n        /**\n         * Instance of `ProcedureSets` class.\n         * @private\n         */\n        this.procedureSets = new ProcedureSets();\n        /**\n         * To check wihether it is a `direct text rendering`.\n         * @default true\n         * @private\n         */\n        this.isNormalRender = true;\n        /**\n         * check whether to `use font size` to calculate the shift.\n         * @default false\n         * @private\n         */\n        this.isUseFontSize = false;\n        /**\n         * check whether the font is in `italic type`.\n         * @default false\n         * @private\n         */\n        this.isItalic = false;\n        /**\n         * Check whether it is an `emf Text Matrix`.\n         * @default false\n         * @private\n         */\n        this.isEmfTextScaled = false;\n        /**\n         * Check whether it is an `emf` call.\n         * @default false\n         * @private\n         */\n        this.isEmf = false;\n        /**\n         * Check whether it is an `emf plus` call.\n         * @default false\n         * @private\n         */\n        this.isEmfPlus = false;\n        /**\n         * Check whether it is in `base line format`.\n         * @default true\n         * @private\n         */\n        this.isBaselineFormat = true;\n        /**\n         * Emf Text `Scaling Factor`.\n         * @private\n         */\n        this.emfScalingFactor = new SizeF(0, 0);\n        /**\n         * To check whether the `last color space` of document and garphics is saved.\n         * @private\n         */\n        this.colorSpaceChanged = false;\n        /**\n         * Stores an instance of `DictionaryProperties`.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Checks whether the x co-ordinate is need to set as client size or not.\n         * @hidden\n         * @private\n         */\n        this.isOverloadWithPosition = false;\n        /**\n         * Checks whether the x co-ordinate is need to set as client size or not.\n         * @hidden\n         * @private\n         */\n        this.isPointOverload = false;\n        /**\n         * Current colorspaces.\n         * @hidden\n         * @private\n         */\n        this.currentColorSpaces = ['RGB', 'CMYK', 'GrayScale', 'Indexed'];\n        /**\n         * Checks the current image `is optimized` or not.\n         * @default false.\n         * @private\n         */\n        this.isImageOptimized = false;\n        /**\n         * Stores the `graphics states`.\n         * @private\n         */\n        this.graphicsState = [];\n        /**\n         * Indicates whether the object `had trasparency`.\n         * @default false\n         * @private\n         */\n        this.istransparencySet = false;\n        /**\n         * Stores the instance of `PdfAutomaticFieldInfoCollection` class .\n         * @default null\n         * @private\n         */\n        this.internalAutomaticFields = null;\n        /**\n         * Stores the index of the start line that should draw with in the next page.\n         * @private\n         */\n        this.startCutIndex = -1;\n        this.getResources = arg2;\n        this.canvasSize = arg1;\n        if (arg3 instanceof PdfStreamWriter) {\n            this.pdfStreamWriter = arg3;\n        }\n        else {\n            this.pdfStreamWriter = new PdfStreamWriter(arg3);\n        }\n        this.initialize();\n    }\n    Object.defineProperty(PdfGraphics.prototype, \"stringLayoutResult\", {\n        //  Properties\n        /**\n         * Returns the `result` after drawing string.\n         * @private\n         */\n        get: function () {\n            return this.pdfStringLayoutResult;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"size\", {\n        /**\n         * Gets the `size` of the canvas.\n         * @private\n         */\n        get: function () {\n            return this.canvasSize;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"mediaBoxUpperRightBound\", {\n        /**\n         * Gets and Sets the value of `MediaBox upper right bound`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.internalMediaBoxUpperRightBound === 'undefined') {\n                this.internalMediaBoxUpperRightBound = 0;\n            }\n            return this.internalMediaBoxUpperRightBound;\n        },\n        set: function (value) {\n            this.internalMediaBoxUpperRightBound = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"clientSize\", {\n        /**\n         * Gets the `size` of the canvas reduced by margins and page templates.\n         * @private\n         */\n        get: function () {\n            return new SizeF(this.clipBounds.width, this.clipBounds.height);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"colorSpace\", {\n        /**\n         * Gets or sets the current `color space` of the document\n         * @private\n         */\n        get: function () {\n            return this.currentColorSpace;\n        },\n        set: function (value) {\n            this.currentColorSpace = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"streamWriter\", {\n        /**\n         * Gets the `stream writer`.\n         * @private\n         */\n        get: function () {\n            return this.pdfStreamWriter;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"matrix\", {\n        /**\n         * Gets the `transformation matrix` reflecting current transformation.\n         * @private\n         */\n        get: function () {\n            if (this.transformationMatrix == null) {\n                this.transformationMatrix = new PdfTransformationMatrix();\n            }\n            return this.transformationMatrix;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"layer\", {\n        /**\n         * Gets the `layer` for the graphics, if exists.\n         * @private\n         */\n        get: function () {\n            return this.pageLayer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"page\", {\n        /**\n         * Gets the `page` for this graphics, if exists.\n         * @private\n         */\n        get: function () {\n            return this.pageLayer.page;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"automaticFields\", {\n        get: function () {\n            if (this.internalAutomaticFields == null || typeof this.internalAutomaticFields === 'undefined') {\n                this.internalAutomaticFields = new PdfAutomaticFieldInfoCollection();\n            }\n            return this.internalAutomaticFields;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * `Initializes` this instance.\n     * @private\n     */\n    PdfGraphics.prototype.initialize = function () {\n        this.bStateSaved = false;\n        this.currentPen = null;\n        this.currentBrush = null;\n        this.currentFont = null;\n        this.currentColorSpace = PdfColorSpace.Rgb;\n        this.bCSInitialized = false;\n        this.transformationMatrix = null;\n        this.previousTextRenderingMode = (-1); //.Fill;\n        this.previousCharacterSpacing = -1.0;\n        this.previousWordSpacing = -1.0;\n        this.previousTextScaling = -100.0;\n        // this.m_trasparencies = null;\n        this.currentStringFormat = null;\n        this.clipBounds = new RectangleF(new PointF(0, 0), this.size);\n        this.getResources.getResources().requireProcedureSet(this.procedureSets.pdf);\n    };\n    PdfGraphics.prototype.drawPdfTemplate = function (template, location, size) {\n        if (typeof size === 'undefined') {\n            if (template == null) {\n                throw Error('ArgumentNullException-template');\n            }\n            this.drawPdfTemplate(template, location, template.size);\n        }\n        else {\n            // let crossTable : PdfCrossTable = null;\n            // if (this.pageLayer != null) {\n            //     crossTable = (this.page as PdfPage).section.parentDocument.crossTable;\n            // }\n            if (template == null) {\n                throw Error('ArgumentNullException-template');\n            }\n            var scaleX = (template.width > 0) ? size.width / template.width : 1;\n            var scaleY = (template.height > 0) ? size.height / template.height : 1;\n            var bNeedScale = !(scaleX === 1 && scaleY === 1);\n            // Save state.\n            var state = this.save();\n            // Take into consideration that rect location is bottom/left.\n            var matrix = new PdfTransformationMatrix();\n            if (this.pageLayer != null) {\n                this.getTranslateTransform(location.x, location.y + size.height, matrix);\n            }\n            if (bNeedScale) {\n                this.getScaleTransform(scaleX, scaleY, matrix);\n            }\n            this.pdfStreamWriter.modifyCtm(matrix);\n            // Output template.\n            var resources = this.getResources.getResources();\n            var name_1 = resources.getName(template);\n            this.pdfStreamWriter.executeObject(name_1);\n            // Restore state.\n            this.restore(state);\n            //Transfer automatic fields from template.\n            var g = template.graphics;\n            if (g != null) {\n                for (var index = 0; index < g.automaticFields.automaticFields.length; index++) {\n                    var fieldInfo = g.automaticFields.automaticFields[index];\n                    var newLocation = new PointF(fieldInfo.location.x + location.x, fieldInfo.location.y + location.y);\n                    var scalingX = template.size.width == 0 ? 0 : size.width / template.size.width;\n                    var scalingY = template.size.height == 0 ? 0 : size.height / template.size.height;\n                    this.automaticFields.add(new PdfAutomaticFieldInfo(fieldInfo.field, newLocation, scalingX, scalingY));\n                    this.page.dictionary.modify();\n                }\n            }\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.imageB);\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.imageC);\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.imageI);\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.text);\n        }\n    };\n    /* tslint:disable */\n    /**\n     * @public\n     */\n    PdfGraphics.prototype.drawString = function (arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9) {\n        if (typeof arg1 === 'string' && arg2 instanceof PdfFont && (arg3 instanceof PdfPen || arg3 === null) && (arg4 instanceof PdfBrush || arg4 === null) && typeof arg5 === 'number' && typeof arg6 === 'number' && (arg7 instanceof PdfStringFormat || arg7 === null) && typeof arg8 === 'undefined') {\n            this.isOverloadWithPosition = true;\n            this.drawString(arg1, arg2, arg3, arg4, arg5, arg6, (this.clientSize.width - arg5), 0, arg7);\n        }\n        else {\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            var temparg5 = arg5;\n            var temparg6 = arg6;\n            var temparg7 = arg7;\n            var temparg8 = arg8;\n            var temparg9 = arg9;\n            var layouter = new PdfStringLayouter();\n            var result = layouter.layout(arg1, arg2, temparg9, new SizeF(temparg7, temparg8), this.isOverloadWithPosition, this.clientSize);\n            if (!result.empty) {\n                var rect = this.checkCorrectLayoutRectangle(result.actualSize, temparg5, temparg6, temparg9);\n                if (temparg7 <= 0) {\n                    temparg5 = rect.x;\n                    temparg7 = rect.width;\n                }\n                if (temparg8 <= 0) {\n                    temparg6 = rect.y;\n                    temparg8 = rect.height;\n                }\n                this.drawStringLayoutResult(result, arg2, temparg3, temparg4, new RectangleF(temparg5, temparg6, temparg7, temparg8), temparg9);\n                this.isEmfTextScaled = false;\n                this.emfScalingFactor = new SizeF(0, 0);\n            }\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.text);\n            this.isNormalRender = true;\n            this.pdfStringLayoutResult = result;\n            this.isUseFontSize = false;\n        }\n    }; /* tslint:enable */\n    PdfGraphics.prototype.drawLine = function (arg1, arg2, arg3, arg4, arg5) {\n        if (arg2 instanceof PointF) {\n            var temparg2 = arg2;\n            var temparg3 = arg3;\n            this.drawLine(arg1, temparg2.x, temparg2.y, temparg3.x, temparg3.y);\n        }\n        else {\n            var temparg2 = arg2;\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            var temparg5 = arg5;\n            this.stateControl(arg1, null, null);\n            var sw = this.streamWriter;\n            sw.beginPath(temparg2, temparg3);\n            sw.appendLineSegment(temparg4, temparg5);\n            sw.strokePath();\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.pdf);\n        }\n    };\n    /* tslint:disable */\n    PdfGraphics.prototype.drawRectangle = function (arg1, arg2, arg3, arg4, arg5, arg6) {\n        if (arg1 instanceof PdfPen && typeof arg2 === 'number') {\n            var temparg3 = arg3;\n            this.drawRectangle(arg1, null, arg2, temparg3, arg4, arg5);\n        }\n        else if (arg1 instanceof PdfBrush && typeof arg2 === 'number') {\n            var temparg3 = arg3;\n            this.drawRectangle(null, arg1, arg2, temparg3, arg4, arg5);\n        }\n        else {\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            var temparg5 = arg5;\n            var temparg6 = arg6;\n            if (arg2 instanceof PdfSolidBrush && arg2.color.isEmpty) {\n                arg2 = null;\n            }\n            var temparg1 = arg1;\n            var temparg2 = arg2;\n            this.stateControl(temparg1, temparg2, null);\n            this.streamWriter.appendRectangle(temparg3, temparg4, temparg5, temparg6);\n            this.drawPath(temparg1, temparg2, false);\n        }\n    };\n    PdfGraphics.prototype.drawPath = function (arg1, arg2, arg3, arg4) {\n        if (typeof arg3 === 'boolean') {\n            var temparg3 = arg3;\n            this.drawPath(arg1, arg2, PdfFillMode.Winding, temparg3);\n        }\n        else {\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            var isPen = arg1 != null;\n            var isBrush = arg2 != null;\n            var isEvenOdd = (temparg3 === PdfFillMode.Alternate);\n            if (isPen && isBrush) {\n                this.streamWriter.fillStrokePath(isEvenOdd);\n            }\n            else if (!isPen && !isBrush) {\n                this.streamWriter.endPath();\n            }\n            else if (isPen) {\n                this.streamWriter.strokePath();\n            }\n            else {\n                this.streamWriter.fillPath(isEvenOdd);\n            }\n        }\n    };\n    /* tslint:disable */\n    PdfGraphics.prototype.drawImage = function (arg1, arg2, arg3, arg4, arg5) {\n        if (typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'undefined') {\n            var size = arg1.physicalDimension;\n            this.drawImage(arg1, arg2, arg3, size.width, size.height);\n        }\n        else {\n            var temparg2 = arg2;\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            var temparg5 = arg5;\n            arg1.save();\n            var matrix = new PdfTransformationMatrix();\n            this.getTranslateTransform(temparg2, (temparg3 + temparg5), matrix);\n            this.getScaleTransform(arg4, arg5, matrix);\n            this.pdfStreamWriter.write('q');\n            this.pdfStreamWriter.modifyCtm(matrix);\n            // Output template.\n            var resources = this.getResources.getResources();\n            if (typeof this.pageLayer !== 'undefined' && this.page != null) {\n                resources.document = this.page.document;\n            }\n            var name_2 = resources.getName(arg1);\n            if (typeof this.pageLayer !== 'undefined') {\n                this.page.setResources(resources);\n            }\n            this.pdfStreamWriter.executeObject(name_2);\n            this.pdfStreamWriter.write(Operators.restoreState);\n            this.pdfStreamWriter.write(Operators.newLine);\n            var resource = this.getResources.getResources();\n            resource.requireProcedureSet(this.procedureSets.imageB);\n            resource.requireProcedureSet(this.procedureSets.imageC);\n            resource.requireProcedureSet(this.procedureSets.imageI);\n            resource.requireProcedureSet(this.procedureSets.text);\n        }\n    };\n    //Implementation\n    /* tslint:disable */\n    /**\n     * Returns `bounds` of the line info.\n     * @private\n     */\n    PdfGraphics.prototype.getLineBounds = function (lineIndex, result, font, layoutRectangle, format) {\n        var bounds;\n        if (!result.empty && lineIndex < result.lineCount && lineIndex >= 0) {\n            var line = result.lines[lineIndex];\n            var vShift = this.getTextVerticalAlignShift(result.actualSize.height, layoutRectangle.height, format);\n            var y = vShift + layoutRectangle.y + (result.lineHeight * lineIndex);\n            var lineWidth = line.width;\n            var hShift = this.getHorizontalAlignShift(lineWidth, layoutRectangle.width, format);\n            var lineIndent = this.getLineIndent(line, format, layoutRectangle, (lineIndex === 0));\n            hShift += (!this.rightToLeft(format)) ? lineIndent : 0;\n            var x = layoutRectangle.x + hShift;\n            /* tslint:disable */\n            var width = (!this.shouldJustify(line, layoutRectangle.width, format)) ? lineWidth - lineIndent : layoutRectangle.width - lineIndent; /* tslint:enable */\n            var height = result.lineHeight;\n            bounds = new RectangleF(x, y, width, height);\n        }\n        else {\n            bounds = new RectangleF(0, 0, 0, 0);\n        }\n        return bounds;\n    };\n    /**\n     * Creates `lay outed rectangle` depending on the text settings.\n     * @private\n     */\n    PdfGraphics.prototype.checkCorrectLayoutRectangle = function (textSize, x, y, format) {\n        var layoutedRectangle = new RectangleF(x, y, textSize.width, textSize.width);\n        if (format != null) {\n            switch (format.alignment) {\n                case PdfTextAlignment.Center:\n                    layoutedRectangle.x -= layoutedRectangle.width / 2;\n                    break;\n                case PdfTextAlignment.Right:\n                    layoutedRectangle.x -= layoutedRectangle.width;\n                    break;\n            }\n            switch (format.lineAlignment) {\n                case PdfVerticalAlignment.Middle:\n                    layoutedRectangle.y -= layoutedRectangle.height / 2;\n                    break;\n                case PdfVerticalAlignment.Bottom:\n                    layoutedRectangle.y -= layoutedRectangle.height;\n                    break;\n            }\n        }\n        return layoutedRectangle;\n    };\n    /**\n     * Sets the `layer` for the graphics.\n     * @private\n     */\n    PdfGraphics.prototype.setLayer = function (layer) {\n        this.pageLayer = layer;\n        var page = layer.page;\n        if (page != null && typeof page !== 'undefined') {\n            page.beginSave = this.pageSave;\n        }\n    };\n    /**\n     * Adding page number field before page saving.\n     * @private\n     */\n    /* tslint:disable */\n    PdfGraphics.prototype.pageSave = function (page) {\n        if (page.graphics.automaticFields != null) {\n            for (var i = 0; i < page.graphics.automaticFields.automaticFields.length; i++) {\n                var fieldInfo = page.graphics.automaticFields.automaticFields[i];\n                fieldInfo.field.performDraw(page.graphics, fieldInfo.location, fieldInfo.scalingX, fieldInfo.scalingY);\n            }\n        }\n    };\n    /**\n     * `Draws a layout result`.\n     * @private\n     */\n    PdfGraphics.prototype.drawStringLayoutResult = function (result, font, pen, brush, layoutRectangle, format) {\n        if (!result.empty) {\n            this.applyStringSettings(font, pen, brush, format, layoutRectangle);\n            // Set text scaling\n            var textScaling = (format != null) ? format.horizontalScalingFactor : 100.0;\n            if (textScaling !== this.previousTextScaling && !this.isEmfTextScaled) {\n                this.pdfStreamWriter.setTextScaling(textScaling);\n                this.previousTextScaling = textScaling;\n            }\n            var height = (format == null || format.lineSpacing === 0) ? font.height : format.lineSpacing + font.height;\n            var subScript = (format != null && format.subSuperScript === PdfSubSuperScript.SubScript);\n            var shift = 0;\n            shift = (subScript) ? height - (font.height + font.metrics.getDescent(format)) : (height - font.metrics.getAscent(format));\n            this.shift = shift;\n            this.pdfStreamWriter.startNextLine(layoutRectangle.x, layoutRectangle.y - shift);\n            this.pdfStreamWriter.setLeading(+height);\n            var resultHeight = 0;\n            var remainingString = '';\n            for (var i = 0; i < result.lines.length; i++) {\n                resultHeight += result.lineHeight;\n                if ((layoutRectangle.y + resultHeight) > this.clientSize.height) {\n                    this.startCutIndex = i;\n                    break;\n                }\n            }\n            for (var j = this.startCutIndex; (j < result.lines.length && j >= 0); j++) {\n                remainingString += result.lines[j].text;\n            }\n            var bounds = new RectangleF(layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height);\n            this.drawLayoutResult(result, font, format, layoutRectangle);\n            this.underlineStrikeoutText(pen, brush, result, font, bounds, format);\n            this.isEmfPlus = false;\n            this.isUseFontSize = false;\n            if (this.startCutIndex !== -1) {\n                var page = this.getNextPage();\n                page.graphics.drawString(remainingString, font, pen, brush, layoutRectangle.x, 0, layoutRectangle.width, 0, format);\n            }\n        }\n        else {\n            throw new Error('ArgumentNullException:result');\n        }\n    };\n    /**\n     * Gets the `next page`.\n     * @private\n     */\n    PdfGraphics.prototype.getNextPage = function () {\n        var section = this.currentPage.section;\n        var nextPage = null;\n        var index = section.indexOf(this.currentPage);\n        if (index === section.count - 1) {\n            nextPage = section.add();\n        }\n        else {\n            nextPage = section.getPages()[index + 1];\n        }\n        return nextPage;\n    };\n    PdfGraphics.prototype.setClip = function (rectangle, mode) {\n        if (typeof mode === 'undefined') {\n            this.setClip(rectangle, PdfFillMode.Winding);\n        }\n        else {\n            this.pdfStreamWriter.appendRectangle(rectangle);\n            this.pdfStreamWriter.clipPath((mode === PdfFillMode.Alternate));\n        }\n    };\n    /**\n     * Applies all the `text settings`.\n     * @private\n     */\n    PdfGraphics.prototype.applyStringSettings = function (font, pen, brush, format, bounds) {\n        var setLineWidth = false;\n        var tm = this.getTextRenderingMode(pen, brush, format);\n        this.stateControl(pen, brush, font, format);\n        this.pdfStreamWriter.beginText();\n        if ((tm) !== this.previousTextRenderingMode) {\n            this.pdfStreamWriter.setTextRenderingMode(tm);\n            this.previousTextRenderingMode = tm;\n        }\n        // Set character spacing.\n        var cs = (format != null) ? format.characterSpacing : 0;\n        if (cs !== this.previousCharacterSpacing && !this.isEmfTextScaled) {\n            this.pdfStreamWriter.setCharacterSpacing(cs);\n            this.previousCharacterSpacing = cs;\n        }\n        // Set word spacing.\n        // NOTE: it works only if the space code is equal to 32 (0x20).\n        var ws = (format != null) ? format.wordSpacing : 0;\n        if (ws !== this.previousWordSpacing) {\n            this.pdfStreamWriter.setWordSpacing(ws);\n            this.previousWordSpacing = ws;\n        }\n    };\n    /**\n     * Calculates `shift value` if the text is vertically aligned.\n     * @private\n     */\n    PdfGraphics.prototype.getTextVerticalAlignShift = function (textHeight, boundsHeight, format) {\n        var shift = 0;\n        if (boundsHeight >= 0 && format != null && format.lineAlignment !== PdfVerticalAlignment.Top) {\n            switch (format.lineAlignment) {\n                case PdfVerticalAlignment.Middle:\n                    shift = (boundsHeight - textHeight) / 2;\n                    break;\n                case PdfVerticalAlignment.Bottom:\n                    shift = boundsHeight - textHeight;\n                    break;\n            }\n        }\n        return shift;\n    };\n    /* tslint:disable */\n    /**\n     * `Draws layout result`.\n     * @private\n     */\n    PdfGraphics.prototype.drawLayoutResult = function (result, font, format, layoutRectangle) {\n        var vAlignShift = this.getTextVerticalAlignShift(result.actualSize.height, layoutRectangle.height, format);\n        if (vAlignShift !== 0) {\n            this.pdfStreamWriter.startNextLine(0, vAlignShift);\n        }\n        var ttfFont = font;\n        var unicode = (ttfFont != null && ttfFont.isUnicode);\n        var embed = (ttfFont != null && ttfFont.isEmbedFont);\n        var lines = result.lines;\n        for (var i = 0, len = lines.length; (i < len && i !== this.startCutIndex); i++) {\n            var lineInfo = lines[i];\n            var line = lineInfo.text;\n            var lineWidth = lineInfo.width;\n            var hAlignShift = this.getHorizontalAlignShift(lineWidth, layoutRectangle.width, format);\n            var lineIndent = this.getLineIndent(lineInfo, format, layoutRectangle, (i === 0));\n            hAlignShift += (!this.rightToLeft(format)) ? lineIndent : 0;\n            if (hAlignShift !== 0 && !this.isEmfTextScaled) {\n                this.pdfStreamWriter.startNextLine(hAlignShift, 0);\n            }\n            if (unicode) {\n                this.drawUnicodeLine(lineInfo, layoutRectangle, font, format);\n            }\n            else {\n                this.drawAsciiLine(lineInfo, layoutRectangle, font, format);\n            }\n            if (hAlignShift !== 0 && !this.isEmfTextScaled) {\n                this.pdfStreamWriter.startNextLine(-hAlignShift, 0);\n            }\n            if (this.isOverloadWithPosition && lines.length > 1) {\n                this.pdfStreamWriter.startNextLine(-(layoutRectangle.x), 0);\n                layoutRectangle.x = 0;\n                layoutRectangle.width = this.clientSize.width;\n                this.isOverloadWithPosition = false;\n                this.isPointOverload = true;\n            }\n        }\n        this.getResources.getResources().requireProcedureSet(this.procedureSets.text);\n        if (vAlignShift !== 0) {\n            this.pdfStreamWriter.startNextLine(0, -(vAlignShift - result.lineHeight));\n        }\n        this.pdfStreamWriter.endText();\n    };\n    /**\n     * `Draws Ascii line`.\n     * @private\n     */\n    PdfGraphics.prototype.drawAsciiLine = function (lineInfo, layoutRectangle, font, format) {\n        this.justifyLine(lineInfo, layoutRectangle.width, format);\n        var value = '';\n        if (lineInfo.text.indexOf('(') !== -1 || lineInfo.text.indexOf(')') !== -1) {\n            for (var i = 0; i < lineInfo.text.length; i++) {\n                if (lineInfo.text[i] === '(') {\n                    value += '\\\\\\(';\n                }\n                else if (lineInfo.text[i] === ')') {\n                    value += '\\\\\\)';\n                }\n                else {\n                    value += lineInfo.text[i];\n                }\n            }\n        }\n        if (value === '') {\n            value = lineInfo.text;\n        }\n        var line = '(' + value + ')';\n        this.pdfStreamWriter.showNextLineText(new PdfString(line));\n    };\n    /**\n     * Draws unicode line.\n     * @private\n     */\n    PdfGraphics.prototype.drawUnicodeLine = function (lineInfo, layoutRectangle, font, format) {\n        var line = lineInfo.text;\n        var lineWidth = lineInfo.width;\n        var rtl = (format !== null && format.rightToLeft);\n        var useWordSpace = (format !== null && (format.wordSpacing !== 0 || format.alignment === PdfTextAlignment.Justify));\n        var ttfFont = font;\n        var wordSpacing = this.justifyLine(lineInfo, layoutRectangle.width, format);\n        var rtlRender = new RtlRenderer();\n        if (rtl || (format !== null && format.textDirection !== PdfTextDirection.None)) {\n            var blocks = null;\n            var rightAlign = (format !== null && format.alignment === PdfTextAlignment.Right);\n            if (format !== null && format.textDirection !== PdfTextDirection.None) {\n                /* tslint:disable-next-line:max-line-length */\n                blocks = rtlRender.layout(line, ttfFont, (format.textDirection === PdfTextDirection.RightToLeft) ? true : false, useWordSpace, format);\n            }\n            else {\n                blocks = rtlRender.layout(line, ttfFont, rightAlign, useWordSpace, format);\n            }\n            var words = null;\n            if (blocks.length > 1) {\n                if (format !== null && format.textDirection !== PdfTextDirection.None) {\n                    /* tslint:disable-next-line:max-line-length */\n                    words = rtlRender.splitLayout(line, ttfFont, (format.textDirection === PdfTextDirection.RightToLeft) ? true : false, useWordSpace, format);\n                }\n                else {\n                    words = rtlRender.splitLayout(line, ttfFont, rightAlign, useWordSpace, format);\n                }\n            }\n            else {\n                words = [line];\n            }\n            this.drawUnicodeBlocks(blocks, words, ttfFont, format, wordSpacing);\n        }\n        else {\n            if (useWordSpace) {\n                var result = this.breakUnicodeLine(line, ttfFont, null);\n                var blocks = result.tokens;\n                var words = result.words;\n                this.drawUnicodeBlocks(blocks, words, ttfFont, format, wordSpacing);\n            }\n            else {\n                var token = this.convertToUnicode(line, ttfFont);\n                var value = this.getUnicodeString(token);\n                this.streamWriter.showNextLineText(value);\n            }\n        }\n    };\n    /**\n     * Draws array of unicode tokens.\n     */\n    /* tslint:disable */\n    PdfGraphics.prototype.drawUnicodeBlocks = function (blocks, words, font, format, wordSpacing) {\n        /* tslint:enable */\n        if (blocks == null) {\n            throw new Error('Argument Null Exception : blocks');\n        }\n        if (words == null) {\n            throw new Error('Argument Null Exception : words');\n        }\n        if (font == null) {\n            throw new Error('Argument Null Exception : font');\n        }\n        this.streamWriter.startNextLine();\n        var x = 0;\n        var xShift = 0;\n        var firstLineIndent = 0;\n        var paragraphIndent = 0;\n        try {\n            if (format !== null) {\n                firstLineIndent = format.firstLineIndent;\n                paragraphIndent = format.paragraphIndent;\n                format.firstLineIndent = 0;\n                format.paragraphIndent = 0;\n            }\n            var spaceWidth = font.getCharWidth(StringTokenizer.whiteSpace, format) + wordSpacing;\n            var characterSpacing = (format != null) ? format.characterSpacing : 0;\n            var wordSpace = (format !== null && wordSpacing === 0) ? format.wordSpacing : 0;\n            spaceWidth += characterSpacing + wordSpace;\n            for (var i = 0; i < blocks.length; i++) {\n                var token = blocks[i];\n                var word = words[i];\n                var tokenWidth = 0;\n                if (x !== 0) {\n                    this.streamWriter.startNextLine(x, 0);\n                }\n                if (word.length > 0) {\n                    tokenWidth += /*Utils.Round(*/ font.measureString(word, format).width /*)*/;\n                    tokenWidth += characterSpacing;\n                    var val = this.getUnicodeString(token);\n                    this.streamWriter.showText(val);\n                }\n                if (i !== blocks.length - 1) {\n                    x = tokenWidth + spaceWidth;\n                    xShift += x;\n                }\n            }\n            // Rolback current line position.\n            if (xShift > 0) {\n                this.streamWriter.startNextLine(-xShift, 0);\n            }\n        }\n        finally {\n            if (format !== null) {\n                format.firstLineIndent = firstLineIndent;\n                format.paragraphIndent = paragraphIndent;\n            }\n        }\n    };\n    /**\n     * Breakes the unicode line to the words and converts symbols to glyphs.\n     */\n    PdfGraphics.prototype.breakUnicodeLine = function (line, ttfFont, words) {\n        if (line === null) {\n            throw new Error('Argument Null Exception : line');\n        }\n        words = line.split(null);\n        var tokens = [];\n        for (var i = 0; i < words.length; i++) {\n            // Reconvert string according to unicode standard.\n            var word = words[i];\n            var token = this.convertToUnicode(word, ttfFont);\n            tokens[i] = token;\n        }\n        return { tokens: tokens, words: words };\n    };\n    /**\n     * Creates PdfString from the unicode text.\n     */\n    PdfGraphics.prototype.getUnicodeString = function (token) {\n        if (token === null) {\n            throw new Error('Argument Null Exception : token');\n        }\n        var val = new PdfString(token);\n        val.converted = true;\n        val.encode = InternalEnum.ForceEncoding.Ascii;\n        return val;\n    };\n    /**\n     * Converts to unicode format.\n     */\n    PdfGraphics.prototype.convertToUnicode = function (text, ttfFont) {\n        var token = null;\n        if (text == null) {\n            throw new Error('Argument Null Exception : text');\n        }\n        if (ttfFont == null) {\n            throw new Error('Argument Null Exception : ttfFont');\n        }\n        if (ttfFont.fontInternal instanceof UnicodeTrueTypeFont) {\n            var ttfReader = ttfFont.fontInternal.ttfReader;\n            ttfFont.setSymbols(text);\n            token = ttfReader.convertString(text);\n            var bytes = PdfString.toUnicodeArray(token, false);\n            token = PdfString.byteToString(bytes);\n        }\n        return token;\n    };\n    /**\n     * `Justifies` the line if needed.\n     * @private\n     */\n    PdfGraphics.prototype.justifyLine = function (lineInfo, boundsWidth, format) {\n        var line = lineInfo.text;\n        var lineWidth = lineInfo.width;\n        var shouldJustify = this.shouldJustify(lineInfo, boundsWidth, format);\n        var hasWordSpacing = (format != null && format.wordSpacing !== 0);\n        var symbols = StringTokenizer.spaces;\n        var whitespacesCount = StringTokenizer.getCharsCount(line, symbols);\n        var wordSpace = 0;\n        if (shouldJustify) {\n            // Correct line width.\n            if (hasWordSpacing) {\n                lineWidth -= (whitespacesCount * format.wordSpacing);\n            }\n            var difference = boundsWidth - lineWidth;\n            wordSpace = difference / whitespacesCount;\n            this.pdfStreamWriter.setWordSpacing(wordSpace);\n        }\n        else {\n            // If there is justifying, but the line shouldn't be justified, restore default word spacing.\n            if (hasWordSpacing) {\n                this.pdfStreamWriter.setWordSpacing(format.wordSpacing);\n            }\n            else {\n                this.pdfStreamWriter.setWordSpacing(0);\n            }\n        }\n        return wordSpace;\n    };\n    /**\n     * `Reset` or reinitialize the current graphic value.\n     * @private\n     */\n    PdfGraphics.prototype.reset = function (size) {\n        this.canvasSize = size;\n        this.streamWriter.clear();\n        this.initialize();\n        this.initializeCoordinates();\n    };\n    /**\n     * Checks whether the line should be `justified`.\n     * @private\n     */\n    PdfGraphics.prototype.shouldJustify = function (lineInfo, boundsWidth, format) {\n        var line = lineInfo.text;\n        var lineWidth = lineInfo.width;\n        var justifyStyle = (format != null && format.alignment === PdfTextAlignment.Justify);\n        var goodWidth = (boundsWidth >= 0 && lineWidth < boundsWidth);\n        var symbols = StringTokenizer.spaces;\n        var whitespacesCount = StringTokenizer.getCharsCount(line, symbols);\n        var hasSpaces = (whitespacesCount > 0 && line[0] !== StringTokenizer.whiteSpace);\n        var goodLineBreakStyle = ((lineInfo.lineType & LineType.LayoutBreak) > 0);\n        /* tslint:disable */\n        var shouldJustify = (justifyStyle && goodWidth && hasSpaces && (goodLineBreakStyle || format.alignment === PdfTextAlignment.Justify)); /* tslint:enable */\n        return shouldJustify;\n    };\n    /* tslint:disable */\n    /**\n     * Emulates `Underline, Strikeout` of the text if needed.\n     * @private\n     */\n    PdfGraphics.prototype.underlineStrikeoutText = function (pen, brush, result, font, layoutRectangle, format) {\n        if (font.underline || font.strikeout) {\n            // Calculate line width.\n            var linePen = this.createUnderlineStikeoutPen(pen, brush, font, format);\n            if (linePen != null) {\n                // Approximate line positions.\n                var vShift = this.getTextVerticalAlignShift(result.actualSize.height, layoutRectangle.height, format);\n                var underlineYOffset = 0;\n                underlineYOffset = layoutRectangle.y + vShift + font.metrics.getAscent(format) + 1.5 * linePen.width;\n                var strikeoutYOffset = layoutRectangle.y + vShift + font.metrics.getHeight(format) / 2 + 1.5 * linePen.width;\n                var lines = result.lines;\n                // Run through the text and draw lines.\n                for (var i = 0, len = result.lineCount; i < len; i++) {\n                    var lineInfo = lines[i];\n                    var line = lineInfo.text;\n                    var lineWidth = lineInfo.width;\n                    var hShift = this.getHorizontalAlignShift(lineWidth, layoutRectangle.width, format);\n                    var lineIndent = this.getLineIndent(lineInfo, format, layoutRectangle, (i === 0));\n                    hShift += (!this.rightToLeft(format)) ? lineIndent : 0;\n                    var x1 = layoutRectangle.x + hShift;\n                    /* tslint:disable */\n                    var x2 = (!this.shouldJustify(lineInfo, layoutRectangle.width, format)) ? x1 + lineWidth - lineIndent : x1 + layoutRectangle.width - lineIndent;\n                    /* tslint:enable */\n                    if (font.underline) {\n                        var y = underlineYOffset;\n                        this.drawLine(linePen, x1, y, x2, y);\n                        underlineYOffset += result.lineHeight;\n                    }\n                    if (font.strikeout) {\n                        var y = strikeoutYOffset;\n                        this.drawLine(linePen, x1, y, x2, y);\n                        strikeoutYOffset += result.lineHeight;\n                    }\n                    if (this.isPointOverload && lines.length > 1) {\n                        layoutRectangle.x = 0;\n                        layoutRectangle.width = this.clientSize.width;\n                    }\n                }\n                this.isPointOverload = false;\n            }\n        }\n    };\n    /**\n     * `Creates a pen` for drawing lines in the text.\n     * @private\n     */\n    PdfGraphics.prototype.createUnderlineStikeoutPen = function (pen, brush, font, format) {\n        // Calculate line width.\n        var lineWidth = font.metrics.getSize(format) / 20;\n        var linePen = null;\n        // Create a pen fo the lines.\n        if (pen != null) {\n            linePen = new PdfPen(pen.color, lineWidth);\n        }\n        else if (brush != null) {\n            linePen = new PdfPen(brush, lineWidth);\n        }\n        return linePen;\n    };\n    /**\n     * Return `text rendering mode`.\n     * @private\n     */\n    PdfGraphics.prototype.getTextRenderingMode = function (pen, brush, format) {\n        var tm = TextRenderingMode.None;\n        if (pen != null && brush != null) {\n            tm = TextRenderingMode.FillStroke;\n        }\n        else if (pen != null) {\n            tm = TextRenderingMode.Stroke;\n        }\n        else {\n            tm = TextRenderingMode.Fill;\n        }\n        if (format != null && format.clipPath) {\n            tm |= TextRenderingMode.ClipFlag;\n        }\n        return tm;\n    };\n    /**\n     * Returns `line indent` for the line.\n     * @private\n     */\n    PdfGraphics.prototype.getLineIndent = function (lineInfo, format, layoutBounds, firstLine) {\n        var lineIndent = 0;\n        var firstParagraphLine = ((lineInfo.lineType & LineType.FirstParagraphLine) > 0);\n        if (format != null && firstParagraphLine) {\n            lineIndent = (firstLine) ? format.firstLineIndent : format.paragraphIndent;\n            lineIndent = (layoutBounds.width > 0) ? Math.min(layoutBounds.width, lineIndent) : lineIndent;\n        }\n        return lineIndent;\n    };\n    /**\n     * Calculates shift value if the line is `horizontaly aligned`.\n     * @private\n     */\n    PdfGraphics.prototype.getHorizontalAlignShift = function (lineWidth, boundsWidth, format) {\n        var shift = 0;\n        if (boundsWidth >= 0 && format != null && format.alignment !== PdfTextAlignment.Left) {\n            switch (format.alignment) {\n                case PdfTextAlignment.Center:\n                    shift = (boundsWidth - lineWidth) / 2;\n                    break;\n                case PdfTextAlignment.Right:\n                    shift = boundsWidth - lineWidth;\n                    break;\n            }\n        }\n        return shift;\n    };\n    /**\n     * Gets or sets the value that indicates `text direction` mode.\n     * @private\n     */\n    PdfGraphics.prototype.rightToLeft = function (format) {\n        var rtl = (format != null && format.rightToLeft);\n        if (format !== null && typeof format !== 'undefined') {\n            if (format.textDirection !== PdfTextDirection.None && typeof format.textDirection !== 'undefined') {\n                rtl = true;\n            }\n        }\n        return rtl;\n    };\n    PdfGraphics.prototype.stateControl = function (pen, brush, font, format) {\n        if (typeof format === 'undefined') {\n            this.stateControl(pen, brush, font, null);\n        }\n        else {\n            var saveState = false;\n            if (brush !== null) {\n                var solidBrush = brush;\n                if (typeof this.pageLayer !== 'undefined' && this.pageLayer != null) {\n                    if (this.colorSpaceChanged === false) {\n                        this.lastDocumentCS = this.pageLayer.page.document.colorSpace;\n                        this.lastGraphicsCS = this.pageLayer.page.graphics.colorSpace;\n                        this.colorSpace = this.pageLayer.page.document.colorSpace;\n                        this.currentColorSpace = this.pageLayer.page.document.colorSpace;\n                        this.colorSpaceChanged = true;\n                    }\n                }\n                this.initCurrentColorSpace(this.currentColorSpace);\n            }\n            else if (pen != null) {\n                var pdfPen = pen;\n                if (typeof this.pageLayer !== 'undefined' && this.pageLayer != null) {\n                    /* tslint:disable */\n                    this.colorSpace = this.pageLayer.page.document.colorSpace;\n                    this.currentColorSpace = this.pageLayer.page.document.colorSpace;\n                }\n                this.initCurrentColorSpace(this.currentColorSpace);\n            }\n            this.penControl(pen, saveState);\n            this.brushControl(brush, saveState);\n            this.fontControl(font, format, saveState);\n        }\n    };\n    /**\n     * Initializes the `current color space`.\n     * @private\n     */\n    PdfGraphics.prototype.initCurrentColorSpace = function (colorspace) {\n        var re = this.getResources.getResources();\n        if (!this.bCSInitialized) {\n            this.pdfStreamWriter.setColorSpace('Device' + this.currentColorSpaces[this.currentColorSpace], true);\n            this.pdfStreamWriter.setColorSpace('Device' + this.currentColorSpaces[this.currentColorSpace], false);\n            this.bCSInitialized = true;\n        }\n    };\n    /**\n     * Controls the `pen state`.\n     * @private\n     */\n    PdfGraphics.prototype.penControl = function (pen, saveState) {\n        if (pen != null) {\n            this.currentPen = pen;\n            this.colorSpace = PdfColorSpace.Rgb;\n            /* tslint:disable */\n            pen.monitorChanges(this.currentPen, this.pdfStreamWriter, this.getResources, saveState, this.colorSpace, this.matrix.clone());\n            /* tslint:enable */\n            this.currentPen = pen.clone();\n        }\n    };\n    /**\n     * Controls the `brush state`.\n     * @private\n     */\n    PdfGraphics.prototype.brushControl = function (brush, saveState) {\n        if (brush != null) {\n            this.currentBrush = brush;\n            /* tslint:disable */\n            brush.monitorChanges(this.currentBrush, this.pdfStreamWriter, this.getResources, saveState, this.colorSpace);\n            /* tslint:enable */\n            this.currentBrush = brush;\n            brush = null;\n        }\n    };\n    /**\n     * Saves the font and other `font settings`.\n     * @private\n     */\n    PdfGraphics.prototype.fontControl = function (font, format, saveState) {\n        if (font != null) {\n            var curSubSuper = (format != null) ? format.subSuperScript : PdfSubSuperScript.None;\n            /* tslint:disable */\n            var prevSubSuper = (this.currentStringFormat != null) ? this.currentStringFormat.subSuperScript : PdfSubSuperScript.None; /* tslint:enable */\n            if (saveState || font !== this.currentFont || curSubSuper !== prevSubSuper) {\n                var resources = this.getResources.getResources();\n                this.currentFont = font;\n                this.currentStringFormat = format;\n                var size = font.metrics.getSize(format);\n                /* tslint:disable */\n                this.isEmfTextScaled = false;\n                var fontName = resources.getName(font);\n                this.pdfStreamWriter.setFont(font, fontName, size);\n            }\n        }\n    };\n    PdfGraphics.prototype.setTransparency = function (arg1, arg2, arg3) {\n        if (typeof arg2 === 'undefined') {\n            this.istransparencySet = true;\n            this.setTransparency(arg1, arg1, PdfBlendMode.Normal);\n        }\n        else if (typeof arg2 === 'number' && typeof arg3 === 'undefined') {\n            this.setTransparency(arg1, arg2, PdfBlendMode.Normal);\n        }\n        else {\n            if (this.trasparencies == null) {\n                this.trasparencies = new TemporaryDictionary();\n            }\n            var transp = null;\n            var td = new TransparencyData(arg1, arg2, arg3);\n            if (this.trasparencies.containsKey(td)) {\n                transp = this.trasparencies.getValue(td);\n            }\n            if (transp == null) {\n                transp = new PdfTransparency(arg1, arg2, arg3);\n                this.trasparencies.setValue(td, transp);\n            }\n            var resources = this.getResources.getResources();\n            var name_3 = resources.getName(transp);\n            var sw = this.streamWriter;\n            sw.setGraphicsState(name_3);\n        }\n    };\n    PdfGraphics.prototype.clipTranslateMargins = function (x, y, left, top, right, bottom) {\n        if (x instanceof RectangleF && typeof y === 'undefined') {\n            this.clipBounds = x;\n            this.pdfStreamWriter.writeComment('Clip margins.');\n            this.pdfStreamWriter.appendRectangle(x);\n            this.pdfStreamWriter.closePath();\n            this.pdfStreamWriter.clipPath(false);\n            this.pdfStreamWriter.writeComment('Translate co-ordinate system.');\n            this.translateTransform(x.x, x.y);\n        }\n        else if (typeof x === 'number') {\n            var clipArea = new RectangleF(left, top, this.size.width - left - right, this.size.height - top - bottom);\n            this.clipBounds = clipArea;\n            this.pdfStreamWriter.writeComment(\"Clip margins.\");\n            this.pdfStreamWriter.appendRectangle(clipArea);\n            this.pdfStreamWriter.closePath();\n            this.pdfStreamWriter.clipPath(false);\n            this.pdfStreamWriter.writeComment(\"Translate co-ordinate system.\");\n            this.translateTransform(x, y);\n        }\n    };\n    /**\n     * `Updates y` co-ordinate.\n     * @private\n     */\n    PdfGraphics.prototype.updateY = function (y) {\n        return -y;\n    };\n    /**\n     * Used to `translate the transformation`.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // create a new page\n     * let page1 : PdfPage = document.pages.add();\n     * // set pen\n     * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n     * //\n     * // set translate transform\n     * page1.graphics.translateTransform(100, 100);\n     * //\n     * // draw the rectangle after applying translate transform\n     * page1.graphics.drawRectangle(pen, new RectangleF({x : 0, y : 0}, {width : 100, height : 50}));\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     * @param offsetX The x-coordinate of the translation.\n     * @param offsetY The y-coordinate of the translation.\n     */\n    PdfGraphics.prototype.translateTransform = function (offsetX, offsetY) {\n        var matrix = new PdfTransformationMatrix();\n        this.getTranslateTransform(offsetX, offsetY, matrix);\n        this.pdfStreamWriter.modifyCtm(matrix);\n        this.matrix.multiply(matrix);\n    };\n    /**\n     * `Translates` coordinates of the input matrix.\n     * @private\n     */\n    PdfGraphics.prototype.getTranslateTransform = function (x, y, input) {\n        input.translate(x, this.updateY(y));\n        return input;\n    };\n    /* tslint:disable */\n    /**\n     * Applies the specified `scaling operation` to the transformation matrix of this Graphics by prepending it to the object's transformation matrix.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // create a new page\n     * let page1 : PdfPage = document.pages.add();\n     * // create pen\n     * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n     * //\n     * // apply scaling trasformation\n     * page1.graphics.scaleTransform(1.5, 2);\n     * //\n     * // draw the rectangle after applying scaling transform\n     * page1.graphics.drawRectangle(pen, new RectangleF({x : 100, y : 100}, {width : 100, height : 50}));\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     * @param scaleX Scale factor in the x direction.\n     * @param scaleY Scale factor in the y direction.\n     */\n    /* tslint:enable */\n    PdfGraphics.prototype.scaleTransform = function (scaleX, scaleY) {\n        var matrix = new PdfTransformationMatrix();\n        this.getScaleTransform(scaleX, scaleY, matrix);\n        this.pdfStreamWriter.modifyCtm(matrix);\n        this.matrix.multiply(matrix);\n    };\n    /**\n     * `Scales` coordinates of the input matrix.\n     * @private\n     */\n    PdfGraphics.prototype.getScaleTransform = function (x, y, input) {\n        if (input == null) {\n            input = new PdfTransformationMatrix();\n        }\n        input.scale(x, y);\n        return input;\n    };\n    /**\n     * Applies the specified `rotation` to the transformation matrix of this Graphics.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // create a new page\n     * let page1 : PdfPage = document.pages.add();\n     * // create pen\n     * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n     * //\n     * // set RotateTransform with 25 degree of angle\n     * page1.graphics.rotateTransform(25);\n     * //\n     * // draw the rectangle after RotateTransformation\n     * page1.graphics.drawRectangle(pen, new RectangleF({x : 100, y : 100}, {width : 100, height : 50}));\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     * @param angle Angle of rotation in degrees.\n     */\n    PdfGraphics.prototype.rotateTransform = function (angle) {\n        var matrix = new PdfTransformationMatrix();\n        this.getRotateTransform(angle, matrix);\n        this.pdfStreamWriter.modifyCtm(matrix);\n        this.matrix.multiply(matrix);\n    };\n    /**\n     * `Initializes coordinate system`.\n     * @private\n     */\n    PdfGraphics.prototype.initializeCoordinates = function () {\n        // Matrix equation: TM(T-1)=M', where T=[1 0 0 -1 0 h]\n        this.pdfStreamWriter.writeComment('Change co-ordinate system to left/top.');\n        // Translate co-ordinates only, don't flip.\n        if (this.mediaBoxUpperRightBound !== -(this.size.height)) {\n            if (this.cropBox == null) {\n                if (this.mediaBoxUpperRightBound === this.size.height || this.mediaBoxUpperRightBound === 0) {\n                    this.translateTransform(0, this.updateY(this.size.height));\n                }\n                else {\n                    this.translateTransform(0, this.updateY(this.mediaBoxUpperRightBound));\n                }\n            }\n        }\n    };\n    /**\n     * `Rotates` coordinates of the input matrix.\n     * @private\n     */\n    PdfGraphics.prototype.getRotateTransform = function (angle, input) {\n        if (input == null || typeof input === 'undefined') {\n            input = new PdfTransformationMatrix();\n        }\n        input.rotate(this.updateY(angle));\n        return input;\n    };\n    /**\n     * `Saves` the current state of this Graphics and identifies the saved state with a GraphicsState.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // create a new page\n     * let page1 : PdfPage = document.pages.add();\n     * // create pen\n     * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n     * //\n     * // save the graphics state\n     * let state1 : PdfGraphicsState = page1.graphics.save();\n     * //\n     * page1.graphics.scaleTransform(1.5, 2);\n     * // draw the rectangle\n     * page1.graphics.drawRectangle(pen, new RectangleF({x : 100, y : 100}, {width : 100, height : 50}));\n     * // restore the graphics state\n     * page1.graphics.restore(state1);\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.save = function () {\n        var state = new PdfGraphicsState(this, this.matrix.clone());\n        state.brush = this.currentBrush;\n        state.pen = this.currentPen;\n        state.font = this.currentFont;\n        state.colorSpace = this.currentColorSpace;\n        state.characterSpacing = this.previousCharacterSpacing;\n        state.wordSpacing = this.previousWordSpacing;\n        state.textScaling = this.previousTextScaling;\n        state.textRenderingMode = this.previousTextRenderingMode;\n        this.graphicsState.push(state);\n        this.pdfStreamWriter.saveGraphicsState();\n        return state;\n    };\n    PdfGraphics.prototype.restore = function (state) {\n        if (typeof state === 'undefined') {\n            if (this.graphicsState.length > 0) {\n                this.doRestoreState();\n            }\n        }\n        else {\n            if (this.graphicsState.indexOf(state) !== -1) {\n                for (;;) {\n                    if (this.graphicsState.length === 0) {\n                        break;\n                    }\n                    var popState = this.doRestoreState();\n                    if (popState === state) {\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * `Restores graphics state`.\n     * @private\n     */\n    PdfGraphics.prototype.doRestoreState = function () {\n        var state = this.graphicsState.pop();\n        this.transformationMatrix = state.matrix;\n        this.currentBrush = state.brush;\n        this.currentPen = state.pen;\n        this.currentFont = state.font;\n        this.currentColorSpace = state.colorSpace;\n        this.previousCharacterSpacing = state.characterSpacing;\n        this.previousWordSpacing = state.wordSpacing;\n        this.previousTextScaling = state.textScaling;\n        this.previousTextRenderingMode = state.textRenderingMode;\n        this.pdfStreamWriter.restoreGraphicsState();\n        return state;\n    };\n    // Constants\n    /**\n     * Specifies the mask of `path type values`.\n     * @private\n     */\n    PdfGraphics.pathTypesValuesMask = 0xf;\n    /**\n     * Checks whether the object is `transparencyObject`.\n     * @hidden\n     * @private\n     */\n    PdfGraphics.transparencyObject = false;\n    return PdfGraphics;\n}());\nexport { PdfGraphics };\n/**\n * `GetResourceEventHandler` class is alternate for event handlers and delegates.\n * @private\n * @hidden\n */\nvar GetResourceEventHandler = /** @class */ (function () {\n    /**\n     * Initialize instance of `GetResourceEventHandler` class.\n     * Alternate for event handlers and delegates.\n     * @private\n     */\n    function GetResourceEventHandler(sender) {\n        this.sender = sender;\n    }\n    /**\n     * Return the instance of `PdfResources` class.\n     * @private\n     */\n    GetResourceEventHandler.prototype.getResources = function () {\n        return this.sender.getResources();\n    };\n    return GetResourceEventHandler;\n}());\nexport { GetResourceEventHandler };\nvar PdfGraphicsState = /** @class */ (function () {\n    function PdfGraphicsState(graphics, matrix) {\n        /**\n         * Stores `previous rendering mode`.\n         * @default TextRenderingMode.Fill\n         * @private\n         */\n        this.internalTextRenderingMode = TextRenderingMode.Fill;\n        /**\n         * `Previous character spacing` value or 0.\n         * @default 0.0\n         * @private\n         */\n        this.internalCharacterSpacing = 0.0;\n        /**\n         * `Previous word spacing` value or 0.\n         * @default 0.0\n         * @private\n         */\n        this.internalWordSpacing = 0.0;\n        /**\n         * The previously used `text scaling value`.\n         * @default 100.0\n         * @private\n         */\n        this.internalTextScaling = 100.0;\n        /**\n         * `Current color space`.\n         * @default PdfColorSpace.Rgb\n         * @private\n         */\n        this.pdfColorSpace = PdfColorSpace.Rgb;\n        if (typeof graphics !== 'undefined') {\n            this.pdfGraphics = graphics;\n            this.transformationMatrix = matrix;\n        }\n    }\n    Object.defineProperty(PdfGraphicsState.prototype, \"graphics\", {\n        // Properties\n        /**\n         * Gets the parent `graphics object`.\n         * @private\n         */\n        get: function () {\n            return this.pdfGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"matrix\", {\n        /**\n         * Gets the `current matrix`.\n         * @private\n         */\n        get: function () {\n            return this.transformationMatrix;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"characterSpacing\", {\n        /**\n         * Gets or sets the `current character spacing`.\n         * @private\n         */\n        get: function () {\n            return this.internalCharacterSpacing;\n        },\n        set: function (value) {\n            this.internalCharacterSpacing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"wordSpacing\", {\n        /**\n         * Gets or sets the `word spacing` value.\n         * @private\n         */\n        get: function () {\n            return this.internalWordSpacing;\n        },\n        set: function (value) {\n            this.internalWordSpacing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"textScaling\", {\n        /**\n         * Gets or sets the `text scaling` value.\n         * @private\n         */\n        get: function () {\n            return this.internalTextScaling;\n        },\n        set: function (value) {\n            this.internalTextScaling = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"pen\", {\n        /**\n         * Gets or sets the `current pen` object.\n         * @private\n         */\n        get: function () {\n            return this.pdfPen;\n        },\n        set: function (value) {\n            this.pdfPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"brush\", {\n        /**\n         * Gets or sets the `brush`.\n         * @private\n         */\n        get: function () {\n            return this.pdfBrush;\n        },\n        set: function (value) {\n            this.pdfBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"font\", {\n        /**\n         * Gets or sets the `current font` object.\n         * @private\n         */\n        get: function () {\n            return this.pdfFont;\n        },\n        set: function (value) {\n            this.pdfFont = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"colorSpace\", {\n        /**\n         * Gets or sets the `current color space` value.\n         * @private\n         */\n        get: function () {\n            return this.pdfColorSpace;\n        },\n        set: function (value) {\n            this.pdfColorSpace = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"textRenderingMode\", {\n        /**\n         * Gets or sets the `text rendering mode`.\n         * @private\n         */\n        get: function () {\n            return this.internalTextRenderingMode;\n        },\n        set: function (value) {\n            this.internalTextRenderingMode = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGraphicsState;\n}());\nexport { PdfGraphicsState };\nvar TransparencyData = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `TransparencyData` class.\n     * @private\n     */\n    function TransparencyData(alphaPen, alphaBrush, blendMode) {\n        this.alphaPen = alphaPen;\n        this.alphaBrush = alphaBrush;\n        this.blendMode = blendMode;\n    }\n    return TransparencyData;\n}());\n","import { PdfStream } from './../primitives/pdf-stream';\nimport { PdfGraphics, GetResourceEventHandler } from './../graphics/pdf-graphics';\nimport { PdfPageLayerCollection } from './pdf-page-layer-collection';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfColorSpace } from './../graphics/enum';\n/**\n * The `PdfPageLayer` used to create layers in PDF document.\n * @private\n */\nvar PdfPageLayer = /** @class */ (function () {\n    function PdfPageLayer(page, streamClipPageTemplates) {\n        // private bSaved : boolean;\n        /**\n         * Local Variable to store the `color space` of the document.\n         * @private\n         */\n        this.pdfColorSpace = PdfColorSpace.Rgb;\n        /**\n         * Local Variable to set `visibility`.\n         * @default true\n         * @private\n         */\n        this.isVisible = true;\n        /**\n         * Indicates if `Sublayer` is present.\n         * @default false\n         * @private\n         */\n        this.sublayer = false;\n        /**\n         * Local variable to store `length` of the graphics.\n         * @default 0\n         * @private\n         */\n        this.contentLength = 0;\n        /**\n         * Instance for `PdfDictionaryProperties` Class.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        if (page === null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        this.pdfPage = page;\n        this.clipPageTemplates = true;\n        if (typeof streamClipPageTemplates === 'undefined') {\n            this.content = new PdfStream();\n        }\n        else if (streamClipPageTemplates instanceof PdfStream || streamClipPageTemplates === null) {\n            if (streamClipPageTemplates === null) {\n                throw new Error('ArgumentNullException:stream');\n            }\n            this.content = streamClipPageTemplates;\n        }\n        else {\n            this.content = new PdfStream();\n            this.clipPageTemplates = streamClipPageTemplates;\n        }\n    }\n    Object.defineProperty(PdfPageLayer.prototype, \"colorSpace\", {\n        // Properties\n        /**\n         * Get or set the `color space`.\n         * @private\n         */\n        get: function () {\n            return this.pdfColorSpace;\n        },\n        set: function (value) {\n            this.pdfColorSpace = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"page\", {\n        /**\n         * Gets parent `page` of the layer.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"layerId\", {\n        /**\n         * Gets and Sets the `id of the layer`.\n         * @private\n         */\n        get: function () {\n            return this.layerid;\n        },\n        set: function (value) {\n            this.layerid = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"name\", {\n        /**\n         * Gets or sets the `name` of the layer.\n         * @private\n         */\n        get: function () {\n            return this.layerName;\n        },\n        set: function (value) {\n            this.layerName = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"visible\", {\n        /**\n         * Gets or sets the `visibility` of the layer.\n         * @private\n         */\n        get: function () {\n            return this.isVisible;\n        },\n        set: function (value) {\n            this.isVisible = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"graphics\", {\n        /**\n         * Gets `Graphics` context of the layer, used to draw various graphical content on layer.\n         * @private\n         */\n        get: function () {\n            if ((this.pdfGraphics == null)) {\n                this.initializeGraphics(this.page);\n            }\n            return this.pdfGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"layers\", {\n        /**\n         * Gets the collection of `PdfPageLayer`, this collection handle by the class 'PdfPageLayerCollection'.\n         * @private\n         */\n        get: function () {\n            if (this.layer == null) {\n                this.layer = new PdfPageLayerCollection(this.page);\n                this.layer.sublayer = true;\n                return this.layer;\n            }\n            else {\n                return this.layer;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Adds` a new PDF Page layer.\n     * @private\n     */\n    PdfPageLayer.prototype.add = function () {\n        var layer = new PdfPageLayer(this.pdfPage);\n        layer.name = '';\n        return layer;\n    };\n    /**\n     * Returns a value indicating the `sign` of a single-precision floating-point number.\n     * @private\n     */\n    PdfPageLayer.prototype.sign = function (number) {\n        if (number === 0) {\n            return 0;\n        }\n        else if (number > 0) {\n            return 1;\n        }\n        else {\n            return -1;\n        }\n    };\n    /**\n     * `Initializes Graphics context` of the layer.\n     * @private\n     */\n    PdfPageLayer.prototype.initializeGraphics = function (page) {\n        var oPage = page;\n        var gr = new GetResourceEventHandler(this.page);\n        var cropBox = null;\n        this.pdfGraphics = new PdfGraphics(page.size, gr, this.content);\n        this.pdfGraphics.mediaBoxUpperRightBound = 0;\n        if (oPage != null) {\n            var sc = oPage.section.parent;\n            if (sc != null) {\n                this.pdfGraphics.colorSpace = sc.document.colorSpace;\n                this.colorSpace = sc.document.colorSpace;\n            }\n        }\n        // Transform coordinates to the left/top and activate margins.\n        var isSame = (this.sign(page.origin.y) === this.sign(page.origin.x));\n        // if (page != null) {\n        if (page.origin.x >= 0 && page.origin.y >= 0 || !(isSame)) {\n            this.pdfGraphics.initializeCoordinates();\n        }\n        else {\n            // this.m_graphics.InitializeCoordinates(page);\n        }\n        var clipRect = oPage.section.getActualBounds(oPage, true);\n        var margins = oPage.section.pageSettings.margins;\n        if (this.clipPageTemplates) {\n            if (page.origin.x >= 0 && page.origin.y >= 0) {\n                this.pdfGraphics.clipTranslateMargins(clipRect);\n            }\n        }\n        else {\n            this.graphics.clipTranslateMargins(clipRect.x, clipRect.y, margins.left, margins.top, margins.right, margins.bottom);\n        }\n        this.pdfGraphics.setLayer(this);\n        // this.bSaved = false;\n    };\n    Object.defineProperty(PdfPageLayer.prototype, \"element\", {\n        // IPdfWrapper Members\n        /**\n         * Gets the wrapped `element`.\n         * @private\n         */\n        get: function () {\n            return this.content;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfPageLayer;\n}());\nexport { PdfPageLayer };\n","/**\n * PdfCollection.ts class for EJ2-PDF\n * The class used to handle the collection of PdF objects.\n */\nvar PdfCollection = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `Collection` class.\n     * @private\n     */\n    function PdfCollection() {\n        //\n    }\n    Object.defineProperty(PdfCollection.prototype, \"count\", {\n        // Properties\n        /**\n         * Gets the `Count` of stored objects.\n         * @private\n         */\n        get: function () {\n            if (typeof this.collection === 'undefined') {\n                this.collection = [];\n            }\n            return this.collection.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCollection.prototype, \"list\", {\n        /**\n         * Gets the `list` of stored objects.\n         * @private\n         */\n        get: function () {\n            if (typeof this.collection === 'undefined') {\n                this.collection = [];\n            }\n            return this.collection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfCollection;\n}());\nexport { PdfCollection };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfPageLayerCollection.ts class for EJ2-PDF\n */\nimport { PdfPageBase } from './pdf-page-base';\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { PdfPageLayer } from './pdf-page-layer';\nimport { PdfCollection } from './../general/pdf-collection';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfStream } from './../primitives/pdf-stream';\n/**\n * The class provides methods and properties to handle the collections of `PdfPageLayer`.\n */\nvar PdfPageLayerCollection = /** @class */ (function (_super) {\n    __extends(PdfPageLayerCollection, _super);\n    function PdfPageLayerCollection(page) {\n        var _this = _super.call(this) || this;\n        /**\n         * Stores the `number of first level layers` in the document.\n         * @default 0\n         * @private\n         */\n        _this.parentLayerCount = 0;\n        /**\n         * Indicates if `Sublayer` is present.\n         * @default false\n         * @private\n         */\n        _this.sublayer = false;\n        /**\n         * Stores the `optional content dictionary`.\n         * @private\n         */\n        _this.optionalContent = new PdfDictionary();\n        if (page instanceof PdfPageBase) {\n            // if (page == null) {\n            //     throw new Error('ArgumentNullException:page');\n            // }\n            _this.page = page;\n            var lPage = page;\n            // if (lPage != null) {\n            _this.parseLayers(lPage);\n            // }\n        }\n        return _this;\n    }\n    PdfPageLayerCollection.prototype.items = function (index, value) {\n        if (typeof index === 'number' && typeof value === 'undefined') {\n            var obj = this.list[index];\n            return obj;\n        }\n        else {\n            if (value == null) {\n                throw new Error('ArgumentNullException: layer');\n            }\n            if (value.page !== this.page) {\n                throw new Error('ArgumentException: The layer belongs to another page');\n            }\n            // // Add/remove the layer.\n            // let layer : PdfPageLayer = this.items(index);\n            // if (layer != null) {\n            //     this.RemoveLayer(layer);\n            // }\n            // this.List[index] = value;\n            // this.InsertLayer(index, value);\n        }\n    };\n    PdfPageLayerCollection.prototype.add = function (firstArgument, secondArgument) {\n        if (typeof firstArgument === 'undefined') {\n            var layer = new PdfPageLayer(this.page);\n            layer.name = '';\n            this.add(layer);\n            return layer;\n        }\n        else if (firstArgument instanceof PdfPageLayer) {\n            // if (layer == null)\n            //     throw new ArgumentNullException(\"layer\");\n            // if (layer.Page != m_page)\n            //     throw new ArgumentException(\"The layer belongs to another page\");\n            var index = this.list.push(firstArgument);\n            // Register layer.\n            this.addLayer(index, firstArgument);\n            return index;\n        }\n        else {\n            return 0;\n        }\n    };\n    /**\n     * Registers `layer` at the page.\n     * @private\n     */\n    PdfPageLayerCollection.prototype.addLayer = function (index, layer) {\n        var reference = new PdfReferenceHolder(layer);\n        this.page.contents.add(reference);\n    };\n    // private RemoveLayer(layer : PdfPageLayer) : void {\n    //     if (layer == null) {\n    //         throw new Error('ArgumentNullException:layer');\n    //     }\n    //     let reference : PdfReferenceHolder = new PdfReferenceHolder(layer);\n    //     if (this.page != null) {\n    //         this.page.Contents.Remove(reference);\n    //     }\n    // }\n    /**\n     * Inserts `PdfPageLayer` into the collection at specified index.\n     * @private\n     */\n    PdfPageLayerCollection.prototype.insert = function (index, layer) {\n        // if (index < 0)\n        //     throw new ArgumentOutOfRangeException(\"index\", \"Value can not be less 0\");\n        // if (layer == null)\n        //     throw new ArgumentNullException(\"layer\");\n        // if (layer.Page != m_page)\n        //     throw new ArgumentException(\"The layer belongs to another page\");\n        var list = [];\n        var length = this.list.length;\n        for (var i = index; i < length; i++) {\n            list.push(this.list.pop());\n        }\n        this.list.push(layer);\n        for (var i = 0; i < list.length; i++) {\n            this.list.push(list[i]);\n        }\n        // Register layer.\n        this.insertLayer(index, layer);\n    };\n    /**\n     * Registers layer at the page.\n     * @private\n     */\n    PdfPageLayerCollection.prototype.insertLayer = function (index, layer) {\n        if (layer == null) {\n            throw new Error('ArgumentNullException:layer');\n        }\n        var reference = new PdfReferenceHolder(layer);\n        this.page.contents.insert(index, reference);\n    };\n    // tslint:disable\n    /**\n     * `Parses the layers`.\n     * @private\n     */\n    PdfPageLayerCollection.prototype.parseLayers = function (loadedPage) {\n        // if (loadedPage == null) {\n        //     throw new Error('ArgumentNullException:loadedPage');\n        // }\n        var contents = this.page.contents;\n        var resource = this.page.getResources();\n        var crossTable = null;\n        var ocproperties = null;\n        var propertie = null;\n        var isLayerAdded = false;\n        // if (loadedPage instanceof PdfPage) {\n        crossTable = loadedPage.crossTable;\n        // } else {\n        //     crossTable = (loadedPage as PdfLoadedPage).CrossTable;\n        //     Propertie = PdfCrossTable.Dereference(Resource[DictionaryProperties.Properties]) as PdfDictionary;\n        //     ocproperties = PdfCrossTable.Dereference((loadedPage as PdfLoadedPage).\n        //     Document.Catalog[DictionaryProperties.OCProperties]) as PdfDictionary;\n        // }\n        var saveStream = new PdfStream();\n        var restoreStream = new PdfStream();\n        var saveState = 'q';\n        var newLine = '\\n';\n        var restoreState = 'Q';\n        // for (let index : number = 0; index < contents.Items.length; index++) {\n        //     let obj : IPdfPrimitive = contents[index];\n        //     let stream : PdfStream = crossTable.GetObject(obj) as PdfStream;\n        //     if (stream == null)\n        //         throw new PdfDocumentException(\"Invalid contents array.\");\n        //     // if (stream.Compress)\n        //     {\n        //         if (!loadedPage.Imported)\n        //             stream.Decompress();\n        //     }\n        //     byte[] contentId = stream.Data;\n        //     string str = PdfString.ByteToString(contentId);\n        //     if (!loadedPage.Imported && (contents.Count == 1) && ((stream.Data[stream.Data.Length - 2] ==\n        //     RestoreState) || (stream.Data[stream.Data.Length - 1] == RestoreState)))\n        //     {\n        //         byte[] content = stream.Data;\n        //         byte[] data = new byte[content.Length + 4];\n        //         data[0] = SaveState;\n        //         data[1] = NewLine;\n        //         content.CopyTo(data, 2);\n        //         data[data.Length - 2] = NewLine;\n        //         data[data.Length - 1] = RestoreState;\n        //         stream.Data = data;\n        //     }\n        //     if (ocproperties != null)\n        //     {\n        //         if (Propertie != null)\n        //         {\n        //             foreach (KeyValuePair<PdfName, IPdfPrimitive> prop in Propertie.Items)\n        //             {\n        //                 String Key = prop.Key.ToString();\n        //                 PdfReferenceHolder refh = prop.Value as PdfReferenceHolder;\n        //                 PdfDictionary Dict = null;\n        //                 if (refh != null)\n        //                 {\n        //                     Dict = refh.Object as PdfDictionary;\n        //                 }\n        //                 else\n        //                 {\n        //                     Dict = prop.Value as PdfDictionary;\n        //                 }\n        //                 PdfDictionary m_usage = PdfCrossTable.Dereference(Dict[DictionaryProperties.Usage]) as PdfDictionary;\n        //                 if (m_usage != null)\n        //                 {\n        //                     if (str.Contains(Key))\n        //                     {\n        //                         PdfPageLayer layer = new PdfPageLayer(loadedPage, stream);\n        //                         PdfDictionary printoption = PdfCrossTable.Dereference(m_usage[DictionaryProperties.Print])\n        //                         as PdfDictionary;\n        //                         if (printoption != null)\n        //                         {\n        //                             layer.m_printOption = printoption;\n        //                             foreach (KeyValuePair<PdfName, IPdfPrimitive> value in printoption.Items)\n        //                             {\n        //                                 if (value.Key.Value.Equals(DictionaryProperties.PrintState))\n        //                                 {\n        //                                     string printState = (value.Value as PdfName).Value;\n        //                                     if (printState.Equals(DictionaryProperties.OCGON))\n        //                                     {\n        //                                         layer.PrintState = PdfPrintState.AlwaysPrint;\n        //                                         break;\n        //                                     }\n        //                                     else\n        //                                     {\n        //                                         layer.PrintState = PdfPrintState.NeverPrint;\n        //                                         break;\n        //                                     }\n        //                                 }\n        //                             }\n        //                         }\n        //                         PdfString layerName = PdfCrossTable.Dereference(Dict[DictionaryProperties.Name]) as PdfString;\n        //                         layer.Name = layerName.Value;\n        //                         List.add(layer);\n        //                         isLayerAdded = true;\n        //                         if(!str.Contains(\"EMC\"))\n        //                         break;\n        //                     }\n        //                 }\n        //                 else\n        //                 {\n        //                     if (str.Contains(Key))\n        //                     {\n        //                         PdfPageLayer layer = new PdfPageLayer(loadedPage, stream);\n        //                         List.add(layer);\n        //                         if(Dict.ContainsKey(DictionaryProperties.Name))\n        //                         {\n        //                         PdfString layerName = PdfCrossTable.Dereference(Dict[DictionaryProperties.Name]) as PdfString;\n        //                         layer.Name = layerName.Value;\n        //                         }\n        //                         isLayerAdded = true;\n        //                         break;\n        //                     }\n        //                 }\n        //             }\n        //         }\n        //     }\n        //     if (!isLayerAdded)\n        //     {\n        //         PdfPageLayer layer = new PdfPageLayer(loadedPage, stream);\n        //         List.add(layer);\n        //     }\n        //     else\n        //         isLayerAdded = false;\n        // }\n        var saveData = [];\n        saveData.push(saveState);\n        saveStream.data = saveData;\n        contents.insert(0, new PdfReferenceHolder(saveStream));\n        saveData = [];\n        saveData.push(restoreState);\n        restoreStream.data = saveData;\n        contents.insert(contents.count, new PdfReferenceHolder(restoreStream));\n    };\n    /**\n     * Returns `index of` the `PdfPageLayer` in the collection if exists, -1 otherwise.\n     * @private\n     */\n    PdfPageLayerCollection.prototype.indexOf = function (layer) {\n        if (layer == null) {\n            throw new Error('ArgumentNullException: layer');\n        }\n        var index = this.list.indexOf(layer);\n        return index;\n    };\n    return PdfPageLayerCollection;\n}(PdfCollection));\nexport { PdfPageLayerCollection };\n","/**\n * PdfTemplate.ts class for EJ2-PDF\n */\nimport { PdfStream } from './../../primitives/pdf-stream';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfGraphics } from './../pdf-graphics';\nimport { PdfResources } from './../pdf-resources';\nimport { PdfName } from './../../primitives/pdf-name';\nimport { PointF, SizeF, RectangleF } from './../../drawing/pdf-drawing';\nimport { GetResourceEventHandler } from './../pdf-graphics';\n/**\n * Represents `Pdf Template` object.\n * @private\n */\nvar PdfTemplate = /** @class */ (function () {\n    function PdfTemplate(arg1, arg2) {\n        /**\n         * Initialize an instance for `DictionaryProperties` class.\n         * @private\n         * @hidden\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Checks whether the transformation 'is performed'.\n         * @default true\n         * @private\n         */\n        this.writeTransformation = true;\n        if (typeof arg1 === 'undefined') {\n            //\n        }\n        else if (arg1 instanceof SizeF && typeof arg2 === 'undefined') {\n            this.content = new PdfStream();\n            var tempSize = new SizeF(arg1.width, arg1.height);\n            this.setSize(tempSize);\n            this.initialize();\n        }\n        else {\n            this.content = new PdfStream();\n            this.setSize(new SizeF(arg1, arg2));\n            this.initialize();\n        }\n    }\n    Object.defineProperty(PdfTemplate.prototype, \"size\", {\n        //Properties\n        /**\n         * Gets the size of the 'PdfTemplate'.\n         */\n        get: function () {\n            return this.templateSize;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTemplate.prototype, \"width\", {\n        /**\n         * Gets the width of the 'PdfTemplate'.\n         */\n        get: function () {\n            return this.size.width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTemplate.prototype, \"height\", {\n        /**\n         * Gets the height of the 'PdfTemplate'.\n         */\n        get: function () {\n            return this.size.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTemplate.prototype, \"graphics\", {\n        /**\n         * Gets the `graphics` of the 'PdfTemplate'.\n         */\n        get: function () {\n            if (this.pdfGraphics == null || typeof this.pdfGraphics === 'undefined') {\n                var gr = new GetResourceEventHandler(this);\n                var g = new PdfGraphics(this.size, gr, this.content);\n                this.pdfGraphics = g;\n                // if(this.writeTransformation) {\n                // Transform co-ordinates to Top/Left.\n                this.pdfGraphics.initializeCoordinates();\n                // }\n            }\n            return this.pdfGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the resources and modifies the template dictionary.\n     * @private\n     */\n    PdfTemplate.prototype.getResources = function () {\n        if (this.resources == null) {\n            this.resources = new PdfResources();\n            this.content.items.setValue(this.dictionaryProperties.resources, this.resources);\n        }\n        return this.resources;\n    };\n    // Public methods\n    /**\n     * `Initialize` the type and subtype of the template.\n     * @private\n     */\n    PdfTemplate.prototype.initialize = function () {\n        this.addType();\n        this.addSubType();\n    };\n    /**\n     * `Adds type key`.\n     * @private\n     */\n    PdfTemplate.prototype.addType = function () {\n        var value = new PdfName(this.dictionaryProperties.xObject);\n        this.content.items.setValue(this.dictionaryProperties.type, value);\n    };\n    /**\n     * `Adds SubType key`.\n     * @private\n     */\n    PdfTemplate.prototype.addSubType = function () {\n        var value = new PdfName(this.dictionaryProperties.form);\n        this.content.items.setValue(this.dictionaryProperties.subtype, value);\n    };\n    PdfTemplate.prototype.reset = function (size) {\n        if (typeof size === 'undefined') {\n            if (this.resources != null) {\n                this.resources = null;\n                this.content.remove(this.dictionaryProperties.resources);\n            }\n            if (this.graphics != null) {\n                this.graphics.reset(this.size);\n            }\n        }\n        else {\n            this.setSize(size);\n            this.reset();\n        }\n    };\n    /**\n     * `Set the size` of the 'PdfTemplate'.\n     * @private\n     */\n    PdfTemplate.prototype.setSize = function (size) {\n        var rect = new RectangleF(new PointF(0, 0), size);\n        var val = PdfArray.fromRectangle(rect);\n        this.content.items.setValue(this.dictionaryProperties.bBox, val);\n        this.templateSize = size;\n    };\n    Object.defineProperty(PdfTemplate.prototype, \"element\", {\n        // /**\n        //  * Returns the value of current graphics.\n        //  * @private\n        //  */\n        // public GetGraphics(g : PdfGraphics) : PdfGraphics {\n        //     if (this.graphics == null || typeof this.graphics === 'undefined') {\n        //         this.graphics = g;\n        //         this.graphics.Size = this.Size;\n        //         this.graphics.StreamWriter = new PdfStreamWriter(this.content)\n        //         this.graphics.Initialize();\n        //         if(this.writeTransformation) {\n        //             this.graphics.InitializeCoordinates();\n        //         }\n        //     }\n        //     return this.graphics;\n        // }\n        // IPdfWrapper Members\n        /**\n         * Gets the `content stream` of 'PdfTemplate' class.\n         * @private\n         */\n        get: function () {\n            return this.content;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfTemplate;\n}());\nexport { PdfTemplate };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfResources.ts class for EJ2-PDF\n */\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { TemporaryDictionary } from './../collections/object-object-pair/dictionary';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfCrossTable } from './../input-output/pdf-cross-table';\nimport { PdfFont } from './fonts/pdf-font';\nimport { PdfTemplate } from './figures/pdf-template';\nimport { PdfBrush } from './brushes/pdf-brush';\nimport { PdfTransparency } from './pdf-transparency';\nimport { PdfBitmap } from './../graphics/images/pdf-bitmap';\nimport { PdfImage } from './../graphics/images/pdf-image';\n/**\n * `PdfResources` class used to set resource contents like font, image.\n * @private\n */\nvar PdfResources = /** @class */ (function (_super) {\n    __extends(PdfResources, _super);\n    function PdfResources(baseDictionary) {\n        var _this = _super.call(this, baseDictionary) || this;\n        /**\n         * Dictionary for the `properties names`.\n         * @private\n         */\n        _this.properties = new PdfDictionary();\n        return _this;\n    }\n    Object.defineProperty(PdfResources.prototype, \"names\", {\n        //Properties\n        /**\n         * Gets the `font names`.\n         * @private\n         */\n        get: function () {\n            return this.getNames();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfResources.prototype, \"document\", {\n        /**\n         * Get or set the `page document`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument;\n        },\n        set: function (value) {\n            this.pdfDocument = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Public Methods\n    /**\n     * `Generates name` for the object and adds to the resource if the object is new.\n     * @private\n     */\n    PdfResources.prototype.getName = function (obj) {\n        var primitive = obj.element;\n        var name = null;\n        if (this.names.containsKey(primitive)) {\n            name = this.names.getValue(primitive);\n        }\n        // Object is new.\n        if (name == null) {\n            var sName = this.generateName();\n            name = new PdfName(sName);\n            this.names.setValue(primitive, name);\n            if (obj instanceof PdfFont) {\n                this.add(obj, name);\n            }\n            else if (obj instanceof PdfTemplate) {\n                this.add(obj, name);\n            }\n            else if (obj instanceof PdfTransparency) {\n                this.add(obj, name);\n            }\n            else if (obj instanceof PdfImage || obj instanceof PdfBitmap) {\n                this.add(obj, name);\n            }\n        }\n        return name;\n    };\n    /**\n     * Gets `resource names` to font dictionaries.\n     * @private\n     */\n    PdfResources.prototype.getNames = function () {\n        if (this.pdfNames == null) {\n            this.pdfNames = new TemporaryDictionary();\n        }\n        var fonts = this.items.getValue(this.dictionaryProperties.font);\n        if (fonts != null) {\n            var reference = fonts;\n            var dictionary = fonts;\n            dictionary = PdfCrossTable.dereference(fonts);\n        }\n        return this.pdfNames;\n    };\n    /**\n     * Add `RequireProcedureSet` into procset array.\n     * @private\n     */\n    PdfResources.prototype.requireProcedureSet = function (procedureSetName) {\n        if (procedureSetName == null) {\n            throw new Error('ArgumentNullException:procedureSetName');\n        }\n        var procSets = this.items.getValue(this.dictionaryProperties.procset);\n        if (procSets == null) {\n            procSets = new PdfArray();\n            this.items.setValue(this.dictionaryProperties.procset, procSets);\n        }\n        var name = new PdfName(procedureSetName);\n        if (!procSets.contains(name)) {\n            procSets.add(name);\n        }\n    };\n    //Helper Methods\n    /**\n     * `Remove font` from array.\n     * @private\n     */\n    PdfResources.prototype.removeFont = function (name) {\n        var key = null;\n        var keys = this.pdfNames.keys();\n        for (var index = 0; index < this.pdfNames.size(); index++) {\n            if (this.pdfNames.getValue(keys[index]) === new PdfName(name)) {\n                key = keys[index];\n                break;\n            }\n        }\n        if (key != null) {\n            this.pdfNames.remove(key);\n        }\n    };\n    /**\n     * Generates `Unique string name`.\n     * @private\n     */\n    PdfResources.prototype.generateName = function () {\n        var name = Guid.getNewGuidString();\n        return name;\n    };\n    PdfResources.prototype.add = function (arg1, arg2) {\n        if (arg1 instanceof PdfFont) {\n            var dictionary = null;\n            var fonts = this.items.getValue(this.dictionaryProperties.font);\n            if (fonts != null) {\n                var reference = fonts;\n                dictionary = fonts;\n                dictionary = fonts;\n            }\n            else {\n                dictionary = new PdfDictionary();\n                this.items.setValue(this.dictionaryProperties.font, dictionary);\n            }\n            dictionary.items.setValue(arg2.value, new PdfReferenceHolder(arg1.element));\n        }\n        else if (arg1 instanceof PdfTemplate) {\n            var xobjects = void 0;\n            xobjects = this.items.getValue(this.dictionaryProperties.xObject);\n            // Create fonts dictionary.\n            if (xobjects == null) {\n                xobjects = new PdfDictionary();\n                this.items.setValue(this.dictionaryProperties.xObject, xobjects);\n            }\n            xobjects.items.setValue(arg2.value, new PdfReferenceHolder(arg1.element));\n        }\n        else if (arg1 instanceof PdfBrush) {\n            // let savable : IPdfPrimitive = (arg1 as IPdfWrapper).Element;\n            // if (savable != null)\n            // {\n            //     let pattern : PdfDictionary = this.Items.getValue(this.dictionaryProperties.pattern) as PdfDictionary;\n            //     // Create a new pattern dictionary.\n            //     if (pattern == null) {\n            //         pattern = new PdfDictionary();\n            //         this.Items.setValue(this.dictionaryProperties.pattern, pattern);\n            //     }\n            //     pattern.Items.setValue(name, new PdfReferenceHolder(savable));\n            // }\n        }\n        else if (arg1 instanceof PdfTransparency) {\n            var savable = arg1.element;\n            var transDic = null;\n            transDic = this.items.getValue(this.dictionaryProperties.extGState);\n            // Create a new pattern dictionary.\n            if (transDic == null) {\n                transDic = new PdfDictionary();\n                this.items.setValue(this.dictionaryProperties.extGState, transDic);\n            }\n            transDic.items.setValue(arg2.value, new PdfReferenceHolder(savable));\n        }\n        else {\n            /* tslint:disable */\n            var xobjects = this.Dictionary.items.getValue(this.dictionaryProperties.xObject);\n            var parentXObjects = void 0;\n            if (typeof this.pdfDocument !== 'undefined') {\n                parentXObjects = this.pdfDocument.sections.element.items.getValue(this.dictionaryProperties.resources).items.getValue(this.dictionaryProperties.xObject);\n            }\n            var values = this.Dictionary.items.values();\n            var hasSameImageStream = false;\n            var oldReference = void 0;\n            if (typeof this.pdfDocument !== 'undefined' && (typeof parentXObjects === undefined || parentXObjects == null)) {\n                parentXObjects = new PdfDictionary();\n                this.pdfDocument.sections.element.items.getValue(this.dictionaryProperties.resources).items.setValue(this.dictionaryProperties.xObject, parentXObjects);\n            }\n            else if (typeof this.pdfDocument !== 'undefined') {\n                var values_1 = parentXObjects.items.values();\n                for (var i = 0; i < values_1.length; i++) {\n                    if (typeof values_1[i] !== 'undefined' && typeof values_1[i].element !== 'undefined') {\n                        if (values_1[i].element.data[0] === arg1.element.data[0]) {\n                            oldReference = values_1[i];\n                            hasSameImageStream = true;\n                        }\n                    }\n                }\n            }\n            if (xobjects == null) {\n                xobjects = new PdfDictionary();\n                this.Dictionary.items.setValue(this.dictionaryProperties.xObject, xobjects);\n            }\n            if (hasSameImageStream && typeof oldReference !== 'undefined') {\n                xobjects.items.setValue(arg2.value, oldReference);\n            }\n            else {\n                var reference = new PdfReferenceHolder(arg1.element);\n                xobjects.items.setValue(arg2.value, reference);\n                if (typeof this.pdfDocument !== 'undefined') {\n                    parentXObjects.items.setValue(arg2.value, reference);\n                }\n            }\n            /* tslint:enable */\n        }\n    };\n    return PdfResources;\n}(PdfDictionary));\nexport { PdfResources };\n/**\n * Used to create new guid for resources.\n * @private\n */\nvar Guid = /** @class */ (function () {\n    /**\n     * Initialize an `instance of GUID` class.\n     * @private\n     */\n    function Guid(stringValue) {\n        this.stringValue = stringValue || Guid.getNewGuidString();\n    }\n    Object.defineProperty(Guid, \"randomNumber\", {\n        /**\n         * Generate `Random number` for GUID.\n         * @private\n         */\n        get: function () {\n            Guid.guid = Guid.guid + 1;\n            Guid.guid = Guid.guid > 999999999999 ? 0 : Guid.guid;\n            return Guid.guid;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Return the value of `GUID as string`.\n     * @private\n     */\n    Guid.prototype.toString = function () {\n        return this.stringValue;\n    };\n    /**\n     * Generate `new GUID`.\n     * @private\n     */\n    Guid.getNewGuidString = function () {\n        var guid = 'abc7def4-ghi9-jkl2-m6n3-';\n        var temproaryString = 'opqrstuvwxyz';\n        var randomString = Guid.randomNumber.toString();\n        randomString = guid + temproaryString.substr(0, (12 - randomString.length)) + randomString;\n        return randomString;\n    };\n    /**\n     * static field to store `endding value of current GUID`.\n     * @private\n     */\n    Guid.guid = 0;\n    return Guid;\n}());\nexport { Guid };\n","import { PdfArray } from './../primitives/pdf-array';\nimport { PdfPageLayerCollection } from './pdf-page-layer-collection';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfResources } from './../graphics/pdf-resources';\n/**\n * The abstract base class for all pages,\n * `PdfPageBase` class provides methods and properties to create PDF pages and its elements.\n * @private\n */\nvar PdfPageBase = /** @class */ (function () {\n    //constructors\n    /**\n     * Initializes a new instance of the `PdfPageBase` class.\n     * @private\n     */\n    function PdfPageBase(dictionary) {\n        /**\n         * `Index` of the default layer.\n         * @default -1.\n         * @private\n         */\n        this.defLayerIndex = -1;\n        /**\n         * Local variable to store if page `updated`.\n         * @default false.\n         * @private\n         */\n        this.modified = false;\n        /**\n         * Instance of `DictionaryProperties` class.\n         * @hidden\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        this.pageDictionary = dictionary;\n    }\n    Object.defineProperty(PdfPageBase.prototype, \"section\", {\n        //Properties\n        /**\n         * Gets the `section` of a page.\n         * @private\n         */\n        get: function () {\n            // if (this.pdfSection === null) {\n            //     throw new Error('PdfException : Page must be added to some section before using.');\n            // }\n            return this.pdfSection;\n        },\n        set: function (value) {\n            this.pdfSection = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageBase.prototype, \"dictionary\", {\n        /**\n         * Gets the page `dictionary`.\n         * @private\n         */\n        get: function () {\n            return this.pageDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageBase.prototype, \"element\", {\n        /**\n         * Gets the wrapped `element`.\n         * @private\n         */\n        get: function () {\n            return this.pageDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageBase.prototype, \"defaultLayer\", {\n        /**\n         * Gets the `default layer` of the page (Read only).\n         * @private\n         */\n        get: function () {\n            var layer = this.layers;\n            var index = this.defaultLayerIndex;\n            var returnlayer = layer.items(index);\n            return returnlayer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageBase.prototype, \"defaultLayerIndex\", {\n        /**\n         * Gets or sets `index of the default layer`.\n         * @private\n         */\n        get: function () {\n            if (this.layerCollection.count === 0 || this.defLayerIndex === -1) {\n                var layer = this.layerCollection.add();\n                this.defLayerIndex = this.layerCollection.indexOf(layer);\n            }\n            return this.defLayerIndex;\n        },\n        /**\n         * Gets or sets` index of the default layer`.\n         * @private\n         */\n        set: function (value) {\n            if (value < 0 || value > this.layers.count - 1) {\n                throw new Error('ArgumentOutOfRangeException : value, Index can not be less 0 and greater Layers.Count - 1');\n            }\n            else {\n                this.defLayerIndex = value;\n                this.modified = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageBase.prototype, \"layers\", {\n        /**\n         * Gets the collection of the page's `layers` (Read only).\n         * @private\n         */\n        get: function () {\n            if (this.layerCollection == null || typeof this.layerCollection === 'undefined') {\n                this.layerCollection = new PdfPageLayerCollection(this);\n            }\n            return this.layerCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Return an instance of `PdfResources` class.\n     * @private\n     */\n    PdfPageBase.prototype.getResources = function () {\n        if (this.resources == null) {\n            this.resources = new PdfResources();\n            this.dictionary.items.setValue(this.dictionaryProperties.resources, this.resources);\n        }\n        return this.resources;\n    };\n    Object.defineProperty(PdfPageBase.prototype, \"contents\", {\n        /**\n         * Gets `array of page's content`.\n         * @private\n         */\n        get: function () {\n            var obj = this.pageDictionary.items.getValue(this.dictionaryProperties.contents);\n            var contents = obj;\n            var rh = obj;\n            if (contents == null) {\n                contents = new PdfArray();\n                this.pageDictionary.items.setValue(this.dictionaryProperties.contents, contents);\n            }\n            return contents;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets the `resources`.\n     * @private\n     */\n    PdfPageBase.prototype.setResources = function (res) {\n        this.resources = res;\n        this.dictionary.items.setValue(this.dictionaryProperties.resources, this.resources);\n        this.modified = true;\n    };\n    return PdfPageBase;\n}());\nexport { PdfPageBase };\n","import { PdfArray } from './../primitives/pdf-array';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { SizeF, RectangleF, PointF } from './../drawing/pdf-drawing';\nimport { PdfStringLayouter } from './../graphics/fonts/string-layouter';\nimport { PdfColorSpace } from './../graphics/enum';\n/**\n * `PdfAnnotationCollection` class represents the collection of 'PdfAnnotation' objects.\n * @private\n */\nvar PdfAnnotationCollection = /** @class */ (function () {\n    function PdfAnnotationCollection(page) {\n        // Constants\n        /**\n         * `Error` constant message.\n         * @private\n         */\n        this.alreadyExistsAnnotationError = 'This annotatation had been already added to page';\n        /**\n         * `Error` constant message.\n         * @private\n         */\n        this.missingAnnotationException = 'Annotation is not contained in collection.';\n        /**\n         * Specifies the Internal variable to store fields of `PdfDictionaryProperties`.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Array of the `annotations`.\n         * @private\n         */\n        this.internalAnnotations = new PdfArray();\n        /**\n         * privte `list` for the annotations.\n         * @private\n         */\n        this.lists = [];\n        if (typeof page !== 'undefined') {\n            this.page = page;\n        }\n    }\n    Object.defineProperty(PdfAnnotationCollection.prototype, \"annotations\", {\n        /**\n         * Gets the `PdfAnnotation` object at the specified index. Read-Only.\n         * @private\n         */\n        get: function () {\n            return this.internalAnnotations;\n        },\n        set: function (value) {\n            this.internalAnnotations = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Public methods\n    /**\n     * `Adds` a new annotation to the collection.\n     * @private\n     */\n    PdfAnnotationCollection.prototype.add = function (annotation) {\n        // this.SetPrint(annotation);\n        this.doAdd(annotation);\n    };\n    /**\n     * `Adds` a Annotation to collection.\n     * @private\n     */\n    /* tslint:disable */\n    PdfAnnotationCollection.prototype.doAdd = function (annotation) {\n        if (typeof annotation.destination !== 'undefined') {\n            var layout = new PdfStringLayouter();\n            var layoutResult = layout.layout(annotation.text, annotation.font, annotation.stringFormat, new SizeF((annotation.bounds.width), 0), false, new SizeF(0, 0));\n            var lastPosition = annotation.bounds.y;\n            if (layoutResult.lines.length === 1) {\n                var size = annotation.font.measureString(layoutResult.lines[0].text);\n                annotation.bounds = new RectangleF(new PointF(annotation.bounds.x, lastPosition), size);\n                annotation.text = layoutResult.lines[0].text;\n                //Draw Annotation Text.\n                this.page.graphics.drawString(annotation.text, annotation.font, null, annotation.brush, annotation.bounds.x, annotation.bounds.y, annotation.bounds.width, annotation.bounds.height, null);\n                //Add annotation to dictionary.\n                annotation.setPage(this.page);\n                this.setColor(annotation);\n                this.internalAnnotations.add(new PdfReferenceHolder(annotation));\n                this.lists.push(annotation);\n            }\n            else {\n                for (var i = 0; i < layoutResult.lines.length; i++) {\n                    var size = annotation.font.measureString(layoutResult.lines[i].text);\n                    if (i === 0) {\n                        annotation.bounds = new RectangleF(annotation.bounds.x, lastPosition, size.width, size.height);\n                        annotation.text = layoutResult.lines[i].text;\n                        //Draw Annotation Text.\n                        this.page.graphics.drawString(annotation.text, annotation.font, null, annotation.brush, annotation.bounds.x, lastPosition, size.width, size.height, null);\n                        //Add annotation to dictionary.\n                        annotation.setPage(this.page);\n                        this.setColor(annotation);\n                        this.internalAnnotations.add(new PdfReferenceHolder(annotation));\n                        this.lists.push(annotation);\n                        //Update y for drawing next line of the text.\n                        lastPosition += annotation.bounds.height;\n                    }\n                    else {\n                        var annot = annotation.clone();\n                        annot.bounds = new RectangleF(new PointF(annotation.bounds.x, lastPosition), size);\n                        annot.text = layoutResult.lines[i].text;\n                        //Draw Annotation Text.\n                        this.page.graphics.drawString(annot.text, annot.font, null, annot.brush, annot.bounds.x, annot.bounds.y, annot.bounds.width, annot.bounds.height, null);\n                        //Add annotation to dictionary.\n                        annot.setPage(this.page);\n                        this.setColor(annot);\n                        this.internalAnnotations.add(new PdfReferenceHolder(annot));\n                        this.lists.push(annot);\n                        //Update y for drawing next line of the text.\n                        lastPosition += annot.bounds.height;\n                    }\n                }\n            }\n        }\n        else {\n            annotation.setPage(this.page);\n            this.internalAnnotations.add(new PdfReferenceHolder(annotation));\n            return this.lists.push(annotation);\n        }\n    };\n    /* tslint:enable */\n    /**\n     * `Set a color of an annotation`.\n     * @private\n     */\n    PdfAnnotationCollection.prototype.setColor = function (annotation) {\n        var cs = PdfColorSpace.Rgb;\n        var colours = annotation.color.toArray(cs);\n        annotation.dictionary.items.setValue(this.dictionaryProperties.c, colours);\n    };\n    Object.defineProperty(PdfAnnotationCollection.prototype, \"element\", {\n        // IPdfWrapper Members\n        /**\n         * Gets the `Element` representing this object.\n         * @private\n         */\n        get: function () {\n            return this.internalAnnotations;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAnnotationCollection;\n}());\nexport { PdfAnnotationCollection };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfPageBase } from './pdf-page-base';\nimport { PdfDictionary, SaveTemplateEventHandler } from './../primitives/pdf-dictionary';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { SizeF } from './../drawing/pdf-drawing';\nimport { PdfAnnotationCollection } from './../annotations/annotation-collection';\nimport { PdfPageLayer } from './pdf-page-layer';\n/**\n * Provides methods and properties to create pages and its elements.\n * `PdfPage` class inherited from the `PdfPageBase` class.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * //\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * //\n * // set the font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPage = /** @class */ (function (_super) {\n    __extends(PdfPage, _super);\n    //constructors\n    /**\n     * Initialize the new instance for `PdfPage` class.\n     * @private\n     */\n    function PdfPage() {\n        var _this = _super.call(this, new PdfDictionary()) || this;\n        /**\n         * Stores the instance of `PdfAnnotationCollection` class.\n         * @hidden\n         * @default null\n         * @private\n         */\n        _this.annotationCollection = null;\n        /**\n         * Stores the instance of `PageBeginSave` event for Page Number Field.\n         * @default null\n         * @private\n         */\n        _this.beginSave = null;\n        _this.initialize();\n        return _this;\n    }\n    Object.defineProperty(PdfPage.prototype, \"document\", {\n        //Properties\n        /**\n         * Gets current `document`.\n         * @private\n         */\n        get: function () {\n            if (this.section !== null && this.section.parent !== null) {\n                return this.section.parent.document;\n            }\n            else {\n                return null;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"graphics\", {\n        /**\n         * Get the current `graphics`.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a new page to the document\n         * let page1 : PdfPage = document.pages.add();\n         * //\n         * // get graphics\n         * let graphics : PdfGraphics = page1.graphics;\n         * //\n         * // set the font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // create black brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * // draw the text\n         * graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var result = this.defaultLayer.graphics;\n            result.currentPage = this;\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"crossTable\", {\n        /**\n         * Gets the `cross table`.\n         * @private\n         */\n        get: function () {\n            if (this.section === null) {\n                throw new Error('PdfDocumentException : Page is not created');\n            }\n            return this.section.parent === null ? this.section.parentDocument.crossTable : this.section.parent.document.crossTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"size\", {\n        /**\n         * Gets the size of the PDF page- Read only.\n         * @public\n         */\n        get: function () {\n            return this.section.pageSettings.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"origin\", {\n        /**\n         * Gets the `origin` of the page.\n         * @private\n         */\n        get: function () {\n            return this.section.pageSettings.origin;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"annotations\", {\n        /**\n         * Gets a collection of the `annotations` of the page- Read only.\n         * @private\n         */\n        get: function () {\n            if (this.annotationCollection == null) {\n                this.annotationCollection = new PdfAnnotationCollection(this);\n                // if (!this.Dictionary.ContainsKey(this.dictionaryProperties.annots)) {\n                this.dictionary.items.setValue(this.dictionaryProperties.annots, this.annotationCollection.element);\n                // }\n                this.annotationCollection.annotations = this.dictionary.items.getValue(this.dictionaryProperties.annots);\n            }\n            return this.annotationCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * `Initializes` a page.\n     * @private\n     */\n    PdfPage.prototype.initialize = function () {\n        this.dictionary.items.setValue(this.dictionaryProperties.type, new PdfName('Page'));\n        this.dictionary.pageBeginDrawTemplate = new SaveTemplateEventHandler(this);\n    };\n    /**\n     * Sets parent `section` to the page.\n     * @private\n     */\n    PdfPage.prototype.setSection = function (section) {\n        this.section = section;\n        this.dictionary.items.setValue(this.dictionaryProperties.parent, new PdfReferenceHolder(section));\n    };\n    /**\n     * `Resets the progress`.\n     * @private\n     */\n    PdfPage.prototype.resetProgress = function () {\n        this.isProgressOn = false;\n    };\n    /**\n     * Get the page size reduced by page margins and page template dimensions.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // add a pages to the document\n     * let page1 : PdfPage = document.pages.add();\n     * // create new standard font\n     * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // set brush\n     * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n     * //\n     * // set the specified point using `getClientSize` method\n     * let point : PointF = new PointF(page1.getClientSize().width - 200, page1.getClientSize().height - 200);\n     * // draw the text\n     * page1.graphics.drawString('Hello World', font, blackBrush, point);\n     * //\n     * // save the document\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPage.prototype.getClientSize = function () {\n        var returnValue = this.section.getActualBounds(this, true);\n        return new SizeF(returnValue.width, returnValue.height);\n    };\n    /**\n     * Helper method to retrive the instance of `PageBeginSave` event for header and footer elements.\n     * @private\n     */\n    PdfPage.prototype.pageBeginSave = function () {\n        var doc = this.document;\n        if (typeof doc !== undefined && doc != null) {\n            this.drawPageTemplates(doc);\n        }\n        if (this.beginSave != null && typeof this.beginSave !== 'undefined') {\n            this.beginSave(this);\n        }\n    };\n    /**\n     * Helper method to draw template elements.\n     * @private\n     */\n    PdfPage.prototype.drawPageTemplates = function (document) {\n        // Draw Background templates.\n        var hasBackTemplates = this.section.containsTemplates(document, this, false);\n        if (hasBackTemplates) {\n            var backLayer = new PdfPageLayer(this, false);\n            this.layers.insert(0, backLayer);\n            this.section.drawTemplates(this, backLayer, document, false);\n            if (backLayer.graphics !== null && typeof backLayer.graphics !== 'undefined') {\n                for (var i = 0; i < backLayer.graphics.automaticFields.automaticFields.length; i++) {\n                    var fieldInfo = backLayer.graphics.automaticFields.automaticFields[i];\n                    fieldInfo.field.performDraw(backLayer.graphics, fieldInfo.location, fieldInfo.scalingX, fieldInfo.scalingY);\n                }\n            }\n        }\n        // Draw Foreground templates.\n        var hasFrontTemplates = this.section.containsTemplates(document, this, true);\n        if (hasFrontTemplates) {\n            var frontLayer = new PdfPageLayer(this, false);\n            this.layers.add(frontLayer);\n            this.section.drawTemplates(this, frontLayer, document, true);\n        }\n    };\n    return PdfPage;\n}(PdfPageBase));\nexport { PdfPage };\n","/**\n * Provides data for `PageAddedEventHandler` event.\n * This event raises when adding the new PDF page to the PDF document.\n */\nvar PageAddedEventArgs = /** @class */ (function () {\n    function PageAddedEventArgs(page) {\n        if (typeof page !== 'undefined') {\n            this.pdfPage = page;\n        }\n        else {\n            this.pdfPage = null;\n        }\n    }\n    Object.defineProperty(PageAddedEventArgs.prototype, \"page\", {\n        /**\n         * Gets the `newly added page`.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PageAddedEventArgs;\n}());\nexport { PageAddedEventArgs };\n","/**\n * Represents the `collection of pages in a section`.\n * @private\n */\nvar PdfSectionPageCollection = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `PdfSectionPageCollection` class.\n     * @private\n     */\n    function PdfSectionPageCollection(section) {\n        //  Fields\n        /**\n         * @hidden\n         * @private\n         */\n        this.pdfSection = null;\n        if (section == null) {\n            throw Error('ArgumentNullException(\"section\")');\n        }\n        this.section = section;\n    }\n    Object.defineProperty(PdfSectionPageCollection.prototype, \"section\", {\n        // Properties\n        /**\n         * Gets the `PdfPage` at the specified index.\n         * @private\n         */\n        get: function () {\n            return this.pdfSection;\n        },\n        set: function (value) {\n            this.pdfSection = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Public Methods\n    /**\n     * `Determines` whether the specified page is within the collection.\n     * @private\n     */\n    PdfSectionPageCollection.prototype.contains = function (page) {\n        return this.section.contains(page);\n    };\n    /**\n     * `Removes` the specified page from collection.\n     * @private\n     */\n    PdfSectionPageCollection.prototype.remove = function (page) {\n        this.section.remove(page);\n    };\n    /**\n     * `Adds` a new page from collection.\n     * @private\n     */\n    PdfSectionPageCollection.prototype.add = function () {\n        return this.section.add();\n    };\n    return PdfSectionPageCollection;\n}());\nexport { PdfSectionPageCollection };\n","import { TemplateType } from './../pages/enum';\n// import { PdfStampCollection } from `./../Pages/PdfStampCollection`;\n/**\n * `PdfDocumentTemplate` class encapsulates a page template for all the pages in the document.\n * @private\n */\nvar PdfDocumentTemplate = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `PdfDocumentTemplate` class.\n     * @public\n     */\n    function PdfDocumentTemplate() {\n        //\n    }\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"left\", {\n        // private m_stamps : PdfStampCollection;\n        // Properties\n        /**\n         * `Left` page template object.\n         * @public\n         */\n        get: function () {\n            return this.leftTemplate;\n        },\n        set: function (value) {\n            this.leftTemplate = this.checkElement(value, TemplateType.Left);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"top\", {\n        /**\n         * `Top` page template object.\n         * @public\n         */\n        get: function () {\n            return this.topTemplate;\n        },\n        set: function (value) {\n            this.topTemplate = this.checkElement(value, TemplateType.Top);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"right\", {\n        /**\n         * `Right` page template object.\n         * @public\n         */\n        get: function () {\n            return this.rightTemplate;\n        },\n        set: function (value) {\n            this.rightTemplate = this.checkElement(value, TemplateType.Right);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"bottom\", {\n        /**\n         * `Bottom` page template object.\n         * @public\n         */\n        get: function () {\n            return this.bottomTemplate;\n        },\n        set: function (value) {\n            this.bottomTemplate = this.checkElement(value, TemplateType.Bottom);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"EvenLeft\", {\n        /**\n         * `EvenLeft` page template object.\n         * @public\n         */\n        get: function () {\n            return this.evenLeft;\n        },\n        set: function (value) {\n            this.evenLeft = this.checkElement(value, TemplateType.Left);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"EvenTop\", {\n        /**\n         * `EvenTop` page template object.\n         * @public\n         */\n        get: function () {\n            return this.evenTop;\n        },\n        set: function (value) {\n            this.evenTop = this.checkElement(value, TemplateType.Top);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"EvenRight\", {\n        /**\n         * `EvenRight` page template object.\n         * @public\n         */\n        get: function () {\n            return this.evenRight;\n        },\n        set: function (value) {\n            this.evenRight = this.checkElement(value, TemplateType.Right);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"EvenBottom\", {\n        /**\n         * `EvenBottom` page template object.\n         * @public\n         */\n        get: function () {\n            return this.evenBottom;\n        },\n        set: function (value) {\n            this.evenBottom = this.checkElement(value, TemplateType.Bottom);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"OddLeft\", {\n        /**\n         * `OddLeft` page template object.\n         * @public\n         */\n        get: function () {\n            return this.oddLeft;\n        },\n        set: function (value) {\n            this.oddLeft = this.checkElement(value, TemplateType.Left);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"OddTop\", {\n        /**\n         * `OddTop` page template object.\n         * @public\n         */\n        get: function () {\n            return this.oddTop;\n        },\n        set: function (value) {\n            this.oddTop = this.checkElement(value, TemplateType.Top);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"OddRight\", {\n        /**\n         * `OddRight` page template object.\n         * @public\n         */\n        get: function () {\n            return this.oddRight;\n        },\n        set: function (value) {\n            this.oddRight = this.checkElement(value, TemplateType.Right);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"OddBottom\", {\n        /**\n         * `OddBottom` page template object.\n         * @public\n         */\n        get: function () {\n            return this.oddBottom;\n        },\n        set: function (value) {\n            this.oddBottom = this.checkElement(value, TemplateType.Bottom);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Returns `left` template.\n     * @public\n     */\n    PdfDocumentTemplate.prototype.getLeft = function (page) {\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var template = null;\n        // if (page.Document.Pages != null) {\n        var even = this.isEven(page);\n        if (even) {\n            template = (this.EvenLeft != null) ? this.EvenLeft : this.left;\n        }\n        else {\n            template = (this.OddLeft != null) ? this.OddLeft : this.left;\n        }\n        // }\n        return template;\n    };\n    /**\n     * Returns `top` template.\n     * @public\n     */\n    PdfDocumentTemplate.prototype.getTop = function (page) {\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var template = null;\n        // if (page.Document.Pages != null) {\n        var even = this.isEven(page);\n        if (even) {\n            template = (this.EvenTop != null) ? this.EvenTop : this.top;\n        }\n        else {\n            template = (this.OddTop != null) ? this.OddTop : this.top;\n        }\n        // }\n        return template;\n    };\n    /**\n     * Returns `right` template.\n     * @public\n     */\n    PdfDocumentTemplate.prototype.getRight = function (page) {\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var template = null;\n        // if (page.Document.Pages != null) {\n        var even = this.isEven(page);\n        if (even) {\n            template = (this.EvenRight != null) ? this.EvenRight : this.right;\n        }\n        else {\n            template = (this.OddRight != null) ? this.OddRight : this.right;\n        }\n        // }\n        return template;\n    };\n    /**\n     * Returns `bottom` template.\n     * @public\n     */\n    PdfDocumentTemplate.prototype.getBottom = function (page) {\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var template = null;\n        // if (page.Document.Pages != null) {\n        var even = this.isEven(page);\n        if (even) {\n            template = (this.EvenBottom != null) ? this.EvenBottom : this.bottom;\n        }\n        else {\n            template = (this.OddBottom != null) ? this.OddBottom : this.bottom;\n        }\n        // }\n        return template;\n    };\n    /**\n     * Checks whether the page `is even`.\n     * @private\n     */\n    PdfDocumentTemplate.prototype.isEven = function (page) {\n        var pages = page.section.document.pages;\n        var index = 0;\n        if (pages.pageCollectionIndex.containsKey(page)) {\n            index = pages.pageCollectionIndex.getValue(page) + 1;\n        }\n        else {\n            index = pages.indexOf(page) + 1;\n        }\n        var even = ((index % 2) === 0);\n        return even;\n    };\n    /**\n     * Checks a `template element`.\n     * @private\n     */\n    PdfDocumentTemplate.prototype.checkElement = function (templateElement, type) {\n        if (templateElement != null) {\n            if ((typeof templateElement.type !== 'undefined') && (templateElement.type !== TemplateType.None)) {\n                throw new Error('NotSupportedException:Can not reassign the template element. Please, create new one.');\n            }\n            templateElement.type = type;\n        }\n        return templateElement;\n    };\n    return PdfDocumentTemplate;\n}());\nexport { PdfDocumentTemplate };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfSectionTemplate.ts class for EJ2-PDF\n */\nimport { PdfDocumentTemplate } from './../document/pdf-document-template';\n/**\n * Represents a `page template` for all the pages in the section.\n */\nvar PdfSectionTemplate = /** @class */ (function (_super) {\n    __extends(PdfSectionTemplate, _super);\n    // Constructors\n    /**\n     * `Creates a new object`.\n     * @private\n     */\n    function PdfSectionTemplate() {\n        var _this = _super.call(this) || this;\n        _this.leftValue = _this.topValue = _this.rightValue = _this.bottomValue = _this.stampValue = true;\n        return _this;\n    }\n    Object.defineProperty(PdfSectionTemplate.prototype, \"applyDocumentLeftTemplate\", {\n        // Properties\n        /**\n         * Gets or sets value indicating whether parent `Left page template should be used or not`.\n         * @private\n         */\n        get: function () {\n            return this.leftValue;\n        },\n        set: function (value) {\n            this.leftValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionTemplate.prototype, \"applyDocumentTopTemplate\", {\n        /**\n         * Gets or sets value indicating whether parent `Top page template should be used or not`.\n         * @private\n         */\n        get: function () {\n            return this.topValue;\n        },\n        set: function (value) {\n            this.topValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionTemplate.prototype, \"applyDocumentRightTemplate\", {\n        /**\n         * Gets or sets value indicating whether parent `Right page template should be used or not`.\n         * @private\n         */\n        get: function () {\n            return this.rightValue;\n        },\n        set: function (value) {\n            this.rightValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionTemplate.prototype, \"applyDocumentBottomTemplate\", {\n        /**\n         * Gets or sets value indicating whether parent `Bottom page template should be used or not`.\n         * @private\n         */\n        get: function () {\n            return this.bottomValue;\n        },\n        set: function (value) {\n            this.bottomValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionTemplate.prototype, \"applyDocumentStamps\", {\n        /**\n         * Gets or sets value indicating whether the `stamp value` is true or not.\n         * @private\n         */\n        get: function () {\n            return this.stampValue;\n        },\n        set: function (value) {\n            this.stampValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfSectionTemplate;\n}(PdfDocumentTemplate));\nexport { PdfSectionTemplate };\n","import { PdfPage } from './pdf-page';\nimport { PageAddedEventArgs } from './page-added-event-arguments';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { SaveSectionEventHandler } from './../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfSectionCollection } from './pdf-section-collection';\nimport { PdfSectionPageCollection } from './pdf-section-page-collection';\nimport { RectangleF } from './../drawing/pdf-drawing';\nimport { PdfSectionTemplate } from './pdf-section-templates';\n/**\n * Represents a `section` entity. A section it's a set of the pages with similar page settings.\n */\nvar PdfSection = /** @class */ (function () {\n    function PdfSection(document, pageSettings) {\n        //Fields\n        //public PageAdded() : PageAddedEventArgs.PageAddedEventHandler = new PageAddedEventArgs.PageAddedEventHandler(Object,args)\n        /**\n         * @hidden\n         * @private\n         */\n        this.pageAdded = new PageAddedEventArgs();\n        /**\n         * @hidden\n         * @private\n         */\n        this.pdfPages = [];\n        /**\n         * @hidden\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        this.pdfDocument = document;\n        if (typeof pageSettings === 'undefined') {\n            this.settings = document.pageSettings.clone();\n            this.initialSettings = this.settings.clone();\n        }\n        else {\n            this.settings = pageSettings.clone();\n            this.initialSettings = this.settings.clone();\n        }\n        this.initialize();\n    }\n    Object.defineProperty(PdfSection.prototype, \"parent\", {\n        //Property\n        /**\n         * Gets or sets the `parent`.\n         * @private\n         */\n        get: function () {\n            return this.sectionCollection;\n        },\n        set: function (value) {\n            this.sectionCollection = value;\n            this.section.items.setValue(this.dictionaryProperties.parent, new PdfReferenceHolder(value));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"parentDocument\", {\n        /**\n         * Gets the `parent document`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"pageSettings\", {\n        /**\n         * Gets or sets the `page settings` of the section.\n         * @private\n         */\n        get: function () {\n            return this.settings;\n        },\n        set: function (value) {\n            if (value != null) {\n                this.settings = value;\n            }\n            else {\n                throw Error('Value can not be null.');\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"element\", {\n        /**\n         * Gets the wrapped `element`.\n         * @private\n         */\n        get: function () {\n            return this.section;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"count\", {\n        /**\n         * Gets the `count` of the pages in the section.\n         * @private\n         */\n        get: function () {\n            return this.pagesReferences.count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"template\", {\n        /**\n         * Gets or sets a `template` for the pages in the section.\n         * @private\n         */\n        get: function () {\n            if (this.pageTemplate == null) {\n                this.pageTemplate = new PdfSectionTemplate();\n            }\n            return this.pageTemplate;\n        },\n        set: function (value) {\n            this.pageTemplate = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"document\", {\n        /**\n         * Gets the `document`.\n         * @private\n         */\n        get: function () {\n            return this.sectionCollection.document;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"pages\", {\n        /**\n         * Gets the collection of `pages` in a section (Read only)\n         * @private\n         */\n        get: function () {\n            if (this.pagesCollection == null || typeof this.pagesCollection === 'undefined') {\n                this.pagesCollection = new PdfSectionPageCollection(this);\n            }\n            return this.pagesCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //methods\n    /**\n     * `Return the page collection` of current section.\n     * @private\n     */\n    PdfSection.prototype.getPages = function () {\n        return this.pdfPages;\n    };\n    /**\n     * `Translates` point into native coordinates of the page.\n     * @private\n     */\n    PdfSection.prototype.pointToNativePdf = function (page, point) {\n        var bounds = this.getActualBounds(page, true);\n        point.x += bounds.x;\n        point.y = this.pageSettings.height - (point.y);\n        return point;\n    };\n    /**\n     * Sets the page setting of the current section.\n     * @public\n     * @param settings Instance of `PdfPageSettings`\n     */\n    PdfSection.prototype.setPageSettings = function (settings) {\n        this.settings = settings;\n        this.state.orientation = settings.orientation;\n        this.state.rotate = settings.rotate;\n        this.state.size = settings.size;\n        this.state.origin = settings.origin;\n    };\n    /**\n     * `Initializes` the object.\n     * @private\n     */\n    PdfSection.prototype.initialize = function () {\n        this.pagesReferences = new PdfArray();\n        this.section = new PdfDictionary();\n        this.state = new PageSettingsState(this.pdfDocument);\n        this.section.sectionBeginSave = new SaveSectionEventHandler(this, this.state);\n        this.pageCount = new PdfNumber(0);\n        this.section.items.setValue(this.dictionaryProperties.count, this.pageCount);\n        this.section.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.pages));\n        this.section.items.setValue(this.dictionaryProperties.kids, this.pagesReferences);\n    };\n    /**\n     * Checks whether any template should be printed on this layer.\n     * @private\n     * @param document The parent document.\n     * @param page The parent page.\n     * @param foreground Layer z-order.\n     * @returns True - if some content should be printed on the layer, False otherwise.\n     */\n    PdfSection.prototype.containsTemplates = function (document, page, foreground) {\n        var documentHeaders = this.getDocumentTemplates(document, page, foreground);\n        var sectionTemplates = this.getSectionTemplates(page, foreground);\n        return (documentHeaders.length > 0 || sectionTemplates.length > 0);\n    };\n    /**\n     * Returns array of the document templates.\n     * @private\n     * @param document The parent document.\n     * @param page The parent page.\n     * @param foreground If true - return foreground templates, if false - return background templates.\n     * @returns Returns array of the document templates.\n     */\n    /* tslint:disable */\n    PdfSection.prototype.getDocumentTemplates = function (document, page, foreground) {\n        var templates = [];\n        if (this.template.applyDocumentTopTemplate && document.template.getTop(page) != null) {\n            if ((!(document.template.getTop(page).foreground || foreground)) || (document.template.getTop(page).foreground && foreground)) {\n                templates.push(document.template.getTop(page));\n            }\n        }\n        if (this.template.applyDocumentBottomTemplate && document.template.getBottom(page) != null) {\n            if ((!(document.template.getBottom(page).foreground || foreground)) || (document.template.getBottom(page).foreground && foreground)) {\n                templates.push(document.template.getBottom(page));\n            }\n        }\n        if (this.template.applyDocumentLeftTemplate && document.template.getLeft(page) != null) {\n            if ((!(document.template.getLeft(page).foreground || foreground)) || (document.template.getLeft(page).foreground && foreground)) {\n                templates.push(document.template.getLeft(page));\n            }\n        }\n        if (this.template.applyDocumentRightTemplate && document.template.getRight(page) != null) {\n            if ((!(document.template.getRight(page).foreground || foreground)) || (document.template.getRight(page).foreground && foreground)) {\n                templates.push(document.template.getRight(page));\n            }\n        }\n        return templates;\n    };\n    /**\n     * Returns array of the section templates.\n     * @private\n     * @param page The parent page.\n     * @param foreground If true - return foreground templates, if false - return background templates.\n     * @returns Returns array of the section templates.\n     */\n    /* tslint:disable */\n    PdfSection.prototype.getSectionTemplates = function (page, foreground) {\n        var templates = [];\n        if (this.template.getTop(page) != null) {\n            var pageTemplate = this.template.getTop(page);\n            if ((!(pageTemplate.foreground || foreground)) || (pageTemplate.foreground && foreground)) {\n                templates.push(pageTemplate);\n            }\n        }\n        if (this.template.getBottom(page) != null) {\n            var pageTemplate = this.template.getBottom(page);\n            if ((!(pageTemplate.foreground || foreground)) || (pageTemplate.foreground && foreground)) {\n                templates.push(pageTemplate);\n            }\n        }\n        if (this.template.getLeft(page) != null) {\n            var pageTemplate = this.template.getLeft(page);\n            if ((!(pageTemplate.foreground || foreground)) || (pageTemplate.foreground && foreground)) {\n                templates.push(pageTemplate);\n            }\n        }\n        if (this.template.getRight(page) != null) {\n            var pageTemplate = this.template.getRight(page);\n            if ((!(pageTemplate.foreground || foreground)) || (pageTemplate.foreground && foreground)) {\n                templates.push(pageTemplate);\n            }\n        }\n        return templates;\n    };\n    /* tslint:enable */\n    /**\n     * `Adds` the specified page.\n     * @private\n     */\n    PdfSection.prototype.add = function (page) {\n        if (typeof page === 'undefined') {\n            var page_1 = new PdfPage();\n            this.add(page_1);\n            return page_1;\n        }\n        else {\n            var r = this.checkPresence(page);\n            this.pdfPages.push(page);\n            this.pagesReferences.add(r);\n            page.setSection(this);\n            page.resetProgress();\n            this.pageAddedMethod(page);\n        }\n    };\n    /**\n     * `Checks the presence`.\n     * @private\n     */\n    PdfSection.prototype.checkPresence = function (page) {\n        var rh = new PdfReferenceHolder(page);\n        var contains = false;\n        var sc = this.parent;\n        for (var index = 0; index < sc.section.length; index++) {\n            var section = sc.section[index];\n            contains = contains || section.contains(page);\n        }\n        return rh;\n    };\n    /**\n     * `Determines` whether the page in within the section.\n     * @private\n     */\n    PdfSection.prototype.contains = function (page) {\n        var index = this.indexOf(page);\n        return (0 <= index);\n    };\n    /**\n     * Get the `index of` the page.\n     * @private\n     */\n    PdfSection.prototype.indexOf = function (page) {\n        for (var index = 0; index < this.pdfPages.length; index++) {\n            if (this.pdfPages[index] === page) {\n                return this.pdfPages.indexOf(page);\n            }\n        }\n        var r = new PdfReferenceHolder(page);\n        return this.pagesReferences.indexOf(r);\n    };\n    /**\n     * Call two event's methods.\n     * @hidden\n     * @private\n     */\n    PdfSection.prototype.pageAddedMethod = function (page) {\n        //Create event's arguments\n        var args = new PageAddedEventArgs(page);\n        this.onPageAdded(args);\n        var parent = this.parent;\n        parent.document.pages.onPageAdded(args);\n        this.pageCount.intValue = this.count;\n    };\n    /**\n     * Called when the page has been added.\n     * @hidden\n     * @private\n     */\n    PdfSection.prototype.onPageAdded = function (args) {\n        //\n    };\n    PdfSection.prototype.getActualBounds = function (arg1, arg2, arg3) {\n        if (arg1 instanceof PdfPage && typeof arg2 === 'boolean') {\n            var result = void 0;\n            var document_1 = this.parent.document;\n            result = this.getActualBounds(document_1, arg1, arg2);\n            return result;\n        }\n        else {\n            arg1 = arg1;\n            arg2 = arg2;\n            arg3 = arg3;\n            var bounds = new RectangleF(0, 0, 0, 0);\n            bounds.height = (arg3) ? this.pageSettings.size.height : this.pageSettings.getActualSize().height;\n            bounds.width = (arg3) ? this.pageSettings.size.width : this.pageSettings.getActualSize().width;\n            var left = this.getLeftIndentWidth(arg1, arg2, arg3);\n            var top_1 = this.getTopIndentHeight(arg1, arg2, arg3);\n            var right = this.getRightIndentWidth(arg1, arg2, arg3);\n            var bottom = this.getBottomIndentHeight(arg1, arg2, arg3);\n            bounds.x += left;\n            bounds.y += top_1;\n            bounds.width -= (left + right);\n            bounds.height -= (top_1 + bottom);\n            return bounds;\n        }\n    };\n    /**\n     * Calculates width of the `left indent`.\n     * @private\n     */\n    PdfSection.prototype.getLeftIndentWidth = function (document, page, includeMargins) {\n        if (document == null) {\n            throw new Error('ArgumentNullException:document');\n        }\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var value = (includeMargins) ? this.pageSettings.margins.left : 0;\n        var templateWidth = (this.template.getLeft(page) != null) ? this.template.getLeft(page).width : 0;\n        var docTemplateWidth = (document.template.getLeft(page) != null) ? document.template.getLeft(page).width : 0;\n        value += (this.template.applyDocumentLeftTemplate) ? Math.max(templateWidth, docTemplateWidth) : templateWidth;\n        return value;\n    };\n    /**\n     * Calculates `Height` of the top indent.\n     * @private\n     */\n    PdfSection.prototype.getTopIndentHeight = function (document, page, includeMargins) {\n        if (document == null) {\n            throw new Error('ArgumentNullException:document');\n        }\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var value = (includeMargins) ? this.pageSettings.margins.top : 0;\n        var templateHeight = (this.template.getTop(page) != null) ? this.template.getTop(page).height : 0;\n        var docTemplateHeight = (document.template.getTop(page) != null) ? document.template.getTop(page).height : 0;\n        value += (this.template.applyDocumentTopTemplate) ? Math.max(templateHeight, docTemplateHeight) : templateHeight;\n        return value;\n    };\n    /**\n     * Calculates `width` of the right indent.\n     * @private\n     */\n    PdfSection.prototype.getRightIndentWidth = function (document, page, includeMargins) {\n        if (document == null) {\n            throw new Error('ArgumentNullException:document');\n        }\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var value = (includeMargins) ? this.pageSettings.margins.right : 0;\n        var templateWidth = (this.template.getRight(page) != null) ? this.template.getRight(page).width : 0;\n        var docTemplateWidth = (document.template.getRight(page) != null) ? document.template.getRight(page).width : 0;\n        value += (this.template.applyDocumentRightTemplate) ? Math.max(templateWidth, docTemplateWidth) : templateWidth;\n        return value;\n    };\n    /**\n     * Calculates `Height` of the bottom indent.\n     * @private\n     */\n    PdfSection.prototype.getBottomIndentHeight = function (document, page, includeMargins) {\n        if (document == null) {\n            throw new Error('ArgumentNullException:document');\n        }\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var value = (includeMargins) ? this.pageSettings.margins.bottom : 0;\n        var templateHeight = (this.template.getBottom(page) != null) ? this.template.getBottom(page).height : 0;\n        var docTemplateHeight = (document.template.getBottom(page) != null) ? document.template.getBottom(page).height : 0;\n        value += (this.template.applyDocumentBottomTemplate) ? Math.max(templateHeight, docTemplateHeight) : templateHeight;\n        return value;\n    };\n    /**\n     * `Removes` the page from the section.\n     * @private\n     */\n    PdfSection.prototype.remove = function (page) {\n        if (page == null) {\n            throw Error('ArgumentNullException(\"page\")');\n        }\n        var index = this.pdfPages.indexOf(page);\n        this.pagesReferences.removeAt(index);\n        var temproaryPages = [];\n        for (var j = 0; j < index; j++) {\n            temproaryPages.push(this.pdfPages[j]);\n        }\n        for (var j = index + 1; j < this.pdfPages.length; j++) {\n            temproaryPages.push(this.pdfPages[j]);\n        }\n        this.pdfPages = temproaryPages;\n    };\n    /**\n     * In fills dictionary by the data from `Page settings`.\n     * @private\n     */\n    PdfSection.prototype.applyPageSettings = function (container, parentSettings, state) {\n        var bounds = new RectangleF(state.origin, state.size);\n        container.items.setValue(this.dictionaryProperties.mediaBox, PdfArray.fromRectangle(bounds));\n        var rotate = 0;\n        rotate = PdfSectionCollection.rotateFactor * state.rotate;\n        var angle = new PdfNumber(rotate);\n        container.items.setValue(this.dictionaryProperties.rotate, angle);\n    };\n    /**\n     * Catches the Save event of the dictionary.\n     * @hidden\n     * @private\n     */\n    PdfSection.prototype.beginSave = function (state, writer) {\n        var doc = writer.document;\n        this.applyPageSettings(this.section, doc.pageSettings, state);\n    };\n    /**\n     * Draws page templates on the page.\n     * @private\n     */\n    PdfSection.prototype.drawTemplates = function (page, layer, document, foreground) {\n        var documentHeaders = this.getDocumentTemplates(document, page, foreground);\n        var sectionHeaders = this.getSectionTemplates(page, foreground);\n        this.drawTemplatesHelper(layer, document, documentHeaders);\n        this.drawTemplatesHelper(layer, document, sectionHeaders);\n    };\n    /**\n     * Draws page templates on the page.\n     * @private\n     */\n    PdfSection.prototype.drawTemplatesHelper = function (layer, document, templates) {\n        if (templates != null && templates.length > 0) {\n            var len = templates.length;\n            for (var i = 0; i < len; i++) {\n                var template = templates[i];\n                template.draw(layer, document);\n            }\n        }\n    };\n    return PdfSection;\n}());\nexport { PdfSection };\nvar PageSettingsState = /** @class */ (function () {\n    //Public Constructor\n    /**\n     * New instance to store the `PageSettings`.\n     * @private\n     */\n    function PageSettingsState(document) {\n        this.pageOrientation = document.pageSettings.orientation;\n        this.pageRotate = document.pageSettings.rotate;\n        this.pageSize = document.pageSettings.size;\n        this.pageOrigin = document.pageSettings.origin;\n    }\n    Object.defineProperty(PageSettingsState.prototype, \"orientation\", {\n        //public Properties\n        /**\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.pageOrientation;\n        },\n        set: function (value) {\n            this.pageOrientation = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PageSettingsState.prototype, \"rotate\", {\n        /**\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.pageRotate;\n        },\n        set: function (value) {\n            this.pageRotate = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PageSettingsState.prototype, \"size\", {\n        /**\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.pageSize;\n        },\n        set: function (value) {\n            this.pageSize = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PageSettingsState.prototype, \"origin\", {\n        /**\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.pageOrigin;\n        },\n        set: function (value) {\n            this.pageOrigin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PageSettingsState;\n}());\nexport { PageSettingsState };\n","import { PdfNumber } from './../primitives/pdf-number';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfDictionary, SaveSectionCollectionEventHandler } from './../primitives/pdf-dictionary';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { RectangleF, PointF } from './../drawing/pdf-drawing';\nimport { PdfSection } from './pdf-section';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * Represents the `collection of the sections`.\n * @private\n */\nvar PdfSectionCollection = /** @class */ (function () {\n    //constructor\n    /**\n     * Initializes a new instance of the `PdfSectionCollection` class.\n     * @private\n     */\n    function PdfSectionCollection(document) {\n        /**\n         * @hidden\n         * @private\n         */\n        this.sections = [];\n        /**\n         * @hidden\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        // if (document === null) {\n        //     throw new Error('ArgumentNullException : document');\n        // }\n        this.pdfDocument = document.clone();\n        this.initialize();\n    }\n    Object.defineProperty(PdfSectionCollection.prototype, \"section\", {\n        //Properties\n        /**\n         * Gets the `Section` collection.\n         */\n        get: function () {\n            return this.sections;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionCollection.prototype, \"document\", {\n        /**\n         * Gets a parent `document`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionCollection.prototype, \"count\", {\n        /**\n         * Gets the `number of sections` in a document.\n         * @private\n         */\n        get: function () {\n            return this.sections.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionCollection.prototype, \"element\", {\n        /**\n         * Gets the wrapped `element`.\n         * @private\n         */\n        get: function () {\n            return this.pages;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Methods\n    /**\n     * `Initializes the object`.\n     * @private\n     */\n    PdfSectionCollection.prototype.initialize = function () {\n        this.sectionCount = new PdfNumber(0);\n        this.sectionCollection = new PdfArray();\n        this.pages = new PdfDictionary();\n        this.pages.beginSave = new SaveSectionCollectionEventHandler(this);\n        this.pages.items.setValue(this.dictionaryProperties.type, new PdfName('Pages'));\n        this.pages.items.setValue(this.dictionaryProperties.kids, this.sectionCollection);\n        this.pages.items.setValue(this.dictionaryProperties.count, this.sectionCount);\n        this.pages.items.setValue(this.dictionaryProperties.resources, new PdfDictionary());\n        this.setPageSettings(this.pages, this.pdfDocument.pageSettings);\n    };\n    /**\n     * Initializes a new instance of the `PdfSectionCollection` class.\n     * @private\n     */\n    PdfSectionCollection.prototype.pdfSectionCollection = function (index) {\n        if (index < 0 || index >= this.count) {\n            throw new Error('IndexOutOfRangeException()');\n        }\n        return this.sections[index];\n    };\n    /**\n     * In fills dictionary by the data from `Page settings`.\n     * @private\n     */\n    PdfSectionCollection.prototype.setPageSettings = function (container, pageSettings) {\n        // if (container === null) {\n        //     throw new Error('ArgumentNullException : container');\n        // }\n        // if (pageSettings === null) {\n        //     throw new Error('ArgumentNullException : pageSettings');\n        // }\n        var bounds = new RectangleF(new PointF(), pageSettings.size);\n        container.items.setValue(this.dictionaryProperties.mediaBox, PdfArray.fromRectangle(bounds));\n    };\n    /**\n     * `Adds` the specified section.\n     * @private\n     */\n    PdfSectionCollection.prototype.add = function (section) {\n        if (typeof section === 'undefined') {\n            var section_1 = new PdfSection(this.pdfDocument);\n            this.add(section_1);\n            return section_1;\n        }\n        else {\n            // if (section === null) {\n            //     throw new Error('ArgumentNullException : section');\n            // }\n            var r = this.checkSection(section);\n            this.sections.push(section);\n            section.parent = this;\n            this.sectionCollection.add(r);\n            return this.sections.indexOf(section);\n        }\n    };\n    /**\n     * `Checks` if the section is within the collection.\n     * @private\n     */\n    PdfSectionCollection.prototype.checkSection = function (section) {\n        var r = new PdfReferenceHolder(section);\n        var contains = this.sectionCollection.contains(r);\n        // if (contains) {\n        //     throw new Error('ArgumentException : The object can not be added twice to the collection,section');\n        // }\n        return r;\n    };\n    /**\n     * Catches the Save event of the dictionary to `count the pages`.\n     * @private\n     */\n    PdfSectionCollection.prototype.countPages = function () {\n        var count = 0;\n        this.sections.forEach(function (n) { return (count += n.count); });\n        return count;\n    };\n    /**\n     * Catches the Save event of the dictionary to `count the pages`.\n     * @hidden\n     * @private\n     */\n    PdfSectionCollection.prototype.beginSave = function () {\n        this.sectionCount.intValue = this.countPages();\n    };\n    //Fields\n    /**\n     * Rotate factor for page `rotation`.\n     * @default 90\n     * @private\n     */\n    PdfSectionCollection.rotateFactor = 90;\n    return PdfSectionCollection;\n}());\nexport { PdfSectionCollection };\n","import { PdfPage } from './pdf-page';\nimport { Dictionary } from './../collections/dictionary';\n/**\n * Represents a virtual collection of all the pages in the document.\n * @private\n */\nvar PdfDocumentPageCollection = /** @class */ (function () {\n    //constructor\n    /**\n     * Initializes a new instance of the `PdfPageCollection` class.\n     * @private\n     */\n    function PdfDocumentPageCollection(document) {\n        /**\n         * It holds the page collection with the `index`.\n         * @private\n         */\n        this.pdfPageCollectionIndex = new Dictionary();\n        this.document = document;\n    }\n    Object.defineProperty(PdfDocumentPageCollection.prototype, \"count\", {\n        //Property\n        /**\n         * Gets the total `number of the pages`.\n         * @private\n         */\n        get: function () {\n            return this.countPages();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentPageCollection.prototype, \"pageCollectionIndex\", {\n        /**\n         * Gets a `page index` from the document.\n         * @private\n         */\n        get: function () {\n            return this.pdfPageCollectionIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfDocumentPageCollection.prototype.add = function (page) {\n        if (typeof page === 'undefined') {\n            var page_1 = new PdfPage();\n            this.add(page_1);\n            return page_1;\n        }\n        else {\n            var section = this.getLastSection();\n            section.add(page);\n        }\n    };\n    /**\n     * Returns `last section` in the document.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.getLastSection = function () {\n        var sc = this.document.sections;\n        if (sc.section.length === 0) {\n            sc.add();\n        }\n        var section = sc.section[sc.section.length - 1];\n        return section;\n    };\n    /**\n     * Called when `new page has been added`.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.onPageAdded = function (args) {\n        // if (PageAdded !== null)\n        // {\n        //     PageAdded(this, args);\n        // }\n    };\n    /**\n     * Gets the `total number of pages`.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.countPages = function () {\n        var sc = this.document.sections;\n        var count = 0;\n        for (var index = 0; index < sc.section.length; index++) {\n            count += sc.section[index].count;\n        }\n        return count;\n    };\n    /**\n     * Gets the `page object` from page index.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.getPageByIndex = function (index) {\n        return this.getPage(index);\n    };\n    /**\n     * Gets a page by its `index` in the document.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.getPage = function (index) {\n        if ((index < 0) || (index >= this.count)) {\n            throw Error('ArgumentOutOfRangeException(\"index\", \"Value can not be less 0\")');\n        }\n        var page = null;\n        var sectionStartIndex = 0;\n        var sectionCount = 0;\n        var pageIndex = 0;\n        var length = this.document.sections.count;\n        for (var i = 0; i < length; i++) {\n            var section = this.document.sections.section[i];\n            sectionCount = section.count;\n            pageIndex = index - sectionStartIndex;\n            // We found a section containing the page.\n            if ((index >= sectionStartIndex && pageIndex < sectionCount)) {\n                page = section.getPages()[pageIndex];\n                break;\n            }\n            sectionStartIndex += sectionCount;\n        }\n        return page;\n    };\n    /**\n     * Gets the `index of` the page in the document.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.indexOf = function (page) {\n        var index = -1;\n        if (page == null) {\n            throw new Error('ArgumentNullException: page');\n        }\n        else {\n            var numPages = 0;\n            for (var i = 0, len = this.document.sections.count; i < len; i++) {\n                var section = this.document.sections.pdfSectionCollection(i);\n                index = section.indexOf(page);\n                if (index >= 0) {\n                    index += numPages;\n                    break;\n                }\n                else {\n                    index = -1;\n                }\n                numPages += section.count;\n            }\n        }\n        return index;\n    };\n    /**\n     * `Removes` the specified page.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.remove = function (page) {\n        if (page == null) {\n            throw Error('ArgumentNullException(\"page\")');\n        }\n        var section = null;\n        var len;\n        for (var i = 0, len_1 = this.document.sections.count; i < len_1; i++) {\n            section = this.document.sections.pdfSectionCollection(i);\n            if (section.pages.contains(page)) {\n                section.pages.remove(page);\n                break;\n            }\n        }\n        return section;\n    };\n    return PdfDocumentPageCollection;\n}());\nexport { PdfDocumentPageCollection };\n","/**\n * PdfCacheCollection.ts class for EJ2-PDF\n */\nimport { Dictionary } from './../collections/dictionary';\n/**\n * `Collection of the cached objects`.\n * @private\n */\nvar PdfCacheCollection = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `PdfCacheCollection` class.\n     * @private\n     */\n    function PdfCacheCollection() {\n        this.referenceObjects = [];\n        this.pdfFontCollection = new Dictionary();\n    }\n    // Public methods\n    /**\n     * `Searches` for the similar cached object. If is not found - adds the object to the cache.\n     * @private\n     */\n    PdfCacheCollection.prototype.search = function (obj) {\n        var result = null;\n        var group = this.getGroup(obj);\n        if (group == null) {\n            group = this.createNewGroup();\n        }\n        else if (group.length > 0) {\n            result = group[0];\n        }\n        group.push(obj);\n        return result;\n    };\n    // Implementation\n    /**\n     * `Creates` a new group.\n     * @private\n     */\n    PdfCacheCollection.prototype.createNewGroup = function () {\n        var group = [];\n        this.referenceObjects.push(group);\n        return group;\n    };\n    /**\n     * `Find and Return` a group.\n     * @private\n     */\n    PdfCacheCollection.prototype.getGroup = function (result) {\n        var group = null;\n        if (result !== null) {\n            var len = this.referenceObjects.length;\n            for (var i = 0; i < len; i++) {\n                if (this.referenceObjects.length > 0) {\n                    var tGroup = this.referenceObjects[i];\n                    if (tGroup.length > 0) {\n                        var representative = tGroup[0];\n                        if (result.equalsTo(representative)) {\n                            group = tGroup;\n                            break;\n                        }\n                    }\n                    else {\n                        this.removeGroup(tGroup);\n                    }\n                }\n                len = this.referenceObjects.length;\n            }\n        }\n        return group;\n    };\n    /**\n     * Remove a group from the storage.\n     */\n    PdfCacheCollection.prototype.removeGroup = function (group) {\n        if (group !== null) {\n            var index = this.referenceObjects.indexOf(group);\n            this.referenceObjects.slice(index, index + 1);\n        }\n    };\n    PdfCacheCollection.prototype.destroy = function () {\n        this.pdfFontCollection = undefined;\n        this.referenceObjects = undefined;\n    };\n    return PdfCacheCollection;\n}());\nexport { PdfCacheCollection };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfWriter } from './../input-output/pdf-writer';\nimport { PdfMainObjectCollection } from './../input-output/pdf-main-object-collection';\nimport { PdfDocumentBase } from './pdf-document-base';\nimport { PdfCrossTable } from './../input-output/pdf-cross-table';\nimport { PdfCatalog } from './pdf-catalog';\nimport { PdfPageSettings } from './../pages/pdf-page-settings';\nimport { PdfSectionCollection } from './../pages/pdf-section-collection';\nimport { PdfDocumentPageCollection } from './../pages/pdf-document-page-collection';\nimport { PdfCacheCollection } from './../general/pdf-cache-collection';\nimport { PdfColorSpace } from './../graphics/enum';\nimport { PdfDocumentTemplate } from './pdf-document-template';\nimport { PdfFontFamily } from './../graphics/fonts/enum';\nimport { PdfStandardFont } from './../graphics/fonts/pdf-standard-font';\n/**\n * Represents a PDF document and can be used to create a new PDF document from the scratch.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * // set the font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfDocument = /** @class */ (function (_super) {\n    __extends(PdfDocument, _super);\n    function PdfDocument(isMerging) {\n        var _this = _super.call(this) || this;\n        /**\n         * Default `margin` value.\n         * @default 40.0\n         * @private\n         */\n        _this.defaultMargin = 40.0;\n        /**\n         * Internal variable to store instance of `StreamWriter` classes..\n         * @default null\n         * @private\n         */\n        _this.streamWriter = null;\n        _this.document = _this;\n        var isMerge = false;\n        if (typeof isMerging === 'undefined') {\n            PdfDocument.cacheCollection = new PdfCacheCollection();\n            isMerge = false;\n        }\n        else {\n            isMerge = isMerging;\n        }\n        var objects = new PdfMainObjectCollection();\n        _this.setMainObjectCollection(objects);\n        var crossTable = new PdfCrossTable();\n        crossTable.isMerging = isMerge;\n        crossTable.document = _this;\n        _this.setCrossTable(crossTable);\n        var catalog = new PdfCatalog();\n        _this.setCatalog(catalog);\n        objects.add(catalog);\n        catalog.position = -1;\n        _this.sectionCollection = new PdfSectionCollection(_this);\n        _this.documentPageCollection = new PdfDocumentPageCollection(_this);\n        catalog.pages = _this.sectionCollection;\n        return _this;\n    }\n    Object.defineProperty(PdfDocument, \"defaultFont\", {\n        //Properties\n        /**\n         * Gets the `default font`. It is used for complex objects when font is not explicitly defined.\n         * @private\n         */\n        get: function () {\n            if (this.defaultStandardFont == null) {\n                this.defaultStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 8);\n            }\n            return this.defaultStandardFont;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"sections\", {\n        /**\n         * Gets the collection of the `sections` in the document.\n         * @private\n         */\n        get: function () {\n            return this.sectionCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"pageSettings\", {\n        /**\n         * Gets the document's page setting.\n         * @public\n         */\n        get: function () {\n            if (this.settings == null) {\n                this.settings = new PdfPageSettings(this.defaultMargin);\n            }\n            return this.settings;\n        },\n        /**\n         * Sets the document's page setting.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         *\n         * // sets the right margin of the page\n         * document.pageSettings.margins.right = 0;\n         * // set the page size.\n         * document.pageSettings.size = new SizeF(500, 500);\n         * // change the page orientation to landscape\n         * document.pageSettings.orientation = PdfPageOrientation.Landscape;\n         * // apply 90 degree rotation on the page\n         * document.pageSettings.rotate = PdfPageRotateAngle.RotateAngle90;\n         *\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * // set the specified Point\n         * let point : PointF = new PointF(page1.getClientSize().width - 200, page1.getClientSize().height - 200);\n         * // draw the text\n         * page1.graphics.drawString('Hello World', font, blackBrush, point);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this.settings = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"pages\", {\n        /**\n         * Represents the collection of pages in the PDF document.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * //\n         * // get the collection of pages in the document\n         * let pageCollection : PdfDocumentPageCollection  = document.pages;\n         * //\n         * // add pages\n         * let page1 : PdfPage = pageCollection.add();\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.documentPageCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument, \"cache\", {\n        /**\n         * Gets collection of the `cached objects`.\n         * @private\n         */\n        get: function () {\n            if (typeof PdfDocument.cacheCollection === 'undefined' || PdfDocument.cacheCollection == null) {\n                return new PdfCacheCollection();\n            }\n            return PdfDocument.cacheCollection;\n        },\n        /**\n         * Sets collection of the `cached objects`.\n         * @private\n         */\n        set: function (value) {\n            this.cacheCollection = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument, \"enableCache\", {\n        /**\n         * Gets the value of enable cache.\n         * @private\n         */\n        get: function () {\n            return this.isCacheEnabled;\n        },\n        /**\n         * Sets thie value of enable cache.\n         * @private\n         */\n        set: function (value) {\n            this.isCacheEnabled = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"colorSpace\", {\n        /* tslint:disable */\n        /**\n         * Gets or sets the `color space` of the document. This property can be used to create PDF document in RGB, Gray scale or CMYK color spaces.\n         * @private\n         */\n        get: function () {\n            if ((this.pdfColorSpace === PdfColorSpace.Rgb) || ((this.pdfColorSpace === PdfColorSpace.Cmyk)\n                || (this.pdfColorSpace === PdfColorSpace.GrayScale))) {\n                return this.pdfColorSpace;\n            }\n            else {\n                return PdfColorSpace.Rgb;\n            }\n        },\n        set: function (value) {\n            if ((value === PdfColorSpace.Rgb) || ((value === PdfColorSpace.Cmyk) ||\n                (value === PdfColorSpace.GrayScale))) {\n                this.pdfColorSpace = value;\n            }\n            else {\n                this.pdfColorSpace = PdfColorSpace.Rgb;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"template\", {\n        /* tslint:enable */\n        /**\n         * Gets or sets a `template` to all pages in the document.\n         * @private\n         */\n        get: function () {\n            if (this.pageTemplate == null) {\n                this.pageTemplate = new PdfDocumentTemplate();\n            }\n            return this.pageTemplate;\n        },\n        set: function (value) {\n            this.pageTemplate = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfDocument.prototype.docSave = function (stream, arg2, arg3) {\n        this.checkPagesPresence();\n        if (stream === null) {\n            throw new Error('ArgumentNullException : stream');\n        }\n        this.streamWriter = stream;\n        var writer = new PdfWriter(stream);\n        writer.document = this;\n        if (typeof arg2 === 'boolean' && typeof arg3 === 'undefined') {\n            return this.crossTable.save(writer);\n        }\n        else {\n            this.crossTable.save(writer, arg2);\n        }\n    };\n    /**\n     * Checks the pages `presence`.\n     * @private\n     */\n    PdfDocument.prototype.checkPagesPresence = function () {\n        if (this.pages.count === 0) {\n            this.pages.add();\n        }\n    };\n    /**\n     * disposes the current instance of `PdfDocument` class.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // add a new page to the document\n     * let page1 : PdfPage = document.pages.add();\n     * // set the font\n     * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // create black brush\n     * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n     * // draw the text\n     * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n     * // save the document\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfDocument.prototype.destroy = function () {\n        this.catalog = undefined;\n        this.colorSpace = undefined;\n        this.currentSavingObj = undefined;\n        this.documentPageCollection = undefined;\n        this.isStreamCopied = undefined;\n        this.pageSettings = undefined;\n        this.pageTemplate = undefined;\n        this.pdfColorSpace = undefined;\n        this.sectionCollection = undefined;\n        PdfDocument.cache.destroy();\n        this.crossTable.pdfObjects.destroy();\n        PdfDocument.cache = undefined;\n        this.streamWriter.destroy();\n    };\n    /**\n     * `Font` used in complex objects to draw strings and text when it is not defined explicitly.\n     * @default null\n     * @private\n     */\n    PdfDocument.defaultStandardFont = null;\n    /**\n     * Indicates whether enable cache or not\n     * @default true\n     * @private\n     */\n    PdfDocument.isCacheEnabled = true;\n    return PdfDocument;\n}(PdfDocumentBase));\nexport { PdfDocument };\n","/**\n * PdfStandardFontMetricsFactory.ts class for EJ2-PDF\n */\nimport { PdfFontStyle, PdfFontFamily } from './enum';\nimport { PdfFontMetrics, StandardWidthTable } from './pdf-font-metrics';\n/**\n * @private\n * `Factory of the standard fonts metrics`.\n */\nvar PdfStandardFontMetricsFactory = /** @class */ (function () {\n    function PdfStandardFontMetricsFactory() {\n    }\n    /**\n     * Returns `metrics` of the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = null;\n        switch (fontFamily) {\n            case PdfFontFamily.Helvetica:\n                metrics = this.getHelveticaMetrics(fontFamily, fontStyle, size);\n                break;\n            case PdfFontFamily.Courier:\n                metrics = this.getCourierMetrics(fontFamily, fontStyle, size);\n                break;\n            case PdfFontFamily.TimesRoman:\n                metrics = this.getTimesMetrics(fontFamily, fontStyle, size);\n                break;\n            case PdfFontFamily.Symbol:\n                metrics = this.getSymbolMetrics(fontFamily, fontStyle, size);\n                break;\n            case PdfFontFamily.ZapfDingbats:\n                metrics = this.getZapfDingbatsMetrics(fontFamily, fontStyle, size);\n                break;\n            default:\n                metrics = this.getHelveticaMetrics(PdfFontFamily.Helvetica, fontStyle, size);\n                break;\n        }\n        metrics.name = fontFamily.toString();\n        metrics.subScriptSizeFactor = this.subSuperScriptFactor;\n        metrics.superscriptSizeFactor = this.subSuperScriptFactor;\n        return metrics;\n    };\n    // Implementation\n    /**\n     * Creates `Helvetica font metrics`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getHelveticaMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = new PdfFontMetrics();\n        if ((fontStyle & PdfFontStyle.Bold) > 0 && (fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.helveticaBoldItalicAscent;\n            metrics.descent = this.helveticaBoldItalicDescent;\n            metrics.postScriptName = this.helveticaBoldItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.arialBoldWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Bold) > 0) {\n            metrics.ascent = this.helveticaBoldAscent;\n            metrics.descent = this.helveticaBoldDescent;\n            metrics.postScriptName = this.helveticaBoldName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.arialBoldWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.helveticaItalicAscent;\n            metrics.descent = this.helveticaItalicDescent;\n            metrics.postScriptName = this.helveticaItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.arialWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else {\n            metrics.ascent = this.helveticaAscent;\n            metrics.descent = this.helveticaDescent;\n            metrics.postScriptName = this.helveticaName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.arialWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        return metrics;\n    };\n    /**\n     * Creates `Courier font metrics`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getCourierMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = new PdfFontMetrics();\n        if ((fontStyle & PdfFontStyle.Bold) > 0 && (fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.courierBoldItalicAscent;\n            metrics.descent = this.courierBoldItalicDescent;\n            metrics.postScriptName = this.courierBoldItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.fixedWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Bold) > 0) {\n            metrics.ascent = this.courierBoldAscent;\n            metrics.descent = this.courierBoldDescent;\n            metrics.postScriptName = this.courierBoldName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.fixedWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.courierItalicAscent;\n            metrics.descent = this.courierItalicDescent;\n            metrics.postScriptName = this.courierItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.fixedWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else {\n            metrics.ascent = this.courierAscent;\n            metrics.descent = this.courierDescent;\n            metrics.postScriptName = this.courierName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.fixedWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        return metrics;\n    };\n    /**\n     * Creates `Times font metrics`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getTimesMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = new PdfFontMetrics();\n        if ((fontStyle & PdfFontStyle.Bold) > 0 && (fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.timesBoldItalicAscent;\n            metrics.descent = this.timesBoldItalicDescent;\n            metrics.postScriptName = this.timesBoldItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.timesRomanBoldItalicWidths);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Bold) > 0) {\n            metrics.ascent = this.timesBoldAscent;\n            metrics.descent = this.timesBoldDescent;\n            metrics.postScriptName = this.timesBoldName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.timesRomanBoldWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.timesItalicAscent;\n            metrics.descent = this.timesItalicDescent;\n            metrics.postScriptName = this.timesItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.timesRomanItalicWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else {\n            metrics.ascent = this.timesAscent;\n            metrics.descent = this.timesDescent;\n            metrics.postScriptName = this.timesName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.timesRomanWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        return metrics;\n    };\n    /**\n     * Creates `Symbol font metrics`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getSymbolMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = new PdfFontMetrics();\n        metrics.ascent = this.symbolAscent;\n        metrics.descent = this.symbolDescent;\n        metrics.postScriptName = this.symbolName;\n        metrics.size = size;\n        metrics.widthTable = new StandardWidthTable(this.symbolWidth);\n        metrics.height = metrics.ascent - metrics.descent;\n        return metrics;\n    };\n    /**\n     * Creates `ZapfDingbats font metrics`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getZapfDingbatsMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = new PdfFontMetrics();\n        metrics.ascent = this.zapfDingbatsAscent;\n        metrics.descent = this.zapfDingbatsDescent;\n        metrics.postScriptName = this.zapfDingbatsName;\n        metrics.size = size;\n        metrics.widthTable = new StandardWidthTable(this.zapfDingbatsWidth);\n        metrics.height = metrics.ascent - metrics.descent;\n        return metrics;\n    };\n    /**\n     * `Multiplier` os subscript superscript.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.subSuperScriptFactor = 1.52;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaAscent = 931;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaDescent = -225;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaName = 'Helvetica';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldAscent = 962;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldDescent = -228;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldName = 'Helvetica-Bold';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaItalicAscent = 931;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaItalicDescent = -225;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaItalicName = 'Helvetica-Oblique';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldItalicAscent = 962;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldItalicDescent = -228;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldItalicName = 'Helvetica-BoldOblique';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierAscent = 805;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierDescent = -250;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierName = 'Courier';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldAscent = 801;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldDescent = -250;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldName = 'Courier-Bold';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierItalicAscent = 805;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierItalicDescent = -250;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierItalicName = 'Courier-Oblique';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldItalicAscent = 801;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldItalicDescent = -250;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldItalicName = 'Courier-BoldOblique';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesAscent = 898;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesDescent = -218;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesName = 'Times-Roman';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldAscent = 935;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldDescent = -218;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldName = 'Times-Bold';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesItalicAscent = 883;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesItalicDescent = -217;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesItalicName = 'Times-Italic';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldItalicAscent = 921;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldItalicDescent = -218;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldItalicName = 'Times-BoldItalic';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.symbolAscent = 1010;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.symbolDescent = -293;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.symbolName = 'Symbol';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.zapfDingbatsAscent = 820;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.zapfDingbatsDescent = -143;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.zapfDingbatsName = 'ZapfDingbats';\n    /**\n     * `Arial` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.arialWidth = [\n        278, 278, 355, 556, 556, 889, 667, 191, 333, 333, 389, 584, 278, 333,\n        278, 278, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 278, 278, 584, 584,\n        584, 556, 1015, 667, 667, 722, 722, 667, 611, 778, 722, 278, 500, 667, 556, 833,\n        722, 778, 667, 778, 722, 667, 611, 722, 667, 944, 667, 667, 611, 278, 278, 278,\n        469, 556, 333, 556, 556, 500, 556, 556, 278, 556, 556, 222, 222, 500, 222, 833,\n        556, 556, 556, 556, 333, 500, 278, 556, 500, 722, 500, 500, 500, 334, 260, 334,\n        584, 0, 556, 0, 222, 556, 333, 1000, 556, 556, 333, 1000, 667, 333, 1000, 0,\n        611, 0, 0, 222, 222, 333, 333, 350, 556, 1000, 333, 1000, 500, 333, 944, 0,\n        500, 667, 0, 333, 556, 556, 556, 556, 260, 556, 333, 737, 370, 556, 584, 0,\n        737, 333, 400, 584, 333, 333, 333, 556, 537, 278, 333, 333, 365, 556, 834, 834,\n        834, 611, 667, 667, 667, 667, 667, 667, 1000, 722, 667, 667, 667, 667, 278, 278,\n        278, 278, 722, 722, 778, 778, 778, 778, 778, 584, 778, 722, 722, 722, 722, 667,\n        667, 611, 556, 556, 556, 556, 556, 556, 889, 500, 556, 556, 556, 556, 278, 278,\n        278, 278, 556, 556, 556, 556, 556, 556, 556, 584, 611, 556, 556, 556, 556, 500,\n        556, 500\n    ];\n    /**\n     * `Arial bold` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.arialBoldWidth = [\n        278, 333, 474, 556, 556, 889, 722, 238, 333, 333, 389, 584, 278, 333,\n        278, 278, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 333, 333, 584, 584,\n        584, 611, 975, 722, 722, 722, 722, 667, 611, 778, 722, 278, 556, 722, 611, 833,\n        722, 778, 667, 778, 722, 667, 611, 722, 667, 944, 667, 667, 611, 333, 278, 333,\n        584, 556, 333, 556, 611, 556, 611, 556, 333, 611, 611, 278, 278, 556, 278, 889,\n        611, 611, 611, 611, 389, 556, 333, 611, 556, 778, 556, 556, 500, 389, 280, 389,\n        584, 0, 556, 0, 278, 556, 500, 1000, 556, 556, 333, 1000, 667, 333, 1000, 0,\n        611, 0, 0, 278, 278, 500, 500, 350, 556, 1000, 333, 1000, 556, 333, 944, 0,\n        500, 667, 0, 333, 556, 556, 556, 556, 280, 556, 333, 737, 370, 556, 584, 0,\n        737, 333, 400, 584, 333, 333, 333, 611, 556, 278, 333, 333, 365, 556, 834, 834,\n        834, 611, 722, 722, 722, 722, 722, 722, 1000, 722, 667, 667, 667, 667, 278, 278,\n        278, 278, 722, 722, 778, 778, 778, 778, 778, 584, 778, 722, 722, 722, 722, 667,\n        667, 611, 556, 556, 556, 556, 556, 556, 889, 556, 556, 556, 556, 556, 278, 278,\n        278, 278, 611, 611, 611, 611, 611, 611, 611, 584, 611, 611, 611, 611, 611, 556,\n        611, 556\n    ];\n    /**\n     * `Fixed` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.fixedWidth = [\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600\n    ];\n    /**\n     * `Times` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesRomanWidth = [\n        250, 333, 408, 500, 500, 833, 778, 180, 333, 333, 500, 564, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 278, 278, 564, 564,\n        564, 444, 921, 722, 667, 667, 722, 611, 556, 722, 722, 333, 389, 722, 611, 889,\n        722, 722, 556, 722, 667, 556, 611, 722, 722, 944, 722, 722, 611, 333, 278, 333,\n        469, 500, 333, 444, 500, 444, 500, 444, 333, 500, 500, 278, 278, 500, 278, 778,\n        500, 500, 500, 500, 333, 389, 278, 500, 500, 722, 500, 500, 444, 480, 200, 480,\n        541, 0, 500, 0, 333, 500, 444, 1000, 500, 500, 333, 1000, 556, 333, 889, 0,\n        611, 0, 0, 333, 333, 444, 444, 350, 500, 1000, 333, 980, 389, 333, 722, 0,\n        444, 722, 0, 333, 500, 500, 500, 500, 200, 500, 333, 760, 276, 500, 564, 0,\n        760, 333, 400, 564, 300, 300, 333, 500, 453, 250, 333, 300, 310, 500, 750, 750,\n        750, 444, 722, 722, 722, 722, 722, 722, 889, 667, 611, 611, 611, 611, 333, 333,\n        333, 333, 722, 722, 722, 722, 722, 722, 722, 564, 722, 722, 722, 722, 722, 722,\n        556, 500, 444, 444, 444, 444, 444, 444, 667, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 500, 500, 500, 500, 500, 500, 564, 500, 500, 500, 500, 500, 500,\n        500, 500\n    ];\n    /**\n     * `Times bold` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesRomanBoldWidth = [\n        250, 333, 555, 500, 500, 1000, 833, 278, 333, 333, 500, 570, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 570, 570,\n        570, 500, 930, 722, 667, 722, 722, 667, 611, 778, 778, 389, 500, 778, 667, 944,\n        722, 778, 611, 778, 722, 556, 667, 722, 722, 1000, 722, 722, 667, 333, 278, 333,\n        581, 500, 333, 500, 556, 444, 556, 444, 333, 500, 556, 278, 333, 556, 278, 833,\n        556, 500, 556, 556, 444, 389, 333, 556, 500, 722, 500, 500, 444, 394, 220, 394,\n        520, 0, 500, 0, 333, 500, 500, 1000, 500, 500, 333, 1000, 556, 333, 1000, 0,\n        667, 0, 0, 333, 333, 500, 500, 350, 500, 1000, 333, 1000, 389, 333, 722, 0,\n        444, 722, 0, 333, 500, 500, 500, 500, 220, 500, 333, 747, 300, 500, 570, 0,\n        747, 333, 400, 570, 300, 300, 333, 556, 540, 250, 333, 300, 330, 500, 750, 750,\n        750, 500, 722, 722, 722, 722, 722, 722, 1000, 722, 667, 667, 667, 667, 389, 389,\n        389, 389, 722, 722, 778, 778, 778, 778, 778, 570, 778, 722, 722, 722, 722, 722,\n        611, 556, 500, 500, 500, 500, 500, 500, 722, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 556, 500, 500, 500, 500, 500, 570, 500, 556, 556, 556, 556, 500,\n        556, 500\n    ];\n    /**\n     * `Times italic` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesRomanItalicWidth = [\n        250, 333, 420, 500, 500, 833, 778, 214, 333, 333, 500, 675, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 675, 675,\n        675, 500, 920, 611, 611, 667, 722, 611, 611, 722, 722, 333, 444, 667, 556, 833,\n        667, 722, 611, 722, 611, 500, 556, 722, 611, 833, 611, 556, 556, 389, 278, 389,\n        422, 500, 333, 500, 500, 444, 500, 444, 278, 500, 500, 278, 278, 444, 278, 722,\n        500, 500, 500, 500, 389, 389, 278, 500, 444, 667, 444, 444, 389, 400, 275, 400,\n        541, 0, 500, 0, 333, 500, 556, 889, 500, 500, 333, 1000, 500, 333, 944, 0,\n        556, 0, 0, 333, 333, 556, 556, 350, 500, 889, 333, 980, 389, 333, 667, 0,\n        389, 556, 0, 389, 500, 500, 500, 500, 275, 500, 333, 760, 276, 500, 675, 0,\n        760, 333, 400, 675, 300, 300, 333, 500, 523, 250, 333, 300, 310, 500, 750, 750,\n        750, 500, 611, 611, 611, 611, 611, 611, 889, 667, 611, 611, 611, 611, 333, 333,\n        333, 333, 722, 667, 722, 722, 722, 722, 722, 675, 722, 722, 722, 722, 722, 556,\n        611, 500, 500, 500, 500, 500, 500, 500, 667, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 500, 500, 500, 500, 500, 500, 675, 500, 500, 500, 500, 500, 444,\n        500, 444\n    ];\n    /**\n     * `Times bold italic` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesRomanBoldItalicWidths = [\n        250, 389, 555, 500, 500, 833, 778, 278, 333, 333, 500, 570, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 570, 570,\n        570, 500, 832, 667, 667, 667, 722, 667, 667, 722, 778, 389, 500, 667, 611, 889,\n        722, 722, 611, 722, 667, 556, 611, 722, 667, 889, 667, 611, 611, 333, 278, 333,\n        570, 500, 333, 500, 500, 444, 500, 444, 333, 500, 556, 278, 278, 500, 278, 778,\n        556, 500, 500, 500, 389, 389, 278, 556, 444, 667, 500, 444, 389, 348, 220, 348,\n        570, 0, 500, 0, 333, 500, 500, 1000, 500, 500, 333, 1000, 556, 333, 944, 0,\n        611, 0, 0, 333, 333, 500, 500, 350, 500, 1000, 333, 1000, 389, 333, 722, 0,\n        389, 611, 0, 389, 500, 500, 500, 500, 220, 500, 333, 747, 266, 500, 606, 0,\n        747, 333, 400, 570, 300, 300, 333, 576, 500, 250, 333, 300, 300, 500, 750, 750,\n        750, 500, 667, 667, 667, 667, 667, 667, 944, 667, 667, 667, 667, 667, 389, 389,\n        389, 389, 722, 722, 722, 722, 722, 722, 722, 570, 722, 722, 722, 722, 722, 611,\n        611, 500, 500, 500, 500, 500, 500, 500, 722, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 556, 500, 500, 500, 500, 500, 570, 500, 556, 556, 556, 556, 444,\n        500, 444\n    ];\n    /**\n     * `Symbol` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.symbolWidth = [\n        250, 333, 713, 500, 549, 833, 778, 439, 333, 333, 500, 549, 250, 549,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 278, 278,\n        549, 549, 549, 444, 549, 722, 667, 722, 612, 611, 763, 603, 722, 333,\n        631, 722, 686, 889, 722, 722, 768, 741, 556, 592, 611, 690, 439, 768,\n        645, 795, 611, 333, 863, 333, 658, 500, 500, 631, 549, 549, 494, 439,\n        521, 411, 603, 329, 603, 549, 549, 576, 521, 549, 549, 521, 549, 603,\n        439, 576, 713, 686, 493, 686, 494, 480, 200, 480, 549, 750, 620, 247,\n        549, 167, 713, 500, 753, 753, 753, 753, 1042, 987, 603, 987, 603, 400,\n        549, 411, 549, 549, 713, 494, 460, 549, 549, 549, 549, 1000, 603, 1000,\n        658, 823, 686, 795, 987, 768, 768, 823, 768, 768, 713, 713, 713, 713,\n        713, 713, 713, 768, 713, 790, 790, 890, 823, 549, 250, 713, 603, 603,\n        1042, 987, 603, 987, 603, 494, 329, 790, 790, 786, 713, 384, 384, 384,\n        384, 384, 384, 494, 494, 494, 494, 329, 274, 686, 686, 686, 384, 384,\n        384, 384, 384, 384, 494, 494, 494, -1\n    ];\n    /**\n     * `Zip dingbats` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.zapfDingbatsWidth = [\n        278, 974, 961, 974, 980, 719, 789, 790, 791, 690, 960, 939, 549, 855,\n        911, 933, 911, 945, 974, 755, 846, 762, 761, 571, 677, 763, 760, 759,\n        754, 494, 552, 537, 577, 692, 786, 788, 788, 790, 793, 794, 816, 823,\n        789, 841, 823, 833, 816, 831, 923, 744, 723, 749, 790, 792, 695, 776,\n        768, 792, 759, 707, 708, 682, 701, 826, 815, 789, 789, 707, 687, 696,\n        689, 786, 787, 713, 791, 785, 791, 873, 761, 762, 762, 759, 759, 892,\n        892, 788, 784, 438, 138, 277, 415, 392, 392, 668, 668, 390, 390, 317,\n        317, 276, 276, 509, 509, 410, 410, 234, 234, 334, 334, 732, 544, 544,\n        910, 667, 760, 760, 776, 595, 694, 626, 788, 788, 788, 788, 788, 788,\n        788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788,\n        788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788,\n        788, 788, 788, 788, 788, 788, 894, 838, 1016, 458, 748, 924, 748, 918,\n        927, 928, 928, 834, 873, 828, 924, 924, 917, 930, 931, 463, 883, 836,\n        836, 867, 867, 696, 696, 874, 874, 760, 946, 771, 865, 771, 888, 967,\n        888, 831, 873, 927, 970, 918\n    ];\n    return PdfStandardFontMetricsFactory;\n}());\nexport { PdfStandardFontMetricsFactory };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfFontFamily, PdfFontStyle, FontEncoding } from './enum';\nimport { PdfFont } from './pdf-font';\nimport { PdfDocument } from './../../document/pdf-document';\nimport { PdfStandardFontMetricsFactory } from './pdf-standard-font-metrics-factory';\nimport { PdfDictionary } from './../../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfName } from './../../primitives/pdf-name';\n/**\n * Represents one of the 14 standard fonts.\n * It's used to create a standard PDF font to draw the text in to the PDF.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * //\n * // create new standard font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * //\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfStandardFont = /** @class */ (function (_super) {\n    __extends(PdfStandardFont, _super);\n    function PdfStandardFont(fontFamilyPrototype, size, style) {\n        var _this = _super.call(this, size, (typeof style === 'undefined') ? ((fontFamilyPrototype instanceof PdfStandardFont) ? fontFamilyPrototype.style : PdfFontStyle.Regular) : style) || this;\n        /**\n         * Gets `ascent` of the font.\n         * @private\n         */\n        _this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Gets `encodings` for internal class use.\n         * @hidden\n         * @private\n         */\n        _this.encodings = ['Unknown', 'StandardEncoding', 'MacRomanEncoding', 'MacExpertEncoding',\n            'WinAnsiEncoding', 'PDFDocEncoding', 'IdentityH'];\n        if (typeof fontFamilyPrototype === 'undefined') {\n            _this.pdfFontFamily = PdfFontFamily.Helvetica;\n        }\n        else if ((fontFamilyPrototype instanceof PdfStandardFont)) {\n            _this.pdfFontFamily = fontFamilyPrototype.fontFamily;\n        }\n        else {\n            _this.pdfFontFamily = fontFamilyPrototype;\n        }\n        _this.checkStyle();\n        _this.initializeInternals();\n        return _this;\n    }\n    Object.defineProperty(PdfStandardFont.prototype, \"fontFamily\", {\n        /* tslint:enable */\n        //Properties\n        /**\n         * Gets the `FontFamily`.\n         * @private\n         */\n        get: function () {\n            return this.pdfFontFamily;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //methods\n    /**\n     * Checks font `style` of the font.\n     * @private\n     */\n    PdfStandardFont.prototype.checkStyle = function () {\n        if (this.fontFamily === PdfFontFamily.Symbol || this.fontFamily === PdfFontFamily.ZapfDingbats) {\n            var style = this.style;\n            style &= ~(PdfFontStyle.Bold | PdfFontStyle.Italic);\n            this.setStyle(style);\n        }\n    };\n    /**\n     * Returns `width` of the line.\n     * @public\n     */\n    PdfStandardFont.prototype.getLineWidth = function (line, format) {\n        if (line == null) {\n            throw new Error('ArgumentNullException:line');\n        }\n        var width = 0;\n        var name = this.name;\n        line = PdfStandardFont.convert(line);\n        for (var i = 0, len = line.length; i < len; i++) {\n            var ch = line[i];\n            var charWidth = this.getCharWidthInternal(ch, format);\n            width += charWidth;\n        }\n        var size = this.metrics.getSize(format);\n        width *= (PdfFont.charSizeMultiplier * size);\n        width = this.applyFormatSettings(line, format, width);\n        return width;\n    };\n    /**\n     * Checks whether fonts are `equals`.\n     * @private\n     */\n    PdfStandardFont.prototype.equalsToFont = function (font) {\n        var equal = false;\n        var stFont = font;\n        if (stFont != null) {\n            var fontFamilyEqual = (this.fontFamily === stFont.fontFamily);\n            var lineReducer = (~(PdfFontStyle.Underline | PdfFontStyle.Strikeout));\n            var styleEqual = (this.style & lineReducer) === (stFont.style & lineReducer);\n            equal = (fontFamilyEqual && styleEqual);\n        }\n        return equal;\n    };\n    /**\n     * `Initializes` font internals..\n     * @private\n     */\n    PdfStandardFont.prototype.initializeInternals = function () {\n        var equalFont = null;\n        // if (PdfDocument.EnableCache) {\n        equalFont = PdfDocument.cache.search(this);\n        // }\n        var internals = null;\n        // if (equalFont == null) {\n        // Create font metrics.\n        var metrics = PdfStandardFontMetricsFactory.getMetrics(this.pdfFontFamily, this.style, this.size);\n        this.metrics = metrics;\n        internals = this.createInternals();\n        this.setInternals(internals);\n    };\n    /**\n     * `Creates` font`s dictionary.\n     * @private\n     */\n    PdfStandardFont.prototype.createInternals = function () {\n        var dictionary = new PdfDictionary();\n        dictionary.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.font));\n        dictionary.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.type1));\n        dictionary.items.setValue(this.dictionaryProperties.baseFont, new PdfName(this.metrics.postScriptName));\n        if (this.fontFamily !== PdfFontFamily.Symbol && this.fontFamily !== PdfFontFamily.ZapfDingbats) {\n            var encoding = this.encodings[FontEncoding.WinAnsiEncoding];\n            dictionary.items.setValue(this.dictionaryProperties.encoding, new PdfName(encoding));\n        }\n        return dictionary;\n    };\n    /**\n     * Returns `width` of the char. This methods doesn`t takes into consideration font`s size.\n     * @private\n     */\n    PdfStandardFont.prototype.getCharWidthInternal = function (charCode, format) {\n        var width = 0;\n        var code = 0;\n        code = charCode.charCodeAt(0);\n        if (this.name === '0' || this.name === '1' || this.name === '2' ||\n            this.name === '3' || this.name === '4') {\n            code = code - PdfStandardFont.charOffset;\n        }\n        code = (code >= 0 && code !== 128) ? code : 0;\n        var metrics = this.metrics;\n        var widthTable = metrics.widthTable;\n        width = widthTable.items(code);\n        return width;\n    };\n    /**\n     * `Converts` the specified text.\n     * @private\n     */\n    PdfStandardFont.convert = function (text) {\n        return text;\n    };\n    //Constants\n    /**\n     * First character `position`.\n     * @private\n     */\n    PdfStandardFont.charOffset = 32;\n    return PdfStandardFont;\n}(PdfFont));\nexport { PdfStandardFont };\n","import { PdfColor } from './../graphics/pdf-color';\nimport { RectangleF, PointF } from './../drawing/pdf-drawing';\nimport { PdfDictionary, SaveAnnotationEventHandler } from './../primitives/pdf-dictionary';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfString } from './../primitives/pdf-string';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfSolidBrush } from './../graphics/brushes/pdf-solid-brush';\nimport { PdfStandardFont } from './../graphics/fonts/pdf-standard-font';\nimport { PdfFontFamily } from './../graphics/fonts/enum';\nimport { PdfStringFormat } from './../graphics/fonts/pdf-string-format';\nimport { PdfTextAlignment } from './../graphics/enum';\n/**\n * `PdfAnnotation` class represents the base class for annotation objects.\n * @private\n */\nvar PdfAnnotation = /** @class */ (function () {\n    function PdfAnnotation(arg1) {\n        // Fields\n        /**\n         * Specifies the Internal variable to store fields of `PdfDictionaryProperties`.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * `Color` of the annotation\n         * @private\n         */\n        this.pdfColor = new PdfColor(255, 255, 255);\n        /**\n         * `Bounds` of the annotation.\n         * @private\n         */\n        this.rectangle = new RectangleF(0, 0, 0, 0);\n        /**\n         * Parent `page` of the annotation.\n         * @private\n         */\n        this.pdfPage = null;\n        /**\n         * `Brush of the text` of the annotation.\n         * @default new PdfSolidBrush(new PdfColor(0, 0, 0))\n         * @private\n         */\n        this.textBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n        /**\n         * `Font of the text` of the annotation.\n         * @default new PdfStandardFont(PdfFontFamily.TimesRoman, 10)\n         * @private\n         */\n        this.textFont = new PdfStandardFont(PdfFontFamily.TimesRoman, 10);\n        /**\n         * `StringFormat of the text` of the annotation.\n         * @default new PdfStringFormat(PdfTextAlignment.Left)\n         * @private\n         */\n        this.format = new PdfStringFormat(PdfTextAlignment.Left);\n        /**\n         * `Text` of the annotation.\n         * @private\n         */\n        this.content = '';\n        /**\n         * Internal variable to store `dictionary`.\n         * @private\n         */\n        this.pdfDictionary = new PdfDictionary();\n        /**\n         * To specifying the `Inner color` with which to fill the annotation\n         * @private\n         */\n        this.internalColor = new PdfColor();\n        /**\n         * `opacity or darkness` of the annotation.\n         * @private\n         * @default 1.0\n         */\n        this.darkness = 1.0;\n        if (typeof arg1 === 'undefined') {\n            this.initialize();\n        }\n        else {\n            this.initialize();\n            this.bounds = arg1;\n        }\n    }\n    Object.defineProperty(PdfAnnotation.prototype, \"color\", {\n        // Properties\n        /**\n         * `Color` of the annotation\n         * @private\n         */\n        get: function () {\n            return this.pdfColor;\n        },\n        set: function (value) {\n            this.pdfColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"innerColor\", {\n        /**\n         * To specifying the `Inner color` with which to fill the annotation\n         * @private\n         */\n        get: function () {\n            return this.internalColor;\n        },\n        set: function (value) {\n            this.internalColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"bounds\", {\n        /**\n         * `bounds` of the annotation.\n         * @private\n         */\n        get: function () {\n            return this.rectangle;\n        },\n        set: function (value) {\n            this.rectangle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"page\", {\n        /**\n         * Parent `page` of the annotation.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"font\", {\n        /**\n         * To specifying the `Font of the text` in the annotation.\n         * @private\n         */\n        get: function () {\n            return this.textFont;\n        },\n        set: function (value) {\n            this.textFont = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"stringFormat\", {\n        /**\n         * To specifying the `StringFormat of the text` in the annotation.\n         * @private\n         */\n        get: function () {\n            return this.format;\n        },\n        set: function (value) {\n            this.format = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"brush\", {\n        /**\n         * To specifying the `Brush of the text` in the annotation.\n         * @private\n         */\n        get: function () {\n            return this.textBrush;\n        },\n        set: function (value) {\n            this.textBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"text\", {\n        /**\n         * `Text` of the annotation.\n         * @private\n         */\n        get: function () {\n            return this.content;\n        },\n        set: function (value) {\n            this.content = value;\n            this.dictionary.items.setValue(this.dictionaryProperties.contents, new PdfString(this.content));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"dictionary\", {\n        /**\n         * Internal variable to store `dictionary`.\n         * @hidden\n         */\n        get: function () {\n            return this.pdfDictionary;\n        },\n        set: function (value) {\n            this.pdfDictionary = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Initialize` the annotation event handler and specifies the type of the annotation.\n     * @private\n     */\n    PdfAnnotation.prototype.initialize = function () {\n        this.pdfDictionary.annotationBeginSave = new SaveAnnotationEventHandler(this);\n        this.pdfDictionary.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.annot));\n    };\n    /**\n     * Sets related `page` of the annotation.\n     * @private\n     */\n    PdfAnnotation.prototype.setPage = function (page) {\n        this.pdfPage = page;\n        this.pdfDictionary.items.setValue(this.dictionaryProperties.p, new PdfReferenceHolder(this.pdfPage));\n    };\n    /**\n     * Handles the `BeginSave` event of the Dictionary.\n     * @private\n     */\n    PdfAnnotation.prototype.beginSave = function () {\n        this.save();\n    };\n    /**\n     * `Saves` an annotation.\n     * @private\n     */\n    /* tslint:disable */\n    PdfAnnotation.prototype.save = function () {\n        var nativeRectangle = new RectangleF(this.rectangle.x, this.rectangle.y, this.rectangle.width, this.rectangle.height);\n        var section = this.pdfPage.section;\n        var initialHeight = nativeRectangle.height;\n        var tempLoacation = section.pointToNativePdf(this.page, new PointF(nativeRectangle.x, nativeRectangle.y));\n        nativeRectangle.x = tempLoacation.x;\n        nativeRectangle.width = tempLoacation.x + nativeRectangle.width;\n        nativeRectangle.y = (tempLoacation.y - this.page.document.pageSettings.margins.top);\n        nativeRectangle.height = nativeRectangle.y - initialHeight;\n        this.pdfDictionary.items.setValue(this.dictionaryProperties.rect, PdfArray.fromRectangle(nativeRectangle));\n        this.dictionary.items.setValue(this.dictionaryProperties.ca, new PdfNumber(this.darkness));\n    };\n    Object.defineProperty(PdfAnnotation.prototype, \"element\", {\n        /* tslint:enable */\n        // IPdfWrapper Members\n        /**\n         * Gets the `element`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAnnotation;\n}());\nexport { PdfAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfAnnotation } from './annotation';\nimport { PdfName } from './../primitives/pdf-name';\n/**\n * `PdfLinkAnnotation` class represents the ink annotation class.\n * @private\n */\nvar PdfLinkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfLinkAnnotation, _super);\n    function PdfLinkAnnotation(rectangle) {\n        return _super.call(this, rectangle) || this;\n    }\n    // Implementation\n    /**\n     * `Initializes` annotation object.\n     * @private\n     */\n    PdfLinkAnnotation.prototype.initialize = function () {\n        _super.prototype.initialize.call(this);\n        this.dictionary.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.link));\n    };\n    return PdfLinkAnnotation;\n}(PdfAnnotation));\nexport { PdfLinkAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfLinkAnnotation } from './link-annotation';\n/**\n * Represents base class for `link annotations` with associated action.\n * @private\n */\nvar PdfActionLinkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfActionLinkAnnotation, _super);\n    // Constructors\n    /**\n     * Specifies the constructor for `ActionLinkAnnotation`.\n     * @private\n     */\n    function PdfActionLinkAnnotation(rectangle) {\n        var _this = _super.call(this, rectangle) || this;\n        // Fields\n        /**\n         * Internal variable to store annotation's `action`.\n         * @default null\n         * @private\n         */\n        _this.pdfAction = null;\n        return _this;\n    }\n    //Public method\n    /**\n     * get and set the `action`.\n     * @hidden\n     */\n    PdfActionLinkAnnotation.prototype.getSetAction = function (value) {\n        if (typeof value === 'undefined') {\n            return this.pdfAction;\n        }\n        else {\n            this.pdfAction = value;\n        }\n    };\n    return PdfActionLinkAnnotation;\n}(PdfLinkAnnotation));\nexport { PdfActionLinkAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfLinkAnnotation } from './link-annotation';\n/**\n * `PdfDocumentLinkAnnotation` class represents an annotation object with holds link on another location within a document.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // create new pages\n * let page1 : PdfPage = document.pages.add();\n * let page2 : PdfPage = document.pages.add();\n * // create a new rectangle\n * let bounds : RectangleF = new RectangleF({x : 10, y : 200}, {width : 300, height : 25});\n * //\n * // create a new document link annotation\n * let documentLinkAnnotation : PdfDocumentLinkAnnotation = new PdfDocumentLinkAnnotation(bounds);\n * // set the annotation text\n * documentLinkAnnotation.text = 'Document link annotation';\n * // set the destination\n * documentLinkAnnotation.destination = new PdfDestination(page2);\n * // set the documentlink annotation location\n * documentLinkAnnotation.destination.location = new PointF(10, 0);\n * // add this annotation to a new page\n * page1.annotations.add(documentLinkAnnotation);\n * //\n * // save the document to disk\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfDocumentLinkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfDocumentLinkAnnotation, _super);\n    function PdfDocumentLinkAnnotation(rectangle, destination) {\n        var _this = _super.call(this, rectangle) || this;\n        // Fields\n        /**\n         * `Destination` of the annotation.\n         * @default null\n         * @private\n         */\n        _this.pdfDestination = null;\n        if (typeof destination !== 'undefined') {\n            _this.destination = destination;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfDocumentLinkAnnotation.prototype, \"destination\", {\n        // Properties\n        /**\n         * Gets or sets the `destination` of the annotation.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // create new pages\n         * let page1 : PdfPage = document.pages.add();\n         * let page2 : PdfPage = document.pages.add();\n         * // create a new rectangle\n         * let bounds : RectangleF = new RectangleF({x : 10, y : 200}, {width : 300, height : 25});\n         * //\n         * // create a new document link annotation\n         * let documentLinkAnnotation : PdfDocumentLinkAnnotation = new PdfDocumentLinkAnnotation(bounds);\n         * // set the annotation text\n         * documentLinkAnnotation.text = 'Document link annotation';\n         * // set the destination\n         * documentLinkAnnotation.destination = new PdfDestination(page2);\n         * // set the documentlink annotation location\n         * documentLinkAnnotation.destination.location = new PointF(10, 0);\n         * // add this annotation to a new page\n         * page1.annotations.add(documentLinkAnnotation);\n         * //\n         * // save the document to disk\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         * @default null\n         */\n        get: function () {\n            return this.pdfDestination;\n        },\n        set: function (value) {\n            // if (this.pdfDestination !== value) {\n            this.pdfDestination = value;\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Saves` annotation object.\n     * @private\n     */\n    PdfDocumentLinkAnnotation.prototype.save = function () {\n        _super.prototype.save.call(this);\n        if (this.pdfDestination != null) {\n            this.dictionary.items.setValue(this.dictionaryProperties.dest, this.pdfDestination.element);\n        }\n    };\n    /**\n     * `Clone` the document link annotation.\n     * @private\n     */\n    PdfDocumentLinkAnnotation.prototype.clone = function () {\n        var annot = new PdfDocumentLinkAnnotation(this.bounds, this.destination);\n        annot.color = this.color;\n        annot.brush = this.brush;\n        annot.destination = this.destination;\n        annot.font = this.font;\n        return annot;\n    };\n    return PdfDocumentLinkAnnotation;\n}(PdfLinkAnnotation));\nexport { PdfDocumentLinkAnnotation };\n","/**\n * ElementLayouter.ts class for EJ2-PDF\n */\nimport { RectangleF } from './../../../drawing/pdf-drawing';\n/**\n * Base class for `elements lay outing`.\n * @private\n */\nvar ElementLayouter = /** @class */ (function () {\n    // Constructor\n    /**\n     * Initializes a new instance of the `ElementLayouter` class.\n     * @private\n     */\n    function ElementLayouter(element) {\n        this.layoutElement = element;\n    }\n    Object.defineProperty(ElementLayouter.prototype, \"elements\", {\n        // Properties\n        /**\n         * Gets the `element`.\n         * @private\n         */\n        get: function () {\n            return this.layoutElement;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the `element`.\n     * @private\n     */\n    ElementLayouter.prototype.getElement = function () {\n        return this.layoutElement;\n    };\n    // Implementation\n    /**\n     * `Layouts` the element.\n     * @private\n     */\n    ElementLayouter.prototype.layout = function (param) {\n        return this.layoutInternal(param);\n    };\n    ElementLayouter.prototype.Layouter = function (param) {\n        return this.layoutInternal(param);\n    };\n    /**\n     * Returns the `next page`.\n     * @private\n     */\n    ElementLayouter.prototype.getNextPage = function (currentPage) {\n        var section = currentPage.section;\n        var nextPage = section.add();\n        return nextPage;\n    };\n    return ElementLayouter;\n}());\nexport { ElementLayouter };\nvar PdfLayoutFormat = /** @class */ (function () {\n    function PdfLayoutFormat(baseFormat) {\n        if (typeof baseFormat === 'undefined') {\n            //\n        }\n        else {\n            this.break = baseFormat.break;\n            this.layout = baseFormat.layout;\n            this.paginateBounds = baseFormat.paginateBounds;\n            this.boundsSet = baseFormat.usePaginateBounds;\n        }\n    }\n    Object.defineProperty(PdfLayoutFormat.prototype, \"layout\", {\n        // Properties\n        /**\n         * Gets or sets `layout` type of the element.\n         * @private\n         */\n        get: function () {\n            // if (typeof this.layoutType === 'undefined' || this.layoutType == null) {\n            //      this.layoutType = PdfLayoutType.Paginate;\n            // }\n            return this.layoutType;\n        },\n        set: function (value) {\n            this.layoutType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutFormat.prototype, \"break\", {\n        /**\n         * Gets or sets `break` type of the element.\n         * @private\n         */\n        get: function () {\n            // if (typeof this.breakType === 'undefined' || this.boundsSet == null) {\n            //      this.breakType = PdfLayoutBreakType.FitPage;\n            // }\n            return this.breakType;\n        },\n        set: function (value) {\n            this.breakType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutFormat.prototype, \"paginateBounds\", {\n        /**\n         * Gets or sets the `bounds` on the next page.\n         * @private\n         */\n        get: function () {\n            if (typeof this.layoutPaginateBounds === 'undefined' && this.layoutPaginateBounds == null) {\n                this.layoutPaginateBounds = new RectangleF(0, 0, 0, 0);\n            }\n            return this.layoutPaginateBounds;\n        },\n        set: function (value) {\n            this.layoutPaginateBounds = value;\n            this.boundsSet = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutFormat.prototype, \"usePaginateBounds\", {\n        /**\n         * Gets a value indicating whether [`use paginate bounds`].\n         * @private\n         */\n        get: function () {\n            // if (typeof this.boundsSet === 'undefined' || this.boundsSet == null) {\n            //      this.boundsSet = false;\n            // }\n            return this.boundsSet;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfLayoutFormat;\n}());\nexport { PdfLayoutFormat };\nvar PdfLayoutParams = /** @class */ (function () {\n    function PdfLayoutParams() {\n    }\n    Object.defineProperty(PdfLayoutParams.prototype, \"page\", {\n        // Properties\n        /**\n         * Gets or sets the layout `page` for the element.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        set: function (value) {\n            this.pdfPage = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutParams.prototype, \"bounds\", {\n        /**\n         * Gets or sets layout `bounds` for the element.\n         * @private\n         */\n        get: function () {\n            return new RectangleF(this.layoutBounds.x, this.layoutBounds.y, this.layoutBounds.width, this.layoutBounds.height);\n        },\n        set: function (value) {\n            this.layoutBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutParams.prototype, \"format\", {\n        /**\n         * Gets or sets `layout settings` for the element.\n         * @private\n         */\n        get: function () {\n            return this.layoutFormat;\n        },\n        set: function (value) {\n            this.layoutFormat = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfLayoutParams;\n}());\nexport { PdfLayoutParams };\nvar PdfLayoutResult = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes the new instance of `PdfLayoutResult` class.\n     * @private\n     */\n    function PdfLayoutResult(page, bounds) {\n        this.pdfPage = page;\n        this.layoutBounds = bounds;\n    }\n    Object.defineProperty(PdfLayoutResult.prototype, \"page\", {\n        // Properties\n        /**\n         * Gets the last `page` where the element was drawn.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutResult.prototype, \"bounds\", {\n        /**\n         * Gets the `bounds` of the element on the last page where it was drawn.\n         * @private\n         */\n        get: function () {\n            return this.layoutBounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfLayoutResult;\n}());\nexport { PdfLayoutResult };\n","import { RectangleF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfLayoutParams, PdfLayoutFormat } from './base/element-layouter';\n/**\n * `PdfLayoutElement` class represents the base class for all elements that can be layout on the pages.\n * @private\n */\nvar PdfLayoutElement = /** @class */ (function () {\n    function PdfLayoutElement() {\n    }\n    Object.defineProperty(PdfLayoutElement.prototype, \"raiseBeginPageLayout\", {\n        // Property\n        /**\n         * Gets a value indicating whether the `start page layout event` should be raised.\n         * @private\n         */\n        get: function () {\n            return (typeof this.beginPageLayout !== 'undefined');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutElement.prototype, \"raiseEndPageLayout\", {\n        /**\n         * Gets a value indicating whether the `ending page layout event` should be raised.\n         * @private\n         */\n        get: function () {\n            return (typeof this.endPageLayout !== 'undefined');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Event Handlers\n    PdfLayoutElement.prototype.onBeginPageLayout = function (args) {\n        if (this.beginPageLayout) {\n            this.beginPageLayout(this, args);\n        }\n    };\n    PdfLayoutElement.prototype.onEndPageLayout = function (args) {\n        if (this.endPageLayout) {\n            this.endPageLayout(this, args);\n        }\n    };\n    PdfLayoutElement.prototype.drawHelper = function (arg2, arg3, arg4, arg5) {\n        if (arg3 instanceof PointF && typeof arg3.width === 'undefined' && typeof arg4 === 'undefined') {\n            return this.drawHelper(arg2, arg3.x, arg3.y);\n        }\n        else if (typeof arg3 === 'number' && typeof arg4 === 'number' && typeof arg5 === 'undefined') {\n            return this.drawHelper(arg2, arg3, arg4, null);\n        }\n        else if (arg3 instanceof RectangleF && typeof arg3.width !== 'undefined' && typeof arg4 === 'undefined') {\n            return this.drawHelper(arg2, arg3, null);\n        }\n        else if (arg3 instanceof PointF && typeof arg3.width === 'undefined' && arg4 instanceof PdfLayoutFormat) {\n            return this.drawHelper(arg2, arg3.x, arg3.y, arg4);\n        }\n        else if (typeof arg3 === 'number' && typeof arg4 === 'number' && (arg5 instanceof PdfLayoutFormat || arg5 == null)) {\n            var width = (arg2.graphics.clientSize.width - arg3);\n            var layoutRectangle = new RectangleF(arg3, arg4, width, 0);\n            return this.drawHelper(arg2, layoutRectangle, arg5);\n        }\n        else if (arg3 instanceof RectangleF && typeof arg3.width !== 'undefined' && typeof arg4 === 'boolean') {\n            this.bEmbedFonts = arg4;\n            return this.drawHelper(arg2, arg3, null);\n        }\n        else {\n            var param = new PdfLayoutParams();\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            param.page = arg2;\n            param.bounds = temparg3;\n            param.format = (temparg4 != null) ? temparg4 : new PdfLayoutFormat();\n            var result = this.layout(param);\n            return result;\n        }\n    };\n    return PdfLayoutElement;\n}());\nexport { PdfLayoutElement };\n","/**\n * public Enum for `PdfLayoutType`.\n * @private\n */\nexport var PdfLayoutType;\n(function (PdfLayoutType) {\n    /**\n     * Specifies the type of `Paginate`.\n     * @private\n     */\n    PdfLayoutType[PdfLayoutType[\"Paginate\"] = 0] = \"Paginate\";\n    /**\n     * Specifies the type of `OnePage`.\n     * @private\n     */\n    PdfLayoutType[PdfLayoutType[\"OnePage\"] = 1] = \"OnePage\";\n})(PdfLayoutType || (PdfLayoutType = {}));\n/**\n * public Enum for `PdfLayoutBreakType`.\n * @private\n */\nexport var PdfLayoutBreakType;\n(function (PdfLayoutBreakType) {\n    /**\n     * Specifies the type of `FitPage`.\n     * @private\n     */\n    PdfLayoutBreakType[PdfLayoutBreakType[\"FitPage\"] = 0] = \"FitPage\";\n    /**\n     * Specifies the type of `FitElement`.\n     * @private\n     */\n    PdfLayoutBreakType[PdfLayoutBreakType[\"FitElement\"] = 1] = \"FitElement\";\n    /**\n     * Specifies the type of `FitColumnsToPage`.\n     * @private\n     */\n    PdfLayoutBreakType[PdfLayoutBreakType[\"FitColumnsToPage\"] = 2] = \"FitColumnsToPage\";\n})(PdfLayoutBreakType || (PdfLayoutBreakType = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * TextLayouter.ts class for EJ2-PDF\n */\nimport { ElementLayouter, PdfLayoutResult } from './element-layouter';\nimport { RectangleF, SizeF } from './../../../drawing/pdf-drawing';\nimport { PdfStringLayouter } from './../../fonts/string-layouter';\nimport { PdfLayoutBreakType } from './../../figures/enum';\nimport { PdfColor } from './../../pdf-color';\nimport { PdfTextWebLink } from './../../../annotations/pdf-text-web-link';\n/**\n * Class that `layouts the text`.\n * @private\n */\nvar TextLayouter = /** @class */ (function (_super) {\n    __extends(TextLayouter, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `TextLayouter` class.\n     * @private\n     */\n    function TextLayouter(element) {\n        return _super.call(this, element) || this;\n    }\n    Object.defineProperty(TextLayouter.prototype, \"element\", {\n        /**\n         * Gets the layout `element`.\n         * @private\n         */\n        get: function () {\n            return _super.prototype.getElement.call(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Layouts` the element.\n     * @private\n     */\n    TextLayouter.prototype.layoutInternal = function (param) {\n        /* tslint:disable */\n        this.format = (this.element.stringFormat !== null && typeof this.element.stringFormat !== 'undefined') ? this.element.stringFormat : null;\n        var currentPage = param.page;\n        var currentBounds = param.bounds;\n        var text = this.element.value;\n        var result = null;\n        var pageResult = new TextPageLayoutResult();\n        pageResult.page = currentPage;\n        pageResult.remainder = text;\n        for (;;) {\n            pageResult = this.layoutOnPage(text, currentPage, currentBounds, param);\n            result = this.getLayoutResult(pageResult);\n            break;\n        }\n        /* tslint:enable */\n        return result;\n    };\n    /**\n     * Raises `PageLayout` event if needed.\n     * @private\n     */\n    TextLayouter.prototype.getLayoutResult = function (pageResult) {\n        var result = new PdfTextLayoutResult(pageResult.page, pageResult.bounds, pageResult.remainder, pageResult.lastLineBounds);\n        return result;\n    };\n    /* tslint:disable */\n    /**\n     * `Layouts` the text on the page.\n     * @private\n     */\n    TextLayouter.prototype.layoutOnPage = function (text, currentPage, currentBounds, param) {\n        var result = new TextPageLayoutResult();\n        result.remainder = text;\n        result.page = currentPage;\n        currentBounds = this.checkCorrectBounds(currentPage, currentBounds);\n        var layouter = new PdfStringLayouter();\n        var stringResult = layouter.layout(text, this.element.font, this.format, currentBounds, currentPage.getClientSize().height, false, new SizeF(0, 0));\n        var textFinished = (stringResult.remainder == null);\n        var doesntFit = (param.format.break === PdfLayoutBreakType.FitElement);\n        var canDraw = !(doesntFit || stringResult.empty);\n        // Draw the text.\n        var graphics = currentPage.graphics;\n        var brush = this.element.getBrush();\n        if (this.element instanceof PdfTextWebLink) {\n            brush.color = new PdfColor(0, 0, 255);\n        }\n        graphics.drawStringLayoutResult(stringResult, this.element.font, this.element.pen, brush, currentBounds, this.format);\n        var lineInfo = stringResult.lines[stringResult.lineCount - 1];\n        result.lastLineBounds = graphics.getLineBounds(stringResult.lineCount - 1, stringResult, this.element.font, currentBounds, this.format);\n        result.bounds = this.getTextPageBounds(currentPage, currentBounds, stringResult);\n        result.remainder = stringResult.remainder;\n        result.end = (textFinished);\n        return result;\n    };\n    /* tslint:enable */\n    /**\n     * `Corrects current bounds` on the page.\n     * @private\n     */\n    TextLayouter.prototype.checkCorrectBounds = function (currentPage, currentBounds) {\n        var pageSize = currentPage.graphics.clientSize;\n        currentBounds.height = (currentBounds.height > 0) ? currentBounds.height : pageSize.height - currentBounds.y;\n        return currentBounds;\n    };\n    /**\n     * Returns a `rectangle` where the text was printed on the page.\n     * @private\n     */\n    /* tslint:disable */\n    TextLayouter.prototype.getTextPageBounds = function (currentPage, currentBounds, stringResult) {\n        var textSize = stringResult.actualSize;\n        var x = currentBounds.x;\n        var y = currentBounds.y;\n        var width = (currentBounds.width > 0) ? currentBounds.width : textSize.width;\n        var height = textSize.height;\n        var shiftedRect = currentPage.graphics.checkCorrectLayoutRectangle(textSize, currentBounds.x, currentBounds.y, this.format);\n        // if (currentBounds.width <= 0) {\n        x = shiftedRect.x;\n        // }\n        var verticalShift = currentPage.graphics.getTextVerticalAlignShift(textSize.height, currentBounds.height, this.format);\n        y += verticalShift;\n        var bounds = new RectangleF(x, y, width, height);\n        return bounds;\n    };\n    return TextLayouter;\n}(ElementLayouter));\nexport { TextLayouter };\nvar TextPageLayoutResult = /** @class */ (function () {\n    function TextPageLayoutResult() {\n    }\n    return TextPageLayoutResult;\n}());\nexport { TextPageLayoutResult };\nvar PdfTextLayoutResult = /** @class */ (function (_super) {\n    __extends(PdfTextLayoutResult, _super);\n    // Constructors\n    /**\n     * Initializes the new instance of `PdfTextLayoutResult` class.\n     * @private\n     */\n    function PdfTextLayoutResult(page, bounds, remainder, lastLineBounds) {\n        var _this = _super.call(this, page, bounds) || this;\n        _this.remainderText = remainder;\n        _this.lastLineTextBounds = lastLineBounds;\n        return _this;\n    }\n    Object.defineProperty(PdfTextLayoutResult.prototype, \"remainder\", {\n        // Properties\n        /**\n         * Gets a value that contains the `text` that was not printed.\n         * @private\n         */\n        get: function () {\n            return this.remainderText;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextLayoutResult.prototype, \"lastLineBounds\", {\n        /**\n         * Gets a value that indicates the `bounds` of the last line that was printed on the page.\n         * @private\n         */\n        get: function () {\n            return this.lastLineTextBounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfTextLayoutResult;\n}(PdfLayoutResult));\nexport { PdfTextLayoutResult };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfTextElement.ts class for EJ2-PDF\n */\nimport { PdfLayoutElement } from './../figures/layout-element';\nimport { PdfBrush } from './../brushes/pdf-brush';\nimport { PdfFont } from './../fonts/pdf-font';\nimport { PdfStandardFont } from './../fonts/pdf-standard-font';\nimport { PdfPen } from './../pdf-pen';\nimport { PdfLayoutParams } from './../figures/base/element-layouter';\nimport { TextLayouter } from './base/text-layouter';\nimport { PdfSolidBrush } from './../brushes/pdf-solid-brush';\nimport { PdfColor } from './../pdf-color';\nimport { RectangleF, SizeF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfLayoutFormat } from './base/element-layouter';\nimport { PdfStringLayouter } from './../fonts/string-layouter';\nimport { PdfTextAlignment } from './../enum';\n/**\n * `PdfTextElement` class represents the text area with the ability to span several pages\n * and inherited from the 'PdfLayoutElement' class.\n * @private\n */\nvar PdfTextElement = /** @class */ (function (_super) {\n    __extends(PdfTextElement, _super);\n    function PdfTextElement(arg1, arg2, arg3, arg4, arg5) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * `Text` data.\n         * @private\n         */\n        _this.content = '';\n        /**\n         * `Value` of text data.\n         * @private\n         */\n        _this.elementValue = '';\n        /**\n         * indicate whether the drawText with PointF overload is called or not.\n         * @default false\n         * @private\n         */\n        _this.hasPointOverload = false;\n        /**\n         * indicate whether the PdfGridCell value is `PdfTextElement`\n         * @default false\n         * @private\n         */\n        _this.isPdfTextElement = false;\n        if (typeof arg1 === 'undefined') {\n            //\n        }\n        else if (typeof arg1 === 'string' && typeof arg2 === 'undefined') {\n            _this.content = arg1;\n            _this.elementValue = arg1;\n        }\n        else if (typeof arg1 === 'string' && arg2 instanceof PdfFont && typeof arg3 === 'undefined') {\n            _this.content = arg1;\n            _this.elementValue = arg1;\n            _this.pdfFont = arg2;\n        }\n        else if (typeof arg1 === 'string' && arg2 instanceof PdfFont && arg3 instanceof PdfPen && typeof arg4 === 'undefined') {\n            _this.content = arg1;\n            _this.elementValue = arg1;\n            _this.pdfFont = arg2;\n            _this.pdfPen = arg3;\n        }\n        else if (typeof arg1 === 'string' && arg2 instanceof PdfFont && arg3 instanceof PdfBrush && typeof arg4 === 'undefined') {\n            _this.content = arg1;\n            _this.elementValue = arg1;\n            _this.pdfFont = arg2;\n            _this.pdfBrush = arg3;\n        }\n        else {\n            _this.content = arg1;\n            _this.elementValue = arg1;\n            _this.pdfFont = arg2;\n            _this.pdfPen = arg3;\n            _this.pdfBrush = arg4;\n            _this.format = arg5;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfTextElement.prototype, \"text\", {\n        // Properties\n        /**\n         * Gets or sets a value indicating the `text` that should be printed.\n         * ```typescript\n         * // create a new PDF document.\n         * let document : PdfDocument = new PdfDocument();\n         * // add a page to the document.\n         * let page1 : PdfPage = document.pages.add();\n         * // create the font\n         * let font : PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 12);\n         * // create the Text Web Link\n         * let textLink : PdfTextWebLink = new PdfTextWebLink();\n         * // set the hyperlink\n         * textLink.url = 'http://www.google.com';\n         * //\n         * // set the link text\n         * textLink.text = 'Google';\n         * //\n         * // set the font\n         * textLink.font = font;\n         * // draw the hyperlink in PDF page\n         * textLink.draw(page1, new PointF(10, 40));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.content;\n        },\n        set: function (value) {\n            this.elementValue = value;\n            this.content = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"value\", {\n        //get value\n        /**\n         * Gets or sets a `value` indicating the text that should be printed.\n         * @private\n         */\n        get: function () {\n            return this.elementValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"pen\", {\n        //get pen\n        /**\n         * Gets or sets a `PdfPen` that determines the color, width, and style of the text\n         * @private\n         */\n        get: function () {\n            return this.pdfPen;\n        },\n        //Set pen value\n        set: function (value) {\n            this.pdfPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"brush\", {\n        //get brush\n        /**\n         * Gets or sets the `PdfBrush` that will be used to draw the text with color and texture.\n         * @private\n         */\n        get: function () {\n            return this.pdfBrush;\n        },\n        //Set brush value\n        set: function (value) {\n            this.pdfBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"font\", {\n        //get font\n        /**\n         * Gets or sets a `PdfFont` that defines the text format.\n         * ```typescript\n         * // create a new PDF document.\n         * let document : PdfDocument = new PdfDocument();\n         * // add a page to the document.\n         * let page1 : PdfPage = document.pages.add();\n         * // create the font\n         * let font : PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 12);\n         * // create the Text Web Link\n         * let textLink : PdfTextWebLink = new PdfTextWebLink();\n         * // set the hyperlink\n         * textLink.url = 'http://www.google.com';\n         * // set the link text\n         * textLink.text = 'Google';\n         * //\n         * // set the font\n         * textLink.font = font;\n         * //\n         * // draw the hyperlink in PDF page\n         * textLink.draw(page1, new PointF(10, 40));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.pdfFont;\n        },\n        set: function (value) {\n            this.pdfFont = value;\n            if (this.pdfFont instanceof PdfStandardFont && this.content != null) {\n                this.elementValue = PdfStandardFont.convert(this.content);\n            }\n            else {\n                this.elementValue = this.content;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"stringFormat\", {\n        /**\n         * Gets or sets the `PdfStringFormat` that will be used to set the string format\n         * @private\n         */\n        get: function () {\n            return this.format;\n        },\n        set: function (value) {\n            this.format = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Gets a `brush` for drawing.\n     * @private\n     */\n    PdfTextElement.prototype.getBrush = function () {\n        return (this.pdfBrush == null || typeof this.pdfBrush === 'undefined') ? new PdfSolidBrush(new PdfColor(0, 0, 0)) : this.pdfBrush;\n    };\n    // /**\n    //  * `Draws` an element on the Graphics.\n    //  * @private\n    //  */\n    // public drawInternal(graphics : PdfGraphics) : void {\n    //     graphics.drawString(this.elementValue, this.pdfFont, this.pdfPen, this.getBrush(), 0, 0, this.stringFormat);\n    // }\n    /**\n     * `Layouts` the element.\n     * @private\n     */\n    PdfTextElement.prototype.layout = function (param) {\n        var layouter = new TextLayouter(this);\n        var result = layouter.layout(param);\n        return result;\n    };\n    PdfTextElement.prototype.drawText = function (arg2, arg3, arg4, arg5) {\n        if (arg3 instanceof PointF && typeof arg3.width === 'undefined' && typeof arg4 === 'undefined') {\n            this.hasPointOverload = true;\n            return this.drawText(arg2, arg3.x, arg3.y);\n        }\n        else if (typeof arg3 === 'number' && typeof arg4 === 'number' && typeof arg5 === 'undefined') {\n            this.hasPointOverload = true;\n            return this.drawText(arg2, arg3, arg4, null);\n        }\n        else if (arg3 instanceof RectangleF && typeof arg3.width !== 'undefined' && typeof arg4 === 'undefined') {\n            return this.drawText(arg2, arg3, null);\n        }\n        else if (arg3 instanceof PointF && typeof arg3.width === 'undefined' && arg4 instanceof PdfLayoutFormat) {\n            this.hasPointOverload = true;\n            return this.drawText(arg2, arg3.x, arg3.y, arg4);\n        }\n        else if (typeof arg3 === 'number' && typeof arg4 === 'number' && (arg5 instanceof PdfLayoutFormat || arg5 == null)) {\n            this.hasPointOverload = true;\n            var width = (arg2.graphics.clientSize.width - arg3);\n            var layoutRectangle = new RectangleF(arg3, arg4, width, 0);\n            return this.drawText(arg2, layoutRectangle, arg5);\n        }\n        else if (arg3 instanceof RectangleF && typeof arg3.width !== 'undefined' && typeof arg4 === 'boolean') {\n            return this.drawText(arg2, arg3, null);\n        }\n        else {\n            var layout = new PdfStringLayouter();\n            if (this.hasPointOverload) {\n                var stringLayoutResult = layout.layout(this.value, this.font, this.stringFormat, new SizeF((arg2.graphics.clientSize.width - arg3.x), 0), true, arg2.graphics.clientSize);\n                var layoutResult = void 0;\n                var param = new PdfLayoutParams();\n                var temparg3 = arg3;\n                var temparg4 = arg4;\n                param.page = arg2;\n                var previousPage = arg2;\n                param.bounds = temparg3;\n                param.format = (temparg4 != null) ? temparg4 : new PdfLayoutFormat();\n                if (stringLayoutResult.lines.length > 1) {\n                    this.text = stringLayoutResult.layoutLines[0].text;\n                    if (param.bounds.y <= param.page.graphics.clientSize.height) {\n                        var previousPosition = new PointF(param.bounds.x, param.bounds.y);\n                        layoutResult = this.layout(param);\n                        var bounds = new RectangleF(0, layoutResult.bounds.y + stringLayoutResult.lineHeight, arg2.graphics.clientSize.width, stringLayoutResult.lineHeight);\n                        var isPaginate = false;\n                        for (var i = 1; i < stringLayoutResult.lines.length; i++) {\n                            param.page = layoutResult.page;\n                            param.bounds = new RectangleF(new PointF(bounds.x, bounds.y), new SizeF(bounds.width, bounds.height));\n                            this.text = stringLayoutResult.layoutLines[i].text;\n                            if (bounds.y + stringLayoutResult.lineHeight > layoutResult.page.graphics.clientSize.height) {\n                                isPaginate = true;\n                                param.page = param.page.graphics.getNextPage();\n                                if (previousPosition.y > (layoutResult.page.graphics.clientSize.height - layoutResult.bounds.height)) {\n                                    bounds = new RectangleF(0, layoutResult.bounds.height, layoutResult.page.graphics.clientSize.width, stringLayoutResult.lineHeight);\n                                }\n                                else {\n                                    bounds = new RectangleF(0, 0, layoutResult.page.graphics.clientSize.width, stringLayoutResult.lineHeight);\n                                }\n                                param.bounds = bounds;\n                            }\n                            layoutResult = this.layout(param);\n                            if (i !== (stringLayoutResult.lines.length - 1)) {\n                                bounds = new RectangleF(0, layoutResult.bounds.y + stringLayoutResult.lineHeight, layoutResult.page.graphics.clientSize.width, stringLayoutResult.lineHeight);\n                            }\n                            else {\n                                var lineWidth = this.font.measureString(this.text, this.format).width;\n                                layoutResult = this.calculateResultBounds(layoutResult, lineWidth, layoutResult.page.graphics.clientSize.width, 0);\n                            }\n                        }\n                    }\n                    return layoutResult;\n                }\n                else {\n                    var lineSize = this.font.measureString(this.text, this.format);\n                    if (param.bounds.y <= param.page.graphics.clientSize.height) {\n                        layoutResult = this.layout(param);\n                        layoutResult = this.calculateResultBounds(layoutResult, lineSize.width, layoutResult.page.graphics.clientSize.width, 0);\n                    }\n                    return layoutResult;\n                }\n            }\n            else {\n                var layoutResult = layout.layout(this.value, this.font, this.stringFormat, new SizeF(arg3.width, 0), false, arg2.graphics.clientSize);\n                var result = void 0;\n                var param = new PdfLayoutParams();\n                var temparg3 = arg3;\n                var temparg4 = arg4;\n                param.page = arg2;\n                param.bounds = temparg3;\n                param.format = (temparg4 != null) ? temparg4 : new PdfLayoutFormat();\n                if (layoutResult.lines.length > 1) {\n                    this.text = layoutResult.layoutLines[0].text;\n                    if (param.bounds.y <= param.page.graphics.clientSize.height) {\n                        var previousPosition = new PointF(param.bounds.x, param.bounds.y);\n                        result = this.layout(param);\n                        var bounds = new RectangleF(temparg3.x, result.bounds.y + layoutResult.lineHeight, temparg3.width, layoutResult.lineHeight);\n                        var isPaginate = false;\n                        for (var i = 1; i < layoutResult.lines.length; i++) {\n                            param.page = result.page;\n                            param.bounds = new RectangleF(bounds.x, bounds.y, bounds.width, bounds.height);\n                            this.text = layoutResult.layoutLines[i].text;\n                            if (bounds.y + layoutResult.lineHeight > result.page.graphics.clientSize.height) {\n                                isPaginate = true;\n                                param.page = param.page.graphics.getNextPage();\n                                if (previousPosition.y > (result.page.graphics.clientSize.height - result.bounds.height)) {\n                                    bounds = new RectangleF(temparg3.x, layoutResult.lineHeight, temparg3.width, layoutResult.lineHeight);\n                                }\n                                else {\n                                    bounds = new RectangleF(temparg3.x, 0, temparg3.width, layoutResult.lineHeight);\n                                }\n                                param.bounds = bounds;\n                            }\n                            result = this.layout(param);\n                            if (i !== (layoutResult.lines.length - 1)) {\n                                bounds = new RectangleF(temparg3.x, result.bounds.y + layoutResult.lineHeight, temparg3.width, layoutResult.lineHeight);\n                            }\n                            else {\n                                var lineWidth = this.font.measureString(this.text, this.format).width;\n                                result = this.calculateResultBounds(result, lineWidth, temparg3.width, temparg3.x);\n                            }\n                        }\n                    }\n                    return result;\n                }\n                else {\n                    var lineSize = this.font.measureString(this.text, this.format);\n                    if (param.bounds.y <= param.page.graphics.clientSize.height) {\n                        result = this.layout(param);\n                        result = this.calculateResultBounds(result, lineSize.width, temparg3.width, temparg3.x);\n                    }\n                    return result;\n                }\n            }\n        }\n    };\n    PdfTextElement.prototype.calculateResultBounds = function (result, lineWidth, maximumWidth, startPosition) {\n        var shift = 0;\n        if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Center) {\n            result.bounds.x = startPosition + (maximumWidth - lineWidth) / 2;\n            result.bounds.width = lineWidth;\n        }\n        else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Right) {\n            result.bounds.x = startPosition + (maximumWidth - lineWidth);\n            result.bounds.width = lineWidth;\n        }\n        else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Justify) {\n            result.bounds.x = startPosition;\n            result.bounds.width = maximumWidth;\n        }\n        else {\n            result.bounds.width = startPosition;\n            result.bounds.width = lineWidth;\n        }\n        return result;\n    };\n    return PdfTextElement;\n}(PdfLayoutElement));\nexport { PdfTextElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfActionLinkAnnotation } from './action-link-annotation';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfUriAction } from './../actions/uri-action';\n/**\n * `PdfUriAnnotation` class represents the Uri annotation.\n * @private\n */\nvar PdfUriAnnotation = /** @class */ (function (_super) {\n    __extends(PdfUriAnnotation, _super);\n    function PdfUriAnnotation(rectangle, uri) {\n        var _this = _super.call(this, rectangle) || this;\n        if (typeof uri !== 'undefined') {\n            _this.uri = uri;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfUriAnnotation.prototype, \"uriAction\", {\n        /**\n         * Get `action` of the annotation.\n         * @private\n         */\n        get: function () {\n            if (typeof this.pdfUriAction === 'undefined') {\n                this.pdfUriAction = new PdfUriAction();\n            }\n            return this.pdfUriAction;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfUriAnnotation.prototype, \"uri\", {\n        // Properties\n        /**\n         * Gets or sets the `Uri` address.\n         * @private\n         */\n        get: function () {\n            return this.uriAction.uri;\n        },\n        set: function (value) {\n            if (this.uriAction.uri !== value) {\n                this.uriAction.uri = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfUriAnnotation.prototype, \"action\", {\n        /**\n         * Gets or sets the `action`.\n         * @private\n         */\n        get: function () {\n            return this.getSetAction();\n        },\n        set: function (value) {\n            this.getSetAction(value);\n            this.uriAction.next = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Initializes` annotation object.\n     * @private\n     */\n    PdfUriAnnotation.prototype.initialize = function () {\n        _super.prototype.initialize.call(this);\n        this.dictionary.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.link));\n        var tempPrimitive = this.uriAction.element;\n        this.dictionary.items.setValue(this.dictionaryProperties.a, this.uriAction.element);\n    };\n    return PdfUriAnnotation;\n}(PdfActionLinkAnnotation));\nexport { PdfUriAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfPage } from './../pages/pdf-page';\nimport { PointF, RectangleF, SizeF } from './../drawing/pdf-drawing';\nimport { PdfTextElement } from './../graphics/figures/text-element';\nimport { PdfUriAnnotation } from './uri-annotation';\nimport { PdfStringLayouter } from './../graphics/fonts/string-layouter';\nimport { PdfFontStyle } from './../graphics/fonts/enum';\nimport { PdfTextAlignment } from './../graphics/enum';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfNumber } from './../primitives/pdf-number';\n/**\n * `PdfTextWebLink` class represents the class for text web link annotation.\n * ```typescript\n * // create a new PDF document.\n * let document : PdfDocument = new PdfDocument();\n * // add a page to the document.\n * let page1 : PdfPage = document.pages.add();\n * // create the font\n * let font : PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 12);\n * //\n * // create the Text Web Link\n * let textLink : PdfTextWebLink = new PdfTextWebLink();\n * // set the hyperlink\n * textLink.url = 'http://www.google.com';\n * // set the link text\n * textLink.text = 'Google';\n * // set the font\n * textLink.font = font;\n * // draw the hyperlink in PDF page\n * textLink.draw(page1, new PointF(10, 40));\n * //\n * // save the document.\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfTextWebLink = /** @class */ (function (_super) {\n    __extends(PdfTextWebLink, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `PdfTextWebLink` class.\n     * @private\n     */\n    function PdfTextWebLink() {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Internal variable to store `Url`.\n         * @default ''\n         * @private\n         */\n        _this.uniformResourceLocator = '';\n        /**\n         * Internal variable to store `Uri Annotation` object.\n         * @default null\n         * @private\n         */\n        _this.uriAnnotation = null;\n        /**\n         * Checks whether the drawTextWebLink method with `PointF` overload is called or not.\n         * If it set as true, then the start position of each lines excluding firest line is changed as (0, Y).\n         * @private\n         * @hidden\n         */\n        _this.recalculateBounds = false;\n        _this.defaultBorder = new PdfArray();\n        for (var i = 0; i < 3; i++) {\n            _this.defaultBorder.add(new PdfNumber(0));\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfTextWebLink.prototype, \"url\", {\n        // Properties\n        /**\n         * Gets or sets the `Uri address`.\n         * ```typescript\n         * // create a new PDF document.\n         * let document : PdfDocument = new PdfDocument();\n         * // add a page to the document.\n         * let page1 : PdfPage = document.pages.add();\n         * // create the font\n         * let font : PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 12);\n         * // create the Text Web Link\n         * let textLink : PdfTextWebLink = new PdfTextWebLink();\n         * //\n         * // set the hyperlink\n         * textLink.url = 'http://www.google.com';\n         * //\n         * // set the link text\n         * textLink.text = 'Google';\n         * // set the font\n         * textLink.font = font;\n         * // draw the hyperlink in PDF page\n         * textLink.draw(page1, new PointF(10, 40));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.uniformResourceLocator;\n        },\n        set: function (value) {\n            if (value.length === 0) {\n                throw new Error('ArgumentException : Url - string can not be empty');\n            }\n            this.uniformResourceLocator = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfTextWebLink.prototype.draw = function (arg1, arg2) {\n        if (arg1 instanceof PdfPage) {\n            var layout = new PdfStringLayouter();\n            var previousFontStyle = this.font.style;\n            if (arg2 instanceof PointF) {\n                this.recalculateBounds = true;\n                this.font.style = PdfFontStyle.Underline;\n                var layoutResult = layout.layout(this.value, this.font, this.stringFormat, new SizeF((arg1.graphics.clientSize.width - arg2.x), 0), true, arg1.graphics.clientSize);\n                if (layoutResult.lines.length === 1) {\n                    var textSize = this.font.measureString(this.value);\n                    var rect = new RectangleF(arg2, textSize);\n                    rect = this.calculateBounds(rect, textSize.width, arg1.graphics.clientSize.width, arg2.x);\n                    this.uriAnnotation = new PdfUriAnnotation(rect, this.url);\n                    this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);\n                    arg1.annotations.add(this.uriAnnotation);\n                    var result = this.drawText(arg1, arg2);\n                    this.font.style = previousFontStyle;\n                    return result;\n                }\n                else {\n                    var result = this.drawMultipleLineWithPoint(layoutResult, arg1, arg2);\n                    this.font.style = previousFontStyle;\n                    return result;\n                }\n            }\n            else {\n                var layoutResult = layout.layout(this.value, this.font, this.stringFormat, new SizeF(arg2.width, 0), false, new SizeF(0, 0));\n                this.font.style = PdfFontStyle.Underline;\n                if (layoutResult.lines.length === 1) {\n                    var textSize = this.font.measureString(this.value);\n                    var rect = new RectangleF(new PointF(arg2.x, arg2.y), textSize);\n                    rect = this.calculateBounds(rect, textSize.width, arg2.width, arg2.x);\n                    this.uriAnnotation = new PdfUriAnnotation(rect, this.url);\n                    this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);\n                    arg1.annotations.add(this.uriAnnotation);\n                    var returnValue = this.drawText(arg1, arg2);\n                    this.font.style = previousFontStyle;\n                    return returnValue;\n                }\n                else {\n                    var returnValue = this.drawMultipleLineWithBounds(layoutResult, arg1, arg2);\n                    this.font.style = previousFontStyle;\n                    return returnValue;\n                }\n            }\n        }\n        else {\n            var page = new PdfPage();\n            page = arg1.page;\n            return this.draw(page, arg2);\n        }\n    };\n    /* tslint:enable */\n    //Private methods\n    /**\n     * Helper method `Draw` a Multiple Line Text Web Link on the Graphics with the specified location.\n     * @private\n     */\n    PdfTextWebLink.prototype.drawMultipleLineWithPoint = function (result, page, location) {\n        var layoutResult;\n        for (var i = 0; i < result.layoutLines.length; i++) {\n            var size = this.font.measureString(result.lines[i].text);\n            var bounds = new RectangleF(location, size);\n            if (i !== 0) {\n                bounds.x = 0;\n            }\n            this.text = result.lines[i].text;\n            if (bounds.y + size.height > page.graphics.clientSize.height) {\n                if (i !== 0) {\n                    page = page.graphics.getNextPage();\n                    bounds = new RectangleF(0, 0, page.graphics.clientSize.width, size.height);\n                    location.y = 0;\n                }\n                else {\n                    break;\n                }\n            }\n            bounds = this.calculateBounds(bounds, size.width, page.graphics.clientSize.width, bounds.x);\n            this.uriAnnotation = new PdfUriAnnotation(bounds, this.url);\n            this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);\n            page.annotations.add(this.uriAnnotation);\n            if (i !== 0) {\n                layoutResult = this.drawText(page, new PointF(0, bounds.y));\n            }\n            else {\n                layoutResult = this.drawText(page, bounds.x, bounds.y);\n            }\n            location.y += size.height;\n        }\n        return layoutResult;\n    };\n    /**\n     * Helper method `Draw` a Multiple Line Text Web Link on the Graphics with the specified bounds.\n     * @private\n     */\n    PdfTextWebLink.prototype.drawMultipleLineWithBounds = function (result, page, bounds) {\n        var layoutResult;\n        for (var i = 0; i < result.layoutLines.length; i++) {\n            var size = this.font.measureString(result.lines[i].text);\n            var internalBounds = new RectangleF(new PointF(bounds.x, bounds.y), size);\n            internalBounds = this.calculateBounds(internalBounds, size.width, bounds.width, bounds.x);\n            this.text = result.lines[i].text;\n            if (bounds.y + size.height > page.graphics.clientSize.height) {\n                if (i !== 0) {\n                    page = page.graphics.getNextPage();\n                    bounds = new RectangleF(bounds.x, 0, bounds.width, size.height);\n                    internalBounds.y = 0;\n                }\n                else {\n                    break;\n                }\n            }\n            this.uriAnnotation = new PdfUriAnnotation(internalBounds, this.url);\n            this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);\n            page.annotations.add(this.uriAnnotation);\n            layoutResult = this.drawText(page, bounds);\n            bounds.y += size.height;\n        }\n        return layoutResult;\n    };\n    /* tslint:disable */\n    PdfTextWebLink.prototype.calculateBounds = function (currentBounds, lineWidth, maximumWidth, startPosition) {\n        var shift = 0;\n        if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Center) {\n            currentBounds.x = startPosition + (maximumWidth - lineWidth) / 2;\n            currentBounds.width = lineWidth;\n        }\n        else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Right) {\n            currentBounds.x = startPosition + (maximumWidth - lineWidth);\n            currentBounds.width = lineWidth;\n        }\n        else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Justify) {\n            currentBounds.x = startPosition;\n            currentBounds.width = maximumWidth;\n        }\n        else {\n            currentBounds.width = startPosition;\n            currentBounds.width = lineWidth;\n        }\n        return currentBounds;\n    };\n    return PdfTextWebLink;\n}(PdfTextElement));\nexport { PdfTextWebLink };\n","/**\n * PdfNumbersConvertor.ts class for EJ2-PDF\n * @private\n */\nimport { PdfNumberStyle } from './../../pages/enum';\n/**\n * `PdfNumbersConvertor` for convert page number into numbers, roman letters, etc.,\n * @private\n */\nvar PdfNumbersConvertor = /** @class */ (function () {\n    function PdfNumbersConvertor() {\n    }\n    // Static methods\n    /**\n     * Convert string value from page number with correct format.\n     * @private\n     */\n    PdfNumbersConvertor.convert = function (intArabic, numberStyle) {\n        var result = '';\n        switch (numberStyle) {\n            case PdfNumberStyle.None:\n                result = '';\n                break;\n            case PdfNumberStyle.Numeric:\n                result = intArabic.toString();\n                break;\n            case PdfNumberStyle.LowerLatin:\n                result = this.arabicToLetter(intArabic).toLowerCase();\n                break;\n            case PdfNumberStyle.LowerRoman:\n                result = this.arabicToRoman(intArabic).toLowerCase();\n                break;\n            case PdfNumberStyle.UpperLatin:\n                result = this.arabicToLetter(intArabic);\n                break;\n            case PdfNumberStyle.UpperRoman:\n                result = this.arabicToRoman(intArabic);\n                break;\n        }\n        return result;\n    };\n    /**\n     * Converts `arabic to roman` letters.\n     * @private\n     */\n    PdfNumbersConvertor.arabicToRoman = function (intArabic) {\n        var retval = '';\n        retval += this.generateNumber(intArabic, 1000, 'M');\n        retval += this.generateNumber(intArabic, 900, 'CM');\n        retval += this.generateNumber(intArabic, 500, 'D');\n        retval += this.generateNumber(intArabic, 400, 'CD');\n        retval += this.generateNumber(intArabic, 100, 'C');\n        retval += this.generateNumber(intArabic, 90, 'XC');\n        retval += this.generateNumber(intArabic, 50, 'L');\n        retval += this.generateNumber(intArabic, 40, 'XL');\n        retval += this.generateNumber(intArabic, 10, 'X');\n        retval += this.generateNumber(intArabic, 9, 'IX');\n        retval += this.generateNumber(intArabic, 5, 'V');\n        retval += this.generateNumber(intArabic, 4, 'IV');\n        retval += this.generateNumber(intArabic, 1, 'I');\n        return retval.toString();\n    };\n    /**\n     * Converts `arabic to normal letters`.\n     * @private\n     */\n    PdfNumbersConvertor.arabicToLetter = function (arabic) {\n        var stack = this.convertToLetter(arabic);\n        var result = '';\n        while (stack.length > 0) {\n            var num = stack.pop();\n            result = this.appendChar(result, num);\n        }\n        return result.toString();\n    };\n    /**\n     * Generate a string value of an input number.\n     * @private\n     */\n    PdfNumbersConvertor.generateNumber = function (value, magnitude, letter) {\n        var numberstring = '';\n        while (value >= magnitude) {\n            value -= magnitude;\n            numberstring += letter;\n        }\n        return numberstring.toString();\n    };\n    /**\n     * Convert a input number into letters.\n     * @private\n     */\n    PdfNumbersConvertor.convertToLetter = function (arabic) {\n        if (arabic <= 0) {\n            throw Error('ArgumentOutOfRangeException-arabic, Value can not be less 0');\n        }\n        var stack = [];\n        while (arabic > this.letterLimit) {\n            var remainder = arabic % this.letterLimit;\n            if (remainder === 0.0) {\n                arabic = arabic / this.letterLimit - 1;\n                remainder = this.letterLimit;\n            }\n            else {\n                arabic /= this.letterLimit;\n            }\n            stack.push(remainder);\n        }\n        stack.push(arabic);\n        return stack;\n    };\n    /**\n     * Convert number to actual string value.\n     * @private\n     */\n    PdfNumbersConvertor.appendChar = function (builder, value) {\n        var letter = String.fromCharCode(PdfNumbersConvertor.acsiiStartIndex + value);\n        builder += letter;\n        return builder;\n    };\n    // Fields\n    /**\n     * numbers of letters in english [readonly].\n     * @default = 26.0\n     * @private\n     */\n    PdfNumbersConvertor.letterLimit = 26.0;\n    /**\n     * Resturns `acsii start index` value.\n     * @default 64\n     * @private\n     */\n    PdfNumbersConvertor.acsiiStartIndex = (65 - 1);\n    return PdfNumbersConvertor;\n}());\nexport { PdfNumbersConvertor };\n","/**\n * Represent class to store information about `template and value pairs`.\n * @private\n */\nvar PdfTemplateValuePair = /** @class */ (function () {\n    function PdfTemplateValuePair(template, value) {\n        // Fields\n        /**\n         * Internal variable to store template.\n         * @default null\n         * @private\n         */\n        this.pdfTemplate = null;\n        /**\n         * Intenal variable to store value.\n         * @private\n         */\n        this.content = '';\n        if (typeof template === 'undefined') {\n            //\n        }\n        else {\n            this.template = template;\n            this.value = value;\n        }\n    }\n    Object.defineProperty(PdfTemplateValuePair.prototype, \"template\", {\n        // Properties\n        /**\n         * Gets or sets the template.\n         * @private\n         */\n        get: function () {\n            return this.pdfTemplate;\n        },\n        set: function (value) {\n            this.pdfTemplate = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTemplateValuePair.prototype, \"value\", {\n        /**\n         * Gets or sets the value.\n         * @private\n         */\n        get: function () {\n            return this.content;\n        },\n        set: function (value) {\n            this.content = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfTemplateValuePair;\n}());\nexport { PdfTemplateValuePair };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfAutomaticField.ts class for EJ2-PDF\n */\nimport { PdfAutomaticField } from './automatic-field';\nimport { TemporaryDictionary } from './../../collections/object-object-pair/dictionary';\nimport { PdfTemplateValuePair } from './pdf-template-value-pair';\nimport { SizeF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfTemplate } from './../../graphics/figures/pdf-template';\n/**\n * Represents automatic field which has the same value within the `PdfGraphics`.\n */\nvar PdfMultipleValueField = /** @class */ (function (_super) {\n    __extends(PdfMultipleValueField, _super);\n    function PdfMultipleValueField() {\n        var _this = _super.call(this) || this;\n        //  Fields\n        /**\n         * Stores the instance of dictionary values of `graphics and template value pair`.\n         * @private\n         */\n        _this.list = new TemporaryDictionary();\n        return _this;\n    }\n    // Implementation\n    /* tslint:disable */\n    PdfMultipleValueField.prototype.performDraw = function (graphics, location, scalingX, scalingY) {\n        _super.prototype.performDrawHelper.call(this, graphics, location, scalingX, scalingY);\n        var value = this.getValue(graphics);\n        var template = new PdfTemplate(this.getSize());\n        this.list.setValue(graphics, new PdfTemplateValuePair(template, value));\n        var g = template.graphics;\n        var size = this.getSize();\n        template.graphics.drawString(value, this.getFont(), this.pen, this.getBrush(), 0, 0, size.width, size.height, this.stringFormat);\n        var drawLocation = new PointF(location.x + this.location.x, location.y + this.location.y);\n        graphics.drawPdfTemplate(template, drawLocation, new SizeF(template.width * scalingX, template.height * scalingY));\n    };\n    return PdfMultipleValueField;\n}(PdfAutomaticField));\nexport { PdfMultipleValueField };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfBrush } from './../../graphics/brushes/pdf-brush';\nimport { PdfNumberStyle } from './../../pages/enum';\nimport { PdfNumbersConvertor } from './pdf-numbers-convertor';\nimport { PdfMultipleValueField } from './multiple-value-field';\n/**\n * Represents PDF document `page number field`.\n * @public\n */\nvar PdfPageNumberField = /** @class */ (function (_super) {\n    __extends(PdfPageNumberField, _super);\n    function PdfPageNumberField(font, arg2) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Stores the number style of the page number field.\n         * @private\n         */\n        _this.internalNumberStyle = PdfNumberStyle.Numeric;\n        if (typeof arg2 === 'undefined') {\n            _this.font = font;\n        }\n        else if (arg2 instanceof PdfBrush) {\n            _this.font = font;\n            _this.brush = arg2;\n        }\n        else {\n            _this.font = font;\n            _this.bounds = arg2;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfPageNumberField.prototype, \"numberStyle\", {\n        // Properties\n        /**\n         * Gets and sets the number style of the page number field.\n         * @private\n         */\n        get: function () {\n            return this.internalNumberStyle;\n        },\n        set: function (value) {\n            this.internalNumberStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Return the `string` value of page number field.\n     * @public\n     */\n    PdfPageNumberField.prototype.getValue = function (graphics) {\n        var result = null;\n        var page = this.getPageFromGraphics(graphics);\n        result = this.internalGetValue(page);\n        return result;\n    };\n    /**\n     * Internal method to `get actual value of page number`.\n     * @private\n     */\n    PdfPageNumberField.prototype.internalGetValue = function (page) {\n        var document = page.document;\n        var pageIndex = document.pages.indexOf(page) + 1;\n        return PdfNumbersConvertor.convert(pageIndex, this.numberStyle);\n    };\n    return PdfPageNumberField;\n}(PdfMultipleValueField));\nexport { PdfPageNumberField };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfCompositeField.ts class for EJ2-PDF\n */\nimport { PdfMultipleValueField } from './multiple-value-field';\n/**\n * Represents class which can concatenate multiple automatic fields into single string.\n */\nvar PdfCompositeField = /** @class */ (function (_super) {\n    __extends(PdfCompositeField, _super);\n    // Constructor\n    /**\n     * Initialize a new instance of `PdfCompositeField` class.\n     * @param font Font of the field.\n     * @param brush Color of the field.\n     * @param text Content of the field.\n     * @param list List of the automatic fields in specific order based on the text content.\n     */\n    function PdfCompositeField(font, brush, text) {\n        var list = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            list[_i - 3] = arguments[_i];\n        }\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Stores the array of automatic fields.\n         * @private\n         */\n        _this.internalAutomaticFields = null;\n        /**\n         * Stores the text value of the field.\n         * @private\n         */\n        _this.internalText = '';\n        _this.font = font;\n        _this.brush = brush;\n        _this.text = text;\n        _this.automaticFields = list;\n        return _this;\n    }\n    Object.defineProperty(PdfCompositeField.prototype, \"text\", {\n        // Properties\n        /**\n         * Gets and sets the content of the field.\n         * @public\n         */\n        get: function () {\n            return this.internalText;\n        },\n        set: function (value) {\n            this.internalText = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCompositeField.prototype, \"automaticFields\", {\n        /**\n         * Gets and sets the list of the field to drawn.\n         * @public\n         */\n        get: function () {\n            return this.internalAutomaticFields;\n        },\n        set: function (value) {\n            this.internalAutomaticFields = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Return the actual value generated from the list of automatic fields.\n     * @public\n     */\n    PdfCompositeField.prototype.getValue = function (graphics) {\n        var values = [];\n        var text = this.text.toString();\n        if (typeof this.automaticFields !== 'undefined' && this.automaticFields != null && this.automaticFields.length > 0) {\n            for (var i = 0; i < this.automaticFields.length; i++) {\n                var automaticField = this.automaticFields[i];\n                text = text.replace('{' + i + '}', automaticField.getValue(graphics));\n            }\n        }\n        return text;\n    };\n    return PdfCompositeField;\n}(PdfMultipleValueField));\nexport { PdfCompositeField };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfSingleValueField.ts class for EJ2-PDF\n */\nimport { PdfAutomaticField } from './automatic-field';\nimport { TemporaryDictionary } from './../../collections/object-object-pair/dictionary';\nimport { PdfTemplateValuePair } from './pdf-template-value-pair';\nimport { PointF, SizeF } from './../../drawing/pdf-drawing';\nimport { PdfTemplate } from './../../graphics/figures/pdf-template';\n/**\n * Represents automatic field which has the same value in the whole document.\n */\nvar PdfSingleValueField = /** @class */ (function (_super) {\n    __extends(PdfSingleValueField, _super);\n    // Constructors\n    function PdfSingleValueField() {\n        var _this = _super.call(this) || this;\n        // Fields\n        /* tslint:disable */\n        _this.list = new TemporaryDictionary();\n        /* tslint:enable */\n        _this.painterGraphics = [];\n        return _this;\n    }\n    PdfSingleValueField.prototype.performDraw = function (graphics, location, scalingX, scalingY) {\n        _super.prototype.performDrawHelper.call(this, graphics, location, scalingX, scalingY);\n        var page = this.getPageFromGraphics(graphics);\n        var document = page.document;\n        var textValue = this.getValue(graphics);\n        /* tslint:disable */\n        if (this.list.containsKey(document)) {\n            var pair = this.list.getValue(document);\n            var drawLocation = new PointF(location.x + this.location.x, location.y + this.location.y);\n            graphics.drawPdfTemplate(pair.template, drawLocation, new SizeF(pair.template.width * scalingX, pair.template.height * scalingY));\n            this.painterGraphics.push(graphics);\n        }\n        else {\n            var size = this.getSize();\n            var template = new PdfTemplate(size);\n            this.list.setValue(document, new PdfTemplateValuePair(template, textValue));\n            template.graphics.drawString(textValue, this.getFont(), this.pen, this.getBrush(), 0, 0, size.width, size.height, this.stringFormat);\n            var drawLocation = new PointF(location.x + this.location.x, location.y + this.location.y);\n            graphics.drawPdfTemplate(template, drawLocation, new SizeF(template.width * scalingX, template.height * scalingY));\n            this.painterGraphics.push(graphics);\n        }\n        /* tslint:enable */\n    };\n    return PdfSingleValueField;\n}(PdfAutomaticField));\nexport { PdfSingleValueField };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfPageCountField.ts class for EJ2-PDF\n */\nimport { PdfSingleValueField } from './single-value-field';\nimport { PdfNumberStyle } from './../../pages/enum';\nimport { PdfBrush } from './../../graphics/brushes/pdf-brush';\nimport { PdfNumbersConvertor } from './pdf-numbers-convertor';\n/**\n * Represents total PDF document page count automatic field.\n */\nvar PdfPageCountField = /** @class */ (function (_super) {\n    __extends(PdfPageCountField, _super);\n    function PdfPageCountField(font, arg2) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Stores the number style of the field.\n         * @private\n         */\n        _this.internalNumberStyle = PdfNumberStyle.Numeric;\n        if (typeof arg2 === 'undefined') {\n            _this.font = font;\n        }\n        else if (arg2 instanceof PdfBrush) {\n            _this.font = font;\n            _this.brush = arg2;\n        }\n        else {\n            _this.font = font;\n            _this.bounds = arg2;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfPageCountField.prototype, \"numberStyle\", {\n        // Properties\n        /**\n         * Gets and sets the number style of the field.\n         * @public\n         */\n        get: function () {\n            return this.internalNumberStyle;\n        },\n        set: function (value) {\n            this.internalNumberStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Return the actual value of the content to drawn.\n     * @public\n     */\n    PdfPageCountField.prototype.getValue = function (graphics) {\n        var result = null;\n        var page = this.getPageFromGraphics(graphics);\n        var document = page.section.parent.document;\n        var count = document.pages.count;\n        result = PdfNumbersConvertor.convert(count, this.numberStyle);\n        return result;\n    };\n    return PdfPageCountField;\n}(PdfSingleValueField));\nexport { PdfPageCountField };\n","/**\n * public Enum for `PdfDestinationMode`.\n * @private\n */\nexport var PdfDestinationMode;\n(function (PdfDestinationMode) {\n    /**\n     * Specifies the type of `Location`.\n     * @private\n     */\n    PdfDestinationMode[PdfDestinationMode[\"Location\"] = 0] = \"Location\";\n    /**\n     * Specifies the type of `FitToPage`.\n     * @private\n     */\n    PdfDestinationMode[PdfDestinationMode[\"FitToPage\"] = 1] = \"FitToPage\";\n    /**\n     * Specifies the type of `FitR`.\n     * @private\n     */\n    PdfDestinationMode[PdfDestinationMode[\"FitR\"] = 2] = \"FitR\";\n})(PdfDestinationMode || (PdfDestinationMode = {}));\n","import { PointF, RectangleF } from './../drawing/pdf-drawing';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfPageRotateAngle } from './../pages/enum';\nimport { PdfDestinationMode } from './../general/enum';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * `PdfDestination` class represents an anchor in the document\n * where bookmarks or annotations can direct when clicked.\n */\nvar PdfDestination = /** @class */ (function () {\n    function PdfDestination(arg1, arg2) {\n        // Fields\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Type of the `destination`.\n         * @private\n         */\n        this.destinationMode = PdfDestinationMode.Location;\n        /**\n         * `Zoom` factor.\n         * @private\n         * @default 0\n         */\n        this.zoomFactor = 0;\n        /**\n         * `Location` of the destination.\n         * @default new PointF() with 0 ,0 as co-ordinates\n         * @private\n         */\n        this.destinationLocation = new PointF(0, 0);\n        /**\n         * `Bounds` of the destination as RectangleF.\n         * @default RectangleF.Empty\n         * @private\n         */\n        this.bounds = new RectangleF();\n        /**\n         * Pdf primitive representing `this` object.\n         * @private\n         */\n        this.array = new PdfArray();\n        var angle = PdfPageRotateAngle.RotateAngle0;\n        this.destinationLocation = new PointF(0, this.destinationLocation.y);\n        this.pdfPage = arg1;\n        if (arg2 instanceof PointF) {\n            this.destinationLocation = arg2;\n        }\n        else {\n            this.bounds = arg2;\n        }\n    }\n    Object.defineProperty(PdfDestination.prototype, \"zoom\", {\n        // Properties\n        /**\n         * Gets and Sets the `zoom` factor.\n         * @private\n         */\n        get: function () {\n            return this.zoomFactor;\n        },\n        set: function (value) {\n            this.zoomFactor = value;\n            this.initializePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"page\", {\n        /**\n         * Gets and Sets the `page` object.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        set: function (value) {\n            this.pdfPage = value;\n            this.initializePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"mode\", {\n        /**\n         * Gets and Sets the destination `mode`.\n         * @private\n         */\n        get: function () {\n            return this.destinationMode;\n        },\n        set: function (value) {\n            this.destinationMode = value;\n            this.initializePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"location\", {\n        /**\n         * Gets and Sets the `location`.\n         * @private\n         */\n        get: function () {\n            return this.destinationLocation;\n        },\n        set: function (value) {\n            this.destinationLocation = value;\n            this.initializePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Translates` co-ordinates to PDF co-ordinate system (lower/left).\n     * @private\n     */\n    PdfDestination.prototype.pointToNativePdf = function (page, point) {\n        var section = page.section;\n        return section.pointToNativePdf(page, point);\n    };\n    /**\n     * `In fills` array by correct values.\n     * @private\n     */\n    PdfDestination.prototype.initializePrimitive = function () {\n        this.array.clear();\n        this.array.add(new PdfReferenceHolder(this.pdfPage));\n        switch (this.destinationMode) {\n            case PdfDestinationMode.Location:\n                var simplePage = this.pdfPage;\n                var point = new PointF();\n                point = this.pointToNativePdf(simplePage, this.destinationLocation);\n                this.array.add(new PdfName(this.dictionaryProperties.xyz));\n                this.array.add(new PdfNumber(point.x));\n                this.array.add(new PdfNumber(point.y));\n                this.array.add(new PdfNumber(this.zoomFactor));\n                break;\n            case PdfDestinationMode.FitToPage:\n                this.array.add(new PdfName(this.dictionaryProperties.fit));\n                break;\n        }\n    };\n    Object.defineProperty(PdfDestination.prototype, \"element\", {\n        /**\n         * Gets the `element` representing this object.\n         * @private\n         */\n        get: function () {\n            this.initializePrimitive();\n            return this.array;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfDestination;\n}());\nexport { PdfDestination };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfTrueTypeFont.ts class for EJ2-PDF\n */\nimport { UnicodeTrueTypeFont } from './unicode-true-type-font';\nimport { PdfFont } from './pdf-font';\nimport { PdfFontStyle } from './enum';\nimport { PdfDocument } from './../../document/pdf-document';\nimport { PdfTextDirection } from './../enum';\nimport { RtlRenderer } from './rtl-renderer';\n//https://www.giftofspeed.com/base64-encoder/\nvar PdfTrueTypeFont = /** @class */ (function (_super) {\n    __extends(PdfTrueTypeFont, _super);\n    function PdfTrueTypeFont(base64String, size, style) {\n        var _this = _super.call(this, size) || this;\n        /**\n         * Indicates whether the font is embedded or not.\n         * @private\n         */\n        _this.isEmbedFont = false;\n        /**\n         * Indicates whether the font is unicoded or not.\n         * @private\n         */\n        _this.isUnicode = true;\n        if (style !== undefined) {\n            _this.createFontInternal(base64String, style);\n        }\n        else {\n            _this.createFontInternal(base64String, PdfFontStyle.Regular);\n        }\n        return _this;\n    }\n    PdfTrueTypeFont.prototype.equalsToFont = function (font) {\n        var result = false;\n        //let result : boolean = this.fontInternal.equalsToFont(font);\n        return result;\n    };\n    PdfTrueTypeFont.prototype.getLineWidth = function (line, format) {\n        var width = 0;\n        if (format !== null && format.textDirection !== PdfTextDirection.None) {\n            var returnValue = this.getUnicodeLineWidth(line, /*out*/ width, format);\n            width = returnValue.width;\n        }\n        else {\n            width = this.fontInternal.getLineWidth(line);\n        }\n        var size = this.metrics.getSize(format);\n        width *= (PdfFont.charSizeMultiplier * size);\n        width = this.applyFormatSettings(line, format, width);\n        return width;\n    };\n    /**\n     * Returns width of the char.\n     */\n    PdfTrueTypeFont.prototype.getCharWidth = function (charCode, format) {\n        var codeWidth = this.fontInternal.getCharWidth(charCode);\n        var size = this.metrics.getSize(format);\n        codeWidth *= (0.001 * size);\n        return codeWidth;\n    };\n    //Implementation\n    PdfTrueTypeFont.prototype.createFontInternal = function (base64String, style) {\n        this.fontInternal = new UnicodeTrueTypeFont(base64String, this.size);\n        this.calculateStyle(style);\n        this.initializeInternals();\n    };\n    PdfTrueTypeFont.prototype.calculateStyle = function (style) {\n        var iStyle = this.fontInternal.ttfMetrics.macStyle;\n        if ((style & PdfFontStyle.Underline) !== 0) {\n            iStyle |= PdfFontStyle.Underline;\n        }\n        if ((style & PdfFontStyle.Strikeout) !== 0) {\n            iStyle |= PdfFontStyle.Strikeout;\n        }\n        this.setStyle(iStyle);\n    };\n    PdfTrueTypeFont.prototype.initializeInternals = function () {\n        var equalFont = null;\n        if (PdfDocument.enableCache) {\n            // Search for the similar fonts.\n            equalFont = PdfDocument.cache.search(this);\n        }\n        var internals = null;\n        // There is not equal font in the cache.\n        if (equalFont !== null && equalFont !== undefined) {\n            // Get the settings from the cached font.\n            internals = equalFont.getInternals();\n            var metrics = equalFont.metrics;\n            metrics = metrics.clone();\n            metrics.size = this.size;\n            this.metrics = metrics;\n            this.fontInternal = equalFont.fontInternal;\n        }\n        else {\n            if (equalFont == null) {\n                if (this.fontInternal instanceof UnicodeTrueTypeFont) {\n                    this.fontInternal.isEmbed = this.isEmbedFont;\n                }\n                this.fontInternal.createInternals();\n                internals = this.fontInternal.getInternals();\n                this.metrics = this.fontInternal.metrics;\n            }\n        }\n        this.metrics.isUnicodeFont = true;\n        this.setInternals(internals);\n        //this.ttfReader = (this.fontInternal as UnicodeTrueTypeFont).ttfReader;\n    };\n    /**\n     * Stores used symbols.\n     */\n    PdfTrueTypeFont.prototype.setSymbols = function (text) {\n        var internalFont = this.fontInternal;\n        if (internalFont != null) {\n            internalFont.setSymbols(text);\n        }\n    };\n    Object.defineProperty(PdfTrueTypeFont.prototype, \"Unicode\", {\n        /**\n         * Property\n         *\n         */\n        get: function () {\n            return this.isUnicode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // public get Font() : UnicodeTrueTypeFont {\n    //     return this.fontInternal as UnicodeTrueTypeFont;\n    // }\n    PdfTrueTypeFont.prototype.getUnicodeLineWidth = function (line, /*out*/ width, format) {\n        // if (line == null) {\n        //     throw new Error('ArgumentNullException : line');\n        // }\n        width = 0;\n        var glyphIndices = null;\n        var rtlRender = new RtlRenderer();\n        /* tslint:disable-next-line:max-line-length */\n        var result = rtlRender.getGlyphIndex(line, this, (format.textDirection === PdfTextDirection.RightToLeft) ? true : false, /*out*/ glyphIndices, true);\n        var resultGlyph = result.success;\n        glyphIndices = result.glyphs;\n        if (resultGlyph && glyphIndices !== null) {\n            var ttfReader = this.fontInternal.ttfReader;\n            for (var i = 0, len = glyphIndices.length; i < len; i++) {\n                var glyphIndex = glyphIndices[i];\n                var glyph = ttfReader.getGlyph(glyphIndex);\n                if (glyph !== null && typeof glyph !== 'undefined') {\n                    width += glyph.width;\n                }\n            }\n        }\n        return { success: resultGlyph, width: width };\n    };\n    return PdfTrueTypeFont;\n}(PdfFont));\nexport { PdfTrueTypeFont };\n","/**\n * PdfPageTemplateElement.ts class for EJ2-Pdf\n */\nimport { PdfDockStyle, PdfAlignmentStyle, TemplateType } from './enum';\nimport { PointF, SizeF } from './../drawing/pdf-drawing';\nimport { PdfTemplate } from './../graphics/figures/pdf-template';\nimport { PdfPage } from './pdf-page';\nimport { RectangleF } from './../drawing/pdf-drawing';\n/**\n * Describes a `page template` object that can be used as header/footer, watermark or stamp.\n */\nvar PdfPageTemplateElement = /** @class */ (function () {\n    /* tslint:disable */\n    function PdfPageTemplateElement(arg1, arg2, arg3, arg4, arg5) {\n        if (arg1 instanceof RectangleF && typeof arg2 === 'undefined') {\n            this.InitiateBounds(arg1.x, arg1.y, arg1.width, arg1.height, null);\n        }\n        else if (arg1 instanceof RectangleF && arg2 instanceof PdfPage && typeof arg3 === 'undefined') {\n            this.InitiateBounds(arg1.x, arg1.y, arg1.width, arg1.height, arg2);\n        }\n        else if (arg1 instanceof PointF && arg2 instanceof SizeF && typeof arg3 === 'undefined') {\n            this.InitiateBounds(arg1.x, arg1.y, arg2.width, arg2.height, null);\n        }\n        else if (arg1 instanceof PointF && arg2 instanceof SizeF && arg3 instanceof PdfPage && typeof arg4 === 'undefined') {\n            this.InitiateBounds(arg1.x, arg1.y, arg2.width, arg2.height, arg3);\n        }\n        else if (arg1 instanceof SizeF && typeof arg2 === 'undefined') {\n            this.InitiateBounds(0, 0, arg1.width, arg1.height, null);\n        }\n        else if (typeof arg1 === 'number' && typeof arg2 === 'number' && typeof arg3 === 'undefined') {\n            this.InitiateBounds(0, 0, arg1, arg2, null);\n        }\n        else if (typeof arg1 === 'number' && typeof arg2 === 'number' && arg3 instanceof PdfPage && typeof arg4 === 'undefined') {\n            this.InitiateBounds(0, 0, arg1, arg2, arg3);\n        }\n        else if (typeof arg1 === 'number' && typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'number' && typeof arg5 === 'undefined') {\n            this.InitiateBounds(arg1, arg2, arg3, arg4, null);\n        }\n        else {\n            this.InitiateBounds(arg1, arg2, arg3, arg4, null);\n            // this.graphics.colorSpace = this.page.document.colorSpace;\n        }\n        /* tslint:enable */\n    }\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"dock\", {\n        // Properties\n        /**\n         * Gets or sets the `dock style` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.dockStyle;\n        },\n        set: function (value) {\n            // if (this.dockStyle !== value && this.Type === TemplateType.None) {\n            this.dockStyle = value;\n            // Reset alignment.\n            this.resetAlignment();\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"alignment\", {\n        /**\n         * Gets or sets `alignment` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.alignmentStyle;\n        },\n        set: function (value) {\n            // if (this.alignmentStyle !== value) {\n            this.setAlignment(value);\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"foreground\", {\n        /**\n         * Indicates whether the page template is located `in front of the page layers or behind of it`.\n         * @private\n         */\n        get: function () {\n            return this.isForeground;\n        },\n        set: function (value) {\n            // if (this.foreground !== value) {\n            this.isForeground = value;\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"background\", {\n        /**\n         * Indicates whether the page template is located `behind of the page layers or in front of it`.\n         * @private\n         */\n        get: function () {\n            return !this.isForeground;\n        },\n        set: function (value) {\n            this.isForeground = !value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"location\", {\n        /**\n         * Gets or sets `location` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.currentLocation;\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.currentLocation = value;\n            }\n            else {\n                //\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"x\", {\n        /**\n         * Gets or sets `X` co-ordinate of the template element on the page.\n         * @private\n         */\n        get: function () {\n            var value = (typeof this.currentLocation !== 'undefined') ? this.currentLocation.x : 0;\n            return value;\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.currentLocation.x = value;\n            }\n            else {\n                //\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"y\", {\n        /**\n         * Gets or sets `Y` co-ordinate of the template element on the page.\n         * @private\n         */\n        get: function () {\n            var value = (typeof this.currentLocation !== 'undefined') ? this.currentLocation.y : 0;\n            return value;\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.currentLocation.y = value;\n            }\n            else {\n                //\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"size\", {\n        /**\n         * Gets or sets `size` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.template.size;\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.template.reset(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"width\", {\n        /**\n         * Gets or sets `width` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.template.width;\n        },\n        set: function (value) {\n            if (this.template.width !== value && this.type === TemplateType.None) {\n                var size = this.template.size;\n                size.width = value;\n                this.template.reset(size);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"height\", {\n        /**\n         * Gets or sets `height` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.template.height;\n        },\n        set: function (value) {\n            if (this.template.height !== value && this.type === TemplateType.None) {\n                var size = this.template.size;\n                size.height = value;\n                this.template.reset(size);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"graphics\", {\n        /**\n         * Gets `graphics` context of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.template.graphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"template\", {\n        /**\n         * Gets Pdf `template` object.\n         * @private\n         */\n        get: function () {\n            // if (typeof this.pdfTemplate === 'undefined' || this.pdfTemplate == null) {\n            //     this.pdfTemplate = new PdfTemplate(this.size);\n            // }\n            return this.pdfTemplate;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"type\", {\n        /**\n         * Gets or sets `type` of the usage of this page template.\n         * @private\n         */\n        get: function () {\n            return this.templateType;\n        },\n        set: function (value) {\n            this.updateDocking(value);\n            this.templateType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"bounds\", {\n        /**\n         * Gets or sets `bounds` of the page template.\n         * @public\n         */\n        get: function () {\n            return new RectangleF(new PointF(this.x, this.y), this.size);\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.location = new PointF(value.x, value.y);\n                this.size = new SizeF(value.width, value.height);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Initialize Bounds` Initialize the bounds value of the template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.InitiateBounds = function (arg1, arg2, arg3, arg4, arg5) {\n        this.x = arg1;\n        this.y = arg2;\n        this.pdfTemplate = new PdfTemplate(arg3, arg4);\n        // this.graphics.colorSpace = this.page.document.colorSpace;\n    };\n    /**\n     * `Updates Dock` property if template is used as header/footer.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.updateDocking = function (type) {\n        if (type !== TemplateType.None) {\n            switch (type) {\n                case TemplateType.Top:\n                    this.dock = PdfDockStyle.Top;\n                    break;\n                case TemplateType.Bottom:\n                    this.dock = PdfDockStyle.Bottom;\n                    break;\n                case TemplateType.Left:\n                    this.dock = PdfDockStyle.Left;\n                    break;\n                case TemplateType.Right:\n                    this.dock = PdfDockStyle.Right;\n                    break;\n            }\n            this.resetAlignment();\n        }\n    };\n    /**\n     * `Resets alignment` of the template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.resetAlignment = function () {\n        this.alignment = PdfAlignmentStyle.None;\n    };\n    /**\n     * `Sets alignment` of the template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.setAlignment = function (alignment) {\n        if (this.dock === PdfDockStyle.None) {\n            this.alignmentStyle = alignment;\n        }\n        else {\n            // Template is docked and alignment has been changed.\n            var canBeSet = false;\n            switch (this.dock) {\n                case PdfDockStyle.Left:\n                    canBeSet = (alignment === PdfAlignmentStyle.TopLeft || alignment === PdfAlignmentStyle.MiddleLeft ||\n                        alignment === PdfAlignmentStyle.BottomLeft || alignment === PdfAlignmentStyle.None);\n                    break;\n                case PdfDockStyle.Top:\n                    canBeSet = (alignment === PdfAlignmentStyle.TopLeft || alignment === PdfAlignmentStyle.TopCenter ||\n                        alignment === PdfAlignmentStyle.TopRight || alignment === PdfAlignmentStyle.None);\n                    break;\n                case PdfDockStyle.Right:\n                    canBeSet = (alignment === PdfAlignmentStyle.TopRight || alignment === PdfAlignmentStyle.MiddleRight ||\n                        alignment === PdfAlignmentStyle.BottomRight || alignment === PdfAlignmentStyle.None);\n                    break;\n                case PdfDockStyle.Bottom:\n                    canBeSet = (alignment === PdfAlignmentStyle.BottomLeft || alignment === PdfAlignmentStyle.BottomCenter\n                        || alignment === PdfAlignmentStyle.BottomRight || alignment === PdfAlignmentStyle.None);\n                    break;\n                case PdfDockStyle.Fill:\n                    canBeSet = (alignment === PdfAlignmentStyle.MiddleCenter || alignment === PdfAlignmentStyle.None);\n                    break;\n            }\n            if (canBeSet) {\n                this.alignmentStyle = alignment;\n            }\n        }\n    };\n    /**\n     * Draws the template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.draw = function (layer, document) {\n        var page = layer.page;\n        var bounds = this.calculateBounds(page, document);\n        if (bounds.x === -0) {\n            bounds.x = 0;\n        }\n        layer.graphics.drawPdfTemplate(this.template, new PointF(bounds.x, bounds.y), new SizeF(bounds.width, bounds.height));\n    };\n    /**\n     * Calculates bounds of the page template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.calculateBounds = function (page, document) {\n        var result = this.bounds;\n        if (this.alignmentStyle !== PdfAlignmentStyle.None) {\n            result = this.getAlignmentBounds(page, document);\n        }\n        else if (this.dockStyle !== PdfDockStyle.None) {\n            result = this.getDockBounds(page, document);\n        }\n        return result;\n    };\n    /**\n     * Calculates bounds according to the alignment.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getAlignmentBounds = function (page, document) {\n        var result = this.bounds;\n        if (this.type === TemplateType.None) {\n            result = this.getSimpleAlignmentBounds(page, document);\n        }\n        else {\n            result = this.getTemplateAlignmentBounds(page, document);\n        }\n        return result;\n    };\n    /**\n     * Calculates bounds according to the alignment.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getSimpleAlignmentBounds = function (page, document) {\n        var bounds = this.bounds;\n        var pdfSection = page.section;\n        var actualBounds = pdfSection.getActualBounds(document, page, false);\n        var x = this.x;\n        var y = this.y;\n        switch (this.alignmentStyle) {\n            case PdfAlignmentStyle.TopLeft:\n                x = 0;\n                y = 0;\n                break;\n            case PdfAlignmentStyle.TopCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = 0;\n                break;\n            case PdfAlignmentStyle.TopRight:\n                x = actualBounds.width - this.width;\n                y = 0;\n                break;\n            case PdfAlignmentStyle.MiddleLeft:\n                x = 0;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.MiddleCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.MiddleRight:\n                x = actualBounds.width - this.width;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.BottomLeft:\n                x = 0;\n                y = actualBounds.height - this.height;\n                break;\n            case PdfAlignmentStyle.BottomCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = actualBounds.height - this.height;\n                break;\n            case PdfAlignmentStyle.BottomRight:\n                x = actualBounds.width - this.width;\n                y = actualBounds.height - this.height;\n                break;\n        }\n        bounds.x = x;\n        bounds.y = y;\n        return bounds;\n    };\n    /**\n     * Calculates bounds according to the alignment.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getTemplateAlignmentBounds = function (page, document) {\n        var result = this.bounds;\n        var section = page.section;\n        var actualBounds = section.getActualBounds(document, page, false);\n        var x = this.x;\n        var y = this.y;\n        switch (this.alignmentStyle) {\n            case PdfAlignmentStyle.TopLeft:\n                if (this.type === TemplateType.Left) {\n                    x = -actualBounds.x;\n                    y = 0;\n                }\n                else if (this.type === TemplateType.Top) {\n                    x = -actualBounds.x;\n                    y = -actualBounds.y;\n                }\n                break;\n            case PdfAlignmentStyle.TopCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = -actualBounds.y;\n                break;\n            case PdfAlignmentStyle.TopRight:\n                if (this.type === TemplateType.Right) {\n                    x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                    y = 0;\n                }\n                else if (this.type === TemplateType.Top) {\n                    x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                    y = -actualBounds.y;\n                }\n                break;\n            case PdfAlignmentStyle.MiddleLeft:\n                x = -actualBounds.x;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.MiddleCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.MiddleRight:\n                x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.BottomLeft:\n                if (this.type === TemplateType.Left) {\n                    x = -actualBounds.x;\n                    y = actualBounds.height - this.height;\n                }\n                else if (this.type === TemplateType.Bottom) {\n                    x = -actualBounds.x;\n                    y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;\n                }\n                break;\n            case PdfAlignmentStyle.BottomCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;\n                break;\n            case PdfAlignmentStyle.BottomRight:\n                if (this.type === TemplateType.Right) {\n                    x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                    y = actualBounds.height - this.height;\n                }\n                else if (this.type === TemplateType.Bottom) {\n                    x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                    y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;\n                }\n                break;\n        }\n        result.x = x;\n        result.y = y;\n        return result;\n    };\n    /**\n     * Calculates bounds according to the docking.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getDockBounds = function (page, document) {\n        var result = this.bounds;\n        if (this.type === TemplateType.None) {\n            result = this.getSimpleDockBounds(page, document);\n        }\n        else {\n            result = this.getTemplateDockBounds(page, document);\n        }\n        return result;\n    };\n    /**\n     * Calculates bounds according to the docking.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getSimpleDockBounds = function (page, document) {\n        var result = this.bounds;\n        var section = page.section;\n        var actualBounds = section.getActualBounds(document, page, false);\n        var x = this.x;\n        var y = this.y;\n        var width = this.width;\n        var height = this.height;\n        switch (this.dockStyle) {\n            case PdfDockStyle.Left:\n                x = 0;\n                y = 0;\n                width = this.width;\n                height = actualBounds.height;\n                break;\n            case PdfDockStyle.Top:\n                x = 0;\n                y = 0;\n                width = actualBounds.width;\n                height = this.height;\n                break;\n            case PdfDockStyle.Right:\n                x = actualBounds.width - this.width;\n                y = 0;\n                width = this.width;\n                height = actualBounds.height;\n                break;\n            case PdfDockStyle.Bottom:\n                x = 0;\n                y = actualBounds.height - this.height;\n                width = actualBounds.width;\n                height = this.height;\n                break;\n            case PdfDockStyle.Fill:\n                x = 0;\n                x = 0;\n                width = actualBounds.width;\n                height = actualBounds.height;\n                break;\n        }\n        result = new RectangleF(x, y, width, height);\n        return result;\n    };\n    /**\n     * Calculates template bounds basing on docking if template is a page template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getTemplateDockBounds = function (page, document) {\n        var result = this.bounds;\n        var section = page.section;\n        var actualBounds = section.getActualBounds(document, page, false);\n        var actualSize = section.pageSettings.getActualSize();\n        var x = this.x;\n        var y = this.y;\n        var width = this.width;\n        var height = this.height;\n        switch (this.dockStyle) {\n            case PdfDockStyle.Left:\n                x = -actualBounds.x;\n                y = 0;\n                width = this.width;\n                height = actualBounds.height;\n                break;\n            case PdfDockStyle.Top:\n                x = -actualBounds.x;\n                y = -actualBounds.y;\n                width = actualSize.width;\n                height = this.height;\n                if (actualBounds.height < 0) {\n                    y = -actualBounds.y + actualSize.height;\n                }\n                break;\n            case PdfDockStyle.Right:\n                x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                y = 0;\n                width = this.width;\n                height = actualBounds.height;\n                break;\n            case PdfDockStyle.Bottom:\n                x = -actualBounds.x;\n                y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;\n                width = actualSize.width;\n                height = this.height;\n                if (actualBounds.height < 0) {\n                    y -= actualSize.height;\n                }\n                break;\n            case PdfDockStyle.Fill:\n                x = 0;\n                x = 0;\n                width = actualBounds.width;\n                height = actualBounds.height;\n                break;\n        }\n        result = new RectangleF(x, y, width, height);\n        return result;\n    };\n    return PdfPageTemplateElement;\n}());\nexport { PdfPageTemplateElement };\n","/**\n * PdfBorders.ts class for EJ2-PDF\n */\nimport { PdfPen } from './../../../graphics/pdf-pen';\nimport { PdfDashStyle } from './../../../graphics/enum';\nimport { PdfColor } from './../../../graphics/pdf-color';\n/**\n * `PdfBorders` class used represents the cell border of the PDF grid.\n */\nvar PdfBorders = /** @class */ (function () {\n    // Constructor\n    /**\n     * Create a new instance for `PdfBorders` class.\n     * @private\n     */\n    function PdfBorders() {\n        var defaultBorderPenLeft = new PdfPen(new PdfColor(0, 0, 0));\n        defaultBorderPenLeft.dashStyle = PdfDashStyle.Solid;\n        var defaultBorderPenRight = new PdfPen(new PdfColor(0, 0, 0));\n        defaultBorderPenRight.dashStyle = PdfDashStyle.Solid;\n        var defaultBorderPenTop = new PdfPen(new PdfColor(0, 0, 0));\n        defaultBorderPenTop.dashStyle = PdfDashStyle.Solid;\n        var defaultBorderPenBottom = new PdfPen(new PdfColor(0, 0, 0));\n        defaultBorderPenBottom.dashStyle = PdfDashStyle.Solid;\n        this.leftPen = defaultBorderPenLeft;\n        this.rightPen = defaultBorderPenRight;\n        this.topPen = defaultBorderPenTop;\n        this.bottomPen = defaultBorderPenBottom;\n    }\n    Object.defineProperty(PdfBorders.prototype, \"left\", {\n        // Properties\n        /**\n         * Gets or sets the `Left`.\n         * @private\n         */\n        get: function () {\n            return this.leftPen;\n        },\n        set: function (value) {\n            this.leftPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"right\", {\n        /**\n         * Gets or sets the `Right`.\n         * @private\n         */\n        get: function () {\n            return this.rightPen;\n        },\n        set: function (value) {\n            this.rightPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"top\", {\n        /**\n         * Gets or sets the `Top`.\n         * @private\n         */\n        get: function () {\n            return this.topPen;\n        },\n        set: function (value) {\n            this.topPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"bottom\", {\n        /**\n         * Gets or sets the `Bottom`.\n         * @private\n         */\n        get: function () {\n            return this.bottomPen;\n        },\n        set: function (value) {\n            this.bottomPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"all\", {\n        /**\n         * sets the `All`.\n         * @private\n         */\n        set: function (value) {\n            this.leftPen = this.rightPen = this.topPen = this.bottomPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"isAll\", {\n        /**\n         * Gets a value indicating whether this instance `is all`.\n         * @private\n         */\n        get: function () {\n            return ((this.leftPen === this.rightPen) && (this.leftPen === this.topPen) && (this.leftPen === this.bottomPen));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders, \"default\", {\n        /**\n         * Gets the `default`.\n         * @private\n         */\n        get: function () {\n            return new PdfBorders();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfBorders;\n}());\nexport { PdfBorders };\nvar PdfPaddings = /** @class */ (function () {\n    function PdfPaddings(left, right, top, bottom) {\n        /**\n         * The 'left' border padding set.\n         * @private\n         */\n        this.hasLeftPad = false;\n        /**\n         * The 'right' border padding set.\n         * @private\n         */\n        this.hasRightPad = false;\n        /**\n         * The 'top' border padding set.\n         * @private\n         */\n        this.hasTopPad = false;\n        /**\n         * The 'bottom' border padding set.\n         * @private\n         */\n        this.hasBottomPad = false;\n        if (typeof left === 'undefined') {\n            //5.76 and 0 are taken from ms-word default table margins.\n            this.leftPad = this.rightPad = 5.76;\n            //0.5 is set for top and bottom by default.\n            this.bottomPad = this.topPad = 0.5;\n        }\n        else {\n            this.leftPad = left;\n            this.rightPad = right;\n            this.topPad = top;\n            this.bottomPad = bottom;\n            this.hasLeftPad = true;\n            this.hasRightPad = true;\n            this.hasTopPad = true;\n            this.hasBottomPad = true;\n        }\n    }\n    Object.defineProperty(PdfPaddings.prototype, \"left\", {\n        // Properties\n        /**\n         * Gets or sets the `left` value of the edge\n         * @private\n         */\n        get: function () {\n            return this.leftPad;\n        },\n        set: function (value) {\n            this.leftPad = value;\n            this.hasLeftPad = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPaddings.prototype, \"right\", {\n        /**\n         * Gets or sets the `right` value of the edge.\n         * @private\n         */\n        get: function () {\n            return this.rightPad;\n        },\n        set: function (value) {\n            this.rightPad = value;\n            this.hasRightPad = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPaddings.prototype, \"top\", {\n        /**\n         * Gets or sets the `top` value of the edge\n         * @private\n         */\n        get: function () {\n            return this.topPad;\n        },\n        set: function (value) {\n            this.topPad = value;\n            this.hasTopPad = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPaddings.prototype, \"bottom\", {\n        /**\n         * Gets or sets the `bottom` value of the edge.\n         * @private\n         */\n        get: function () {\n            return this.bottomPad;\n        },\n        set: function (value) {\n            this.bottomPad = value;\n            this.hasBottomPad = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPaddings.prototype, \"all\", {\n        /**\n         * Sets value to all sides `left,right,top and bottom`.s\n         * @private\n         */\n        set: function (value) {\n            this.leftPad = this.rightPad = this.topPad = this.bottomPad = value;\n            this.hasLeftPad = true;\n            this.hasRightPad = true;\n            this.hasTopPad = true;\n            this.hasBottomPad = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfPaddings;\n}());\nexport { PdfPaddings };\n","/**\n * public Enum for `PdfBorderOverlapStyle`.\n * @private\n */\nexport var PdfBorderOverlapStyle;\n(function (PdfBorderOverlapStyle) {\n    /**\n     * Specifies the type of `Overlap`.\n     * @private\n     */\n    PdfBorderOverlapStyle[PdfBorderOverlapStyle[\"Overlap\"] = 0] = \"Overlap\";\n    /**\n     * Specifies the type of `Inside`.\n     * @private\n     */\n    PdfBorderOverlapStyle[PdfBorderOverlapStyle[\"Inside\"] = 1] = \"Inside\";\n})(PdfBorderOverlapStyle || (PdfBorderOverlapStyle = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfBorders, PdfPaddings } from './pdf-borders';\nimport { PdfBorderOverlapStyle } from './../../tables/light-tables/enum';\n/**\n * Base class for the `grid style`,\n */\nvar PdfGridStyleBase = /** @class */ (function () {\n    function PdfGridStyleBase() {\n    }\n    Object.defineProperty(PdfGridStyleBase.prototype, \"backgroundBrush\", {\n        // Properties\n        /**\n         * Gets or sets the `background brush`.\n         * @private\n         */\n        get: function () {\n            return this.gridBackgroundBrush;\n        },\n        set: function (value) {\n            this.gridBackgroundBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyleBase.prototype, \"textBrush\", {\n        /**\n         * Gets or sets the `text brush`.\n         * @private\n         */\n        get: function () {\n            return this.gridTextBrush;\n        },\n        set: function (value) {\n            this.gridTextBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyleBase.prototype, \"textPen\", {\n        /**\n         * Gets or sets the `text pen`.\n         * @private\n         */\n        get: function () {\n            return this.gridTextPen;\n        },\n        set: function (value) {\n            this.gridTextPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyleBase.prototype, \"font\", {\n        /**\n         * Gets or sets the `font`.\n         * @private\n         */\n        get: function () {\n            return this.gridFont;\n        },\n        set: function (value) {\n            this.gridFont = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyleBase.prototype, \"backgroundImage\", {\n        /**\n         * Gets or sets the `background Image`.\n         * @private\n         */\n        get: function () {\n            return this.gridBackgroundImage;\n        },\n        set: function (value) {\n            this.gridBackgroundImage = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridStyleBase;\n}());\nexport { PdfGridStyleBase };\n/**\n * `PdfGridStyle` class provides customization of the appearance for the 'PdfGrid'.\n */\nvar PdfGridStyle = /** @class */ (function (_super) {\n    __extends(PdfGridStyle, _super);\n    //constructor\n    /**\n     * Initialize a new instance for `PdfGridStyle` class.\n     * @private\n     */\n    function PdfGridStyle() {\n        var _this = _super.call(this) || this;\n        _this.gridBorderOverlapStyle = PdfBorderOverlapStyle.Overlap;\n        _this.bAllowHorizontalOverflow = false;\n        _this.gridHorizontalOverflowType = PdfHorizontalOverflowType.LastPage;\n        return _this;\n    }\n    Object.defineProperty(PdfGridStyle.prototype, \"cellSpacing\", {\n        //Properties\n        /**\n         * Gets or sets the `cell spacing` of the 'PdfGrid'.\n         * @private\n         */\n        get: function () {\n            if (typeof this.gridCellSpacing === 'undefined') {\n                this.gridCellSpacing = 0;\n            }\n            return this.gridCellSpacing;\n        },\n        set: function (value) {\n            this.gridCellSpacing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyle.prototype, \"horizontalOverflowType\", {\n        /**\n         * Gets or sets the type of the `horizontal overflow` of the 'PdfGrid'.\n         * @private\n         */\n        get: function () {\n            return this.gridHorizontalOverflowType;\n        },\n        set: function (value) {\n            this.gridHorizontalOverflowType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyle.prototype, \"allowHorizontalOverflow\", {\n        /**\n         * Gets or sets a value indicating whether to `allow horizontal overflow`.\n         * @private\n         */\n        get: function () {\n            return this.bAllowHorizontalOverflow;\n        },\n        set: function (value) {\n            this.bAllowHorizontalOverflow = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyle.prototype, \"cellPadding\", {\n        /**\n         * Gets or sets the `cell padding`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.gridCellPadding === 'undefined') {\n                this.gridCellPadding = new PdfPaddings();\n            }\n            return this.gridCellPadding;\n        },\n        set: function (value) {\n            if (typeof this.gridCellPadding === 'undefined') {\n                this.gridCellPadding = new PdfPaddings();\n                this.gridCellPadding = value;\n            }\n            else {\n                this.gridCellPadding = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyle.prototype, \"borderOverlapStyle\", {\n        /**\n         * Gets or sets the `border overlap style` of the 'PdfGrid'.\n         * @private\n         */\n        get: function () {\n            return this.gridBorderOverlapStyle;\n        },\n        set: function (value) {\n            this.gridBorderOverlapStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridStyle;\n}(PdfGridStyleBase));\nexport { PdfGridStyle };\n/**\n * `PdfGridCellStyle` class provides customization of the appearance for the 'PdfGridCell'.\n */\nvar PdfGridCellStyle = /** @class */ (function (_super) {\n    __extends(PdfGridCellStyle, _super);\n    /**\n     * Initializes a new instance of the `PdfGridCellStyle` class.\n     * @private\n     */\n    function PdfGridCellStyle() {\n        var _this = _super.call(this) || this;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.gridCellBorders = PdfBorders.default;\n        return _this;\n    }\n    Object.defineProperty(PdfGridCellStyle.prototype, \"stringFormat\", {\n        //Properties\n        /**\n         * Gets the `string format` of the 'PdfGridCell'.\n         * @private\n         */\n        get: function () {\n            return this.format;\n        },\n        set: function (value) {\n            this.format = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCellStyle.prototype, \"borders\", {\n        /**\n         * Gets or sets the `border` of the 'PdfGridCell'.\n         * @private\n         */\n        get: function () {\n            return this.gridCellBorders;\n        },\n        set: function (value) {\n            this.gridCellBorders = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCellStyle.prototype, \"cellPadding\", {\n        /**\n         * Gets or sets the `cell padding`.\n         * @private\n         */\n        get: function () {\n            return this.gridCellPadding;\n        },\n        set: function (value) {\n            if (this.gridCellPadding == null || typeof this.gridCellPadding === 'undefined') {\n                this.gridCellPadding = new PdfPaddings();\n            }\n            this.gridCellPadding = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridCellStyle;\n}(PdfGridStyleBase));\nexport { PdfGridCellStyle };\n/**\n * `PdfGridRowStyle` class provides customization of the appearance for the `PdfGridRow`.\n */\nvar PdfGridRowStyle = /** @class */ (function () {\n    // public setBackgroundImage(value : PdfImage) : void {\n    //     this.gridRowBackgroundImage = value;\n    //     if (typeof this.parent !== 'undefined') {\n    //         for (let i : number = 0; i < this.parent.cells.count; i++) {\n    //             this.parent.cells.getCell(i).style.backgroundImage = value;\n    //         }\n    //     }\n    // }\n    // Constructor\n    /**\n     * Initializes a new instance of the `PdfGridRowStyle` class.\n     * @private\n     */\n    function PdfGridRowStyle() {\n        //\n    }\n    Object.defineProperty(PdfGridRowStyle.prototype, \"backgroundBrush\", {\n        // Properties\n        /**\n         * Gets or sets the `background brush`.\n         * @private\n         */\n        get: function () {\n            return this.gridRowBackgroundBrush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setBackgroundBrush = function (value) {\n        this.gridRowBackgroundBrush = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.backgroundBrush = value;\n            }\n        }\n    };\n    Object.defineProperty(PdfGridRowStyle.prototype, \"textBrush\", {\n        /**\n         * Gets or sets the `text brush`.\n         * @private\n         */\n        get: function () {\n            return this.gridRowTextBrush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setTextBrush = function (value) {\n        this.gridRowTextBrush = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.textBrush = value;\n            }\n        }\n    };\n    Object.defineProperty(PdfGridRowStyle.prototype, \"textPen\", {\n        /**\n         * Gets or sets the `text pen`.\n         * @private\n         */\n        get: function () {\n            return this.gridRowTextPen;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setTextPen = function (value) {\n        this.gridRowTextPen = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.textPen = value;\n            }\n        }\n    };\n    Object.defineProperty(PdfGridRowStyle.prototype, \"font\", {\n        /**\n         * Gets or sets the `font`.\n         * @private\n         */\n        get: function () {\n            return this.gridRowFont;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setFont = function (value) {\n        this.gridRowFont = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.font = value;\n            }\n        }\n    };\n    Object.defineProperty(PdfGridRowStyle.prototype, \"border\", {\n        /**\n         * Gets or sets the `border` of the current row.\n         * @private\n         */\n        get: function () {\n            if (typeof this.gridRowBorder === 'undefined') {\n                this.setBorder(new PdfBorders());\n            }\n            return this.gridRowBorder;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setBorder = function (value) {\n        this.gridRowBorder = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.borders = value;\n            }\n        }\n    };\n    /**\n     * sets the `parent row` of the current object.\n     * @private\n     */\n    PdfGridRowStyle.prototype.setParent = function (parent) {\n        this.parent = parent;\n    };\n    Object.defineProperty(PdfGridRowStyle.prototype, \"backgroundImage\", {\n        /**\n         * Gets or sets the `backgroundImage` of the 'PdfGridCell'.\n         * @private\n         */\n        get: function () {\n            return this.gridRowBackgroundImage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridRowStyle;\n}());\nexport { PdfGridRowStyle };\n/**\n * public Enum for `PdfHorizontalOverflowType`.\n * @private\n */\nexport var PdfHorizontalOverflowType;\n(function (PdfHorizontalOverflowType) {\n    /**\n     * Specifies the type of `NextPage`.\n     * @private\n     */\n    PdfHorizontalOverflowType[PdfHorizontalOverflowType[\"NextPage\"] = 0] = \"NextPage\";\n    /**\n     * Specifies the type of `LastPage`.\n     * @private\n     */\n    PdfHorizontalOverflowType[PdfHorizontalOverflowType[\"LastPage\"] = 1] = \"LastPage\";\n})(PdfHorizontalOverflowType || (PdfHorizontalOverflowType = {}));\n","import { PdfGrid } from './pdf-grid';\nimport { PdfGridCellStyle } from './styles/style';\nimport { PdfStringLayouter } from './../../graphics/fonts/string-layouter';\nimport { PdfDocument } from './../../document/pdf-document';\nimport { PdfStringFormat } from './../../graphics/fonts/pdf-string-format';\nimport { RectangleF, PointF, SizeF } from './../../drawing/pdf-drawing';\nimport { PdfDashStyle, PdfLineCap } from './../../graphics/enum';\nimport { PdfBorderOverlapStyle } from './../tables/light-tables/enum';\nimport { PdfSolidBrush } from './../../graphics/brushes/pdf-solid-brush';\nimport { PdfColor } from './../../graphics/pdf-color';\nimport { PdfImage } from './../../graphics/images/pdf-image';\nimport { PdfBitmap } from './../../graphics/images/pdf-bitmap';\nimport { PdfTextWebLink } from './../../annotations/pdf-text-web-link';\nimport { PdfLayoutType } from './../../graphics/figures/enum';\nimport { PdfGridLayouter, PdfGridLayoutFormat } from './../../structured-elements/grid/layout/grid-layouter';\nimport { PdfLayoutParams } from '../../../implementation/graphics/figures/base/element-layouter';\n/**\n * `PdfGridCell` class represents the schema of a cell in a 'PdfGrid'.\n */\nvar PdfGridCell = /** @class */ (function () {\n    function PdfGridCell(row) {\n        /**\n         * `Width` of the cell.\n         * @default 0\n         * @private\n         */\n        this.cellWidth = 0;\n        /**\n         * `Height` of the cell.\n         * @default 0\n         * @private\n         */\n        this.cellHeight = 0;\n        /**\n         * `tempval`to stores current width .\n         * @default 0\n         * @private\n         */\n        this.tempval = 0;\n        this.fontSpilt = false;\n        /**\n         * Specifies weather the `cell is drawn`.\n         * @default true\n         * @private\n         */\n        this.finsh = true;\n        /**\n         * The `remaining height` of row span.\n         * @default 0\n         * @private\n         */\n        this.rowSpanRemainingHeight = 0;\n        this.hasRowSpan = false;\n        this.hasColSpan = false;\n        /**\n         * the 'isFinish' is set to page finish\n         */\n        this.isFinish = true;\n        /**\n         * The `present' to store the current cell.\n         * @default false\n         * @private\n         */\n        this.present = false;\n        this.gridRowSpan = 1;\n        this.colSpan = 1;\n        if (typeof row !== 'undefined') {\n            this.gridRow = row;\n        }\n    }\n    Object.defineProperty(PdfGridCell.prototype, \"isCellMergeContinue\", {\n        //Properties\n        get: function () {\n            return this.internalIsCellMergeContinue;\n        },\n        set: function (value) {\n            this.internalIsCellMergeContinue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"isRowMergeContinue\", {\n        get: function () {\n            return this.internalIsRowMergeContinue;\n        },\n        set: function (value) {\n            this.internalIsRowMergeContinue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"isCellMergeStart\", {\n        get: function () {\n            return this.internalIsCellMergeStart;\n        },\n        set: function (value) {\n            this.internalIsCellMergeStart = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"isRowMergeStart\", {\n        get: function () {\n            return this.internalIsRowMergeStart;\n        },\n        set: function (value) {\n            this.internalIsRowMergeStart = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"remainingString\", {\n        /**\n         * Gets or sets the `remaining string` after the row split between pages.\n         * @private\n         */\n        get: function () {\n            return this.remaining;\n        },\n        set: function (value) {\n            this.remaining = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"FinishedDrawingCell\", {\n        /**\n         * Gets or sets the `FinishedDrawingCell` .\n         * @private\n         */\n        get: function () {\n            return this.isFinish;\n        },\n        set: function (value) {\n            this.isFinish = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"stringFormat\", {\n        /**\n         * Gets or sets the `string format`.\n         * @private\n         */\n        get: function () {\n            if (this.format == null) {\n                this.format = new PdfStringFormat();\n            }\n            return this.format;\n        },\n        set: function (value) {\n            this.format = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"row\", {\n        /**\n         * Gets or sets the parent `row`.\n         * @private\n         */\n        get: function () {\n            return this.gridRow;\n        },\n        set: function (value) {\n            this.gridRow = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"value\", {\n        /**\n         * Gets or sets the `value` of the cell.\n         * @private\n         */\n        get: function () {\n            return this.objectValue;\n        },\n        set: function (value) {\n            this.objectValue = value;\n            if (this.objectValue instanceof PdfGrid) {\n                this.row.grid.isSingleGrid = false;\n                var grid = this.objectValue;\n                grid.ParentCell = this;\n                this.objectValue.isChildGrid = true;\n                var rowCount = this.row.grid.rows.count;\n                for (var i = 0; i < rowCount; i++) {\n                    var row = this.row.grid.rows.getRow(i);\n                    var colCount = row.cells.count;\n                    for (var j = 0; j < colCount; j++) {\n                        var cell = row.cells.getCell(j);\n                        cell.parent = this;\n                    }\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"rowSpan\", {\n        /**\n         * Gets or sets a value that indicates the total number of rows that cell `spans` within a PdfGrid.\n         * @private\n         */\n        get: function () {\n            return this.gridRowSpan;\n        },\n        set: function (value) {\n            if (value < 1) {\n                throw new Error('ArgumentException : Invalid span specified, must be greater than or equal to 1');\n            }\n            else {\n                this.gridRowSpan = value;\n                this.row.rowSpanExists = true;\n                this.row.grid.hasRowSpanSpan = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"style\", {\n        /**\n         * Gets or sets the cell `style`.\n         * @private\n         */\n        get: function () {\n            if (this.cellStyle == null) {\n                this.cellStyle = new PdfGridCellStyle();\n            }\n            return this.cellStyle;\n        },\n        set: function (value) {\n            this.cellStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"height\", {\n        /**\n         * Gets the `height` of the PdfGrid cell.[Read-Only].\n         * @private\n         */\n        get: function () {\n            if (this.cellHeight === 0) {\n                this.cellHeight = this.measureHeight();\n            }\n            return this.cellHeight;\n        },\n        set: function (value) {\n            this.cellHeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"columnSpan\", {\n        /**\n         * Gets or sets a value that indicates the total number of columns that cell `spans` within a PdfGrid.\n         * @private\n         */\n        get: function () {\n            return this.colSpan;\n        },\n        set: function (value) {\n            if (value < 1) {\n                throw Error('Invalid span specified, must be greater than or equal to 1');\n            }\n            else {\n                this.colSpan = value;\n                this.row.columnSpanExists = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"width\", {\n        /**\n         * Gets the `width` of the PdfGrid cell.[Read-Only].\n         * @private\n         */\n        get: function () {\n            if (this.cellWidth === 0 || this.row.grid.isComplete) {\n                this.cellWidth = this.measureWidth();\n            }\n            return Math.round(this.cellWidth);\n        },\n        set: function (value) {\n            this.cellWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * `Calculates the width`.\n     * @private\n     */\n    PdfGridCell.prototype.measureWidth = function () {\n        // .. Calculate the cell text width.\n        // .....Add border widths, cell spacings and paddings to the width.\n        var width = 0;\n        var layouter = new PdfStringLayouter();\n        if (typeof this.objectValue === 'string') {\n            /* tslint:disable */\n            var slr = layouter.layout(this.objectValue, this.getTextFont(), this.stringFormat, new SizeF(Number.MAX_VALUE, Number.MAX_VALUE), false, new SizeF(0, 0));\n            width += slr.actualSize.width;\n            width += (this.style.borders.left.width + this.style.borders.right.width) * 2;\n        }\n        else if (this.objectValue instanceof PdfGrid) {\n            width = this.objectValue.size.width;\n            //width += this.objectValue.style.cellSpacing;\n        }\n        else if (this.objectValue instanceof PdfImage || this.objectValue instanceof PdfBitmap) {\n            width += this.objectValue.width;\n        }\n        else if (this.objectValue instanceof PdfTextWebLink) {\n            var webLink = this.objectValue;\n            var result = layouter.layout(webLink.text, webLink.font, webLink.stringFormat, new SizeF(0, 0), false, new SizeF(0, 0));\n            /* tslint:enable */\n            width += result.actualSize.width;\n            width += (this.style.borders.left.width + this.style.borders.right.width) * 2;\n        }\n        if (!(this.objectValue instanceof PdfGrid)) {\n            if (this.style.cellPadding != null) {\n                width += (this.style.cellPadding.left + this.style.cellPadding.right);\n            }\n            else {\n                width += (this.row.grid.style.cellPadding.left + this.row.grid.style.cellPadding.right);\n            }\n        }\n        else {\n            if (this.style.cellPadding != null || typeof this.style.cellPadding !== 'undefined') {\n                if (typeof this.style.cellPadding.left !== 'undefined' && this.style.cellPadding.hasLeftPad) {\n                    width += this.style.cellPadding.left;\n                }\n                if (typeof this.style.cellPadding.right !== 'undefined' && this.style.cellPadding.hasRightPad) {\n                    width += this.style.cellPadding.right;\n                }\n            }\n            else {\n                if (typeof this.row.grid.style.cellPadding.left !== 'undefined' && this.row.grid.style.cellPadding.hasLeftPad) {\n                    width += this.row.grid.style.cellPadding.left;\n                }\n                if (typeof this.row.grid.style.cellPadding.right !== 'undefined' && this.row.grid.style.cellPadding.hasRightPad) {\n                    width += this.row.grid.style.cellPadding.right;\n                }\n            }\n        }\n        width += this.row.grid.style.cellSpacing;\n        return width;\n    };\n    /**\n     * Draw the `cell background`.\n     * @private\n     */\n    PdfGridCell.prototype.drawCellBackground = function (graphics, bounds) {\n        var backgroundBrush = this.getBackgroundBrush();\n        //graphics.isTemplateGraphics = true;\n        if (backgroundBrush != null) {\n            graphics.save();\n            graphics.drawRectangle(backgroundBrush, bounds.x, bounds.y, bounds.width, bounds.height);\n            graphics.restore();\n        }\n        if (this.style.backgroundImage != null) {\n            var image = this.getBackgroundImage();\n            graphics.drawImage(this.style.backgroundImage, bounds.x, bounds.y, bounds.width, bounds.height);\n        }\n    };\n    /**\n     * `Adjusts the text layout area`.\n     * @private\n     */\n    /* tslint:disable */\n    PdfGridCell.prototype.adjustContentLayoutArea = function (bounds) {\n        //Add Padding value to its Cell Bounds\n        var returnBounds = new RectangleF(bounds.x, bounds.y, bounds.width, bounds.height);\n        if (!(this.objectValue instanceof PdfGrid)) {\n            if (typeof this.style.cellPadding === 'undefined' || this.style.cellPadding == null) {\n                returnBounds.x += this.gridRow.grid.style.cellPadding.left + this.cellStyle.borders.left.width;\n                returnBounds.y += this.gridRow.grid.style.cellPadding.top + this.cellStyle.borders.top.width;\n                returnBounds.width -= (this.gridRow.grid.style.cellPadding.right + this.gridRow.grid.style.cellPadding.left);\n                returnBounds.height -= (this.gridRow.grid.style.cellPadding.bottom + this.gridRow.grid.style.cellPadding.top);\n                returnBounds.height -= (this.cellStyle.borders.top.width + this.cellStyle.borders.bottom.width);\n            }\n            else {\n                returnBounds.x += this.style.cellPadding.left + this.cellStyle.borders.left.width;\n                returnBounds.y += this.style.cellPadding.top + this.cellStyle.borders.top.width;\n                returnBounds.width -= (this.style.cellPadding.right + this.style.cellPadding.left);\n                returnBounds.width -= (this.cellStyle.borders.left.width + this.cellStyle.borders.right.width);\n                returnBounds.height -= (this.style.cellPadding.bottom + this.style.cellPadding.top);\n                returnBounds.height -= (this.cellStyle.borders.top.width + this.cellStyle.borders.bottom.width);\n                if (this.rowSpan === 1) {\n                    returnBounds.width -= (this.style.borders.left.width);\n                }\n            }\n        }\n        else {\n            if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {\n                if (typeof this.gridRow.grid.style.cellPadding.left !== 'undefined' && this.gridRow.grid.style.cellPadding.hasLeftPad) {\n                    returnBounds.x += this.gridRow.grid.style.cellPadding.left + this.cellStyle.borders.left.width;\n                    returnBounds.width -= this.gridRow.grid.style.cellPadding.left;\n                }\n                if (typeof this.gridRow.grid.style.cellPadding.top !== 'undefined' && this.gridRow.grid.style.cellPadding.hasTopPad) {\n                    returnBounds.y += this.gridRow.grid.style.cellPadding.top + this.cellStyle.borders.top.width;\n                    returnBounds.height -= this.gridRow.grid.style.cellPadding.top;\n                }\n                if (typeof this.gridRow.grid.style.cellPadding.right !== 'undefined' && this.gridRow.grid.style.cellPadding.hasRightPad) {\n                    returnBounds.width -= this.gridRow.grid.style.cellPadding.right;\n                }\n                if (typeof this.gridRow.grid.style.cellPadding.bottom !== 'undefined' && this.gridRow.grid.style.cellPadding.hasBottomPad) {\n                    returnBounds.height -= this.gridRow.grid.style.cellPadding.bottom;\n                }\n            }\n            else {\n                if (typeof this.style.cellPadding.left !== 'undefined' && this.style.cellPadding.hasLeftPad) {\n                    returnBounds.x += this.style.cellPadding.left + this.cellStyle.borders.left.width;\n                    returnBounds.width -= this.style.cellPadding.left;\n                }\n                if (typeof this.style.cellPadding.top !== 'undefined' && this.style.cellPadding.hasTopPad) {\n                    returnBounds.y += this.style.cellPadding.top + this.cellStyle.borders.top.width;\n                    returnBounds.height -= this.style.cellPadding.top;\n                }\n                if (typeof this.style.cellPadding.right !== 'undefined' && this.style.cellPadding.hasRightPad) {\n                    returnBounds.width -= this.style.cellPadding.right;\n                }\n                if (typeof this.style.cellPadding.bottom !== 'undefined' && this.style.cellPadding.hasBottomPad) {\n                    returnBounds.height -= this.style.cellPadding.bottom;\n                }\n            }\n            returnBounds.width -= (this.cellStyle.borders.left.width + this.cellStyle.borders.right.width);\n            returnBounds.height -= (this.cellStyle.borders.top.width + this.cellStyle.borders.bottom.width);\n        }\n        return returnBounds;\n    };\n    /**\n     * `Draws` the specified graphics.\n     * @private\n     */\n    PdfGridCell.prototype.draw = function (graphics, bounds, cancelSubsequentSpans) {\n        var isrowbreak = false;\n        /*if (!this.row.grid.isSingleGrid)\n        {\n            //Check whether the Grid Span to Nextpage\n            if ((this.remainingString != null) || (PdfGridLayouter.repeatRowIndex != -1))\n            {\n                this.DrawParentCells(graphics, bounds, true);\n            }\n            else if (this.row.grid.rows.count > 1)\n            {\n                for (let i : number  = 0; i < this.row.grid.rows.count; i++)\n                {\n                    if (this.row == this.row.grid.rows.getRow(i))\n                    {\n                        if (this.row.grid.rows.getRow(i).rowBreakHeight > 0)\n                            isrowbreak = true;\n                        if ((i > 0) && (isrowbreak))\n                            this.DrawParentCells(graphics, bounds, false);\n                    }\n                }\n            }\n        } */\n        var result = null;\n        /*if (cancelSubsequentSpans)\n        {\n            //..Cancel all subsequent cell spans, if no space exists.\n            let currentCellIndex : number = this.row.cells.indexOf(this);\n            for (let i : number = currentCellIndex + 1; i <= currentCellIndex + this.colSpan; i++)\n            {\n                this.row.cells.getCell(i).isCellMergeContinue = false;\n                this.row.cells.getCell(i).isRowMergeContinue = false;\n            }\n            this.colSpan = 1;\n        }*/\n        //..Skip cells which were already covered by spanmap.\n        if (this.internalIsCellMergeContinue || this.internalIsRowMergeContinue) {\n            if (this.internalIsCellMergeContinue && this.row.grid.style.allowHorizontalOverflow) {\n                if ((this.row.rowOverflowIndex > 0 && (this.row.cells.indexOf(this) != this.row.rowOverflowIndex + 1)) || (this.row.rowOverflowIndex == 0 && this.internalIsCellMergeContinue)) {\n                    return result;\n                }\n            }\n            else {\n                return result;\n            }\n        }\n        //Adjust bounds with Row and Column Spacing\n        bounds = this.adjustOuterLayoutArea(bounds, graphics);\n        this.drawCellBackground(graphics, bounds);\n        var textPen = this.getTextPen();\n        var textBrush = this.getTextBrush();\n        if (typeof textPen === 'undefined' && typeof textBrush === 'undefined') {\n            textBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n        }\n        var font = this.getTextFont();\n        var strFormat = this.getStringFormat();\n        var innerLayoutArea = bounds;\n        if (innerLayoutArea.height >= graphics.clientSize.height) {\n            // If to break row to next page.\n            if (this.row.grid.allowRowBreakAcrossPages) {\n                innerLayoutArea.height -= innerLayoutArea.y;\n                //bounds.height -= bounds.y;\n                // if(this.row.grid.isChildGrid)\n                // {\n                //     innerLayoutArea.height -= this.row.grid.ParentCell.row.grid.style.cellPadding.bottom;\n                // }\n            }\n            // if user choose to cut the row whose height is more than page height.\n            // else\n            // {\n            //     innerLayoutArea.height = graphics.clientSize.height;\n            //     bounds.height = graphics.clientSize.height;\n            // }\n        }\n        innerLayoutArea = this.adjustContentLayoutArea(innerLayoutArea);\n        if (typeof this.objectValue === 'string' || typeof this.remaining === 'string') {\n            var temp = void 0;\n            var layoutRectangle = void 0;\n            if (innerLayoutArea.height < font.height)\n                layoutRectangle = new RectangleF(innerLayoutArea.x, innerLayoutArea.y, innerLayoutArea.width, font.height);\n            else\n                layoutRectangle = innerLayoutArea;\n            if (innerLayoutArea.height < font.height && this.row.grid.isChildGrid && this.row.grid.ParentCell != null) {\n                var height = layoutRectangle.height - this.row.grid.ParentCell.row.grid.style.cellPadding.bottom - this.row.grid.style.cellPadding.bottom;\n                if (this.row.grid.splitChildRowIndex != -1) {\n                    this.fontSpilt = true;\n                    this.row.rowFontSplit = true;\n                }\n                if (height > 0 && height < font.height)\n                    layoutRectangle.height = height;\n                // else if (height + this.row.grid.style.cellPadding.bottom > 0 && height + this.row.grid.style.cellPadding.bottom < font.height)\n                //     layoutRectangle.height = height + this.row.grid.style.cellPadding.bottom;\n                // else if (bounds.height < font.height)\n                //     layoutRectangle.height = bounds.height;\n                // else if (bounds.height - this.row.grid.ParentCell.row.grid.style.cellPadding.bottom < font.height)\n                //     layoutRectangle.height = bounds.height - this.row.grid.ParentCell.row.grid.style.cellPadding.bottom;                        \n            }\n            if (this.gridRow.grid.style.cellSpacing != 0) {\n                layoutRectangle.width -= this.gridRow.grid.style.cellSpacing;\n                bounds.width -= this.gridRow.grid.style.cellSpacing;\n            }\n            if (this.isFinish) {\n                // if (this.row.grid.splitChildRowIndex != -1 && !this.row.grid.isChildGrid && typeof this.remaining === 'undefined'){\n                //     this.remaining = '';\n                //     graphics.drawString(this.remaining, font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);\n                // } else {\n                temp = this.remaining === '' ? this.remaining : this.objectValue;\n                graphics.drawString(temp, font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);\n                if (this.row.grid.splitChildRowIndex != -1 && !this.row.grid.isChildGrid && typeof this.remaining === 'undefined') {\n                    this.remaining = '';\n                    //graphics.drawString(this.remaining, font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);\n                }\n            }\n            else {\n                if (typeof this.remaining == 'undefined' || this.remaining === null) {\n                    this.remaining = '';\n                }\n                if (this.row.repeatFlag) {\n                    graphics.drawString(this.remaining, font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);\n                }\n                //  else {\n                //     if(this.row.grid.ParentCell.row.repeatFlag) {\n                //         graphics.drawString((this.remaining as string), font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);                    \n                //     } else {\n                //         layoutRectangle.height = this.row.height;\n                //         graphics.drawString((this.objectValue as string), font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);\n                //         bounds.height = this.row.height;\n                //     }\n                //  }\n                this.isFinish = true;\n                //graphics.drawString((this.remaining as string), font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);\n            }\n            result = graphics.stringLayoutResult;\n            // if(this.row.grid.isChildGrid && this.row.rowBreakHeight > 0 && result !=null) {\n            //     bounds.height -= this.row.grid.ParentCell.row.grid.style.cellPadding.bottom;\n            // }\n        }\n        else if (this.objectValue instanceof PdfGrid) {\n            var childGrid = this.objectValue;\n            childGrid.isChildGrid = true;\n            childGrid.ParentCell = this;\n            var layoutRect = void 0;\n            layoutRect = innerLayoutArea;\n            if (this.gridRow.grid.style.cellSpacing != 0) {\n                bounds.width -= this.gridRow.grid.style.cellSpacing;\n            }\n            // layoutRect = bounds;\n            // if (this.style.cellPadding != null){\n            //     layoutRect = bounds;            \n            // } else if((this.row.grid.style.cellPadding != null) && (childGrid.style.cellPadding.bottom === 0.5) && (childGrid.style.cellPadding.top === 0.5)\n            //                               && (childGrid.style.cellPadding.left === 5.76) && (childGrid.style.cellPadding.right === 5.76)\n            //                               && (this.gridRow.grid.style.cellSpacing === 0) && (childGrid.style.cellSpacing === 0)) {\n            //     layoutRect = innerLayoutArea;\n            // }\n            // if(this.objectValue.style.cellPadding != null && typeof this.objectValue.style.cellPadding !== 'undefined'){\n            //     layoutRect = bounds;\n            // }           \n            var layouter = new PdfGridLayouter(childGrid);\n            var format = new PdfGridLayoutFormat();\n            if (this.row.grid.LayoutFormat != null)\n                format = this.row.grid.LayoutFormat;\n            else\n                format.layout = PdfLayoutType.Paginate;\n            var param = new PdfLayoutParams();\n            if (graphics.layer != null) {\n                // Define layout parameters.\n                param.page = graphics.page;\n                param.bounds = layoutRect;\n                param.format = format;\n                //Set the span \n                childGrid.setSpan();\n                childGrid.checkSpan();\n                // Draw the child grid.\n                var childGridResult = layouter.Layouter(param);\n                //let childGridResult : PdfLayoutResult = layouter.innerLayout(param);\n                this.value = childGrid;\n                if (this.row.grid.splitChildRowIndex !== -1) {\n                    this.height = this.row.rowBreakHeightValue;\n                }\n                if (param.page != childGridResult.page) //&& (isWidthGreaterthanParent != true))\n                 {\n                    childGridResult.bounds.height = this.row.rowBreakHeightValue;\n                    if (this.row.rowBreakHeight == 0)\n                        this.row.NestedGridLayoutResult = childGridResult;\n                    else\n                        this.row.rowBreakHeight = this.row.rowBreakHeightValue;\n                    //bounds.height = this.row.rowBreakHeight;\n                    //After drawing paginated nested grid, the bounds of the parent grid in start page should be corrected for borders.\n                    //bounds.height = graphics.clientSize.height - bounds.y;\n                }\n            }\n        }\n        else if (this.objectValue instanceof PdfImage || this.objectValue instanceof PdfBitmap) {\n            var imageBounds = void 0;\n            if (this.objectValue.width <= innerLayoutArea.width) {\n                imageBounds = new RectangleF(innerLayoutArea.x, innerLayoutArea.y, this.objectValue.width, innerLayoutArea.height);\n            }\n            else {\n                imageBounds = innerLayoutArea;\n            }\n            graphics.drawImage(this.objectValue, imageBounds.x, imageBounds.y, imageBounds.width, imageBounds.height);\n        }\n        else if (this.objectValue instanceof PdfTextWebLink) {\n            this.objectValue.draw(graphics.currentPage, innerLayoutArea);\n        }\n        else if (typeof this.objectValue === 'undefined') {\n            this.objectValue = \"\";\n            graphics.drawString(this.objectValue, font, textPen, textBrush, innerLayoutArea.x, innerLayoutArea.y, innerLayoutArea.width, innerLayoutArea.height, strFormat);\n            if (this.style.cellPadding != null && this.style.cellPadding.bottom == 0 && this.style.cellPadding.left == 0 && this.style.cellPadding.right == 0 && this.style.cellPadding.top == 0) {\n                bounds.width -= (this.style.borders.left.width + this.style.borders.right.width);\n            }\n            if (this.gridRow.grid.style.cellSpacing != 0) {\n                bounds.width -= this.gridRow.grid.style.cellSpacing;\n            }\n        }\n        if (this.style.borders != null) {\n            if (!this.fontSpilt)\n                this.drawCellBorders(graphics, bounds);\n            else {\n                if (this.row.grid.ParentCell.row.grid.splitChildRowIndex != -1) {\n                    this.row.rowFontSplit = false;\n                    this.drawCellBorders(graphics, bounds);\n                }\n            }\n        }\n        return result;\n    };\n    /* tslint:enable */\n    /**\n     * Draws the `cell border` constructed by drawing lines.\n     * @private\n     */\n    PdfGridCell.prototype.drawCellBorders = function (graphics, bounds) {\n        if (this.row.grid.style.borderOverlapStyle === PdfBorderOverlapStyle.Inside) {\n            bounds.x += this.style.borders.left.width;\n            bounds.y += this.style.borders.top.width;\n            bounds.width -= this.style.borders.right.width;\n            bounds.height -= this.style.borders.bottom.width;\n        }\n        var p1 = new PointF(bounds.x, bounds.y + bounds.height);\n        var p2 = new PointF(bounds.x, bounds.y);\n        var pen = this.cellStyle.borders.left;\n        if (this.cellStyle.borders.left.dashStyle === PdfDashStyle.Solid) {\n            pen.lineCap = PdfLineCap.Square;\n        }\n        // SetTransparency(ref graphics, pen);\n        graphics.drawLine(pen, p1, p2);\n        p1 = new PointF(bounds.x + bounds.width, bounds.y);\n        p2 = new PointF(bounds.x + bounds.width, bounds.y + bounds.height);\n        pen = this.cellStyle.borders.right;\n        if ((bounds.x + bounds.width) > (graphics.clientSize.width - (pen.width / 2))) {\n            p1 = new PointF(graphics.clientSize.width - (pen.width / 2), bounds.y);\n            p2 = new PointF(graphics.clientSize.width - (pen.width / 2), bounds.y + bounds.height);\n        }\n        if (this.cellStyle.borders.right.dashStyle === PdfDashStyle.Solid) {\n            pen.lineCap = PdfLineCap.Square;\n        }\n        graphics.drawLine(pen, p1, p2);\n        p1 = new PointF(bounds.x, bounds.y);\n        p2 = new PointF(bounds.x + bounds.width, bounds.y);\n        pen = this.cellStyle.borders.top;\n        if (this.cellStyle.borders.top.dashStyle === PdfDashStyle.Solid) {\n            pen.lineCap = PdfLineCap.Square;\n        }\n        graphics.drawLine(pen, p1, p2);\n        p1 = new PointF(bounds.x + bounds.width, bounds.y + bounds.height);\n        p2 = new PointF(bounds.x, bounds.y + bounds.height);\n        pen = this.cellStyle.borders.bottom;\n        // if ((bounds.y + bounds.height) > (graphics.clientSize.height - (pen.width / 2))) {\n        //     p1 = new PointF((bounds.x + bounds.width), (graphics.clientSize.height - (pen.width / 2)));\n        //     p2 = new PointF(bounds.x, (graphics.clientSize.height - (pen.width / 2)));\n        // }\n        if (this.cellStyle.borders.bottom.dashStyle === PdfDashStyle.Solid) {\n            pen.lineCap = PdfLineCap.Square;\n        }\n        graphics.drawLine(pen, p1, p2);\n    };\n    // private setTransparency(graphics : PdfGraphics, pen : PdfPen) : void {\n    //     let alpha : number = (pen.color.a / 255)as number;\n    //     graphics.save();\n    //     graphics.setTransparency(alpha);\n    // }\n    /**\n     * `Adjusts the outer layout area`.\n     * @private\n     */\n    /* tslint:disable */\n    PdfGridCell.prototype.adjustOuterLayoutArea = function (bounds, g) {\n        var isHeader = false;\n        var cellSpacing = this.row.grid.style.cellSpacing;\n        if (cellSpacing > 0) {\n            bounds = new RectangleF(bounds.x + cellSpacing, bounds.y + cellSpacing, bounds.width - cellSpacing, bounds.height - cellSpacing);\n        }\n        var currentColIndex = this.row.cells.indexOf(this);\n        if (this.columnSpan > 1 || (this.row.rowOverflowIndex > 0 && (currentColIndex == this.row.rowOverflowIndex + 1) && this.isCellMergeContinue)) {\n            var span = this.columnSpan;\n            if (span == 1 && this.isCellMergeContinue) {\n                for (var j = currentColIndex + 1; j < this.row.grid.columns.count; j++) {\n                    if (this.row.cells.getCell(j).isCellMergeContinue)\n                        span++;\n                    else\n                        break;\n                }\n            }\n            var totalWidth = 0;\n            for (var i = currentColIndex; i < currentColIndex + span; i++) {\n                if (this.row.grid.style.allowHorizontalOverflow) {\n                    var width = void 0;\n                    var compWidth = this.row.grid.size.width < g.clientSize.width ? this.row.grid.size.width : g.clientSize.width;\n                    if (this.row.grid.size.width > g.clientSize.width) {\n                        width = bounds.x + totalWidth + this.row.grid.columns.getColumn(i).width;\n                    }\n                    else {\n                        width = totalWidth + this.row.grid.columns.getColumn(i).width;\n                    }\n                    if (width > compWidth) {\n                        break;\n                    }\n                }\n                totalWidth += this.row.grid.columns.getColumn(i).width;\n            }\n            totalWidth -= this.row.grid.style.cellSpacing;\n            bounds.width = totalWidth;\n        }\n        if (this.rowSpan > 1 || this.row.rowSpanExists) {\n            var span = this.rowSpan;\n            var currentRowIndex = this.row.grid.rows.rowCollection.indexOf(this.row);\n            if (currentRowIndex == -1) {\n                currentRowIndex = this.row.grid.headers.indexOf(this.row);\n                if (currentRowIndex != -1) {\n                    isHeader = true;\n                }\n            }\n            // if (span == 1 && this.isCellMergeContinue) {\n            //         for (let j : number = currentRowIndex + 1; j < this.row.grid.rows.count; j++)\n            //         {\n            //             let flag : boolean = (isHeader ? this.row.grid.headers.getHeader(j).cells.getCell(currentColIndex).isCellMergeContinue : this.row.grid.rows.getRow(j).cells.getCell(currentColIndex).isCellMergeContinue);\n            //             if (flag)\n            //                 span++;\n            //             else\n            //                 break;\n            //         }\n            // }\n            var totalHeight = 0;\n            var max = 0;\n            for (var i = currentRowIndex; i < currentRowIndex + span; i++) {\n                totalHeight += (isHeader ? this.row.grid.headers.getHeader(i).height : this.row.grid.rows.getRow(i).height);\n                var row = this.row.grid.rows.getRow(i);\n                var rowIndex = this.row.grid.rows.rowCollection.indexOf(row);\n                /*if (this.rowSpan > 1)\n                    {\n                        for (let k : number = 0; k < this.row.cells.count; k++) {\n                            let cell : PdfGridCell = this.row.cells.getCell(k);\n                            if(cell.rowSpan>1)\n                            {\n                                let tempHeight : number =0;\n                                \n                                for (let j :number = i; j < i +cell.rowSpan; j++)\n                                {\n                                    if (!this.row.grid.rows.getRow(j).isRowSpanRowHeightSet)\n                                        this.row.grid.rows.getRow(j).isRowHeightSet = false;\n                                    tempHeight += this.row.grid.rows.getRow(j).height;\n                                    if (!this.row.grid.rows.getRow(j).isRowSpanRowHeightSet)\n                                        this.row.grid.rows.getRow(j).isRowHeightSet = true;\n                                }\n                                //To check the Row spanned cell height is greater than the total spanned row height.\n                                if(cell.height>tempHeight)\n                                {\n                                    if (max < (cell.height - tempHeight))\n                                    {\n                                        max = cell.height - tempHeight;\n                                        if (this.rowSpanRemainingHeight != 0 && max > this.rowSpanRemainingHeight)\n                                        {\n                                            max += this.rowSpanRemainingHeight;\n                                        }\n                                        let index :number = row.cells.indexOf(cell);\n                                        //set the m_rowspanRemainingHeight to last rowspanned row.\n                                        this.row.grid.rows.getRow((rowIndex +cell.rowSpan) - 1).cells.getCell(index).rowSpanRemainingHeight = max;\n                                        this.rowSpanRemainingHeight = this.row.grid.rows.getRow((rowIndex + cell.rowSpan) - 1).cells.getCell(index).rowSpanRemainingHeight;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    if (!this.row.grid.rows.getRow(i).isRowSpanRowHeightSet)\n                    this.row.grid.rows.getRow(i).isRowHeightSet = true;*/\n            }\n            var cellIndex = this.row.cells.indexOf(this);\n            totalHeight -= this.row.grid.style.cellSpacing;\n            // if (this.row.cells.getCell(cellIndex).height > totalHeight && (!this.row.grid.rows.getRow((currentRowIndex + span) - 1).isRowHeightSet)) {\n            //      this.row.grid.rows.getRow((currentRowIndex + span) - 1).cells.getCell(cellIndex).rowSpanRemainingHeight = this.row.cells.getCell(cellIndex).height - totalHeight;\n            //      totalHeight = this.row.cells.getCell(cellIndex).height;\n            //      bounds.height = totalHeight;\n            // } else {\n            bounds.height = totalHeight;\n            //  }\n            if (!this.row.rowMergeComplete) {\n                bounds.height = totalHeight;\n            }\n        }\n        return bounds;\n    };\n    /* tslint:enable */\n    /**\n     * Gets the `text font`.\n     * @private\n     */\n    PdfGridCell.prototype.getTextFont = function () {\n        if (typeof this.style.font !== 'undefined' && this.style.font != null) {\n            return this.style.font;\n        }\n        else if (typeof this.row.style.font !== 'undefined' && this.row.style.font != null) {\n            return this.row.style.font;\n        }\n        else if (typeof this.row.grid.style.font !== 'undefined' && this.row.grid.style.font != null) {\n            return this.row.grid.style.font;\n        }\n        else {\n            return PdfDocument.defaultFont;\n        }\n    };\n    /**\n     * Gets the `text brush`.\n     * @private\n     */\n    PdfGridCell.prototype.getTextBrush = function () {\n        if (typeof this.style.textBrush !== 'undefined' && this.style.textBrush != null) {\n            return this.style.textBrush;\n        }\n        else if (typeof this.row.style.textBrush !== 'undefined' && this.row.style.textBrush != null) {\n            return this.row.style.textBrush;\n        }\n        else {\n            return this.row.grid.style.textBrush;\n        }\n    };\n    /**\n     * Gets the `text pen`.\n     * @private\n     */\n    PdfGridCell.prototype.getTextPen = function () {\n        if (typeof this.style.textPen !== 'undefined' && this.style.textPen != null) {\n            return this.style.textPen;\n        }\n        else if (typeof this.row.style.textPen !== 'undefined' && this.row.style.textPen != null) {\n            return this.row.style.textPen;\n        }\n        else {\n            return this.row.grid.style.textPen;\n        }\n    };\n    /**\n     * Gets the `background brush`.\n     * @private\n     */\n    PdfGridCell.prototype.getBackgroundBrush = function () {\n        if (typeof this.style.backgroundBrush !== 'undefined' && this.style.backgroundBrush != null) {\n            return this.style.backgroundBrush;\n        }\n        else if (typeof this.row.style.backgroundBrush !== 'undefined' && this.row.style.backgroundBrush != null) {\n            return this.row.style.backgroundBrush;\n        }\n        else {\n            return this.row.grid.style.backgroundBrush;\n        }\n    };\n    /**\n     * Gets the `background image`.\n     * @private\n     */\n    PdfGridCell.prototype.getBackgroundImage = function () {\n        if (typeof this.style.backgroundImage !== 'undefined' && this.style.backgroundImage != null) {\n            return this.style.backgroundImage;\n        }\n        else if (typeof this.row.style.backgroundImage !== 'undefined' && this.row.style.backgroundImage != null) {\n            return this.row.style.backgroundImage;\n        }\n        else {\n            return this.row.grid.style.backgroundImage;\n        }\n    };\n    /**\n     * Gets the current `StringFormat`.\n     * @private\n     */\n    PdfGridCell.prototype.getStringFormat = function () {\n        if (typeof this.style.stringFormat !== 'undefined' && this.style.stringFormat != null) {\n            return this.style.stringFormat;\n        }\n        else {\n            return this.stringFormat;\n        }\n    };\n    /**\n     * Calculates the `height`.\n     * @private\n     */\n    PdfGridCell.prototype.measureHeight = function () {\n        // .. Calculate the cell text height.\n        // .....Add border widths, cell spacings and paddings to the height.\n        var width = this.calculateWidth();\n        // //check whether the Current PdfGridCell has padding\n        if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {\n            width -= (this.gridRow.grid.style.cellPadding.right + this.gridRow.grid.style.cellPadding.left);\n            //width -= (this.style.borders.left.width + this.style.borders.right.width);\n        }\n        else {\n            width -= (this.style.cellPadding.right + this.style.cellPadding.left);\n            width -= (this.style.borders.left.width + this.style.borders.right.width);\n        }\n        var height = 0;\n        var layouter = new PdfStringLayouter();\n        if (typeof this.objectValue === 'string' || typeof this.remaining === 'string') {\n            var currentValue = this.objectValue;\n            /* tslint:disable */\n            if (!this.isFinish)\n                currentValue = !(this.remaining === null || this.remaining === '' ||\n                    typeof this.remaining === 'undefined') ? this.remaining : this.objectValue;\n            var slr = null;\n            var cellIndex = this.row.cells.indexOf(this);\n            if (this.gridRow.grid.style.cellSpacing != 0) {\n                width -= this.gridRow.grid.style.cellSpacing * 2;\n            }\n            if (!this.row.cells.getCell(cellIndex).hasColSpan && !this.row.cells.getCell(cellIndex).hasRowSpan) {\n                if (this.gridRow.grid.isChildGrid) {\n                    if (width < 0) {\n                        this.tempval = width;\n                        if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {\n                            this.tempval += (this.gridRow.grid.style.cellPadding.right + this.gridRow.grid.style.cellPadding.left);\n                        }\n                        else {\n                            this.tempval += (this.style.cellPadding.right + this.style.cellPadding.left);\n                            this.tempval += (this.style.borders.left.width + this.style.borders.right.width);\n                        }\n                    }\n                    else {\n                        this.tempval = width;\n                    }\n                    slr = layouter.layout(currentValue, this.getTextFont(), this.stringFormat, new SizeF(this.tempval, 0), false, new SizeF(0, 0));\n                    height += slr.actualSize.height;\n                }\n                else {\n                    slr = layouter.layout(currentValue, this.getTextFont(), this.stringFormat, new SizeF(width, 0), false, new SizeF(0, 0));\n                    height += slr.actualSize.height;\n                }\n            }\n            /* tslint:enable */\n            height += (this.style.borders.top.width + this.style.borders.bottom.width) * 2;\n        }\n        else if (this.objectValue instanceof PdfGrid) {\n            var cellIndex = this.row.cells.indexOf(this);\n            var internalWidth = 0;\n            if ((this.style.cellPadding != null || typeof this.style.cellPadding !== 'undefined')) {\n                internalWidth = this.calculateWidth();\n                if (typeof this.style.cellPadding.left !== 'undefined' && this.style.cellPadding.hasLeftPad) {\n                    internalWidth -= this.style.cellPadding.left;\n                }\n                if (typeof this.style.cellPadding.right !== 'undefined' && this.style.cellPadding.hasRightPad) {\n                    internalWidth -= this.style.cellPadding.right;\n                }\n            }\n            else if ((this.row.grid.style.cellPadding != null || typeof this.row.grid.style.cellPadding !== 'undefined')) {\n                internalWidth = this.calculateWidth();\n                if (typeof this.row.grid.style.cellPadding.left !== 'undefined' && this.row.grid.style.cellPadding.hasLeftPad) {\n                    internalWidth -= this.row.grid.style.cellPadding.left;\n                }\n                if (typeof this.row.grid.style.cellPadding.right !== 'undefined' && this.row.grid.style.cellPadding.hasRightPad) {\n                    internalWidth -= this.row.grid.style.cellPadding.right;\n                }\n            }\n            else {\n                internalWidth = this.calculateWidth();\n            }\n            this.objectValue.tempWidth = internalWidth;\n            if (!this.row.cells.getCell(cellIndex).hasColSpan && !this.row.cells.getCell(cellIndex).hasRowSpan) {\n                height = this.objectValue.size.height;\n            }\n            else {\n                height += (this.style.borders.top.width + this.style.borders.bottom.width) * 2;\n            }\n            if (this.gridRow.grid.style.cellSpacing !== 0) {\n                width -= this.gridRow.grid.style.cellSpacing * 2;\n                //height += (this.row.grid.style.cellPadding.top + this.row.grid.style.cellPadding.bottom);\n            }\n            if (this.style.cellPadding != null || typeof this.style.cellPadding !== 'undefined') {\n                if (typeof this.row.grid.style.cellPadding.top !== 'undefined' && this.row.grid.style.cellPadding.hasTopPad) {\n                    height += this.row.grid.style.cellPadding.top;\n                }\n                if (this.row.grid.style.cellPadding.hasBottomPad && typeof this.row.grid.style.cellPadding.bottom !== 'undefined') {\n                    height += this.row.grid.style.cellPadding.bottom;\n                }\n            }\n            height += this.objectValue.style.cellSpacing;\n        }\n        else if (this.objectValue instanceof PdfImage || this.objectValue instanceof PdfBitmap) {\n            height += this.objectValue.height;\n        }\n        else if (this.objectValue instanceof PdfTextWebLink) {\n            var webLink = this.objectValue;\n            /* tslint:disable */\n            var slr = layouter.layout(webLink.text, webLink.font, webLink.stringFormat, new SizeF(width, 0), false, new SizeF(0, 0));\n            /* tslint:enable */\n            height += slr.actualSize.height;\n            height += (this.style.borders.top.width + this.style.borders.bottom.width) * 2;\n        }\n        else if (typeof this.objectValue === 'undefined') {\n            if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {\n                width -= (this.gridRow.grid.style.cellPadding.right + this.gridRow.grid.style.cellPadding.left);\n            }\n            else {\n                width -= (this.style.cellPadding.right + this.style.cellPadding.left);\n                width -= (this.style.borders.left.width + this.style.borders.right.width);\n            }\n            height += (this.style.borders.top.width + this.style.borders.bottom.width) * 2;\n        }\n        //Add padding top and bottom value to height\n        if (!(this.objectValue instanceof PdfGrid)) {\n            if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {\n                height += (this.row.grid.style.cellPadding.top + this.row.grid.style.cellPadding.bottom);\n            }\n            else {\n                height += (this.style.cellPadding.top + this.style.cellPadding.bottom);\n            }\n        }\n        else {\n            if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {\n                if (typeof this.row.grid.style.cellPadding.top !== 'undefined' && this.row.grid.style.cellPadding.hasTopPad) {\n                    height += this.row.grid.style.cellPadding.top;\n                }\n                if (typeof this.row.grid.style.cellPadding.bottom !== 'undefined' && this.row.grid.style.cellPadding.hasBottomPad) {\n                    height += this.row.grid.style.cellPadding.bottom;\n                }\n            }\n            else {\n                if (typeof this.style.cellPadding.top !== 'undefined' && this.style.cellPadding.hasTopPad) {\n                    height += this.style.cellPadding.top;\n                }\n                if (typeof this.style.cellPadding.bottom !== 'undefined' && this.style.cellPadding.hasBottomPad) {\n                    height += this.style.cellPadding.bottom;\n                }\n            }\n        }\n        height += this.row.grid.style.cellSpacing;\n        return height;\n    };\n    /**\n     * return the calculated `width` of the cell.\n     * @private\n     */\n    PdfGridCell.prototype.calculateWidth = function () {\n        var cellIndex = this.row.cells.indexOf(this);\n        var rowindex = this.row.grid.rows.rowCollection.indexOf(this.row);\n        var columnSpan = this.columnSpan;\n        var width = 0;\n        if (columnSpan === 1) {\n            for (var i = 0; i < columnSpan; i++) {\n                width += this.row.grid.columns.getColumn(cellIndex + i).width;\n            }\n        }\n        else if (columnSpan > 1) {\n            for (var i = 0; i < columnSpan; i++) {\n                width += this.row.grid.columns.getColumn(cellIndex + i).width;\n                if ((i + 1) < columnSpan) {\n                    this.row.cells.getCell(cellIndex + i + 1).hasColSpan = true;\n                }\n            }\n        }\n        if (this.parent != null && this.parent.row.width > 0) {\n            if ((this.row.grid.isChildGrid) && this.parent != null && (this.row.width > this.parent.row.width)) {\n                width = 0;\n                for (var j = 0; j < this.parent.columnSpan; j++) {\n                    width += this.parent.row.grid.columns.getColumn(j).width;\n                }\n                width = width / this.row.cells.count;\n            }\n        }\n        return width;\n    };\n    return PdfGridCell;\n}());\nexport { PdfGridCell };\n/**\n * `PdfGridCellCollection` class provides access to an ordered,\n * strongly typed collection of 'PdfGridCell' objects.\n * @private\n */\nvar PdfGridCellCollection = /** @class */ (function () {\n    //Constructor\n    /**\n     * Initializes a new instance of the `PdfGridCellCollection` class with the row.\n     * @private\n     */\n    function PdfGridCellCollection(row) {\n        /**\n         * @hidden\n         * @private\n         */\n        this.cells = [];\n        this.gridRow = row;\n    }\n    //Properties\n    /**\n     * Gets the current `cell`.\n     * @private\n     */\n    PdfGridCellCollection.prototype.getCell = function (index) {\n        if (index < 0 || index >= this.count) {\n            throw new Error('IndexOutOfRangeException');\n        }\n        return this.cells[index];\n    };\n    Object.defineProperty(PdfGridCellCollection.prototype, \"count\", {\n        /**\n         * Gets the cells `count`.[Read-Only].\n         * @private\n         */\n        get: function () {\n            return this.cells.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridCellCollection.prototype.add = function (cell) {\n        if (typeof cell === 'undefined') {\n            var tempcell = new PdfGridCell();\n            this.add(tempcell);\n            return cell;\n        }\n        else {\n            cell.row = this.gridRow;\n            this.cells.push(cell);\n        }\n    };\n    /**\n     * Returns the `index of` a particular cell in the collection.\n     * @private\n     */\n    PdfGridCellCollection.prototype.indexOf = function (cell) {\n        return this.cells.indexOf(cell);\n    };\n    return PdfGridCellCollection;\n}());\nexport { PdfGridCellCollection };\n","import { PdfGridCell } from './pdf-grid-cell';\nimport { PdfStringFormat } from './../../graphics/fonts/pdf-string-format';\n/**\n * `PdfGridColumn` class represents the schema of a column in a 'PdfGrid'.\n */\nvar PdfGridColumn = /** @class */ (function () {\n    //Constructors\n    /**\n     * Initializes a new instance of the `PdfGridColumn` class with the parent grid.\n     * @private\n     */\n    function PdfGridColumn(grid) {\n        /**\n         * The `width` of the column.\n         * @default 0\n         * @private\n         */\n        this.columnWidth = 0;\n        this.grid = grid;\n    }\n    Object.defineProperty(PdfGridColumn.prototype, \"width\", {\n        /**\n         * Gets or sets the `width` of the 'PdfGridColumn'.\n         * @private\n         */\n        get: function () {\n            return this.columnWidth;\n        },\n        set: function (value) {\n            this.isCustomWidth = true;\n            this.columnWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridColumn.prototype, \"format\", {\n        /**\n         * Gets or sets the information about the text `formatting`.\n         * @private\n         */\n        get: function () {\n            if (this.stringFormat == null) {\n                this.stringFormat = new PdfStringFormat(); //GetDefaultFormat();\n            }\n            return this.stringFormat;\n        },\n        set: function (value) {\n            this.stringFormat = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridColumn;\n}());\nexport { PdfGridColumn };\n/**\n * `PdfGridColumnCollection` class provides access to an ordered,\n * strongly typed collection of 'PdfGridColumn' objects.\n * @private\n */\nvar PdfGridColumnCollection = /** @class */ (function () {\n    //properties\n    //Constructors\n    /**\n     * Initializes a new instance of the `PdfGridColumnCollection` class with the parent grid.\n     * @private\n     */\n    function PdfGridColumnCollection(grid) {\n        /**\n         * @hidden\n         * @private\n         */\n        this.internalColumns = [];\n        /**\n         * @hidden\n         * @private\n         */\n        this.columnWidth = 0;\n        this.grid = grid;\n        this.internalColumns = [];\n    }\n    //Iplementation\n    /**\n     * `Add` a new column to the 'PdfGrid'.\n     * @private\n     */\n    PdfGridColumnCollection.prototype.add = function (count) {\n        // public add(column : PdfGridColumn) : void\n        // public add(arg : number|PdfGridColumn) : void {\n        // if (typeof arg === 'number') {\n        for (var i = 0; i < count; i++) {\n            this.internalColumns.push(new PdfGridColumn(this.grid));\n            for (var index = 0; index < this.grid.rows.count; index++) {\n                var row = this.grid.rows.getRow(index);\n                var cell = new PdfGridCell();\n                cell.value = '';\n                row.cells.add(cell);\n            }\n        }\n        // } else {\n        //     let column : PdfGridColumn = new PdfGridColumn(this.grid);\n        //     this.columns.push(column);\n        //     return column;\n        // }\n    };\n    Object.defineProperty(PdfGridColumnCollection.prototype, \"count\", {\n        /**\n         * Gets the `number of columns` in the 'PdfGrid'.[Read-Only].\n         * @private\n         */\n        get: function () {\n            return this.internalColumns.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridColumnCollection.prototype, \"width\", {\n        /**\n         * Gets the `widths`.\n         * @private\n         */\n        get: function () {\n            if (this.columnWidth === 0) {\n                this.columnWidth = this.measureColumnsWidth();\n            }\n            if (this.grid.initialWidth !== 0 && this.columnWidth !== this.grid.initialWidth && !this.grid.style.allowHorizontalOverflow) {\n                this.columnWidth = this.grid.initialWidth;\n                this.grid.isPageWidth = true;\n            }\n            return this.columnWidth;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridColumnCollection.prototype, \"columns\", {\n        /**\n         * Gets the `array of PdfGridColumn`.[Read-Only]\n         * @private\n         */\n        get: function () {\n            return this.internalColumns;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the `PdfGridColumn` from the specified index.[Read-Only]\n     * @private\n     */\n    PdfGridColumnCollection.prototype.getColumn = function (index) {\n        if (index >= 0 && index <= this.columns.length) {\n            return this.columns[index];\n        }\n        else {\n            throw Error('can not get the column from the index: ' + index);\n        }\n    };\n    //Implementation\n    /**\n     * `Calculates the column widths`.\n     * @private\n     */\n    PdfGridColumnCollection.prototype.measureColumnsWidth = function () {\n        var totalWidth = 0;\n        this.grid.measureColumnsWidth();\n        for (var i = 0, count = this.internalColumns.length; i < count; i++) {\n            totalWidth += this.internalColumns[i].width;\n        }\n        return totalWidth;\n    };\n    /**\n     * Gets the `widths of the columns`.\n     * @private\n     */\n    PdfGridColumnCollection.prototype.getDefaultWidths = function (totalWidth) {\n        var widths = [];\n        var summ = 0.0;\n        var subFactor = this.count;\n        for (var i = 0; i < this.count; i++) {\n            if (this.grid.isPageWidth && totalWidth >= 0 && !this.internalColumns[i].isCustomWidth) {\n                this.internalColumns[i].width = 0;\n            }\n            else {\n                widths[i] = this.internalColumns[i].width;\n                if (this.internalColumns[i].width > 0 && this.internalColumns[i].isCustomWidth) {\n                    totalWidth -= this.internalColumns[i].width;\n                    subFactor--;\n                }\n                else {\n                    widths[i] = 0;\n                }\n            }\n        }\n        for (var i = 0; i < this.count; i++) {\n            var width = totalWidth / subFactor;\n            if (widths[i] <= 0) {\n                widths[i] = width;\n            }\n        }\n        return widths;\n    };\n    return PdfGridColumnCollection;\n}());\nexport { PdfGridColumnCollection };\n","import { PdfGridCell, PdfGridCellCollection } from './pdf-grid-cell';\nimport { PdfGridRowStyle } from './styles/style';\n/**\n * `PdfGridRow` class provides customization of the settings for the particular row.\n */\nvar PdfGridRow = /** @class */ (function () {\n    //Constructor\n    /**\n     * Initializes a new instance of the `PdfGridRow` class with the parent grid.\n     * @private\n     */\n    function PdfGridRow(grid) {\n        /**\n         * Stores the index of the overflowing row.\n         * @private\n         */\n        this.gridRowOverflowIndex = 0;\n        /**\n         * The `height` of the row.\n         * @private\n         */\n        this.rowHeight = 0;\n        /**\n         * The `width` of the row.\n         * @private\n         */\n        this.rowWidth = 0;\n        /**\n         * The `isFinish` of the row.\n         * @private\n         */\n        this.isrowFinish = false;\n        /**\n         * Check whether the Row span row height `is set explicitly`.\n         * @default false\n         * @public\n         */\n        this.isRowSpanRowHeightSet = false;\n        /**\n         * The `page count` of the row.\n         * @public\n         */\n        this.noOfPageCount = 0;\n        /**\n         * Check whether the row height `is set explicitly`.\n         * @default false\n         * @private\n         */\n        this.isRowHeightSet = false;\n        this.isPageBreakRowSpanApplied = false;\n        /**\n         * Check weather the row merge `is completed` or not.\n         * @default true\n         * @private\n         */\n        this.isRowMergeComplete = true;\n        this.repeatFlag = false;\n        this.rowFontSplit = false;\n        this.pdfGrid = grid;\n    }\n    Object.defineProperty(PdfGridRow.prototype, \"rowSpanExists\", {\n        //Properties\n        /**\n         * Gets or sets a value indicating [`row span exists`].\n         * @private\n         */\n        get: function () {\n            return this.bRowSpanExists;\n        },\n        set: function (value) {\n            this.bRowSpanExists = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"cells\", {\n        /**\n         * Gets the `cells` from the selected row.[Read-Only].\n         * @private\n         */\n        get: function () {\n            if (this.gridCells == null) {\n                this.gridCells = new PdfGridCellCollection(this);\n            }\n            return this.gridCells;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"grid\", {\n        /**\n         * Gets or sets the parent `grid`.\n         * @private\n         */\n        get: function () {\n            return this.pdfGrid;\n        },\n        set: function (value) {\n            this.pdfGrid = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"style\", {\n        /**\n         * Gets or sets the row `style`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.rowStyle === 'undefined') {\n                this.rowStyle = new PdfGridRowStyle();\n                this.rowStyle.setParent(this);\n            }\n            return this.rowStyle;\n        },\n        set: function (value) {\n            this.rowStyle = value;\n            for (var i = 0; i < this.cells.count; i++) {\n                this.cells.getCell(i).style.borders = value.border;\n                if (typeof value.font !== 'undefined') {\n                    this.cells.getCell(i).style.font = value.font;\n                }\n                if (typeof value.backgroundBrush !== 'undefined') {\n                    this.cells.getCell(i).style.backgroundBrush = value.backgroundBrush;\n                }\n                if (typeof value.backgroundImage !== 'undefined') {\n                    this.cells.getCell(i).style.backgroundImage = value.backgroundImage;\n                }\n                if (typeof value.textBrush !== 'undefined') {\n                    this.cells.getCell(i).style.textBrush = value.textBrush;\n                }\n                if (typeof value.textPen !== 'undefined') {\n                    this.cells.getCell(i).style.textPen = value.textPen;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"rowBreakHeight\", {\n        /**\n         * `Height` of the row yet to be drawn after split.\n         * @private\n         */\n        get: function () {\n            if (typeof this.gridRowBreakHeight === 'undefined') {\n                this.gridRowBreakHeight = 0;\n            }\n            return this.gridRowBreakHeight;\n        },\n        set: function (value) {\n            this.gridRowBreakHeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"rowOverflowIndex\", {\n        /**\n         * `over flow index` of the row.\n         * @private\n         */\n        get: function () {\n            return this.gridRowOverflowIndex;\n        },\n        set: function (value) {\n            this.gridRowOverflowIndex = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"height\", {\n        /**\n         * Gets or sets the `height` of the row.\n         * @private\n         */\n        get: function () {\n            if (!this.isRowHeightSet) {\n                this.rowHeight = this.measureHeight();\n            }\n            return this.rowHeight;\n        },\n        set: function (value) {\n            this.rowHeight = value;\n            this.isRowHeightSet = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"width\", {\n        /**\n         * Gets or sets the `width` of the row.\n         * @private\n         */\n        get: function () {\n            if (this.rowWidth === 0 || typeof this.rowWidth === 'undefined') {\n                this.rowWidth = this.measureWidth();\n            }\n            return this.rowWidth;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"NestedGridLayoutResult\", {\n        /**\n         * Gets or sets the row `Nested grid Layout Result`.\n         * @private\n         */\n        get: function () {\n            return this.gridResult;\n        },\n        set: function (value) {\n            this.gridResult = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"columnSpanExists\", {\n        /**\n         * Gets or sets a value indicating [`column span exists`].\n         * @private\n         */\n        get: function () {\n            return this.bColumnSpanExists;\n        },\n        set: function (value) {\n            this.bColumnSpanExists = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"rowMergeComplete\", {\n        /**\n         * Check whether the Row `has row span or row merge continue`.\n         * @private\n         */\n        get: function () {\n            return this.isRowMergeComplete;\n        },\n        set: function (value) {\n            this.isRowMergeComplete = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"rowIndex\", {\n        /**\n         * Returns `index` of the row.\n         * @private\n         */\n        get: function () {\n            return this.grid.rows.rowCollection.indexOf(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * `Calculates the height`.\n     * @private\n     */\n    PdfGridRow.prototype.measureHeight = function () {\n        var rowSpanRemainingHeight = 0;\n        var rowHeight;\n        var maxHeight = 0;\n        if (this.cells.getCell(0).rowSpan > 1) {\n            rowHeight = 0;\n        }\n        else {\n            rowHeight = this.cells.getCell(0).height;\n        }\n        for (var i = 0; i < this.cells.count; i++) {\n            var cell = this.cells.getCell(i);\n            //get the maximum rowspan remaining height.\n            if (cell.rowSpanRemainingHeight > rowSpanRemainingHeight) {\n                rowSpanRemainingHeight = cell.rowSpanRemainingHeight;\n            }\n            //skip the cell if row spanned.\n            // if (cell.isRowMergeContinue) {\n            //     continue;\n            // }\n            // if (!cell.isRowMergeContinue) {\n            //     this.rowMergeComplete = false;\n            // }\n            this.rowMergeComplete = false;\n            if (cell.rowSpan > 1) {\n                var cellIn = i;\n                var rowin = this.grid.rows.rowCollection.indexOf(this);\n                for (var j = 0; j < cell.rowSpan; j++) {\n                    if ((j + 1) < cell.rowSpan) {\n                        this.grid.rows.getRow(rowin + j + 1).cells.getCell(cellIn).hasRowSpan = true;\n                    }\n                }\n                if (maxHeight < cell.height) {\n                    maxHeight = cell.height;\n                }\n                continue;\n            }\n            rowHeight = Math.max(rowHeight, cell.height);\n        }\n        if (maxHeight > rowHeight) {\n            rowHeight = maxHeight;\n        }\n        if (rowHeight === 0) {\n            rowHeight = maxHeight;\n        }\n        else if (rowSpanRemainingHeight > 0) {\n            rowHeight += rowSpanRemainingHeight;\n        }\n        return rowHeight;\n    };\n    PdfGridRow.prototype.measureWidth = function () {\n        var rowWid = 0;\n        for (var i = 0; i < this.grid.columns.count; i++) {\n            var column = this.grid.columns.getColumn(i);\n            rowWid += column.width;\n        }\n        return rowWid;\n    };\n    return PdfGridRow;\n}());\nexport { PdfGridRow };\n/**\n * `PdfGridRowCollection` class provides access to an ordered, strongly typed collection of 'PdfGridRow' objects.\n * @private\n */\nvar PdfGridRowCollection = /** @class */ (function () {\n    // Constructor\n    /**\n     * Initializes a new instance of the `PdfGridRowCollection` class with the parent grid.\n     * @private\n     */\n    function PdfGridRowCollection(grid) {\n        this.rows = [];\n        this.grid = grid;\n    }\n    Object.defineProperty(PdfGridRowCollection.prototype, \"count\", {\n        //Properties\n        /**\n         * Gets the number of header in the `PdfGrid`.[Read-Only].\n         * @private\n         */\n        get: function () {\n            return this.rows.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRowCollection.prototype, \"rowCollection\", {\n        //Implementation\n        /**\n         * Return the row collection of the `grid`.\n         * @private\n         */\n        get: function () {\n            return this.rows;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowCollection.prototype.addRow = function (arg) {\n        if (typeof arg === 'undefined') {\n            var temprow = new PdfGridRow(this.grid);\n            this.addRow(temprow);\n            return temprow;\n        }\n        else {\n            arg.style.setBackgroundBrush(this.grid.style.backgroundBrush);\n            arg.style.setFont(this.grid.style.font);\n            arg.style.setTextBrush(this.grid.style.textBrush);\n            arg.style.setTextPen(this.grid.style.textPen);\n            if (arg.cells.count === 0) {\n                for (var i = 0; i < this.grid.columns.count; i++) {\n                    arg.cells.add(new PdfGridCell());\n                }\n            }\n            this.rows.push(arg);\n        }\n    };\n    /**\n     * Return the row by index.\n     * @private\n     */\n    PdfGridRowCollection.prototype.getRow = function (index) {\n        return this.rows[index];\n    };\n    return PdfGridRowCollection;\n}());\nexport { PdfGridRowCollection };\n/**\n * `PdfGridHeaderCollection` class provides customization of the settings for the header.\n * @private\n */\nvar PdfGridHeaderCollection = /** @class */ (function () {\n    //constructor\n    /**\n     * Initializes a new instance of the `PdfGridHeaderCollection` class with the parent grid.\n     * @private\n     */\n    function PdfGridHeaderCollection(grid) {\n        /**\n         * The array to store the `rows` of the grid header.\n         * @private\n         */\n        this.rows = [];\n        this.grid = grid;\n        this.rows = [];\n    }\n    //Properties\n    /**\n     * Gets a 'PdfGridRow' object that represents the `header` row in a 'PdfGridHeaderCollection' control.[Read-Only].\n     * @private\n     */\n    PdfGridHeaderCollection.prototype.getHeader = function (index) {\n        // if (index < 0 || index >= Count) {\n        //     throw new IndexOutOfRangeException();\n        // }\n        return (this.rows[index]);\n    };\n    Object.defineProperty(PdfGridHeaderCollection.prototype, \"count\", {\n        /**\n         * Gets the `number of header` in the 'PdfGrid'.[Read-Only]\n         * @private\n         */\n        get: function () {\n            return this.rows.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridHeaderCollection.prototype.add = function (arg) {\n        if (typeof arg === 'number') {\n            var row = void 0;\n            for (var i = 0; i < arg; i++) {\n                row = new PdfGridRow(this.grid);\n                for (var j = 0; j < this.grid.columns.count; j++) {\n                    row.cells.add(new PdfGridCell());\n                }\n                this.rows.push(row);\n            }\n            return this.rows;\n        }\n        else {\n            this.rows.push(arg);\n        }\n    };\n    PdfGridHeaderCollection.prototype.indexOf = function (row) {\n        return this.rows.indexOf(row);\n    };\n    return PdfGridHeaderCollection;\n}());\nexport { PdfGridHeaderCollection };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfGrid.ts class for EJ2-PDF\n */\nimport { PdfGridColumnCollection } from './pdf-grid-column';\nimport { PdfGridRowCollection, PdfGridHeaderCollection } from './pdf-grid-row';\nimport { RectangleF, SizeF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfLayoutElement } from './../../graphics/figures/layout-element';\nimport { PdfLayoutFormat } from './../../graphics/figures/base/element-layouter';\nimport { PdfGridStyle } from './styles/style';\nimport { PdfGridLayouter } from './../../structured-elements/grid/layout/grid-layouter';\nvar PdfGrid = /** @class */ (function (_super) {\n    __extends(PdfGrid, _super);\n    //constructor\n    /**\n     * Initialize a new instance for `PdfGrid` class.\n     * @private\n     */\n    function PdfGrid() {\n        var _this = _super.call(this) || this;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.gridSize = new SizeF(0, 0);\n        /**\n         * Check the child grid is ' split or not'\n         */\n        _this.isGridSplit = false;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.isRearranged = false;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.pageBounds = new RectangleF();\n        /**\n         * @hidden\n         * @private\n         */\n        _this.listOfNavigatePages = [];\n        /**\n         * @hidden\n         * @private\n         */\n        _this.parentCellIndex = 0;\n        _this.tempWidth = 0;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.breakRow = true;\n        _this.splitChildRowIndex = -1;\n        /**\n         * The event raised on `begin cell lay outing`.\n         * @event\n         * @private\n         */\n        //public beginPageLayout : Function;\n        /**\n         * The event raised on `end cell lay outing`.\n         * @event\n         * @private\n         */\n        //public endPageLayout : Function;\n        _this.hasRowSpanSpan = false;\n        _this.hasColumnSpan = false;\n        _this.isSingleGrid = true;\n        return _this;\n    }\n    Object.defineProperty(PdfGrid.prototype, \"raiseBeginCellDraw\", {\n        //Properties\n        /**\n         * Gets a value indicating whether the `start cell layout event` should be raised.\n         * @private\n         */\n        get: function () {\n            return (typeof this.beginCellDraw !== 'undefined' && typeof this.beginCellDraw !== null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"raiseEndCellDraw\", {\n        /**\n         * Gets a value indicating whether the `end cell layout event` should be raised.\n         * @private\n         */\n        get: function () {\n            return (typeof this.endCellDraw !== 'undefined' && typeof this.endCellDraw !== null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"repeatHeader\", {\n        /**\n         * Gets or sets a value indicating whether to `repeat header`.\n         * @private\n         */\n        get: function () {\n            if (this.bRepeatHeader == null || typeof this.bRepeatHeader === 'undefined') {\n                this.bRepeatHeader = false;\n            }\n            return this.bRepeatHeader;\n        },\n        set: function (value) {\n            this.bRepeatHeader = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"allowRowBreakAcrossPages\", {\n        /**\n         * Gets or sets a value indicating whether to split or cut rows that `overflow a page`.\n         * @private\n         */\n        get: function () {\n            return this.breakRow;\n        },\n        set: function (value) {\n            this.breakRow = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"columns\", {\n        /**\n         * Gets the `column` collection of the PdfGrid.[Read-Only]\n         * @private\n         */\n        get: function () {\n            if (this.gridColumns == null || typeof this.gridColumns === 'undefined') {\n                this.gridColumns = new PdfGridColumnCollection(this);\n            }\n            return this.gridColumns;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"rows\", {\n        /**\n         * Gets the `row` collection from the PdfGrid.[Read-Only]\n         * @private\n         */\n        get: function () {\n            if (this.gridRows == null) {\n                this.gridRows = new PdfGridRowCollection(this);\n            }\n            return this.gridRows;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"headers\", {\n        /**\n         * Gets the `headers` collection from the PdfGrid.[Read-Only]\n         * @private\n         */\n        get: function () {\n            if (this.gridHeaders == null || typeof this.gridHeaders === 'undefined') {\n                this.gridHeaders = new PdfGridHeaderCollection(this);\n            }\n            return this.gridHeaders;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"initialWidth\", {\n        /**\n         * Indicating `initial width` of the page.\n         * @private\n         */\n        get: function () {\n            return this.gridInitialWidth;\n        },\n        set: function (value) {\n            this.gridInitialWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"style\", {\n        /**\n         * Gets or sets the `grid style`.\n         * @private\n         */\n        get: function () {\n            if (this.gridStyle == null) {\n                this.gridStyle = new PdfGridStyle();\n            }\n            return this.gridStyle;\n        },\n        set: function (value) {\n            if (this.gridStyle == null) {\n                this.gridStyle = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"isPageWidth\", {\n        /**\n         * Gets a value indicating whether the grid column width is considered to be `page width`.\n         * @private\n         */\n        get: function () {\n            return this.ispageWidth;\n        },\n        set: function (value) {\n            this.ispageWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"isChildGrid\", {\n        /**\n         * Gets or set if grid `is nested grid`.\n         * @private\n         */\n        get: function () {\n            return this.ischildGrid;\n        },\n        set: function (value) {\n            this.ischildGrid = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"size\", {\n        /**\n         * Gets or set if grid ' is split or not'\n         * @public\n         */\n        // public get isGridSplit() : boolean {\n        //     return this.isgridSplit;\n        // }\n        // public set isGridSplit(value : boolean) {\n        //     this.isgridSplit = value;\n        // }public get isGridSplit() : boolean {\n        //     return this.isgridSplit;\n        // }\n        // public set isGridSplit(value : boolean) {\n        //     this.isgridSplit = value;\n        // }\n        /**\n         * Gets the `size`.\n         * @private\n         */\n        get: function () {\n            if ((this.gridSize.width === 0 || typeof this.gridSize.width === 'undefined') && this.gridSize.height === 0) {\n                this.gridSize = this.measure();\n            }\n            return this.gridSize;\n            // } else {\n            //     return this.gridSize;\n            // }\n        },\n        set: function (value) {\n            this.gridSize = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"ParentCell\", {\n        get: function () {\n            return this.parentCell;\n        },\n        set: function (value) {\n            this.parentCell = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"LayoutFormat\", {\n        get: function () {\n            return this.layoutFormat;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGrid.prototype.draw = function (arg1, arg2, arg3, arg4) {\n        if (arg2 instanceof PointF && typeof arg2.width === 'undefined' && typeof arg3 === 'undefined') {\n            return this.drawHelper(arg1, arg2.x, arg2.y);\n        }\n        else if (typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'undefined') {\n            return this.drawHelper(arg1, arg2, arg3, null);\n        }\n        else if (arg2 instanceof RectangleF && typeof arg2.width !== 'undefined' && typeof arg3 === 'undefined') {\n            return this.drawHelper(arg1, arg2, null);\n        }\n        else if (arg2 instanceof PointF && typeof arg2.width === 'undefined' && arg3 instanceof PdfLayoutFormat) {\n            return this.drawHelper(arg1, arg2.x, arg2.y, arg3);\n        }\n        else if (typeof arg2 === 'number' && typeof arg3 === 'number' && (arg4 instanceof PdfLayoutFormat || arg4 == null)) {\n            var width = (arg1.graphics.clientSize.width - arg2);\n            var layoutRectangle = new RectangleF(arg2, arg3, width, 0);\n            return this.drawHelper(arg1, layoutRectangle, arg4);\n        }\n        else if (arg2 instanceof RectangleF && typeof arg2.width !== 'undefined' && typeof arg3 === 'boolean') {\n            return this.drawHelper(arg1, arg2, null);\n        }\n        else {\n            return this.drawHelper(arg1, arg2, arg3);\n        }\n    };\n    /**\n     * `measures` this instance.\n     * @private\n     */\n    PdfGrid.prototype.measure = function () {\n        var height = 0;\n        var width = this.columns.width;\n        for (var i = 0; i < this.headers.count; i++) {\n            var row = this.headers.getHeader(i);\n            height += row.height;\n        }\n        for (var i = 0; i < this.rows.count; i++) {\n            var row = this.rows.getRow(i);\n            height += row.height;\n        }\n        return new SizeF(width, height);\n    };\n    PdfGrid.prototype.onBeginCellDraw = function (args) {\n        if (this.raiseBeginCellDraw) {\n            this.beginCellDraw(this, args);\n        }\n    };\n    PdfGrid.prototype.onEndCellDraw = function (args) {\n        if (this.raiseEndCellDraw) {\n            this.endCellDraw(this, args);\n        }\n    };\n    /**\n     * `Layouts` the specified graphics.\n     * @private\n     */\n    PdfGrid.prototype.layout = function (param) {\n        // if (this.rows.count !== 0) {\n        //     if (this.rows.getRow(0).cells.getCell(0).style.borders.left.width !== 1) {\n        //         let x : number = this.rows.getRow(0).cells.getCell(0).style.borders.left.width / 2;\n        //         let y : number = this.rows.getRow(0).cells.getCell(0).style.borders.top.width / 2;\n        //         if (param.bounds.x === PdfBorders.default.right.width / 2 && param.bounds.y === PdfBorders.default.right.width / 2) {\n        //             let newBound : RectangleF = new RectangleF(x, y, this.gridSize.width, this.gridSize.height);\n        //             param.bounds = newBound;\n        //         }\n        //     }\n        // }\n        this.setSpan();\n        this.checkSpan();\n        this.layoutFormat = param.format;\n        this.gridLocation = param.bounds;\n        var layouter = new PdfGridLayouter(this);\n        var result = (layouter.Layouter(param));\n        return result;\n    };\n    PdfGrid.prototype.setSpan = function () {\n        var colSpan = 1;\n        var rowSpan = 1;\n        var currentCellIndex = 0;\n        var currentRowIndex = 0;\n        var maxSpan = 0;\n        var rowCount = this.headers.count;\n        for (var i = 0; i < rowCount; i++) {\n            var row = this.headers.getHeader(i);\n            maxSpan = 0;\n            var colCount = row.cells.count;\n            for (var j = 0; j < colCount; j++) {\n                var cell = row.cells.getCell(j);\n                maxSpan = Math.max(maxSpan, cell.rowSpan);\n                //Skip setting span map for already coverted rows/columns.\n                if (!cell.isCellMergeContinue && !cell.isRowMergeContinue && (cell.columnSpan > 1 || cell.rowSpan > 1)) {\n                    if (cell.columnSpan + j > row.cells.count) {\n                        throw new Error('Invalid span specified at row ' + j.toString() + ' column ' + i.toString());\n                    }\n                    if (cell.rowSpan + i > this.headers.count) {\n                        throw new Error('Invalid span specified at Header ' + j.toString() + ' column ' + i.toString());\n                    }\n                    // if (this.rows.count !== 0 && cell.rowSpan + i > this.rows.count) {\n                    //     throw new Error('Invalid span specified at row ' + j.toString() + ' column ' + i.toString());\n                    // }\n                    if (cell.columnSpan > 1 && cell.rowSpan > 1) {\n                        colSpan = cell.columnSpan;\n                        rowSpan = cell.rowSpan;\n                        currentCellIndex = j;\n                        currentRowIndex = i;\n                        cell.isCellMergeStart = true;\n                        cell.isRowMergeStart = true;\n                        //Set Column merges for first row\n                        while (colSpan > 1) {\n                            currentCellIndex++;\n                            row.cells.getCell(currentCellIndex).isCellMergeContinue = true;\n                            row.cells.getCell(currentCellIndex).isRowMergeContinue = true;\n                            row.cells.getCell(currentCellIndex).rowSpan = rowSpan;\n                            colSpan--;\n                        }\n                        currentCellIndex = j;\n                        colSpan = cell.columnSpan;\n                        //Set Row Merges and column merges foreach subsequent rows.\n                        while (rowSpan > 1) {\n                            currentRowIndex++;\n                            this.headers.getHeader(currentRowIndex).cells.getCell(j).isRowMergeContinue = true;\n                            this.headers.getHeader(currentRowIndex).cells.getCell(currentCellIndex).isRowMergeContinue = true;\n                            rowSpan--;\n                            while (colSpan > 1) {\n                                currentCellIndex++;\n                                this.headers.getHeader(currentRowIndex).cells.getCell(currentCellIndex).isCellMergeContinue = true;\n                                this.headers.getHeader(currentRowIndex).cells.getCell(currentCellIndex).isRowMergeContinue = true;\n                                colSpan--;\n                            }\n                            colSpan = cell.columnSpan;\n                            currentCellIndex = j;\n                        }\n                    }\n                    else if (cell.columnSpan > 1 && cell.rowSpan === 1) {\n                        colSpan = cell.columnSpan;\n                        currentCellIndex = j;\n                        cell.isCellMergeStart = true;\n                        //Set Column merges.\n                        while (colSpan > 1) {\n                            currentCellIndex++;\n                            row.cells.getCell(currentCellIndex).isCellMergeContinue = true;\n                            colSpan--;\n                        }\n                    }\n                    else if (cell.columnSpan === 1 && cell.rowSpan > 1) {\n                        rowSpan = cell.rowSpan;\n                        currentRowIndex = i;\n                        //Set row Merges.\n                        while (rowSpan > 1) {\n                            currentRowIndex++;\n                            this.headers.getHeader(currentRowIndex).cells.getCell(j).isRowMergeContinue = true;\n                            rowSpan--;\n                        }\n                    }\n                }\n            }\n            row.maximumRowSpan = maxSpan;\n        }\n    };\n    PdfGrid.prototype.checkSpan = function () {\n        var cellcolSpan;\n        var cellrowSpan = 1;\n        var cellmaxSpan = 0;\n        var currentCellIndex;\n        var currentRowIndex = 0;\n        cellcolSpan = cellrowSpan = 1;\n        currentCellIndex = currentRowIndex = 0;\n        if (this.hasRowSpanSpan || this.hasColumnSpan) {\n            var rowCount = this.rows.count;\n            for (var i = 0; i < rowCount; i++) {\n                var row = this.rows.getRow(i);\n                cellmaxSpan = 0;\n                var colCount = row.cells.count;\n                for (var j = 0; j < colCount; j++) {\n                    var cell = row.cells.getCell(j);\n                    cellmaxSpan = Math.max(cellmaxSpan, cell.rowSpan);\n                    //Skip setting span map for already coverted rows/columns.\n                    if (!cell.isCellMergeContinue && !cell.isRowMergeContinue\n                        && (cell.columnSpan > 1 || cell.rowSpan > 1)) {\n                        if (cell.columnSpan + j > row.cells.count) {\n                            throw new Error('Invalid span specified at row  ' + j.toString() + ' column ' + i.toString());\n                        }\n                        if (cell.rowSpan + i > this.rows.count) {\n                            throw new Error('Invalid span specified at row  ' + j.toString() + ' column ' + i.toString());\n                        }\n                        if (cell.columnSpan > 1 && cell.rowSpan > 1) {\n                            cellcolSpan = cell.columnSpan;\n                            cellrowSpan = cell.rowSpan;\n                            currentCellIndex = j;\n                            currentRowIndex = i;\n                            cell.isCellMergeStart = true;\n                            cell.isRowMergeStart = true;\n                            //Set Column merges for first row\n                            while (cellcolSpan > 1) {\n                                currentCellIndex++;\n                                row.cells.getCell(currentCellIndex).isCellMergeContinue = true;\n                                row.cells.getCell(currentCellIndex).isRowMergeContinue = true;\n                                cellcolSpan--;\n                            }\n                            currentCellIndex = j;\n                            cellcolSpan = cell.columnSpan;\n                            //Set Row Merges and column merges foreach subsequent rows.\n                            while (cellrowSpan > 1) {\n                                currentRowIndex++;\n                                this.rows.getRow(currentRowIndex).cells.getCell(j).isRowMergeContinue = true;\n                                this.rows.getRow(currentRowIndex).cells.getCell(currentCellIndex).isRowMergeContinue = true;\n                                cellrowSpan--;\n                                while (cellcolSpan > 1) {\n                                    currentCellIndex++;\n                                    this.rows.getRow(currentRowIndex).cells.getCell(currentCellIndex).isCellMergeContinue = true;\n                                    this.rows.getRow(currentRowIndex).cells.getCell(currentCellIndex).isRowMergeContinue = true;\n                                    cellcolSpan--;\n                                }\n                                cellcolSpan = cell.columnSpan;\n                                currentCellIndex = j;\n                            }\n                        }\n                        else if (cell.columnSpan > 1 && cell.rowSpan === 1) {\n                            cellcolSpan = cell.columnSpan;\n                            currentCellIndex = j;\n                            cell.isCellMergeStart = true;\n                            //Set Column merges.\n                            while (cellcolSpan > 1) {\n                                currentCellIndex++;\n                                row.cells.getCell(currentCellIndex).isCellMergeContinue = true;\n                                cellcolSpan--;\n                            }\n                        }\n                        else if (cell.columnSpan === 1 && cell.rowSpan > 1) {\n                            cellrowSpan = cell.rowSpan;\n                            currentRowIndex = i;\n                            //Set row Merges.\n                            while (cellrowSpan > 1) {\n                                currentRowIndex++;\n                                this.rows.getRow(currentRowIndex).cells.getCell(j).isRowMergeContinue = true;\n                                cellrowSpan--;\n                            }\n                        }\n                    }\n                }\n                row.maximumRowSpan = cellmaxSpan;\n            }\n        }\n    };\n    PdfGrid.prototype.measureColumnsWidth = function (bounds) {\n        if (typeof bounds !== 'undefined') {\n            this.isPageWidth = false;\n            var widths = this.columns.getDefaultWidths(bounds.width - bounds.x);\n            //let tempWidth : number = this.columns.getColumn(0).width;\n            for (var i = 0, count = this.columns.count; i < count; i++) {\n                // if (this.columns.getColumn(i).width < 0)\n                //     this.columns.getColumn(i).columnWidth = widths[i];\n                // else if (this.columns.getColumn(i).width > 0 && !this.columns.getColumn(i).isCustomWidth && widths[i]>0 && this.isComplete)\n                this.columns.getColumn(i).columnWidth = widths[i];\n                this.tempWidth = widths[i];\n            }\n            if (this.ParentCell != null && this.style.allowHorizontalOverflow == false && this.ParentCell.row.grid.style.allowHorizontalOverflow == false) {\n                var padding = 0;\n                var columnWidth = 0;\n                var columnCount = this.columns.count;\n                var childGridColumnWidth = 0;\n                if (this.ParentCell.style.cellPadding != null || typeof this.ParentCell.style.cellPadding !== 'undefined') {\n                    if (typeof this.ParentCell.style.cellPadding.left != 'undefined' && this.ParentCell.style.cellPadding.hasLeftPad) {\n                        padding += this.ParentCell.style.cellPadding.left;\n                    }\n                    if (typeof this.ParentCell.style.cellPadding.right != 'undefined' && this.ParentCell.style.cellPadding.hasRightPad) {\n                        padding += this.ParentCell.style.cellPadding.right;\n                    }\n                }\n                for (var i = 0; i < this.ParentCell.columnSpan; i++) {\n                    columnWidth += this.ParentCell.row.grid.columns.getColumn(this.parentCellIndex + i).width;\n                }\n                for (var j = 0; j < this.columns.count; j++) {\n                    if (this.gridColumns.getColumn(j).width > 0 && this.gridColumns.getColumn(j).isCustomWidth) {\n                        columnWidth -= this.gridColumns.getColumn(j).width;\n                        columnCount--;\n                    }\n                }\n                if ((this.ParentCell.row.grid.style.cellPadding != null || typeof this.ParentCell.row.grid.style.cellPadding != 'undefined')) {\n                    if (typeof this.ParentCell.row.grid.style.cellPadding.top != 'undefined' && this.ParentCell.row.grid.style.cellPadding.hasTopPad) {\n                        padding += this.ParentCell.row.grid.style.cellPadding.top;\n                    }\n                    if (typeof this.ParentCell.row.grid.style.cellPadding.bottom != 'undefined' && this.ParentCell.row.grid.style.cellPadding.hasBottomPad) {\n                        padding += this.ParentCell.row.grid.style.cellPadding.bottom;\n                    }\n                }\n                if (this.ParentCell.row.grid.style.cellSpacing != 0) {\n                    columnWidth -= this.ParentCell.row.grid.style.cellSpacing * 2;\n                }\n                if (columnWidth > padding) {\n                    childGridColumnWidth = (columnWidth - padding) / columnCount;\n                    this.tempWidth = childGridColumnWidth;\n                    if (this.ParentCell != null) {\n                        for (var j = 0; j < this.columns.count; j++) {\n                            if (!this.columns.getColumn(j).isCustomWidth)\n                                this.columns.getColumn(j).columnWidth = childGridColumnWidth;\n                        }\n                    }\n                }\n            }\n            // if (this.ParentCell != null && this.ParentCell.row.width > 0)\n            // {\n            //     if (this.isChildGrid && this.gridSize.width > this.ParentCell.row.width)\n            //     {\n            //         widths = this.columns.getDefaultWidths(bounds.width);\n            //         for (let i : number = 0; i < this.columns.count; i++)\n            //         {\n            //             this.columns.getColumn(i).width = widths[i];\n            //         }\n            //     }\n            // }\n        }\n        else {\n            var widths = [this.columns.count];\n            for (var n = 0; n < this.columns.count; n++) {\n                widths[n] = 0;\n            }\n            var cellWidth = 0;\n            var cellWidths = 0;\n            if ((typeof this.isChildGrid === 'undefined' && typeof this.gridLocation !== 'undefined') || (this.isChildGrid === null && typeof this.gridLocation !== 'undefined')) {\n                this.initialWidth = this.gridLocation.width;\n            }\n            if (this.headers.count > 0) {\n                var colCount_1 = this.headers.getHeader(0).cells.count;\n                var rowCount = this.headers.count;\n                for (var i = 0; i < colCount_1; i++) {\n                    cellWidth = 0;\n                    for (var j = 0; j < rowCount; j++) {\n                        var rowWidth = Math.min(this.initialWidth, this.headers.getHeader(j).cells.getCell(i).width);\n                        cellWidth = Math.max(cellWidth, rowWidth);\n                    }\n                    widths[i] = cellWidth;\n                }\n            }\n            // else {\n            //     let colCount : number = this.rows.getRow(0).cells.count;\n            //     let rowCount : number = this.rows.count;\n            //     for (let i : number = 0; i < colCount; i++) {\n            //         cellWidth = 0;\n            //         for (let j : number = 0; j < rowCount; j++) {\n            //             let rowWidth : number = Math.min(this.initialWidth, this.rows.getRow(j).cells.getCell(i).width);\n            //             cellWidth = Math.max(cellWidth, rowWidth);\n            //         }\n            //         widths[i] = cellWidth;\n            //     }\n            // }\n            cellWidth = 0;\n            for (var i = 0, colCount_2 = this.columns.count; i < colCount_2; i++) {\n                for (var j = 0, rowCount = this.rows.count; j < rowCount; j++) {\n                    if ((this.rows.getRow(j).cells.getCell(i).columnSpan == 1 && !this.rows.getRow(j).cells.getCell(i).isCellMergeContinue) || this.rows.getRow(j).cells.getCell(i).value != null) {\n                        if (this.rows.getRow(j).cells.getCell(i).value != null && !this.rows.getRow(j).grid.style.allowHorizontalOverflow) {\n                            var value = this.rows.getRow(j).grid.style.cellPadding.right +\n                                this.rows.getRow(j).grid.style.cellPadding.left\n                                + this.rows.getRow(j).cells.getCell(i).style.borders.left.width / 2;\n                            //  if (this.initialWidth != 0 )\n                            //         (this.rows.getRow(j).cells.getCell(i).value as PdfGrid).initialWidth = this.initialWidth - value;\n                        }\n                        var rowWidth = 0;\n                        rowWidth = this.initialWidth > 0.0 ? Math.min(this.initialWidth, this.rows.getRow(j).cells.getCell(i).width) : this.rows.getRow(j).cells.getCell(i).width;\n                        // let internalWidth : number = this.rows.getRow(j).cells.getCell(i).width;\n                        // internalWidth += this.rows.getRow(j).cells.getCell(i).style.borders.left.width;\n                        // internalWidth += this.rows.getRow(j).cells.getCell(i).style.borders.right.width;\n                        // let internalHeight : number = this.rows.getRow(j).cells.getCell(i).height;\n                        // internalHeight += (this.rows.getRow(j).cells.getCell(i).style.borders.top.width);\n                        // internalHeight += (this.rows.getRow(j).cells.getCell(i).style.borders.bottom.width);\n                        // let isCorrectWidth : boolean = (internalWidth + this.gridLocation.x) > this.currentGraphics.clientSize.width;\n                        // let isCorrectHeight : boolean = (internalHeight + this.gridLocation.y) > this.currentGraphics.clientSize.height;\n                        // if (isCorrectWidth || isCorrectHeight) {\n                        //     throw Error('Image size exceeds client size of the page. Can not insert this image');\n                        // }\n                        // rowWidth = Math.min(this.initialWidth, this.rows.getRow(j).cells.getCell(i).width);\n                        cellWidth = Math.max(widths[i], Math.max(cellWidth, rowWidth));\n                        cellWidth = Math.max(this.columns.getColumn(i).width, cellWidth);\n                    }\n                }\n                if (this.rows.count != 0)\n                    widths[i] = cellWidth;\n                cellWidth = 0;\n            }\n            for (var i = 0, RowCount = this.rows.count; i < RowCount; i++) {\n                for (var j = 0, ColCount = this.columns.count; j < ColCount; j++) {\n                    if (this.rows.getRow(i).cells.getCell(j).columnSpan > 1) {\n                        var total = widths[j];\n                        for (var k = 1; k < this.rows.getRow(i).cells.getCell(j).columnSpan; k++) {\n                            total += widths[j + k];\n                        }\n                        // if (this.rows.getRow(i).cells.getCell(j).width > total)\n                        // {\n                        //     let extendedWidth : number = this.rows.getRow(i).cells.getCell(j).width - total;\n                        //     extendedWidth = extendedWidth / this.rows.getRow(i).cells.getCell(j).columnSpan;\n                        //     for (let k : number = j; k < j + this.rows.getRow(i).cells.getCell(j).columnSpan; k++)\n                        //         widths[k] += extendedWidth;\n                        // }\n                    }\n                }\n            }\n            // if (this.isChildGrid && this.initialWidth != 0)\n            // {\n            //     widths = this.columns.getDefaultWidths(this.initialWidth);\n            // }\n            for (var i = 0, count = this.columns.count; i < count; i++) {\n                if (this.columns.getColumn(i).width <= 0)\n                    this.columns.getColumn(i).columnWidth = widths[i];\n                else if (this.columns.getColumn(i).width > 0 && !this.columns.getColumn(i).isCustomWidth)\n                    this.columns.getColumn(i).columnWidth = widths[i];\n            }\n            var padding = 0;\n            var colWidth = 0;\n            var colCount = this.columns.count;\n            var childGridColWidth = 0;\n            colWidth = this.tempWidth;\n            for (var j = 0; j < this.columns.count; j++) {\n                if (this.gridColumns.getColumn(j).width > 0 && this.gridColumns.getColumn(j).isCustomWidth) {\n                    colWidth -= this.gridColumns.getColumn(j).width;\n                    colCount--;\n                }\n            }\n            // if (this.style.cellSpacing != 0){\n            //     colWidth -= this.style.cellSpacing * 2;\n            // }\n            if (colWidth > 0) {\n                if (this.ParentCell.row.grid.style.cellSpacing != 0) {\n                    colWidth -= this.ParentCell.row.grid.style.cellSpacing * 2;\n                }\n            }\n            if (colWidth > padding) {\n                childGridColWidth = (colWidth) / colCount;\n                if (this.ParentCell != null) {\n                    for (var j = 0; j < this.columns.count; j++) {\n                        if (!this.columns.getColumn(j).isCustomWidth)\n                            this.columns.getColumn(j).columnWidth = childGridColWidth;\n                    }\n                }\n            }\n        }\n    };\n    return PdfGrid;\n}(PdfLayoutElement));\nexport { PdfGrid };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfGrid } from '../pdf-grid';\nimport { PdfStringFormat } from './../../../graphics/fonts/pdf-string-format';\nimport { SizeF, RectangleF, PointF } from './../../../drawing/pdf-drawing';\nimport { PdfBorders } from '../styles/pdf-borders';\nimport { PdfLayoutType, PdfLayoutBreakType } from './../../../graphics/figures/enum';\nimport { PdfLayoutResult, PdfLayoutFormat, ElementLayouter } from './../../../graphics/figures/base/element-layouter';\nimport { PdfHorizontalOverflowType } from '../styles/style';\nimport { TemporaryDictionary } from './../../../collections/object-object-pair/dictionary';\n/**\n * Class `lay outing the text`.\n *\n */\nvar PdfGridLayouter = /** @class */ (function (_super) {\n    __extends(PdfGridLayouter, _super);\n    //constructor\n    /**\n     * Initialize a new instance for `PdfGrid` class.\n     * @private\n     */\n    function PdfGridLayouter(baseFormat) {\n        var _this = _super.call(this, baseFormat) || this;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.gridInitialWidth = 0;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.gridSize = new SizeF(0, 0);\n        _this.parentCellIndex = 0;\n        _this.tempWidth = 0;\n        _this.childheight = 0;\n        /**\n         * Check weather it is `child grid or not`.\n         * @private\n         */\n        _this.isChildGrid = false;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.hasRowSpanSpan = false;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.isRearranged = false;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.pageBounds = new RectangleF();\n        /**\n         * @hidden\n         * @private\n         */\n        _this.listOfNavigatePages = [];\n        /**\n         * @hidden\n         * @private\n         */\n        _this.flag = true;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.columnRanges = [];\n        /**\n         * @hidden\n         * @private\n         */\n        _this.currentLocation = new PointF(0, 0);\n        /**\n         * @hidden\n         * @private\n         */\n        _this.breakRow = true;\n        /**\n         * Checks whether the x co-ordinate is need to set as client size or not.\n         * @hidden\n         * @private\n         */\n        _this.isOverloadWithPosition = false;\n        return _this;\n    }\n    Object.defineProperty(PdfGridLayouter.prototype, \"Grid\", {\n        //Properties\n        get: function () {\n            return this.elements;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Constructors\n    /**\n     * Initializes a new instance of the `StringLayouter` class.\n     * @private\n     */\n    //Public methods\n    /**\n     * `Layouts` the text.\n     * @private\n     */\n    /**\n     * `Layouts` the specified graphics.\n     * @private\n     */\n    /**\n     * `Layouts` the specified graphics.\n     * @private\n     */\n    /*public layout(graphics : PdfLayoutParams) : PdfLayoutResult\n    public layout(graphics : PdfGraphics, bounds : RectangleF) : void\n    public layout(graphics : PdfGraphics, bounds : PointF) : void\n    public layout(graphics ?: PdfGraphics | PdfLayoutParams, bounds ?: PointF | RectangleF) : void | PdfLayoutResult  {\n        if (graphics instanceof PdfGraphics) {\n        if (bounds instanceof PointF) {\n            if (bounds.x === 0) {\n                bounds.x = PdfBorders.default.right.width / 2;\n            }\n            if (bounds.y === 0) {\n                bounds.y = PdfBorders.default.top.width / 2;\n            }\n            let boundaries : RectangleF = new RectangleF(bounds, new SizeF(0, 0));\n            this.layout(graphics, boundaries);\n        } else {\n            let width : number = graphics.clientSize.width;\n            let parameter : PdfLayoutParams = new PdfLayoutParams();\n            parameter.bounds = bounds;\n            this.currentGraphics = graphics;\n            if (graphics.layer != null) {\n                let index : number = 0;\n                if (this.currentGraphics.page instanceof PdfPage) {\n                    index = (this.currentGraphics.page as PdfPage).section.indexOf(this.currentGraphics.page as PdfPage);\n                } else {\n                    index = (this.currentGraphics.page as PdfPageBase).defaultLayerIndex;\n                }\n            } else {\n                this.layoutInternal(parameter);\n            }\n        }\n    }\n    }*/\n    /**\n     * Gets the `format`.\n     * @private\n     */\n    PdfGridLayouter.prototype.getFormat = function (format) {\n        var f = format;\n        return f;\n    };\n    /**\n     * `Layouts` the element.\n     * @private\n     */\n    PdfGridLayouter.prototype.layoutInternal = function (param) {\n        var format = this.getFormat(param.format);\n        this.gridLayoutFormat = this.getFormat(param.format);\n        this.currentPage = param.page;\n        if (this.currentPage !== null) {\n            var pageHeight = this.currentPage.getClientSize().height;\n            var pageWidth = this.currentPage.getClientSize().width;\n            //if (pageHeight > pageWidth) {\n            this.currentPageBounds = this.currentPage.getClientSize();\n            //}\n        }\n        else {\n            throw Error('Can not set page as null');\n            //this.currentPageBounds = this.currentGraphics.clientSize;\n        }\n        this.currentGraphics = this.currentPage.graphics;\n        //this.currentGraphics = (this.currentPage != null ) ? this.currentPage.graphics : this.currentGraphics;\n        // if (this.currentGraphics.layer !== null) {\n        //     let index : number = 0;\n        //     if (this.currentGraphics.page instanceof PdfPage) {\n        //         index = (this.currentGraphics.page as PdfPage).section.indexOf(this.currentGraphics.page as PdfPage);\n        //     } else {\n        //         index = (this.currentGraphics.page as PdfPageBase).defaultLayerIndex;\n        //     }\n        //     this.listOfNavigatePages.push(index);\n        // }\n        var index = 0;\n        index = this.currentGraphics.page.section.indexOf(this.currentGraphics.page);\n        this.listOfNavigatePages.push(index);\n        if (format != null && format.break === PdfLayoutBreakType.FitColumnsToPage) {\n            this.currentBounds = new RectangleF(new PointF(param.bounds.x, param.bounds.y), new SizeF(this.Grid.columns.width, this.currentGraphics.clientSize.height));\n        }\n        else {\n            this.currentBounds = new RectangleF(new PointF(param.bounds.x, param.bounds.y), this.currentGraphics.clientSize);\n        }\n        //this.currentBounds = new RectangleF(new PointF(param.bounds.x, param.bounds.y), this.currentGraphics.clientSize);\n        if (this.Grid.rows.count !== 0) {\n            this.currentBounds.width = (param.bounds.width > 0) ? param.bounds.width :\n                (this.currentBounds.width - this.Grid.rows.getRow(0).cells.getCell(0).style.borders.left.width / 2);\n        }\n        else if (this.Grid.headers.count !== 0) {\n            // this.currentBounds.width = (param.bounds.width > 0) ? param.bounds.width : (this.currentBounds.width -\n            //                                 this.Grid.headers.getHeader(0).cells.getCell(0).style.borders.left.width / 2);\n            this.currentBounds.width = param.bounds.width;\n        }\n        else {\n            throw Error('Please add row or header into grid');\n        }\n        this.startLocation = new PointF(param.bounds.x, param.bounds.y);\n        // if (this.Grid.style.allowHorizontalOverflow && this.currentBounds.width > this.currentGraphics.clientSize.width) {\n        //     this.currentBounds.width = this.currentGraphics.clientSize.width;\n        //     this.currentBounds.width -= this.currentBounds.x;\n        // }\n        // if (this.Grid.isChildGrid) {\n        //     this.childheight = param.bounds.height;\n        // }\n        // if (param.format !== null && param.format.usePaginateBounds) {\n        //     if (param.format.paginateBounds.height > 0) {\n        //         this.currentBounds.height = param.format.paginateBounds.height;\n        //     }\n        //} else \n        if (param.bounds.height > 0 && !this.Grid.isChildGrid) {\n            this.currentBounds.height = param.bounds.height;\n        }\n        if (!this.Grid.isChildGrid) {\n            this.hType = this.Grid.style.horizontalOverflowType;\n        }\n        if (!this.Grid.style.allowHorizontalOverflow) {\n            this.columnRanges = [];\n            this.Grid.measureColumnsWidth(this.currentBounds);\n            this.columnRanges.push([0, this.Grid.columns.count - 1]);\n        }\n        else {\n            this.Grid.measureColumnsWidth();\n            this.determineColumnDrawRanges();\n        }\n        if (this.Grid.hasRowSpanSpan) {\n            for (var i = 0; i < this.Grid.rows.count; i++) {\n                var height = this.Grid.rows.getRow(i).height;\n                if (!this.Grid.rows.getRow(i).isRowHeightSet) {\n                    this.Grid.rows.getRow(i).isRowHeightSet = true;\n                }\n            }\n        }\n        var result = this.layoutOnPage(param);\n        return result;\n    };\n    // /* tslint:enable */\n    /**\n     * `Determines the column draw ranges`.\n     * @private\n     */\n    PdfGridLayouter.prototype.determineColumnDrawRanges = function () {\n        var startColumn = 0;\n        var endColumn = 0;\n        var cellWidths = 0;\n        var availableWidth = this.currentGraphics.clientSize.width - this.currentBounds.x;\n        for (var i = 0; i < this.Grid.columns.count; i++) {\n            cellWidths += this.Grid.columns.getColumn(i).width;\n            if (cellWidths >= availableWidth) {\n                var subWidths = 0;\n                for (var j = startColumn; j <= i; j++) {\n                    subWidths += this.Grid.columns.getColumn(j).width;\n                    if (subWidths > availableWidth) {\n                        break;\n                    }\n                    endColumn = j;\n                }\n                this.columnRanges.push([startColumn, endColumn]);\n                startColumn = endColumn + 1;\n                endColumn = startColumn;\n                cellWidths = (endColumn <= i) ? this.Grid.columns.getColumn(i).width : 0;\n            }\n        }\n        // if (startColumn !== this.columns.Count) {\n        this.columnRanges.push([startColumn, this.Grid.columns.count - 1]);\n        // }\n    };\n    /**\n     * `Layouts the on page`.\n     * @private\n     */\n    PdfGridLayouter.prototype.layoutOnPage = function (param) {\n        /* tslint:disable */\n        this.pageBounds.x = param.bounds.x;\n        this.pageBounds.y = param.bounds.y;\n        this.pageBounds.height = param.bounds.height;\n        var format = this.getFormat(param.format);\n        var endArgs = null;\n        var result = null;\n        var layoutedPages = new TemporaryDictionary();\n        var startPage = param.page;\n        var isParentCell = false;\n        var cellBounds = [];\n        for (var index = 0; index < this.columnRanges.length; index++) {\n            var range = this.columnRanges[index];\n            this.cellStartIndex = range[0];\n            this.cellEndIndex = range[1];\n            var returnObject = this.raiseBeforePageLayout(this.currentPage, this.currentBounds, this.currentRowIndex);\n            this.currentBounds = returnObject.currentBounds;\n            this.currentRowIndex = returnObject.currentRowIndex;\n            // if (returnObject.returnValue) {\n            //     result = new PdfGridLayoutResult(this.currentPage, this.currentBounds);\n            //     break;\n            // }\n            //Draw Headers.\n            var drawHeader = void 0;\n            for (var i_1 = 0; i_1 < this.Grid.headers.count; i_1++) {\n                var row = this.Grid.headers.getHeader(i_1);\n                var headerHeight = this.currentBounds.y;\n                // RowLayoutResult\n                var headerResult = this.drawRow(row);\n                // if (headerHeight === this.currentBounds.y) {\n                //     drawHeader = true;\n                //     if (PdfGrid.repeatRowIndex === -1) {\n                //         PdfGrid.repeatRowIndex = this.rows.getRow.indexOf(row);\n                //     }\n                // } else {\n                drawHeader = false;\n                // }\n            }\n            var i = 0;\n            var length_1 = this.Grid.rows.count;\n            var repeatRow = void 0;\n            var startingHeight = 0;\n            var flag = true;\n            //Here is to draw parent Grid and Cells\n            cellBounds = [];\n            //Draw row by row with the specified cell range.\n            for (var j = 0; j < this.Grid.rows.count; j++) {\n                var row = this.Grid.rows.getRow(j);\n                i++;\n                this.currentRowIndex = i - 1;\n                var originalHeight = this.currentBounds.y;\n                startPage = this.currentPage;\n                PdfGridLayouter.repeatRowIndex = -1;\n                if (flag && row.grid.isChildGrid) {\n                    startingHeight = originalHeight;\n                    flag = false;\n                }\n                var rowResult = null;\n                ///rowResult = this.drawRow(row);\n                /*if(!row.isrowFinish) {\n                    if(!row.grid.isgridSplit){\n                        rowResult = this.drawRow(row);\n                        row.isrowFinish = true;\n                        row.isrowDraw = true;\n                    } else {\n                        if(!row.isrowDraw){\n                            rowResult = this.drawRow(row);\n                            row.isrowFinish = true;\n                            row.isrowDraw = true;\n                            row.grid.isgridSplit = false;\n                        } else {\n                            rowResult =  null;\n                            break;\n                        }\n                    }\n                }\n                else {\n                    //row.isrowFinish = false;\n                    //rowResult = this.drawRow(row);\n                    rowResult = null;\n                    break;\n                    \n                }             */\n                if (this.Grid.splitChildRowIndex == -1) {\n                    rowResult = this.drawRow(row);\n                    row.isrowFinish = true;\n                }\n                else {\n                    if (row.grid.ParentCell.row.grid.isGridSplit && this.Grid.splitChildRowIndex <= row.rowIndex) {\n                        rowResult = this.drawRow(row);\n                        row.isrowFinish = true;\n                    }\n                    else if (row.isrowFinish) {\n                        continue;\n                    }\n                    else {\n                        break;\n                    }\n                }\n                //rowResult = this.drawRow(row);\n                cellBounds.push(rowResult.bounds.width);\n                /*if (row.isRowBreaksNextPage)\n                    {\n                        let x : number  = 0;\n                        for (let l : number = 0; l < row.cells.count; l++)\n                        {\n                            let isNestedRowBreak : boolean = false;\n                            if (row.height == row.cells.getCell(l).height)\n                            {\n                                let n : number;\n                                let grid : PdfGrid = row.cells.getCell(l).value as PdfGrid;\n                                for (let m : number = grid.rows.count; 0 < m; m--)\n                                {\n                                    if ((grid.rows.getRow(m - 1).rowBreakHeight > 0))\n                                    {\n                                        isNestedRowBreak = true;\n                                        break;\n                                    }\n                                    if (grid.rows.getRow(m - 1).isRowBreaksNextPage)\n                                    {\n                                        row.rowBreakHeightValue = grid.rows.getRow(m - 1).rowBreakHeightValue;\n                                        break;\n                                    }\n                                    row.rowBreakHeightValue += grid.rows.getRow(m - 1).height;\n                                }\n                            }\n                            if (isNestedRowBreak)\n                                break;\n                        }\n                        for (let j : number = 0; j < row.cells.count; j++)\n                        {\n\n                            if (row.height > row.cells.getCell(j).height)\n                            {\n                                row.cells.getCell(j).value = \" \";\n                                let rect : RectangleF ;\n                                let page : PdfPage = this.getNextPage(this.currentPage);\n                                let section : PdfSection = this.currentPage.section;\n                                let index : number = section.indexOf(page);\n                                for (let k : number = 0; k < (section.count - 1) - index; k++)\n                                {\n                                    rect = new RectangleF(x, 0, row.grid.columns.getColumn(j).width, page.getClientSize().height);\n                                    PdfGridLayouter.repeatRowIndex = -1;\n                                    row.cells.getCell(j).draw(page.graphics, rect, false);\n                                    page = this.getNextPage(page);\n                                }\n                                rect = new RectangleF(x, 0, row.grid.columns.getColumn(j).width, row.rowBreakHeightValue);\n\n                                row.cells.getCell(j).draw(page.graphics, rect, false);\n                            }\n                            x += row.grid.columns.getColumn(j).width;\n                        }\n                    }*/\n                //if height remains same, it is understood that row is not drawn in the page\n                if (originalHeight === this.currentBounds.y) {\n                    repeatRow = true;\n                    PdfGridLayouter.repeatRowIndex = this.Grid.rows.rowCollection.indexOf(row);\n                }\n                else {\n                    repeatRow = false;\n                    PdfGridLayouter.repeatRowIndex = -1;\n                }\n                while (!rowResult.isFinish && startPage != null) {\n                    var tempResult = this.getLayoutResult();\n                    /*if (startPage != this.currentPage)\n                        {\n                            if (row.grid.isChildGrid && row.grid.ParentCell != null)\n                            {\n                                let bounds : RectangleF= new RectangleF(new PointF(format.paginateBounds.x,format.paginateBounds.y), new SizeF(param.bounds.width, tempResult.bounds.height));\n                                bounds.x += param.bounds.x;\n                                if (row.grid.ParentCell.row.grid.style.cellPadding != null)\n                                {\n                                    bounds.y += row.grid.ParentCell.row.grid.style.cellPadding.top;\n                                    if (bounds.height > this.currentPageBounds.height)\n                                    {\n                                        bounds.height = this.currentPageBounds.height - bounds.y;\n                                        bounds.height -= (row.grid.ParentCell.row.grid.style.cellPadding.bottom);\n                                    }\n                                }\n                                // Draw border for cells in the nested grid cell's row.\n                                for (let c : number = 0; c < row.cells.count; c++)\n                                {\n                                    let cell : PdfGridCell = row.cells.getCell(c);\n                                    let cellWidth :  number= 0;\n                                    if (cell.columnSpan > 1)\n                                    {\n                                        for (; c < cell.columnSpan; c++)\n                                            cellWidth += row.grid.columns.getColumn(c).width;\n                                    }\n                                    else\n                                        cellWidth = Math.max(cell.width, row.grid.columns.getColumn(c).width);\n                                    cell.drawCellBorders(this.currentGraphics, new RectangleF(new PointF(bounds.x,bounds.y), new SizeF(cellWidth, bounds.height)));\n                                    bounds.x += cellWidth;\n                                    c += (cell.columnSpan - 1);\n                                }\n                            }\n                        }\n                        */\n                    endArgs = this.raisePageLayouted(tempResult);\n                    if (endArgs.cancel || repeatRow)\n                        break;\n                    else if (this.Grid.allowRowBreakAcrossPages) {\n                        //If there is no space in the current page, add new page and then draw the remaining row.\n                        this.currentPage = this.getNextPageformat(format);\n                        originalHeight = this.currentBounds.y;\n                        var location_1 = new PointF(PdfBorders.default.right.width / 2, PdfBorders.default.top.width / 2);\n                        // if (format.paginateBounds == new RectangleF(0,0,0,0) && this.startLocation == location)\n                        // {\n                        //     this.currentBounds.x += this.startLocation.x;\n                        //     this.currentBounds.y += this.startLocation.y;\n                        // }\n                        if (this.Grid.isChildGrid && row.grid.ParentCell != null) {\n                            if (this.Grid.ParentCell.row.grid.style.cellPadding != null) {\n                                if (row.rowBreakHeight + this.Grid.ParentCell.row.grid.style.cellPadding.top < this.currentBounds.height) {\n                                    this.currentBounds.y = this.Grid.ParentCell.row.grid.style.cellPadding.top;\n                                }\n                            }\n                        }\n                        if (row.grid.ParentCell != null) {\n                            row.grid.ParentCell.row.isRowBreaksNextPage = true;\n                            row.grid.ParentCell.row.rowBreakHeightValue = row.rowBreakHeight + this.Grid.ParentCell.row.grid.style.cellPadding.top + this.Grid.ParentCell.row.grid.style.cellPadding.bottom;\n                            for (var i_2 = row.rowIndex + 1; i_2 < row.grid.rows.count; i_2++) {\n                                row.grid.ParentCell.row.rowBreakHeightValue += row.grid.rows.getRow(i_2).height;\n                            }\n                            //row.rowBreakHeight = row.grid.ParentCell.row.rowBreakHeightValue;\n                        }\n                        /*if (row.noOfPageCount > 1)\n                        {\n                            let temp : number = row.rowBreakHeightValue;\n                            for (let j : number = 1; j < row.noOfPageCount; j++)\n                            {\n                                row.rowBreakHeightValue = 0;\n                                row.height = ((row.noOfPageCount - 1) * this.currentPage.getClientSize().height);\n                                this.drawRow(row);\n                                this.currentPage = this.getNextPageformat(format);\n                                startPage = this.currentPage;\n                            }\n                            row.rowBreakHeightValue = temp;\n                            row.noOfPageCount = 1;\n                            rowResult = this.drawRow(row);\n                        } else {\n                            rowResult = this.drawRow(row);\n                        }\n                        /*if(row.grid.isChildGrid){\n                            row.isrowFinish = false;\n                            row.isrowDraw = false;\n                            row.grid.isgridSplit = true;\n                            row.grid.ParentCell.row.grid.isgridSplit = true;\n                            //rowResult.isFinish = false;\n                            break;\n                        }*/\n                        if (row.grid.isChildGrid) {\n                            //row.grid.isgridSplit = true;\n                            row.isrowFinish = false;\n                            //row.grid.ParentCell.row.grid.isgridSplit = true;\n                            row.grid.splitChildRowIndex = row.rowIndex;\n                            row.grid.ParentCell.row.grid.splitChildRowIndex = row.grid.ParentCell.row.rowIndex;\n                            if (row.grid.ParentCell.row.grid.isGridSplit) {\n                                row.grid.ParentCell.row.noOfPageCount += 1;\n                                row.grid.ParentCell.row.grid.isGridSplit = false;\n                            }\n                            break;\n                        }\n                        if (row.noOfPageCount < 1) {\n                            if (row.grid.splitChildRowIndex != -1) {\n                                row.grid.isGridSplit = true;\n                            }\n                            this.currentBounds.y = 0.50;\n                            if (this.Grid.repeatHeader) {\n                                for (var j_1 = 0; j_1 < this.Grid.headers.count; j_1++) {\n                                    var headerRepeat = this.Grid.headers.getHeader(j_1);\n                                    this.drawRow(headerRepeat);\n                                }\n                            }\n                            rowResult = this.drawRow(row);\n                            if (row.noOfPageCount >= 1) {\n                                var temp = row.rowBreakHeightValue;\n                                for (var j_2 = 0; j_2 < row.noOfPageCount; j_2++) {\n                                    //this.currentPage.section.add();\n                                    var tempResult1 = this.getLayoutResult();\n                                    endArgs = this.raisePageLayouted(tempResult1);\n                                    this.currentPage = this.getNextPageformat(format);\n                                    originalHeight = this.currentBounds.y;\n                                    //row.rowBreakHeightValue = 0;\n                                    if (row.grid.splitChildRowIndex != -1) {\n                                        row.grid.isGridSplit = true;\n                                    }\n                                    this.currentBounds.y = 0.5;\n                                    if (this.Grid.repeatHeader) {\n                                        for (var i_3 = 0; i_3 < this.Grid.headers.count; i_3++) {\n                                            var header = this.Grid.headers.getHeader(i_3);\n                                            this.drawRow(header);\n                                        }\n                                    }\n                                    //row.height = ((row.noOfPageCount - 1) * this.currentPage.getClientSize().height);\n                                    this.drawRow(row);\n                                }\n                                // row.rowBreakHeight = temp;\n                                // row.noOfPageCount = 1;\n                                // rowResult = this.drawRow(row);\n                            }\n                            row.grid.splitChildRowIndex = -1;\n                            row.grid.isGridSplit = false;\n                            rowResult.isFinish = true;\n                            //row.NestedGridLayoutResult.bounds.height = row.rowBreakHeightValue;\n                            //this.currentBounds.y = rowResult.bounds.y;\n                            for (var i_4 = 0; i_4 < row.cells.count; i_4++) {\n                                if (row.cells.getCell(i_4).value instanceof PdfGrid) {\n                                    row.cells.getCell(i_4).value.splitChildRowIndex = -1;\n                                }\n                            }\n                        }\n                    }\n                    // else if (!this.Grid.allowRowBreakAcrossPages && i < length)\n                    // {\n                    //     this.currentPage = this.getNextPageformat(format);\n                    //     break;\n                    // }\n                    // else if (i >= length)\n                    //     break;\n                }\n                if (!rowResult.isFinish && startPage !== null && format.layout !== PdfLayoutType.OnePage && repeatRow) {\n                    // During pagination, cell position is maintained here.\n                    this.startLocation.x = this.currentBounds.x;\n                    var isAddNextPage = false;\n                    this.currentPage = this.getNextPageformat(format);\n                    /*if (!this.Grid.isSingleGrid)\n                    {\n                        for ( let j : number= 0; j < this.Grid.rows.count; j++)\n                        {\n                            let isWidthGreaterthanParent : boolean = false;\n                            for (let k : number = 0; k < this.Grid.rows.getRow(j).cells.count; k++)\n                            {\n                                if (this.Grid.rows.getRow(j).cells.getCell(k).width > this.currentPageBounds.width)\n                                    isWidthGreaterthanParent = true;\n                            }\n                            if (isWidthGreaterthanParent && this.Grid.rows.getRow(j).cells.getCell(this.rowBreakPageHeightCellIndex).pageCount > 0)\n                            {\n                                isAddNextPage = true;\n                            }\n                        }\n                    }\n                    if (!this.Grid.isRearranged && isAddNextPage)\n                         {\n                             let section : PdfSection = this.currentPage.section;\n                             \n                             //this.currentPage = section.add();\n                         \n                             this.currentGraphics = this.currentPage.graphics;\n                             this.currentBounds = new RectangleF(new PointF(0,0), this.currentPage.getClientSize());\n                          \n                             let pageindex  : number = (this.currentGraphics.page as PdfPage).section.indexOf(this.currentGraphics.page as PdfPage);\n                         }\n                         else\n                         {\n                             this.currentPage = this.getNextPageformat(format);\n                         }\n                         if (format.paginateBounds.y == 0)\n                             this.currentBounds.y = PdfBorders.default.top.width/2;\n                         else\n                         {\n                             this.currentBounds.y = format == null ? 0 : format.paginateBounds.y;\n                             \n                         }\n                         if (this.raiseBeforePageLayout(this.currentPage, this.currentBounds, this.currentRowIndex))\n                             break;*/\n                    if ((param.format !== null) && !param.format.usePaginateBounds && param.bounds !== null &&\n                        param.bounds.height > 0 && !this.Grid.isChildGrid) {\n                        this.currentBounds.height = param.bounds.height;\n                    }\n                    if ((param.format !== null) && !param.format.usePaginateBounds && param.bounds !== null &&\n                        param.bounds.y > 0 && !this.Grid.isChildGrid) {\n                        this.currentBounds.y = param.bounds.y;\n                    }\n                    this.startLocation.y = this.currentBounds.y;\n                    if ((format.paginateBounds.x === format.paginateBounds.y) &&\n                        (format.paginateBounds.y === format.paginateBounds.height) &&\n                        (format.paginateBounds.height === format.paginateBounds.width) && (format.paginateBounds.width === 0)) {\n                        this.currentBounds.x += this.startLocation.x;\n                    }\n                    if (this.currentBounds.x === PdfBorders.default.left.width / 2) {\n                        this.currentBounds.y += this.startLocation.x;\n                    }\n                    if (this.Grid.repeatHeader) {\n                        for (var i_5 = 0; i_5 < this.Grid.headers.count; i_5++) {\n                            var header = this.Grid.headers.getHeader(i_5);\n                            this.drawRow(header);\n                        }\n                    }\n                    this.drawRow(row);\n                    if (this.currentPage !== null && !layoutedPages.containsKey(this.currentPage)) {\n                        layoutedPages.add(this.currentPage, range);\n                    }\n                }\n                if (row.NestedGridLayoutResult != null) {\n                    // Position for next row in the grid.\n                    this.currentPage = row.NestedGridLayoutResult.page;\n                    this.currentGraphics = this.currentPage.graphics; //If not, next row will not be drawn in the layouted page.\n                    this.startLocation = new PointF(row.NestedGridLayoutResult.bounds.x, row.NestedGridLayoutResult.bounds.y);\n                    var recalHeight = this.ReCalculateHeight(row, row.NestedGridLayoutResult.bounds.height);\n                    this.currentBounds.y = recalHeight;\n                    //this.currentBounds.y = row.NestedGridLayoutResult.bounds.height;\n                    if (startPage != this.currentPage) {\n                        var secion = this.currentPage.section;\n                        var startIndex = secion.indexOf(startPage) + 1;\n                        var endIndex = secion.indexOf(this.currentPage);\n                        for (var page = startIndex; page < endIndex + 1; page++) {\n                            var pageGraphics = this.currentPage.graphics;\n                            var location_2 = new PointF(format.paginateBounds.x, format.paginateBounds.y);\n                            var height = page == endIndex ? (row.NestedGridLayoutResult.bounds.height - param.bounds.y) :\n                                (this.currentBounds.height - location_2.y);\n                            if (height <= pageGraphics.clientSize.height)\n                                height += param.bounds.y;\n                            // if (row.grid.isChildGrid && row.grid.ParentCell != null)\n                            //     location.x += param.bounds.x;\n                            location_2.y = format == null ? 0.5 : format.paginateBounds.y;\n                            // Draw border for last paginated row containing nested grid.\n                            for (var c = 0; c < row.cells.count; c++) {\n                                var cell = row.cells.getCell(c);\n                                var cellWidth = 0;\n                                var totalwidth = 0;\n                                if (cell.value instanceof PdfGrid) {\n                                    for (var i_6 = 0; i_6 < cell.value.columns.count; i_6++) {\n                                        totalwidth += cell.value.columns.getColumn(i_6).columnWidth;\n                                    }\n                                }\n                                else {\n                                    totalwidth = cell.width;\n                                }\n                                // if (cell.columnSpan > 1)\n                                // {\n                                //     for (; c < cell.columnSpan; c++)\n                                //         cellWidth += row.grid.columns.getColumn(c).width;\n                                // }\n                                // else\n                                cellWidth = Math.max(totalwidth, row.grid.columns.getColumn(c).width);\n                                cell.drawCellBorders(pageGraphics, new RectangleF(location_2, new SizeF(cellWidth, height)));\n                                location_2.x += cellWidth;\n                                c += (cell.columnSpan - 1);\n                            }\n                        }\n                        // So, nested grid drawing is completed for the current row. Update page.\n                        // Otherwise, the next nested grid of the parent will draw borders from start.\n                        startPage = this.currentPage;\n                    }\n                }\n            }\n            var isPdfGrid = false;\n            var maximumCellBoundsWidth = 0;\n            if (cellBounds.length > 0) {\n                maximumCellBoundsWidth = cellBounds[0];\n            }\n            var largeNavigatePage = [[1, 2]];\n            for (var c = 0; c < this.Grid.rows.count; c++) {\n                if (this.cellEndIndex != -1 && this.Grid.rows.getRow(c).cells.getCell(this.cellEndIndex).value instanceof PdfGrid) {\n                    var grid = this.Grid.rows.getRow(c).cells.getCell(this.cellEndIndex).value;\n                    this.rowLayoutBoundsWidth = grid.rowLayoutBoundsWidth;\n                    isPdfGrid = true;\n                    // if (largeNavigatePage[0][0] < grid.listOfNavigatePages.length)\n                    // {\n                    //     largeNavigatePage[0][0] = grid.listOfNavigatePages.length;\n                    //     largeNavigatePage[0][1] = cellBounds[c];\n                    // }\n                    // else if ((largeNavigatePage[0][0] == grid.listOfNavigatePages.length) && (largeNavigatePage[0][1] < cellBounds[c]))\n                    // {\n                    //     largeNavigatePage[0][1] = cellBounds[c];\n                    // }\n                }\n            }\n            if (!isPdfGrid && cellBounds.length > 0) {\n                for (var c = 0; c < i - 1; c++) {\n                    if (maximumCellBoundsWidth < cellBounds[c]) {\n                        maximumCellBoundsWidth = cellBounds[c];\n                    }\n                }\n                this.rowLayoutBoundsWidth = maximumCellBoundsWidth;\n            }\n            else {\n                this.rowLayoutBoundsWidth = largeNavigatePage[0][1];\n            }\n            if (this.columnRanges.indexOf(range) < this.columnRanges.length - 1\n                && startPage != null && format.layout != PdfLayoutType.OnePage) {\n                isParentCell = this.Grid.isChildGrid;\n                if (largeNavigatePage[0][0] != 0) {\n                    var section = this.currentPage.section;\n                    var pageIndex = section.indexOf(this.currentPage);\n                    this.currentGraphics = this.currentPage.graphics;\n                    this.currentBounds = new RectangleF(new PointF(0, 0), this.currentPage.getClientSize());\n                    var pageindex = this.currentGraphics.page.section.indexOf(this.currentGraphics.page);\n                }\n                else {\n                    this.currentPage = this.getNextPageformat(format);\n                }\n                // let locationGrid : PointF= new PointF(PdfBorders.default.right.width / 2, PdfBorders.default.top.width / 2);\n                // if (format.paginateBounds == new RectangleF(0,0,0,0) && this.startLocation == locationGrid)\n                // {\n                //     this.currentBounds.x += this.startLocation.x;\n                //     this.currentBounds.y += this.startLocation.y;\n                // }\n            }\n            if (this.columnRanges.length - 1 !== index && this.columnRanges.length > 1 && format.layout !== PdfLayoutType.OnePage) {\n                this.currentPage = this.getNextPageformat(format);\n                if ((format.paginateBounds.x === format.paginateBounds.y) && (format.paginateBounds.y === format.paginateBounds.height)\n                    && (format.paginateBounds.height === format.paginateBounds.width) && (format.paginateBounds.width === 0)) {\n                    this.currentBounds.x += this.startLocation.x;\n                    this.currentBounds.y += this.startLocation.y;\n                    //this.currentBounds.height = this.pageBounds.height;\n                }\n            }\n        }\n        result = this.getLayoutResult();\n        if (this.Grid.style.allowHorizontalOverflow && this.Grid.style.horizontalOverflowType == PdfHorizontalOverflowType.NextPage) {\n            this.reArrangePages(layoutedPages);\n        }\n        this.raisePageLayouted(result);\n        return result;\n    };\n    /* tslint:enable */\n    /**\n     * Gets the `next page`.\n     * @private\n     */\n    PdfGridLayouter.prototype.getNextPageformat = function (format) {\n        var section = this.currentPage.section;\n        var nextPage = null;\n        var index = section.indexOf(this.currentPage);\n        this.flag = false;\n        if (index === section.count - 1) {\n            nextPage = section.add();\n        }\n        else {\n            nextPage = section.getPages()[index + 1];\n        }\n        this.currentGraphics = nextPage.graphics;\n        var pageindex = this.currentGraphics.page.section.indexOf(this.currentGraphics.page);\n        if (!(this.listOfNavigatePages.indexOf(pageindex) !== -1)) {\n            this.listOfNavigatePages.push(pageindex);\n        }\n        this.currentBounds = new RectangleF(new PointF(0, 0), nextPage.getClientSize());\n        // if ((format.paginateBounds.x !== format.paginateBounds.y) && (format.paginateBounds.y !== format.paginateBounds.height)\n        //     && (format.paginateBounds.height !== format.paginateBounds.width) && (format.paginateBounds.width !== 0)) {\n        //     this.currentBounds.x = format.paginateBounds.x;\n        //     this.currentBounds.y = format.paginateBounds.y;\n        //     this.currentBounds.height = format.paginateBounds.height;\n        // }\n        return nextPage;\n    };\n    PdfGridLayouter.prototype.CheckIfDefaultFormat = function (format) {\n        var defaultFormat = new PdfStringFormat();\n        return (format.alignment === defaultFormat.alignment && format.characterSpacing === defaultFormat.characterSpacing &&\n            format.clipPath === defaultFormat.clipPath && format.firstLineIndent === defaultFormat.firstLineIndent &&\n            format.horizontalScalingFactor === defaultFormat.horizontalScalingFactor &&\n            format.lineAlignment === defaultFormat.lineAlignment\n            && format.lineLimit === defaultFormat.lineLimit && format.lineSpacing === defaultFormat.lineSpacing &&\n            format.measureTrailingSpaces === defaultFormat.measureTrailingSpaces && format.noClip === defaultFormat.noClip &&\n            format.paragraphIndent === defaultFormat.paragraphIndent && format.rightToLeft === defaultFormat.rightToLeft &&\n            format.subSuperScript === defaultFormat.subSuperScript && format.wordSpacing === defaultFormat.wordSpacing &&\n            format.wordWrap === defaultFormat.wordWrap);\n    };\n    /**\n     * `Raises BeforeCellDraw event`.\n     * @private\n     */\n    PdfGridLayouter.prototype.RaiseBeforeCellDraw = function (graphics, rowIndex, cellIndex, bounds, value, style) {\n        var args = null;\n        if (this.Grid.raiseBeginCellDraw) {\n            args = new PdfGridBeginCellDrawEventArgs(graphics, rowIndex, cellIndex, bounds, value, style);\n            this.Grid.onBeginCellDraw(args);\n            style = args.style;\n        }\n        return style;\n    };\n    /**\n     * `Raises AfterCellDraw event`.\n     * @private\n     */\n    PdfGridLayouter.prototype.raiseAfterCellDraw = function (graphics, rowIndex, cellIndex, bounds, value, cellstyle) {\n        var args = null;\n        if (this.Grid.raiseEndCellDraw) {\n            args = new PdfGridEndCellDrawEventArgs(graphics, rowIndex, cellIndex, bounds, value, cellstyle);\n            this.Grid.onEndCellDraw(args);\n        }\n    };\n    PdfGridLayouter.prototype.reArrangePages = function (layoutedPages) {\n        var document = this.currentPage.document;\n        var pages = [];\n        var keys = layoutedPages.keys();\n        var values = layoutedPages.values();\n        for (var i = 0; i < keys.length; i++) {\n            var page = keys[i];\n            page.section = null;\n            pages.push(page);\n            document.pages.remove(page);\n        }\n        /* tslint:disable */\n        for (var i = 0; i < layoutedPages.size(); i++) {\n            var count = 0;\n            for (var j = i, count_1 = (layoutedPages.size() / this.columnRanges.length); j < layoutedPages.size(); j += count_1) {\n                var page = pages[j];\n                if (document.pages.indexOf(page) === -1) {\n                    document.pages.add(page);\n                }\n            }\n        }\n        /* tslint:enable */\n    };\n    /**\n     * Gets the `layout result`.\n     * @private\n     */\n    PdfGridLayouter.prototype.getLayoutResult = function () {\n        if (this.Grid.isChildGrid && this.Grid.allowRowBreakAcrossPages) {\n            for (var i = 0; i < this.Grid.rows.count; i++) {\n                var row = this.Grid.rows.getRow(i);\n                if (row.rowBreakHeight > 0 && row.repeatFlag) {\n                    this.startLocation.y = this.currentPage.origin.y;\n                }\n            }\n        }\n        var bounds;\n        if (!this.isChanged) {\n            bounds = new RectangleF(this.startLocation, new SizeF(this.currentBounds.width, this.currentBounds.y -\n                this.startLocation.y));\n        }\n        // else {\n        //     bounds = new RectangleF(this.currentLocation, new SizeF(this.currentBounds.width, this.currentBounds.y -\n        //                              this.currentLocation.y));\n        // }\n        /* tslint:enable */\n        return new PdfGridLayoutResult(this.currentPage, bounds);\n    };\n    /**\n     * `Recalculate row height` for the split cell to be drawn.\n     * @private\n     */\n    PdfGridLayouter.prototype.ReCalculateHeight = function (row, height) {\n        var newHeight = 0.0;\n        for (var i = this.cellStartIndex; i <= this.cellEndIndex; i++) {\n            if (!(row.cells.getCell(i).remainingString === null || row.cells.getCell(i).remainingString === '' ||\n                typeof row.cells.getCell(i).remainingString === 'undefined')) {\n                newHeight = Math.max(newHeight, row.cells.getCell(i).measureHeight());\n            }\n        }\n        return Math.max(height, newHeight);\n    };\n    /**\n     * `Raises BeforePageLayout event`.\n     * @private\n     */\n    PdfGridLayouter.prototype.raiseBeforePageLayout = function (currentPage, currentBounds, currentRow) {\n        var cancel = false;\n        if (this.Grid.raiseBeginPageLayout) {\n            var args = new PdfGridBeginPageLayoutEventArgs(currentBounds, currentPage, currentRow);\n            this.Grid.onBeginPageLayout(args);\n            // if (currentBounds !== args.Bounds) {\n            //     this.isChanged = true;\n            //     this.currentLocation = new PointF(args.Bounds.x, args.Bounds.y);\n            //     this.measureColumnsWidth(new RectangleF(new PointF(args.Bounds.x, args.Bounds.y) ,\n            //                                                  new SizeF(args.Bounds.width + args.Bounds.x ,\n            //                                                                 args.Bounds.height)));\n            // }\n            cancel = args.cancel;\n            currentBounds = args.bounds;\n            currentRow = args.startRowIndex;\n        }\n        return { returnValue: cancel, currentBounds: currentBounds, currentRowIndex: currentRow };\n    };\n    /**\n     * `Raises PageLayout event` if needed.\n     * @private\n     */\n    PdfGridLayouter.prototype.raisePageLayouted = function (result) {\n        var args = new PdfGridEndPageLayoutEventArgs(result);\n        if (this.Grid.raiseEndPageLayout) {\n            this.Grid.onEndPageLayout(args);\n        }\n        return args;\n    };\n    PdfGridLayouter.prototype.drawRow = function (row, result, height) {\n        if (typeof result === 'undefined') {\n            //.. Check if required space available.\n            //.....If the row conains spans which  falls through more than one page, then draw the row to next page.                        \n            var result_1 = new RowLayoutResult();\n            var rowHeightWithSpan = 0;\n            var location_3 = new PointF(0, 0);\n            var size = new SizeF(0, 0);\n            var isHeader = false;\n            if (row.rowSpanExists) {\n                var maxSpan = 0;\n                var currRowIndex = this.Grid.rows.rowCollection.indexOf(row);\n                if (currRowIndex === -1) {\n                    currRowIndex = this.Grid.headers.indexOf(row);\n                    if (currRowIndex !== -1) {\n                        isHeader = true;\n                    }\n                }\n                for (var i = 0; i < row.cells.count; i++) {\n                    var cell = row.cells.getCell(i);\n                    maxSpan = Math.max(maxSpan, cell.rowSpan);\n                }\n                for (var i = currRowIndex; i < currRowIndex + maxSpan; i++) {\n                    rowHeightWithSpan += (isHeader ? this.Grid.headers.getHeader(i).height : this.Grid.rows.getRow(i).height);\n                }\n                // let rowMaxHeight : number = rowHeightWithSpan;\n                // for (let i : number = 0; i < row.cells.count; i++ ) {\n                //     rowMaxHeight = rowMaxHeight > row.cells.getCell(i).height ? rowMaxHeight : row.cells.getCell(i).height;\n                // }\n                // let flag : boolean = true;\n                // let nextRow : PdfGridRow = this.Grid.headers.getHeader(this.Grid.headers.indexOf(row) + 1);\n                // for (let i : number = 0; i < nextRow.cells.count; i++ ) {\n                //     if (nextRow.cells.getCell(i).value !== '' && nextRow.cells.getCell(i).value !== undefined) {\n                //         flag = false;\n                //         break;\n                //     }\n                // }\n                // if ((rowMaxHeight > rowHeightWithSpan) && flag) {\n                //     row.height += (rowMaxHeight - rowHeightWithSpan);\n                // }                \n            }\n            var calculatedHeight = row.rowBreakHeight > 0.0 ? row.rowBreakHeight : row.height;\n            if (this.Grid.isChildGrid && this.Grid.ParentCell != null) {\n                //Split row only if row height exceeds page height and AllowRowBreakAcrossPages is true.\n                // if (calculatedHeight + this.Grid.ParentCell.row.grid.style.cellPadding.bottom +\n                //             this.Grid.ParentCell.row.grid.style.cellPadding.top > this.currentPageBounds.height) {\n                //     if (this.Grid.allowRowBreakAcrossPages) {\n                //         result.isFinish = true;\n                //         if ( this.Grid.isChildGrid && row.rowBreakHeight > 0 ) {\n                //             if (this.Grid.ParentCell.row.grid.style.cellPadding !== null) {\n                //                 this.currentBounds.y += this.Grid.ParentCell.row.grid.style.cellPadding.top;\n                //             }\n                //             this.currentBounds.x = this.startLocation.x;\n                //         }\n                //         result.bounds = this.currentBounds ;\n                //         this.drawRowWithBreak(result, row, calculatedHeight);\n                //     } else {\n                //         //If AllowRowBreakAcrossPages is not true, draw the row till it fits the page.                       \n                //         if (this.Grid.ParentCell.row.grid.style.cellPadding != null) {\n                //             this.currentBounds.y += this.Grid.ParentCell.row.grid.style.cellPadding.top;\n                //             calculatedHeight = this.currentBounds.height - this.currentBounds.y -\n                //                     this.Grid.ParentCell.row.grid.style.cellPadding.bottom;\n                //         }\n                //         result.isFinish = false;\n                //         this.drawRow( row, result, calculatedHeight);\n                //     }\n                // } else\n                if (this.currentBounds.y + this.Grid.ParentCell.row.grid.style.cellPadding.bottom + calculatedHeight >\n                    this.currentPageBounds.height || this.currentBounds.y + this.Grid.ParentCell.row.grid.style.cellPadding.bottom\n                    + calculatedHeight > this.currentBounds.height || this.currentBounds.y +\n                    this.Grid.ParentCell.row.grid.style.cellPadding.bottom + rowHeightWithSpan > this.currentPageBounds.height) {\n                    //If a row is repeated and still cannot fit in page, proceed draw.\n                    if (this.Grid.ParentCell.row.grid.LayoutFormat.break === PdfLayoutBreakType.FitPage) {\n                        PdfGridLayouter.repeatRowIndex = this.Grid.rows.rowCollection.indexOf(row);\n                        this.Grid.splitChildRowIndex = this.Grid.rows.rowCollection.indexOf(row);\n                    }\n                    if (PdfGridLayouter.repeatRowIndex > -1 && PdfGridLayouter.repeatRowIndex === row.rowIndex) {\n                        if (this.Grid.allowRowBreakAcrossPages) {\n                            result_1.isFinish = true;\n                            // if (this.Grid.isChildGrid && row.rowBreakHeightValue > 0) {\n                            //     // if (this.Grid.ParentCell.row.grid.style.cellPadding != null) {\n                            //     //     this.currentBounds.y += this.Grid.ParentCell.row.grid.style.cellPadding.top;\n                            //     // }\n                            //     this.currentBounds.x = this.startLocation.x;\n                            // }\n                            result_1.bounds = this.currentBounds;\n                            this.drawRowWithBreak(result_1, row, calculatedHeight);\n                            row.repeatFlag = true;\n                            row.repeatRowNumber = PdfGridLayouter.repeatRowIndex;\n                        }\n                        // else {\n                        //     result.isFinish = false;\n                        //     row.repeatFlag = false;\n                        //     this.drawRow( row, result, calculatedHeight);\n                        // }\n                    }\n                    // else {\n                    //     result.isFinish = false;\n                    // }\n                }\n                else {\n                    result_1.isFinish = true;\n                    if (row.grid.ParentCell.row.rowBreakHeightValue > 0) {\n                        row.repeatFlag = true;\n                    }\n                    else {\n                        row.repeatFlag = false;\n                        calculatedHeight = row.height;\n                    }\n                    if (this.Grid.isChildGrid && row.rowBreakHeight > 0) {\n                        if (this.Grid.ParentCell.row.grid.style.cellPadding != null) {\n                            calculatedHeight += this.Grid.ParentCell.row.grid.style.cellPadding.bottom;\n                        }\n                    }\n                    this.drawRow(row, result_1, calculatedHeight);\n                }\n            }\n            else {\n                //Split row only if row height exceeds page height and AllowRowBreakAcrossPages is true.\n                if (calculatedHeight > this.currentPageBounds.height) {\n                    if (this.Grid.allowRowBreakAcrossPages) {\n                        result_1.isFinish = true;\n                        //result.bounds = this.currentBounds;\n                        this.drawRowWithBreak(result_1, row, calculatedHeight);\n                        row.isrowFinish = true;\n                        row.repeatFlag = true;\n                        if (row.grid.splitChildRowIndex !== -1) {\n                            result_1.isFinish = false;\n                        }\n                    }\n                    // else {\n                    //     //If AllowRowBreakAcrossPages is not true, draw the row till it fits the page.\n                    //     result.isFinish = false;\n                    //     this.drawRow( row, result, calculatedHeight);\n                    // }\n                }\n                else if (this.currentBounds.y + calculatedHeight > this.currentPageBounds.height ||\n                    this.currentBounds.y + calculatedHeight > (this.currentBounds.height + this.startLocation.y) ||\n                    this.currentBounds.y + rowHeightWithSpan > this.currentPageBounds.height) {\n                    // If a row is repeated and still cannot fit in page, proceed draw.\n                    if (this.Grid.LayoutFormat.break === PdfLayoutBreakType.FitPage) {\n                        PdfGridLayouter.repeatRowIndex = this.Grid.rows.rowCollection.indexOf(row);\n                    }\n                    if (PdfGridLayouter.repeatRowIndex > -1 && PdfGridLayouter.repeatRowIndex === row.rowIndex) {\n                        if (this.Grid.allowRowBreakAcrossPages) {\n                            result_1.isFinish = true;\n                            this.drawRowWithBreak(result_1, row, calculatedHeight);\n                            row.repeatFlag = true;\n                            row.repeatRowNumber = PdfGridLayouter.repeatRowIndex;\n                            if (row.grid.splitChildRowIndex !== -1) {\n                                result_1.isFinish = false;\n                            }\n                        }\n                        // else {\n                        //     result.isFinish = false;\n                        //     this.drawRow(row, result, calculatedHeight);\n                        // }\n                    }\n                    else {\n                        result_1.isFinish = false;\n                    }\n                }\n                else {\n                    result_1.isFinish = true;\n                    this.drawRow(row, result_1, calculatedHeight);\n                    row.repeatFlag = false;\n                }\n            }\n            return result_1;\n        }\n        else {\n            var skipcell = false;\n            var location_4 = new PointF(this.currentBounds.x, this.currentBounds.y);\n            // if (row.grid.isChildGrid && row.grid.allowRowBreakAcrossPages && this.startLocation.x !== this.currentBounds.x && row.width <\n            //                 this.currentPage.getClientSize().width) {\n            //     location.x = this.startLocation.x;\n            // }\n            result.bounds = new RectangleF(location_4, new SizeF(0, 0));\n            height = this.ReCalculateHeight(row, height);\n            for (var i = this.cellStartIndex; i <= this.cellEndIndex; i++) {\n                var cancelSpans = ((i > this.cellEndIndex + 1) && (row.cells.getCell(i).columnSpan > 1));\n                // let cancelSpans : boolean = false;\n                if (!cancelSpans) {\n                    for (var j = 1; j < row.cells.getCell(i).columnSpan; j++) {\n                        row.cells.getCell(i + j).isCellMergeContinue = true;\n                    }\n                }\n                var size = new SizeF(this.Grid.columns.getColumn(i).width, height);\n                // if (size.width > this.currentGraphics.clientSize.width) {\n                //     size.width = this.currentGraphics.clientSize.width;\n                // }\n                // if (this.Grid.isChildGrid && this.Grid.style.allowHorizontalOverflow) {\n                //     if (size.width >= this.currentGraphics.clientSize.width) {\n                //         size.width -= 2 * this.currentBounds.x;\n                //     }\n                // }\n                /* tslint:disable */\n                if (!this.CheckIfDefaultFormat(this.Grid.columns.getColumn(i).format) &&\n                    this.CheckIfDefaultFormat(row.cells.getCell(i).stringFormat)) {\n                    row.cells.getCell(i).stringFormat = this.Grid.columns.getColumn(i).format;\n                }\n                var cellstyle = row.cells.getCell(i).style;\n                var tempValue = ((typeof row.cells.getCell(i).value === 'string' &&\n                    row.cells.getCell(i).value !== null) ? row.cells.getCell(i).value : '');\n                row.cells.getCell(i).style = this.RaiseBeforeCellDraw(this.currentGraphics, this.currentRowIndex, i, new RectangleF(location_4, size), tempValue, cellstyle);\n                //row.cells.getCell(i).style = cellstyle;\n                if (!skipcell) {\n                    if (row.cells.getCell(i).value instanceof PdfGrid) {\n                        var grid = row.cells.getCell(i).value;\n                        grid.parentCellIndex = i;\n                    }\n                    var stringResult = row.cells.getCell(i).draw(this.currentGraphics, new RectangleF(location_4, size), cancelSpans);\n                    if (row.grid.style.allowHorizontalOverflow && (row.cells.getCell(i).columnSpan > this.cellEndIndex ||\n                        i + row.cells.getCell(i).columnSpan > this.cellEndIndex + 1) && this.cellEndIndex < row.cells.count - 1) {\n                        row.rowOverflowIndex = this.cellEndIndex;\n                    }\n                    if (row.grid.style.allowHorizontalOverflow && (row.rowOverflowIndex > 0 && (row.cells.getCell(i).columnSpan >\n                        this.cellEndIndex || i + row.cells.getCell(i).columnSpan > this.cellEndIndex + 1)) &&\n                        row.cells.getCell(i).columnSpan - this.cellEndIndex + i - 1 > 0) {\n                        row.cells.getCell(row.rowOverflowIndex + 1).value = stringResult !== null ? (stringResult.remainder !== undefined) ?\n                            stringResult.remainder : '' : '';\n                        row.cells.getCell(row.rowOverflowIndex + 1).stringFormat = row.cells.getCell(i).stringFormat;\n                        row.cells.getCell(row.rowOverflowIndex + 1).style = row.cells.getCell(i).style;\n                        row.cells.getCell(row.rowOverflowIndex + 1).columnSpan = row.cells.getCell(i).columnSpan - this.cellEndIndex + i - 1;\n                    }\n                }\n                /* tslint:enable */\n                tempValue = ((typeof row.cells.getCell(i).value === 'string' &&\n                    row.cells.getCell(i).value !== null) ? row.cells.getCell(i).value : '');\n                if (!cancelSpans) {\n                    this.raiseAfterCellDraw(this.currentGraphics, this.currentRowIndex, i, new RectangleF(location_4, size), tempValue, row.cells.getCell(i).style);\n                }\n                if (row.cells.getCell(i).value instanceof PdfGrid) {\n                    var grid = row.cells.getCell(i).value;\n                    if (this.Grid.columns.getColumn(i).width >= this.currentGraphics.clientSize.width) {\n                        location_4.x = grid.rowLayoutBoundsWidth;\n                        location_4.x += grid.style.cellSpacing;\n                    }\n                    else {\n                        location_4.x += this.Grid.columns.getColumn(i).width;\n                    }\n                }\n                else {\n                    location_4.x += this.Grid.columns.getColumn(i).width;\n                }\n            }\n            if (!row.rowMergeComplete || row.isRowHeightSet) {\n                this.currentBounds.y += height;\n            }\n            result.bounds = new RectangleF(new PointF(result.bounds.x, result.bounds.y), new SizeF(location_4.x, location_4.y));\n        }\n    };\n    PdfGridLayouter.prototype.drawRowWithBreak = function (result, row, calculateHeight) {\n        var location = new PointF(this.currentBounds.x, this.currentBounds.y);\n        if (row.grid.isChildGrid && row.grid.allowRowBreakAcrossPages && this.startLocation.x !== this.currentBounds.x) {\n            location.x = this.startLocation.x;\n        }\n        result.bounds = new RectangleF(location, new SizeF(0, 0));\n        this.gridHeight = row.rowBreakHeight > 0 ? this.currentPageBounds.height : 0;\n        // Calculate the remaining height.\n        if (row.grid.style.cellPadding.top + this.currentBounds.y + row.grid.style.cellPadding.bottom < this.currentPageBounds.height) {\n            row.rowBreakHeight = this.currentBounds.y + calculateHeight - this.currentPageBounds.height;\n        }\n        // else {\n        //     row.rowBreakHeight = calculateHeight;\n        //     result.isFinish = false;\n        //     return;\n        // }\n        // No need to explicit break if the row height is equal to grid height.\n        for (var i = 0; i < row.cells.count; i++) {\n            var cell = row.cells.getCell(i);\n            var cellHeight = cell.measureHeight();\n            if (cellHeight === calculateHeight && cell.value instanceof PdfGrid) {\n                row.rowBreakHeight = 0;\n            }\n            // else if (cellHeight === calculateHeight && (cell.value as PdfGrid) === null) {\n            //     row.rowBreakHeight = this.currentBounds.y + calculateHeight - this.currentPageBounds.height;\n            // }\n        }\n        for (var i = this.cellStartIndex; i <= this.cellEndIndex; i++) {\n            var cancelSpans = ((row.cells.getCell(i).columnSpan + i > this.cellEndIndex + 1) &&\n                (row.cells.getCell(i).columnSpan > 1));\n            // if (!cancelSpans) {\n            //     for (let k : number = 1; k < row.cells.getCell(i).columnSpan; k++) {\n            //         row.cells.getCell(i + k).isCellMergeContinue = true;\n            //     }\n            //}\n            var size = new SizeF(this.Grid.columns.getColumn(i).width, this.gridHeight > 0.0 ? this.gridHeight :\n                this.currentPageBounds.height);\n            // if (size.width === 0) {\n            //     size = new SizeF(row.cells.getCell(i).width, size.height);\n            // }\n            // if (!this.CheckIfDefaultFormat(this.Grid.columns.getColumn(i).format) &&\n            //         this.CheckIfDefaultFormat((row.cells.getCell(i).stringFormat))) {\n            //     row.cells.getCell(i).stringFormat = this.Grid.columns.getColumn(i).format;\n            // }\n            var cellstyle1 = row.cells.getCell(i).style;\n            row.cells.getCell(i).style = cellstyle1;\n            var skipcell = false;\n            var stringResult = null;\n            if (!skipcell) {\n                stringResult = row.cells.getCell(i).draw(this.currentGraphics, new RectangleF(location, size), cancelSpans);\n            }\n            //If still row is to be drawn, set cell finished drawing cell as false and update the text to be drawn.\n            if (row.rowBreakHeight > 0.0) {\n                if (stringResult != null) {\n                    row.cells.getCell(i).FinishedDrawingCell = false;\n                    row.cells.getCell(i).remainingString = stringResult.remainder == null ? ' ' : stringResult.remainder;\n                    if (row.grid.isChildGrid) {\n                        row.rowBreakHeight = calculateHeight - stringResult.actualSize.height;\n                    }\n                }\n            }\n            result.isFinish = (!result.isFinish) ? result.isFinish : row.cells.getCell(i).FinishedDrawingCell;\n            // let tempValue : string = ((typeof row.cells.getCell(i).value === 'string' &&\n            //row.cells.getCell(i).value !== null) ? row.cells.getCell(i).value : '') as string;\n            // if (!cancelSpans) {\n            //     // this.raiseAfterCellDraw(this.currentGraphics, this.currentRowIndex, i,\n            //     //           new RectangleF(location, size), tempValue, row.cells.getCell(i).style);            \n            //     this.raiseAfterCellDraw(this.currentGraphics, this.currentRowIndex, i, new RectangleF(location, size),\n            //                             (row.cells.getCell(i).value as string) ? row.cells.getCell(i).value.toString() : ' ',\n            //                             row.cells.getCell(i).style);\n            //     }                \n            if (row.cells.getCell(i).value instanceof PdfGrid) {\n                var grid = row.cells.getCell(i).value;\n                this.rowBreakPageHeightCellIndex = i;\n                // row.cells.getCell(i).pageCount = grid.listOfNavigatePages.length;\n                // for (let j : number = 0;j<grid.listOfNavigatePages.length;j++){\n                //     let pageIndex : number =grid.listOfNavigatePages.indexOf(j);\n                //             this.Grid.listOfNavigatePages.push(pageIndex);\n                //     }\n                if (this.Grid.columns.getColumn(i).width >= this.currentGraphics.clientSize.width) {\n                    location.x = this.rowLayoutBoundsWidth;\n                    location.x += grid.style.cellSpacing;\n                }\n                else {\n                    location.x += this.Grid.columns.getColumn(i).width;\n                }\n            }\n            else {\n                location.x += this.Grid.columns.getColumn(i).width;\n            }\n        }\n        this.currentBounds.y += this.gridHeight > 0.0 ? this.gridHeight : calculateHeight;\n        result.bounds = new RectangleF(new PointF(result.bounds.x, result.bounds.y), new SizeF(location.x, location.y));\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    PdfGridLayouter.repeatRowIndex = -1;\n    return PdfGridLayouter;\n}(ElementLayouter));\nexport { PdfGridLayouter };\n// recalculateBounds : boolean, clientSize : SizeF\n//Implementation\n/**\n * `Initializes` internal data.\n * @private\n */\n//Internal declaration\nvar PdfGridLayoutResult = /** @class */ (function (_super) {\n    __extends(PdfGridLayoutResult, _super);\n    /**\n     * Constructor\n     * @private\n     */\n    function PdfGridLayoutResult(page, bounds) {\n        return _super.call(this, page, bounds) || this;\n    }\n    return PdfGridLayoutResult;\n}(PdfLayoutResult));\nexport { PdfGridLayoutResult };\n/**\n * `PdfGridLayoutFormat` class represents a flexible grid that consists of columns and rows.\n */\nvar PdfGridLayoutFormat = /** @class */ (function (_super) {\n    __extends(PdfGridLayoutFormat, _super);\n    /**\n     * Initializes a new instance of the `PdfGridLayoutFormat` class.\n     * @private\n     */\n    function PdfGridLayoutFormat(baseFormat) {\n        return _super.call(this, baseFormat) || this;\n    }\n    return PdfGridLayoutFormat;\n}(PdfLayoutFormat));\nexport { PdfGridLayoutFormat };\nvar GridCellEventArgs = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initialize a new instance for `GridCellEventArgs` class.\n     * @private\n     */\n    function GridCellEventArgs(graphics, rowIndex, cellIndex, bounds, value) {\n        this.gridRowIndex = rowIndex;\n        this.gridCellIndex = cellIndex;\n        this.internalValue = value;\n        this.gridBounds = bounds;\n        this.pdfGraphics = graphics;\n    }\n    Object.defineProperty(GridCellEventArgs.prototype, \"rowIndex\", {\n        // Properties\n        /**\n         * Gets the value of current `row index`.\n         * @private\n         */\n        get: function () {\n            return this.gridRowIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridCellEventArgs.prototype, \"cellIndex\", {\n        /**\n         * Gets the value of current `cell index`.\n         * @private\n         */\n        get: function () {\n            return this.gridCellIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridCellEventArgs.prototype, \"value\", {\n        /**\n         * Gets the actual `value` of current cell.\n         * @private\n         */\n        get: function () {\n            return this.internalValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridCellEventArgs.prototype, \"bounds\", {\n        /**\n         * Gets the `bounds` of current cell.\n         * @private\n         */\n        get: function () {\n            return this.gridBounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridCellEventArgs.prototype, \"graphics\", {\n        /**\n         * Gets the instance of `current graphics`.\n         * @private\n         */\n        get: function () {\n            return this.pdfGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return GridCellEventArgs;\n}());\nexport { GridCellEventArgs };\nvar PdfGridBeginCellDrawEventArgs = /** @class */ (function (_super) {\n    __extends(PdfGridBeginCellDrawEventArgs, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `StartCellLayoutEventArgs` class.\n     * @private\n     */\n    function PdfGridBeginCellDrawEventArgs(graphics, rowIndex, cellIndex, bounds, value, style) {\n        var _this = _super.call(this, graphics, rowIndex, cellIndex, bounds, value) || this;\n        _this.style = style;\n        return _this;\n    }\n    Object.defineProperty(PdfGridBeginCellDrawEventArgs.prototype, \"skip\", {\n        // Properties\n        /**\n         * Gets or sets a value indicating whether the value of this cell should be `skipped`.\n         * @private\n         */\n        get: function () {\n            return this.bSkip;\n        },\n        set: function (value) {\n            this.bSkip = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridBeginCellDrawEventArgs.prototype, \"style\", {\n        /**\n         * Gets or sets a `style` value of the cell.\n         * @private\n         */\n        get: function () {\n            return this.cellStyle;\n        },\n        set: function (value) {\n            this.cellStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridBeginCellDrawEventArgs;\n}(GridCellEventArgs));\nexport { PdfGridBeginCellDrawEventArgs };\nvar PdfGridEndCellDrawEventArgs = /** @class */ (function (_super) {\n    __extends(PdfGridEndCellDrawEventArgs, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `PdfGridEndCellLayoutEventArgs` class.\n     * @private\n     */\n    function PdfGridEndCellDrawEventArgs(graphics, rowIndex, cellIndex, bounds, value, style) {\n        var _this = _super.call(this, graphics, rowIndex, cellIndex, bounds, value) || this;\n        _this.cellStyle = style;\n        return _this;\n    }\n    Object.defineProperty(PdfGridEndCellDrawEventArgs.prototype, \"style\", {\n        // Propertise\n        /**\n         * Get the `PdfGridCellStyle`.\n         * @private\n         */\n        get: function () {\n            return this.cellStyle;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridEndCellDrawEventArgs;\n}(GridCellEventArgs));\nexport { PdfGridEndCellDrawEventArgs };\nvar PdfCancelEventArgs = /** @class */ (function () {\n    function PdfCancelEventArgs() {\n    }\n    Object.defineProperty(PdfCancelEventArgs.prototype, \"cancel\", {\n        // Properties\n        /**\n         * Gets and Sets the value of `cancel`.\n         * @private\n         */\n        get: function () {\n            return this.isCancel;\n        },\n        set: function (value) {\n            this.isCancel = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfCancelEventArgs;\n}());\nexport { PdfCancelEventArgs };\nvar BeginPageLayoutEventArgs = /** @class */ (function (_super) {\n    __extends(BeginPageLayoutEventArgs, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `BeginPageLayoutEventArgs` class with the specified rectangle and page.\n     * @private\n     */\n    function BeginPageLayoutEventArgs(bounds, page) {\n        var _this = _super.call(this) || this;\n        _this.bounds = bounds;\n        _this.pdfPage = page;\n        return _this;\n    }\n    Object.defineProperty(BeginPageLayoutEventArgs.prototype, \"bounds\", {\n        // Properties\n        /**\n         * Gets or sets value that indicates the lay outing `bounds` on the page.\n         * @private\n         */\n        get: function () {\n            return this.cellBounds;\n        },\n        set: function (value) {\n            this.cellBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BeginPageLayoutEventArgs.prototype, \"page\", {\n        /**\n         * Gets the `page` where the lay outing should start.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return BeginPageLayoutEventArgs;\n}(PdfCancelEventArgs));\nexport { BeginPageLayoutEventArgs };\n/**\n * `EndPageLayoutEventArgs` class is alternate for end page layout events.\n */\nvar EndPageLayoutEventArgs = /** @class */ (function (_super) {\n    __extends(EndPageLayoutEventArgs, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `EndPageLayoutEventArgs` class. with the specified 'PdfLayoutResult'.\n     * @private\n     */\n    function EndPageLayoutEventArgs(result) {\n        var _this = _super.call(this) || this;\n        _this.layoutResult = result;\n        return _this;\n    }\n    Object.defineProperty(EndPageLayoutEventArgs.prototype, \"result\", {\n        // Properties\n        /**\n         * Gets the lay outing `result` of the page.\n         * @private\n         */\n        get: function () {\n            return this.layoutResult;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EndPageLayoutEventArgs.prototype, \"nextPage\", {\n        /**\n         * Gets or sets a value indicating the `next page` where the element should be layout.\n         * @private\n         */\n        get: function () {\n            return this.nextPdfPage;\n        },\n        set: function (value) {\n            this.nextPdfPage = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return EndPageLayoutEventArgs;\n}(PdfCancelEventArgs));\nexport { EndPageLayoutEventArgs };\n/**\n * `PdfGridBeginPageLayoutEventArgs` class is alternate for begin page layout events.\n */\nvar PdfGridBeginPageLayoutEventArgs = /** @class */ (function (_super) {\n    __extends(PdfGridBeginPageLayoutEventArgs, _super);\n    // Constructors\n    /**\n     * Initialize a new instance of `PdfGridBeginPageLayoutEventArgs` class.\n     * @private\n     */\n    function PdfGridBeginPageLayoutEventArgs(bounds, page, startRow) {\n        var _this = _super.call(this, bounds, page) || this;\n        _this.startRow = startRow;\n        return _this;\n    }\n    Object.defineProperty(PdfGridBeginPageLayoutEventArgs.prototype, \"startRowIndex\", {\n        // Properties\n        /**\n         * Gets the `start row index`.\n         * @private\n         */\n        get: function () {\n            return this.startRow;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridBeginPageLayoutEventArgs;\n}(BeginPageLayoutEventArgs));\nexport { PdfGridBeginPageLayoutEventArgs };\n/**\n * `PdfGridEndPageLayoutEventArgs` class is alternate for begin page layout events.\n */\nvar PdfGridEndPageLayoutEventArgs = /** @class */ (function (_super) {\n    __extends(PdfGridEndPageLayoutEventArgs, _super);\n    // Constructors\n    /**\n     * Initialize a new instance of `PdfGridEndPageLayoutEventArgs` class.\n     * @private\n     */\n    function PdfGridEndPageLayoutEventArgs(result) {\n        return _super.call(this, result) || this;\n    }\n    return PdfGridEndPageLayoutEventArgs;\n}(EndPageLayoutEventArgs));\nexport { PdfGridEndPageLayoutEventArgs };\nvar RowLayoutResult = /** @class */ (function () {\n    //Constructors\n    /**\n     * Initializes a new instance of the `RowLayoutResult` class.\n     * @private\n     */\n    function RowLayoutResult() {\n        this.layoutedBounds = new RectangleF(0, 0, 0, 0);\n    }\n    Object.defineProperty(RowLayoutResult.prototype, \"isFinish\", {\n        /**\n         * Gets or sets a value indicating whether this instance `is finish`.\n         * @private\n         */\n        get: function () {\n            return this.bIsFinished;\n        },\n        set: function (value) {\n            this.bIsFinished = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RowLayoutResult.prototype, \"bounds\", {\n        /**\n         * Gets or sets the `bounds`.\n         * @private\n         */\n        get: function () {\n            return this.layoutedBounds;\n        },\n        set: function (value) {\n            this.layoutedBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return RowLayoutResult;\n}());\nexport { RowLayoutResult };\n"],"names":["defaultToString","item","Object","prototype","toString","call","Dictionary","toStringFunction","this","table","nElements","toStr","getValue","key","pair","value","setValue","k","remove","previousElement","keys","keysArray","namesOfKeys","index1","length","pair1","push","values","valuesArray","namesOfValues","index2","pair2","containsKey","clear","size","PdfName","stringStartMark","internalValue","isSaving6","position6","normalizeValue","defineProperty","get","status6","set","enumerable","configurable","index6","val","save","writer","write","escapeString","clone","crossTable","newName","stringValue","result","i","len_1","ch","delimiters","indexOf","c","replacements","Operators","forTest","obj","endObj","r","whiteSpace","slash","newLine","stream","endStream","xref","f","n","trailer","startxref","eof","header","beginText","endText","beginPath","appendLineSegment","stroke","fill","fillEvenOdd","fillStroke","fillStrokeEvenOdd","appendbeziercurve","appendRectangle","saveState","restoreState","paintXObject","modifyCtm","modifyTM","setLineWidth","setLineCapStyle","setLineJoinStyle","setDashPattern","setFlatnessTolerance","closePath","closeStrokePath","closeFillStrokePath","setCharacterSpace","setWordSpace","setHorizontalScaling","setTextLeading","setFont","setRenderingMode","setTextRise","setTextScaling","setCoords","goToNextLine","setText","setTextWithFormatting","setTextOnNewLine","selectcolorspaceforstroking","selectcolorspacefornonstroking","setrbgcolorforstroking","setrbgcolorfornonstroking","setcmykcolorforstroking","setcmykcolorfornonstroking","setgraycolorforstroking","setgraycolorfornonstroking","clipPath","clipPathEvenOdd","endPath","setGraphicsState","comment","evenOdd","setMiterLimit","DictionaryProperties","pages","kids","count","resources","type","mediaBox","parent","root","decodeParms","filter","font","type1","baseFont","encoding","subtype","contents","procset","colorSpace","extGState","pattern","xObject","width","height","bitsPerComponent","image","dctdecode","columns","blackIs1","s","predictor","deviceRgb","next","action","link","a","annot","p","rect","uri","annots","ca","CA","xyz","fit","dest","BM","flatedecode","rotate","bBox","form","w","cIDFontType2","cIDToGIDMap","identity","dw","fontDescriptor","cIDSystemInfo","fontName","flags","fontBBox","missingWidth","stemV","italicAngle","capHeight","ascent","descent","leading","avgWidth","fontFile2","maxWidth","xHeight","stemH","registry","ordering","supplement","type0","identityH","toUnicode","descendantFonts","PdfDictionary","dictionary","position7","primitiveItems","prefix","suffix","object","archive","isFont","encrypt","dictionaryProperties","items","index","status","freezeChanges","status7","isSaving7","index7","getArchive","setArchive","setEncrypt","modify","getEncrypt","freezer","bChanged","onBeginSave","beginSave","sender","onFontDictionaryBeginSave","fontDictionaryBeginSave","onDescendantFontBeginSave","descendantFontBeginSave","onTemplateBeginSave","pageBeginDrawTemplate","pageBeginSave","onBeginAnnotationSave","annotationBeginSave","onSectionBeginSave","saveEvent","sectionBeginSave","state","bRaiseEvent","Count","saveItems","SaveSectionCollectionEventHandler","SaveDescendantFontEventHandler","SaveFontDictionaryEventHandler","SaveAnnotationEventHandler","SaveSectionEventHandler","SaveTemplateEventHandler","PdfNumber","position5","integer","status5","isSaving5","index5","intValue","floatToString","number","returnString","toFixed","min","x","y","z","Math","PdfArray","array","startMark","endMark","position9","clonedObject9","internalElements","tempArray","elements","tempNumberArray","pdfNumber","add","status9","isSaving9","index9","pdfCrossTable","element","markedChange","contains","tempElement","inputElement","getItems","len","newArray","fromRectangle","bounds","insert","tempElements","markChanged","removeAt","__extends","extendStatics","d","b","setPrototypeOf","__proto__","Array","hasOwnProperty","__","constructor","create","PdfStream","_super","data","_this","dicPrefix","dicSuffix","clonedObject2","bCompress","isImageStream","isFontStream","dataStream2","bCompress2","clearStream","internalStream","text","Error","writeBytes","String","fromCharCode","onCmapBeginSave","cmapBeginSave","onFontProgramBeginSave","fontProgramBeginSave","compressContent","byteArray","charCodeAt","dataArray","Uint8Array","sw","CompressedStreamWriter","close","getCompressedString","addFilter","filterName","PdfReferenceHolder","name","isImage","bytesToString","output","SaveCmapEventHandler","SaveFontProgramEventHandler","InternalEnum","ForceEncoding","SourceType","PdfString","bHex","position1","clonedObject1","bDecrypted","isParentDecrypted","isPacked","isFormField","isColorSpace","isHexString","status1","isSaving1","bConverted","bForceEncoding","bytesToHex","bytes","undefined","encode","Ascii","pdfEncode","stringMark","escapeSymbols","currentData","CrossTable","newString","toUnicodeArray","bAddPrefix","code","byteToString","hexStringMark","hexFormatPattern","PdfReference","objNumber","genNumber","index3","position3","Number","status3","isSaving3","obj1","obj2","index4","position4","objectIndex","initialize","status4","isSaving4","primitiveObject","pdfReference","tempObj","position","cTable","document","isSaving","getReference","PdfAction","pdfDictionary","PdfUriAction","uniformResourceIdentifier","PdfHorizontalAlignment","PdfVerticalAlignment","PdfTextAlignment","TextRenderingMode","PdfLineJoin","PdfLineCap","PdfDashStyle","PdfFillMode","PdfColorSpace","PdfBlendMode","PdfGraphicsUnit","PdfGridImagePosition","PdfTextDirection","PdfColor","color1","color2","color3","color4","redColor","greenColor","g","blueColor","grayColor","gray","alpha","filled","cyanColor","magentaColor","yellowColor","blackColor","maxColourChannelValue","assignCMYK","red","green","blue","black","cyan","magenta","yellow","isEmpty","rgbToString","ifStroking","colour","rgbStrings","toArray","Rgb","grayStringsSroke","grayStringsFill","PointF","SizeF","RectangleF","arg1","arg2","arg3","arg4","pointf","sizef","Rectangle","left","top","right","bottom","topLeft","PdfBrush","PdfSolidBrush","color","pdfColor","monitorChanges","brush","streamWriter","getResources","saveChanges","currentColorSpace","diff","setColorAndSpace","resetChanges","PdfFontStyle","PdfFontFamily","PdfFontType","PdfWordWrapType","PdfSubSuperScript","FontEncoding","TtfCmapFormat","TtfCmapEncoding","TtfPlatformID","TtfMicrosoftEncodingID","TtfMacintoshEncodingID","FontDescriptorFlags","TtfCompositeGlyphFlags","PdfStringFormat","scalingFactor","wordWrapType","Word","internalLineLimit","textAlignment","verticalAlignment","direction","Top","isRightToLeft","internalCharacterSpacing","internalWordSpacing","clip","pdfSubSuperScript","None","internalParagraphIndent","firstLineIndent","trailingSpaces","isNoClip","initialLineIndent","StringTokenizer","textValue","currentPosition","getCharsCount","symbols","numSymbols","curIndex","readLine","pos","substring","text2","peekLine","line","readWord","substr","peekWord","word","read","end","num","builder","peek","readToEnd","symbol","tab","spaces","whiteSpacePattern","PdfStringLayouter","isOverloadWithPosition","layout","arg5","arg6","arg7","clientSize","doLayout","format","rectSize","pageHeight","rectangle","reader","PdfStringLayoutResult","lineResult","lines","lineIndent","getLineIndent","layoutLine","numSymbolsInserted","returnedValue","copyToResult","success","numInserted","finalizeResult","firstLine","paragraphIndent","getLineHeight","lineSpacing","getLineWidth","layoutLineHeight","lineWidth","lineType","LineType","FirstParagraphLine","round","addToLineResult","NewLineBreak","curLine","curIndent","curLineWidth","getWrapType","WordOnly","textRemainder","wordWrap","Character","ln","LayoutBreak","LastParagraphLine","layoutLines","breakType","info","LineInfo","actualSize","max","allowPartialLines","lineLimit","maxHeight","expHeight","lineHeight","trimLine","size1","rightToLeft","trim","empty","content","PdfFont","style","fontStyle","Regular","fontSize","setStyle","metrics","getHeight","Bold","Italic","Strikeout","Underline","fontMetrics","pdfFontInternals","measureString","temparg2","layoutArea","temparg3","equalsTo","equalsToFont","getInternals","setInternals","internals","applyFormatSettings","realWidth","characterSpacing","wordSpacing","charSizeMultiplier","syncObject","PdfWriter","pdfDocument","buffer","overload","tempOverload","ObjectStatus","PdfMainObjectCollection","objectCollections","mainObjectCollection","primitiveObjectCollection","isNew","objInfo","ObjectInfo","Registered","lookFor","reference","wasNew","trySetReference","found","setReference","destroy","_i","_a","pdfObject","objectCollectionIndex","PdfDocumentBase","isStreamCopied","PdfDocument","objects","currentSavingObject","pdfCatalog","setMainObjectCollection","setCrossTable","setCatalog","catalog","filename","Encoding","SW","StreamWriter","encoding_1","SW_1","Promise","resolve","reject","blobData","Blob","docSave","ObjectType","PdfCatalog","sections","tempDictionaryProperties","PdfCrossTable","maxGenNumIndex","objectCount","merging","internalTrailer","pdfObjects","saveHead","mappedReferences","markTrailerReferences","saveObjects","saveCount","xrefPos","registerObject","saveSections","saveTrailer","saveTheEndess","objectCollection","prevXRef","objectNum","prepareSubsection","saveSubsection","str","Free","getItem","offset","generation","isFree","addOffsetLength","addGenNumberLength","total","split","version","generateFileVersion","bNew","getSubReference","objnumber","nextObjNumber","tempIndex","tempkey","tempvalue","bForceNew","saveIndirectObject","currentSavingObj","doSaveObject","free","RegisteredObject","dereference","rh","tempOffset","offsetNumber","tempReference","Normal","PdfPageSize","letter","note","legal","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","a10","b0","b1","b2","b3","b4","b5","archE","archD","archC","archB","archA","flsa","halfLetter","letter11x17","ledger","PdfPageOrientation","PdfPageRotateAngle","PdfNumberStyle","PdfDockStyle","PdfAlignmentStyle","TemplateType","PdfMargins","pdfMargin","setMargins","leftMargin","topMargin","rightMargin","bottomMargin","margin1","margin2","margin3","margin4","PdfPageSettings","margins","pageMargins","pageSize","rotateAngle","RotateAngle0","pageOrientation","Portrait","pageOrigin","isRotation","setSize","orientation","updateSize","Landscape","settings","getActualSize","PdfStreamWriter","dictionaryName","writeOperator","executeObject","useEvenOddRule","fillStrokePath","fillPath","closeFillPath","textScaling","strokePath","restoreGraphicsState","saveGraphicsState","startNextLine","writePoint","showText","checkTextParam","writeText","setLeading","setTextRenderingMode","renderingMode","setCharacterSpacing","charSpacing","setWordSpacing","showNextLineText","setColorSpace","temparg1","op","matrix","opcode","start","updateY","arg","string","writeComment","forStroking","setLineDashPattern","patternOffset","setLineDashPatternHelper","tempPattern","miterLimit","setLineCap","lineCapStyle","setLineJoin","lineJoinStyle","returnValue","PdfPen","dashOffsetValue","penDashPattern","pdfDashStyle","Solid","pdfLineCap","pdfLineJoin","penWidth","internalMiterLimit","setBrush","Custom","Dash","Dot","DashDot","DashDotDot","sBrush","pdfBrush","currentPen","dashControl","lineJoin","lineCap","pen","getPattern","dashOffset","dashPattern","PdfTransformationMatrix","radDegFactor","PI","transformationMatrix","Matrix","translate","offsetX","offsetY","scale","scaleX","scaleY","angle","cos","sin","multiply","degreesToRadians","degreesX","degRadFactor","radiansToDegrees","radians","metrixElements","transform","point","x2","y2","tempMatrix","dispose","ProcedureSets","pdf","imageB","imageC","imageI","TemporaryDictionary","mKeys","mValues","ReferenceError","RangeError","splice","PdfTransparency","mode","PdfAutomaticFieldInfoCollection","automaticFieldsInformation","fieldInfo","automaticFields","PdfGraphicsElement","drawHelper","graphics","bNeedSave","gState","translateTransform","drawInternal","restore","PdfAutomaticField","internalBounds","internalTemplateSize","internalFont","internalBrush","internalPen","internalStringFormat","performDrawHelper","location","scalingX","scalingY","getFont","stringFormat","draw","location_1","PdfAutomaticFieldInfo","getSize","getBrush","defaultFont","getPageFromGraphics","page","currentPage","field","pageNumberFieldLocation","pageNumberField","ByteArray","mPosition","dataView","DataView","readByte","getBuffer","writeFromBase64String","base64","arr","encodedString","input","chr1","chr2","chr3","enc2","enc3","keyStr","resultIndex","totalLength","replace","charAt","byteLength","PdfBoolean","objectStatus","saving","boolToStr","ImageFormat","ImageDecoder","mFormat","Unknown","mbitsPerComponent","mStream","mHeight","mWidth","mImageData","internalBuffer","checkIfJpeg","Jpeg","parseJpegImage","reset","imgData","length_1","mJpegHeader","getImageDictionary","imageData","imageStream","tempString","decodedString","imageDataAsNumberArray","compress","getColorSpace","getDecodeParams","decodeParams","mPngHeader","GIF_HEADER","BMP_HEADER","PdfUnitConverter","dpi","updateProportionsHelper","convertUnits","from","to","convertFromPixels","convertToPixels","proportions","pixelPerInch","horizontalResolution","verticalResolution","PdfImage","imageWidth","imageHeight","imagePhysicalDimension","getPointSize","dpiX","dpiY","ucX","ucY","ptWidth","Pixel","Point","ptHeight","PdfBitmap","imageStatus","loadImage","initializeAsync","decoder","TtfTableInfo","checksum","TtfNameTable","TtfNameRecord","TtfHeadTable","TtfMetrics","macStyle","TtfHorizontalHeaderTable","TtfOS2Table","TtfPostTable","TtfLongHorMetric","TtfCmapSubTable","TtfCmapTable","TtfGlyphInfo","charCode","compareTo","glyph","TtfLocaTable","TtfAppleCmapSubTable","TtfMicrosoftCmapSubTable","TtfTrimmedCmapSubTable","TtfGlyphHeader","BigEndianWriter","capacity","int32Size","int16Size","int64Size","bufferLength","internalPosition","writeShort","flush","writeInt","writeUInt","buff","writeString","TtfReader","fontData","isTtcFont","isMacTtf","metricsName","isMacTTF","missedGlyphs","tableNames","entrySelectors","macintoshDictionary","microsoftDictionary","internalMacintoshGlyphs","internalMicrosoftGlyphs","readFontDictionary","nameTable","readNameTable","headTable","readHeadTable","initializeFontName","checkPreambula","numTables","readInt16","tableDirectory","tableKey","readString","readInt32","lowestPosition","fixOffsets","minOffset","MAX_VALUE","tableKeys","shift","tableInfo","getTable","formatSelector","readUInt16","recordsCount","nameRecords","record","platformID","encodingID","languageID","nameID","unicode","readFixed","fontRevision","checkSumAdjustment","readUInt32","magicNumber","unitsPerEm","created","readInt64","modified","xMin","yMin","xMax","yMax","lowestReadableSize","fontDirectionHint","indexToLocalFormat","glyphDataFormat","readHorizontalHeaderTable","ascender","descender","lineGap","advanceWidthMax","minLeftSideBearing","minRightSideBearing","xMaxExtent","caretSlopeRise","caretSlopeRun","metricDataFormat","numberOfHMetrics","readOS2Table","xAvgCharWidth","usWeightClass","usWidthClass","fsType","ySubscriptXSize","ySubscriptYSize","ySubscriptXOffset","ySubscriptYOffset","ySuperscriptXSize","ySuperscriptYSize","ySuperscriptXOffset","ySuperscriptYOffset","yStrikeoutSize","yStrikeoutPosition","sFamilyClass","panose","readBytes","ulUnicodeRange1","ulUnicodeRange2","ulUnicodeRange3","ulUnicodeRange4","vendorIdentifier","fsSelection","usFirstCharIndex","usLastCharIndex","sTypoAscender","sTypoDescender","sTypoLineGap","usWinAscent","usWinDescent","ulCodePageRange1","ulCodePageRange2","sxHeight","sCapHeight","usDefaultChar","usBreakChar","usMaxContext","readPostTable","formatType","underlinePosition","underlineThickness","isFixedPitch","minType42","maxType42","minType1","maxType1","readWidthTable","glyphCount","advanceWidth","lsb","glyphWidth","floor","readCmapTable","tablesCount","subTables","subTable","readCmapSubTable","getCmapEncoding","Macintosh","Microsoft","Apple","readAppleCmapTable","readMicrosoftCmapTable","Trimmed","readTrimmedCmapTable","maxMacIndex","glyphInfo","getWidth","macintosh","addGlyph","collection","Unicode","microsoft","segCountX2","searchRange","entrySelector","rangeShift","segCount","endCount","readUshortArray","reservedPad","startCount","idDelta","idRangeOffset","glyphID","codeOffset","j","id","Symbol","firstCode","entryCount","fontFamily","postScriptName","glyphCode","Undefined","Roman","microsoftGlyphs","macintoshGlyphs","initializeMetrics","horizontalHeadTable","os2Table","postTable","cmapTables","bSymbol","isSymbol","factor","winAscent","macAscent","winDescent","macDescent","ceil","fontBox","widthTable","updateWidth","subScriptSizeFactor","superscriptSizeFactor","getGlyph","byteToProcess","space","getString","getDefaultGlyph","readLocaTable","bShort","offsets","updateGlyphChars","glyphChars","locaTable","glyphCharKeys","nextKey","processCompositeGlyph","glyphOffset","glyphHeader","numberOfContours","skipBytes","glyphIndex","MoreComponents","Arg1And2AreWords","WeHaveScale","WeHaveAnXyScale","WeHaveTwoByTwo","generateGlyphTable","newLocaTable","newGlyphTable","activeGlyphs","sort","glyphSize","glyphSizeAligned","align","nextGlyphOffset","nextGlyphIndex","oldGlyphOffset","oldNextGlyphOffset","glyphTableSize","updateLocaTable","bLocaIsShort","newLocaTableOut","newLocaUpdated","newLocaSize","getFontProgram","locaTableSize","getFontProgramLength","fontProgramLength","writeCheckSums","writeGlyphs","tableName","usedTablesSize","nextTableSize","calculateCheckSum","byte1","byte2","byte3","byte4","i_1","setOffset","createInternals","bIsLocaShort","isFontPresent","getGlyphChars","chars","charKeys","getAllGlyphs","allGlyphInfo","readFontProgram","result1","result2","convertString","getCharWidth","isUnicode","i1","i2","i3","i4","low","written","PdfFontMetrics","getAscent","getDescent","getLineGap","clearTypeFonts","clearTypeFontCollection","subSuperScript","SubScript","SuperScript","WidthTable","internalWidthTable","StandardWidthTable","widths","swt","UnicodeTrueTypeFont","base64String","nameString","isCompress","isEmbedFont","cmapPrefix","cmapEndCodespaceRange","cmapBeginRange","cmapEndRange","cmapSuffix","fontString","Initialize","ttfReader","ttfMetrics","fontDictionary","fontProgram","cmap","descendantFont","subsetName","getFontName","createDescendantFont","createCmap","createFontDictionary","createFontProgram","isBold","random","formatName","ret","createFontDescriptor","systemInfo","createSystemInfo","descriptor","getDescriptorFlags","getBoundBox","descFonts","usedChars","getDescendantWidth","generateCmap","generateFontProgram","chLen","firstGlyphIndex","lastGlyphIndex","firstGlyphIndexWasSet","widthDetails","first","last","middlePart","toHexString","nextRange","FixedPitch","Symbolic","Nonsymbolic","isItalic","ForceBold","abs","isCaseChange","toUpperCase","setSymbols","ArabicShapeRenderer","arabicCharTable","alef","alefHamza","alefHamzaBelow","alefMadda","lam","hamza","zeroWidthJoiner","hamzaAbove","hamzaBelow","wawHamza","yehHamza","waw","alefMaksura","yeh","farsiYeh","shadda","madda","lwa","lwawh","lwawhb","lwawm","bwhb","fathatan","superScriptalef","vowel","arabicMapTable","getCharacterShape","shape","level","str2","st","doShape","previous","ArabicShape","present","ligature","shapeCount","getShapeCount","Shapes","Value","append","Ligature","Type","shapeValue","shapeType","shapeVowel","shapeLigature","shapeShapes","Bidi","indexes","indexLevels","mirroringShapeCharacters","update","doMirrorShaping","res","getLogicalToVisualString","inputText","isRtl","rtlCharacters","RtlCharacters","getVisualOrder","setDefaultIndexLevel","doOrder","resultBuilder","sIndex","eIndex","odd","even","reArrange","pstart","pend","temp","types","textOrder","rtlCharacterTypes","L","LRE","LRO","R","AL","RLE","RLO","PDF","EN","ES","ET","AN","CS","NSM","BN","B","S","WS","ON","charTypes","getCharacterCode","doVisualOrder","levels","characterCodes","setDefaultLevels","setLevels","updateLevels","getEmbeddedCharactersLength","preview","preType","checkNSM","checkEmbeddedCharacters","startType","endType","charType","checkEuropeanDigits","checkArabicCharacters","checkEuropeanNumberSeparator","checkEuropeanNumberTerminator","l","getLength","checkOtherNeutrals","checkOtherCharacters","pst","checkCommanCharacters","validSet","t","byte","lt","tt","rt","RtlRenderer","openBracket","closeBracket","rtl","wordSpace","customLayout","splitLayout","customSplitLayout","getGlyphIndex","glyphs","custom","fontInternal","Uint16Array","textDirection","layouted","txt","words","addChars","PdfGraphics","previousTextRenderingMode","Fill","previousCharacterSpacing","previousWordSpacing","previousTextScaling","procedureSets","isNormalRender","isUseFontSize","isEmfTextScaled","isEmf","isEmfPlus","isBaselineFormat","emfScalingFactor","colorSpaceChanged","isPointOverload","currentColorSpaces","isImageOptimized","graphicsState","istransparencySet","internalAutomaticFields","startCutIndex","canvasSize","pdfStreamWriter","pdfStringLayoutResult","internalMediaBoxUpperRightBound","clipBounds","pageLayer","bStateSaved","currentBrush","currentFont","bCSInitialized","currentStringFormat","requireProcedureSet","drawPdfTemplate","template","bNeedScale","getTranslateTransform","getScaleTransform","name_1","getName","newLocation","drawString","arg8","arg9","temparg4","temparg5","temparg6","temparg7","temparg8","temparg9","checkCorrectLayoutRectangle","drawStringLayoutResult","drawLine","stateControl","drawRectangle","drawPath","Winding","isPen","isBrush","isEvenOdd","Alternate","drawImage","physicalDimension","name_2","setResources","resource","getLineBounds","lineIndex","layoutRectangle","lineCount","getTextVerticalAlignShift","hShift","getHorizontalAlignShift","shouldJustify","textSize","layoutedRectangle","alignment","Center","Right","lineAlignment","Middle","Bottom","setLayer","layer","pageSave","performDraw","applyStringSettings","horizontalScalingFactor","resultHeight","remainingString","drawLayoutResult","underlineStrikeoutText","getNextPage","section","getPages","setClip","tm","getTextRenderingMode","cs","ws","textHeight","boundsHeight","vAlignShift","ttfFont","lineInfo","hAlignShift","drawUnicodeLine","drawAsciiLine","justifyLine","useWordSpace","Justify","rtlRender","blocks","rightAlign","RightToLeft","drawUnicodeBlocks","breakUnicodeLine","tokens","token","convertToUnicode","getUnicodeString","xShift","spaceWidth","tokenWidth","converted","boundsWidth","hasWordSpacing","whitespacesCount","initializeCoordinates","justifyStyle","goodWidth","hasSpaces","goodLineBreakStyle","underline","strikeout","linePen","createUnderlineStikeoutPen","vShift","underlineYOffset","strikeoutYOffset","x1","FillStroke","Stroke","ClipFlag","layoutBounds","firstParagraphLine","Left","lastDocumentCS","lastGraphicsCS","initCurrentColorSpace","penControl","brushControl","fontControl","colorspace","curSubSuper","prevSubSuper","setTransparency","trasparencies","transp","td","TransparencyData","name_3","clipTranslateMargins","clipArea","scaleTransform","rotateTransform","getRotateTransform","mediaBoxUpperRightBound","cropBox","PdfGraphicsState","textRenderingMode","doRestoreState","pop","pathTypesValuesMask","transparencyObject","GetResourceEventHandler","internalTextRenderingMode","internalTextScaling","pdfColorSpace","pdfGraphics","pdfPen","pdfFont","alphaPen","alphaBrush","blendMode","PdfPageLayer","streamClipPageTemplates","isVisible","sublayer","contentLength","pdfPage","clipPageTemplates","layerid","layerName","initializeGraphics","PdfPageLayerCollection","sign","oPage","gr","sc","isSame","origin","clipRect","getActualBounds","pageSettings","PdfCollection","parentLayerCount","optionalContent","PdfPageBase","lPage","parseLayers","list","firstArgument","secondArgument","addLayer","insertLayer","loadedPage","saveStream","restoreStream","saveData","PdfTemplate","writeTransformation","tempSize","templateSize","PdfResources","addType","addSubType","baseDictionary","properties","getNames","primitive","names","sName","generateName","pdfNames","fonts","procedureSetName","procSets","removeFont","Guid","getNewGuidString","xobjects","savable","transDic","parentXObjects","hasSameImageStream","oldReference","values_1","guid","randomString","randomNumber","defLayerIndex","pageDictionary","pdfSection","layers","defaultLayerIndex","layerCollection","PdfAnnotationCollection","alreadyExistsAnnotationError","missingAnnotationException","internalAnnotations","lists","annotation","doAdd","destination","setPage","layoutResult","lastPosition","setColor","colours","PdfPage","annotationCollection","defaultLayer","parentDocument","annotations","setSection","resetProgress","isProgressOn","getClientSize","doc","drawPageTemplates","containsTemplates","backLayer","drawTemplates","frontLayer","PageAddedEventArgs","PdfSectionPageCollection","PdfDocumentTemplate","leftTemplate","checkElement","topTemplate","rightTemplate","bottomTemplate","evenLeft","evenTop","evenRight","evenBottom","oddLeft","oddTop","oddRight","oddBottom","getLeft","isEven","EvenLeft","OddLeft","getTop","EvenTop","OddTop","getRight","EvenRight","OddRight","getBottom","EvenBottom","OddBottom","pageCollectionIndex","templateElement","PdfSectionTemplate","leftValue","topValue","rightValue","bottomValue","stampValue","PdfSection","pageAdded","pdfPages","initialSettings","sectionCollection","pagesReferences","pageTemplate","pagesCollection","pointToNativePdf","setPageSettings","PageSettingsState","pageCount","foreground","documentHeaders","getDocumentTemplates","sectionTemplates","getSectionTemplates","templates","applyDocumentTopTemplate","applyDocumentBottomTemplate","applyDocumentLeftTemplate","applyDocumentRightTemplate","page_1","checkPresence","pageAddedMethod","args","onPageAdded","document_1","getLeftIndentWidth","top_1","getTopIndentHeight","getRightIndentWidth","getBottomIndentHeight","includeMargins","templateWidth","docTemplateWidth","templateHeight","docTemplateHeight","temproaryPages","applyPageSettings","container","parentSettings","PdfSectionCollection","rotateFactor","sectionHeaders","drawTemplatesHelper","pageRotate","sectionCount","pdfSectionCollection","section_1","checkSection","countPages","forEach","PdfDocumentPageCollection","pdfPageCollectionIndex","getLastSection","getPageByIndex","getPage","sectionStartIndex","pageIndex","numPages","PdfCacheCollection","referenceObjects","pdfFontCollection","search","group","getGroup","createNewGroup","tGroup","representative","removeGroup","slice","isMerging","defaultMargin","isMerge","cacheCollection","documentPageCollection","defaultStandardFont","PdfStandardFont","Helvetica","isCacheEnabled","Cmyk","GrayScale","checkPagesPresence","cache","PdfStandardFontMetricsFactory","getMetrics","getHelveticaMetrics","Courier","getCourierMetrics","TimesRoman","getTimesMetrics","getSymbolMetrics","ZapfDingbats","getZapfDingbatsMetrics","subSuperScriptFactor","helveticaBoldItalicAscent","helveticaBoldItalicDescent","helveticaBoldItalicName","arialBoldWidth","helveticaBoldAscent","helveticaBoldDescent","helveticaBoldName","helveticaItalicAscent","helveticaItalicDescent","helveticaItalicName","arialWidth","helveticaAscent","helveticaDescent","helveticaName","courierBoldItalicAscent","courierBoldItalicDescent","courierBoldItalicName","fixedWidth","courierBoldAscent","courierBoldDescent","courierBoldName","courierItalicAscent","courierItalicDescent","courierItalicName","courierAscent","courierDescent","courierName","timesBoldItalicAscent","timesBoldItalicDescent","timesBoldItalicName","timesRomanBoldItalicWidths","timesBoldAscent","timesBoldDescent","timesBoldName","timesRomanBoldWidth","timesItalicAscent","timesItalicDescent","timesItalicName","timesRomanItalicWidth","timesAscent","timesDescent","timesName","timesRomanWidth","symbolAscent","symbolDescent","symbolName","symbolWidth","zapfDingbatsAscent","zapfDingbatsDescent","zapfDingbatsName","zapfDingbatsWidth","fontFamilyPrototype","encodings","pdfFontFamily","checkStyle","initializeInternals","convert","getCharWidthInternal","equal","stFont","fontFamilyEqual","lineReducer","styleEqual","WinAnsiEncoding","charOffset","PdfAnnotation","textBrush","textFont","internalColor","darkness","nativeRectangle","initialHeight","tempLoacation","PdfLinkAnnotation","PdfActionLinkAnnotation","pdfAction","getSetAction","PdfDocumentLinkAnnotation","pdfDestination","ElementLayouter","layoutElement","getElement","param","layoutInternal","Layouter","PdfLayoutFormat","baseFormat","break","paginateBounds","boundsSet","usePaginateBounds","layoutType","layoutPaginateBounds","PdfLayoutParams","layoutFormat","PdfLayoutResult","PdfLayoutElement","beginPageLayout","endPageLayout","onBeginPageLayout","onEndPageLayout","bEmbedFonts","PdfLayoutType","PdfLayoutBreakType","TextLayouter","currentBounds","pageResult","TextPageLayoutResult","remainder","layoutOnPage","getLayoutResult","PdfTextLayoutResult","lastLineBounds","checkCorrectBounds","stringResult","textFinished","FitElement","PdfTextWebLink","getTextPageBounds","verticalShift","remainderText","lastLineTextBounds","PdfTextElement","elementValue","hasPointOverload","isPdfTextElement","drawText","stringLayoutResult","previousPosition","calculateResultBounds","lineSize","maximumWidth","startPosition","PdfUriAnnotation","pdfUriAction","uriAction","uniformResourceLocator","uriAnnotation","recalculateBounds","defaultBorder","previousFontStyle","calculateBounds","url","drawMultipleLineWithPoint","drawMultipleLineWithBounds","PdfNumbersConvertor","intArabic","numberStyle","Numeric","LowerLatin","arabicToLetter","toLowerCase","LowerRoman","arabicToRoman","UpperLatin","UpperRoman","retval","generateNumber","arabic","stack","convertToLetter","appendChar","magnitude","numberstring","letterLimit","acsiiStartIndex","PdfTemplateValuePair","pdfTemplate","PdfMultipleValueField","drawLocation","PdfPageNumberField","internalNumberStyle","internalGetValue","PdfCompositeField","arguments","internalText","automaticField","PdfSingleValueField","painterGraphics","PdfPageCountField","PdfDestinationMode","PdfDestination","destinationMode","Location","zoomFactor","destinationLocation","initializePrimitive","simplePage","FitToPage","PdfTrueTypeFont","createFontInternal","getUnicodeLineWidth","codeWidth","calculateStyle","iStyle","equalFont","enableCache","isEmbed","isUnicodeFont","glyphIndices","resultGlyph","PdfPageTemplateElement","InitiateBounds","dockStyle","resetAlignment","alignmentStyle","setAlignment","isForeground","currentLocation","templateType","updateDocking","dock","canBeSet","TopLeft","MiddleLeft","BottomLeft","TopCenter","TopRight","MiddleRight","BottomRight","BottomCenter","MiddleCenter","getAlignmentBounds","getDockBounds","getSimpleAlignmentBounds","getTemplateAlignmentBounds","actualBounds","getSimpleDockBounds","getTemplateDockBounds","PdfBorders","defaultBorderPenLeft","dashStyle","defaultBorderPenRight","defaultBorderPenTop","defaultBorderPenBottom","leftPen","rightPen","topPen","bottomPen","PdfPaddings","hasLeftPad","hasRightPad","hasTopPad","hasBottomPad","leftPad","rightPad","bottomPad","topPad","PdfBorderOverlapStyle","PdfGridStyleBase","gridBackgroundBrush","gridTextBrush","gridTextPen","gridFont","gridBackgroundImage","PdfGridStyle","gridBorderOverlapStyle","Overlap","bAllowHorizontalOverflow","gridHorizontalOverflowType","PdfHorizontalOverflowType","LastPage","gridCellSpacing","gridCellPadding","PdfGridCellStyle","gridCellBorders","default","PdfGridRowStyle","gridRowBackgroundBrush","setBackgroundBrush","cells","getCell","backgroundBrush","gridRowTextBrush","setTextBrush","gridRowTextPen","setTextPen","textPen","gridRowFont","gridRowBorder","setBorder","borders","setParent","gridRowBackgroundImage","PdfGridCell","row","cellWidth","cellHeight","tempval","fontSpilt","finsh","rowSpanRemainingHeight","hasRowSpan","hasColSpan","isFinish","gridRowSpan","colSpan","gridRow","internalIsCellMergeContinue","internalIsRowMergeContinue","internalIsCellMergeStart","internalIsRowMergeStart","remaining","objectValue","PdfGrid","grid","isSingleGrid","ParentCell","isChildGrid","rowCount","rows","getRow","colCount","rowSpanExists","hasRowSpanSpan","cellStyle","measureHeight","columnSpanExists","isComplete","measureWidth","layouter","getTextFont","webLink","cellPadding","cellSpacing","drawCellBackground","getBackgroundBrush","backgroundImage","getBackgroundImage","adjustContentLayoutArea","returnBounds","rowSpan","cancelSubsequentSpans","allowHorizontalOverflow","rowOverflowIndex","adjustOuterLayoutArea","getTextPen","getTextBrush","strFormat","getStringFormat","innerLayoutArea","allowRowBreakAcrossPages","splitChildRowIndex","rowFontSplit","repeatFlag","childGrid","layoutRect","PdfGridLayouter","PdfGridLayoutFormat","LayoutFormat","Paginate","setSpan","checkSpan","childGridResult","rowBreakHeightValue","rowBreakHeight","NestedGridLayoutResult","imageBounds","drawCellBorders","borderOverlapStyle","Inside","p1","p2","Square","isHeader","currentColIndex","columnSpan","isCellMergeContinue","span","totalWidth","compWidth","getColumn","currentRowIndex","rowCollection","headers","totalHeight","getHeader","rowMergeComplete","calculateWidth","currentValue","cellIndex","internalWidth","tempWidth","PdfGridCellCollection","cell","tempcell","PdfGridColumn","columnWidth","isCustomWidth","PdfGridColumnCollection","internalColumns","measureColumnsWidth","initialWidth","isPageWidth","getDefaultWidths","subFactor","PdfGridRow","gridRowOverflowIndex","rowHeight","rowWidth","isrowFinish","isRowSpanRowHeightSet","noOfPageCount","isRowHeightSet","isPageBreakRowSpanApplied","isRowMergeComplete","pdfGrid","bRowSpanExists","gridCells","rowStyle","border","gridRowBreakHeight","gridResult","bColumnSpanExists","cellIn","rowin","rowWid","PdfGridRowCollection","addRow","temprow","PdfGridHeaderCollection","gridSize","isGridSplit","isRearranged","pageBounds","listOfNavigatePages","parentCellIndex","breakRow","hasColumnSpan","beginCellDraw","endCellDraw","bRepeatHeader","gridColumns","gridRows","gridHeaders","gridInitialWidth","gridStyle","ispageWidth","ischildGrid","measure","parentCell","onBeginCellDraw","raiseBeginCellDraw","onEndCellDraw","raiseEndCellDraw","gridLocation","currentCellIndex","maxSpan","isRowMergeContinue","isCellMergeStart","isRowMergeStart","maximumRowSpan","cellcolSpan","cellrowSpan","cellmaxSpan","padding","columnCount","childGridColumnWidth","colCount_1","colCount_2","RowCount","ColCount","colWidth","childGridColWidth","childheight","flag","columnRanges","getFormat","gridLayoutFormat","currentPageBounds","currentGraphics","FitColumnsToPage","Grid","startLocation","hType","horizontalOverflowType","determineColumnDrawRanges","startColumn","endColumn","cellWidths","availableWidth","subWidths","layoutedPages","startPage","cellBounds","range","cellStartIndex","cellEndIndex","returnObject","raiseBeforePageLayout","drawRow","repeatRow","originalHeight","repeatRowIndex","rowResult","rowIndex","tempResult","raisePageLayouted","cancel","getNextPageformat","isRowBreaksNextPage","i_2","repeatHeader","j_1","headerRepeat","j_2","tempResult1","i_3","i_4","OnePage","i_5","recalHeight","ReCalculateHeight","secion","startIndex","endIndex","pageGraphics","location_2","totalwidth","i_6","isPdfGrid","maximumCellBoundsWidth","largeNavigatePage","rowLayoutBoundsWidth","NextPage","reArrangePages","nextPage","pageindex","CheckIfDefaultFormat","defaultFormat","measureTrailingSpaces","noClip","RaiseBeforeCellDraw","PdfGridBeginCellDrawEventArgs","raiseAfterCellDraw","cellstyle","PdfGridEndCellDrawEventArgs","count_1","isChanged","PdfGridLayoutResult","newHeight","currentRow","raiseBeginPageLayout","PdfGridBeginPageLayoutEventArgs","startRowIndex","PdfGridEndPageLayoutEventArgs","raiseEndPageLayout","result_1","RowLayoutResult","rowHeightWithSpan","currRowIndex","calculatedHeight","FitPage","drawRowWithBreak","repeatRowNumber","location_4","cancelSpans","tempValue","calculateHeight","gridHeight","cellstyle1","FinishedDrawingCell","rowBreakPageHeightCellIndex","GridCellEventArgs","gridRowIndex","gridCellIndex","gridBounds","bSkip","PdfCancelEventArgs","isCancel","BeginPageLayoutEventArgs","EndPageLayoutEventArgs","nextPdfPage","startRow","layoutedBounds","bIsFinished"],"mappings":"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C5CR,KAAKk8C,yBAAyB17C,SAAS,IAAK,KAC5CR,KAAKk8C,yBAAyB17C,SAAS,IAAK,KAC5CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,OAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,OAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,OAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,OAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,OAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,OAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAE7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,KAAM,MAC7CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,MAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,MAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,MAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,MAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,MAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,MAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,MAC9CR,KAAKk8C,yBAAyB17C,SAAS,KAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB17C,SAAS,MAAO,OAC9CR,KAAKk8C,yBAAyB1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AAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAM/E5B,EAA8BqD,iBAC1B,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,EAAG,IAAK,EAAG,IAAK,IAAK,IAAK,IAAM,IAAK,IAAK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AK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,KAAM,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAClE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,GAMxCzD,EAA8B6D,mBAC1B,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,IAAK,IAAK,IAClE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAA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"}