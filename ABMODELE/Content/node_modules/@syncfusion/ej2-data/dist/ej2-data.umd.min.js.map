{"version":3,"file":"ej2-data.umd.min.js","sources":["../src/query.js","../src/util.js","../src/adaptors.js","../src/manager.js"],"sourcesContent":["import { DataUtil } from './util';\n/**\n * Query class is used to build query which is used by the DataManager to communicate with datasource.\n */\nvar Query = /** @class */ (function () {\n    /**\n     * Constructor for Query class.\n     * @param  {string|string[]} from?\n     * @hidden\n     */\n    function Query(from) {\n        /** @hidden */\n        this.subQuery = null;\n        /** @hidden */\n        this.isChild = false;\n        /** @hidden */\n        this.distincts = [];\n        this.queries = [];\n        this.key = '';\n        this.fKey = '';\n        if (typeof from === 'string') {\n            this.fromTable = from;\n        }\n        else if (from && from instanceof Array) {\n            this.lookups = from;\n        }\n        this.expands = [];\n        this.sortedColumns = [];\n        this.groupedColumns = [];\n        this.subQuery = null;\n        this.isChild = false;\n        this.params = [];\n        return this;\n    }\n    /**\n     * Sets the primary key.\n     * @param  {string} field - Defines the column field.\n     */\n    Query.prototype.setKey = function (field) {\n        this.key = field;\n        return this;\n    };\n    /**\n     * Sets default DataManager to execute query.\n     * @param  {DataManager} dataManager - Defines the DataManager.\n     */\n    Query.prototype.using = function (dataManager) {\n        this.dataManager = dataManager;\n        return this;\n    };\n    /**\n     * Executes query with the given DataManager.\n     * @param  {DataManager} dataManager - Defines the DataManager.\n     * @param  {Function} done - Defines the success callback.\n     * @param  {Function} fail - Defines the failure callback.\n     * @param  {Function} always - Defines the callback which will be invoked on either success or failure.\n     *\n     * <pre>\n     * let dataManager: DataManager = new DataManager([{ ID: '10' }, { ID: '2' }, { ID: '1' }, { ID: '20' }]);\n     * let query: Query = new Query();\n     * query.sortBy('ID', (x: string, y: string): number => { return parseInt(x, 10) - parseInt(y, 10) });\n     * let promise: Promise< Object > = query.execute(dataManager);\n     * promise.then((e: { result: Object }) => { });\n     * </pre>\n     */\n    Query.prototype.execute = function (dataManager, done, fail, always) {\n        dataManager = dataManager || this.dataManager;\n        if (dataManager) {\n            return dataManager.executeQuery(this, done, fail, always);\n        }\n        return DataUtil.throwError('Query - execute() : dataManager needs to be is set using \"using\" function or should be passed as argument');\n    };\n    /**\n     * Executes query with the local datasource.\n     * @param  {DataManager} dataManager - Defines the DataManager.\n     */\n    Query.prototype.executeLocal = function (dataManager) {\n        dataManager = dataManager || this.dataManager;\n        if (dataManager) {\n            return dataManager.executeLocal(this);\n        }\n        return DataUtil.throwError('Query - executeLocal() : dataManager needs to be is set using \"using\" function or should be passed as argument');\n    };\n    /**\n     * Creates deep copy of the Query object.\n     */\n    Query.prototype.clone = function () {\n        var cloned = new Query();\n        cloned.queries = this.queries.slice(0);\n        cloned.key = this.key;\n        cloned.isChild = this.isChild;\n        cloned.dataManager = this.dataManager;\n        cloned.fromTable = this.fromTable;\n        cloned.params = this.params.slice(0);\n        cloned.expands = this.expands.slice(0);\n        cloned.sortedColumns = this.sortedColumns.slice(0);\n        cloned.groupedColumns = this.groupedColumns.slice(0);\n        cloned.subQuerySelector = this.subQuerySelector;\n        cloned.subQuery = this.subQuery;\n        cloned.fKey = this.fKey;\n        cloned.isCountRequired = this.isCountRequired;\n        cloned.distincts = this.distincts.slice(0);\n        return cloned;\n    };\n    /**\n     * Specifies the name of table to retrieve data in query execution.\n     * @param  {string} tableName - Defines the table name.\n     */\n    Query.prototype.from = function (tableName) {\n        this.fromTable = tableName;\n        return this;\n    };\n    /**\n     * Adds additional parameter which will be sent along with the request which will be generated while DataManager execute.\n     * @param  {string} key - Defines the key of additional parameter.\n     * @param  {Function|string} value - Defines the value for the key.\n     */\n    Query.prototype.addParams = function (key, value) {\n        if (typeof value === 'function') {\n            this.params.push({ key: key, fn: value });\n        }\n        else {\n            this.params.push({ key: key, value: value });\n        }\n        return this;\n    };\n    /**\n     * @hidden\n     */\n    Query.prototype.distinct = function (fields) {\n        if (typeof fields === 'string') {\n            this.distincts = [].slice.call([fields], 0);\n        }\n        else {\n            this.distincts = fields.slice(0);\n        }\n        return this;\n    };\n    /**\n     * Expands the related table.\n     * @param  {string|Object[]} tables\n     */\n    Query.prototype.expand = function (tables) {\n        if (typeof tables === 'string') {\n            this.expands = [].slice.call([tables], 0);\n        }\n        else {\n            this.expands = tables.slice(0);\n        }\n        return this;\n    };\n    /**\n     * Filter data with given filter criteria.\n     * @param  {string|Predicate} fieldName - Defines the column field or Predicate.\n     * @param  {string} operator - Defines the operator how to filter data.\n     * @param  {string|number|boolean} value - Defines the values to match with data.\n     * @param  {boolean} ignoreCase - If ignore case set to false, then filter data with exact match or else\n     * filter data with case insensitive.\n     */\n    Query.prototype.where = function (fieldName, operator, value, ignoreCase, ignoreAccent) {\n        operator = operator ? (operator).toLowerCase() : null;\n        var predicate = null;\n        if (typeof fieldName === 'string') {\n            predicate = new Predicate(fieldName, operator, value, ignoreCase, ignoreAccent);\n        }\n        else if (fieldName instanceof Predicate) {\n            predicate = fieldName;\n        }\n        this.queries.push({\n            fn: 'onWhere',\n            e: predicate\n        });\n        return this;\n    };\n    /**\n     * Search data with given search criteria.\n     * @param  {string|number|boolean} searchKey - Defines the search key.\n     * @param  {string|string[]} fieldNames - Defines the collection of column fields.\n     * @param  {string} operator - Defines the operator how to search data.\n     * @param  {boolean} ignoreCase - If ignore case set to false, then filter data with exact match or else\n     * filter data with case insensitive.\n     */\n    Query.prototype.search = function (searchKey, fieldNames, operator, ignoreCase, ignoreAccent) {\n        if (typeof fieldNames === 'string') {\n            fieldNames = [fieldNames];\n        }\n        operator = operator || 'contains';\n        var comparer = DataUtil.fnOperators[operator];\n        this.queries.push({\n            fn: 'onSearch',\n            e: {\n                fieldNames: fieldNames,\n                operator: operator,\n                searchKey: searchKey,\n                ignoreCase: ignoreCase,\n                ignoreAccent: ignoreAccent,\n                comparer: comparer\n            }\n        });\n        return this;\n    };\n    /**\n     * Sort the data with given sort criteria.\n     * By default, sort direction is ascending.\n     * @param  {string|string[]} fieldName - Defines the single or collection of column fields.\n     * @param  {string|Function} comparer - Defines the sort direction or custom sort comparer function.\n     */\n    Query.prototype.sortBy = function (fieldName, comparer, isFromGroup) {\n        var order = 'ascending';\n        var sorts;\n        var temp;\n        if (typeof fieldName === 'string' && DataUtil.endsWith(fieldName.toLowerCase(), ' desc')) {\n            fieldName = fieldName.replace(/ desc$/i, '');\n            comparer = 'descending';\n        }\n        if (!comparer || typeof comparer === 'string') {\n            order = comparer ? comparer.toLowerCase() : 'ascending';\n            comparer = DataUtil.fnSort(comparer);\n        }\n        if (isFromGroup) {\n            sorts = Query.filterQueries(this.queries, 'onSortBy');\n            for (var i = 0; i < sorts.length; i++) {\n                temp = sorts[i].e.fieldName;\n                if (typeof temp === 'string') {\n                    if (temp === fieldName) {\n                        return this;\n                    }\n                }\n                else if (temp instanceof Array) {\n                    for (var j = 0; j < temp.length; j++) {\n                        if (temp[j] === fieldName || fieldName.toLowerCase() === temp[j] + ' desc') {\n                            return this;\n                        }\n                    }\n                }\n            }\n        }\n        this.queries.push({\n            fn: 'onSortBy',\n            e: {\n                fieldName: fieldName,\n                comparer: comparer,\n                direction: order\n            }\n        });\n        return this;\n    };\n    /**\n     * Sorts data in descending order.\n     * @param  {string} fieldName - Defines the column field.\n     */\n    Query.prototype.sortByDesc = function (fieldName) {\n        return this.sortBy(fieldName, 'descending');\n    };\n    /**\n     * Groups data with the given field name.\n     * @param  {string} fieldName - Defines the column field.\n     */\n    Query.prototype.group = function (fieldName, fn, format) {\n        this.sortBy(fieldName, null, true);\n        this.queries.push({\n            fn: 'onGroup',\n            e: {\n                fieldName: fieldName,\n                comparer: fn ? fn : null,\n                format: format ? format : null\n            }\n        });\n        return this;\n    };\n    /**\n     * Gets data based on the given page index and size.\n     * @param  {number} pageIndex - Defines the current page index.\n     * @param  {number} pageSize - Defines the no of records per page.\n     */\n    Query.prototype.page = function (pageIndex, pageSize) {\n        this.queries.push({\n            fn: 'onPage',\n            e: {\n                pageIndex: pageIndex,\n                pageSize: pageSize\n            }\n        });\n        return this;\n    };\n    /**\n     * Gets data based on the given start and end index.\n     * @param  {number} start - Defines the start index of the datasource.\n     * @param  {number} end - Defines the end index of the datasource.\n     */\n    Query.prototype.range = function (start, end) {\n        this.queries.push({\n            fn: 'onRange',\n            e: {\n                start: start,\n                end: end\n            }\n        });\n        return this;\n    };\n    /**\n     * Gets data from the top of the data source based on given number of records count.\n     * @param  {number} nos - Defines the no of records to retrieve from datasource.\n     */\n    Query.prototype.take = function (nos) {\n        this.queries.push({\n            fn: 'onTake',\n            e: {\n                nos: nos\n            }\n        });\n        return this;\n    };\n    /**\n     * Skips data with given number of records count from the top of the data source.\n     * @param  {number} nos - Defines the no of records skip in the datasource.\n     */\n    Query.prototype.skip = function (nos) {\n        this.queries.push({\n            fn: 'onSkip',\n            e: { nos: nos }\n        });\n        return this;\n    };\n    /**\n     * Selects specified columns from the data source.\n     * @param  {string|string[]} fieldNames - Defines the collection of column fields.\n     */\n    Query.prototype.select = function (fieldNames) {\n        if (typeof fieldNames === 'string') {\n            fieldNames = [].slice.call([fieldNames], 0);\n        }\n        this.queries.push({\n            fn: 'onSelect',\n            e: { fieldNames: fieldNames }\n        });\n        return this;\n    };\n    /**\n     * Gets the records in hierarchical relationship from two tables. It requires the foreign key to relate two tables.\n     * @param  {Query} query - Defines the query to relate two tables.\n     * @param  {Function} selectorFn - Defines the custom function to select records.\n     */\n    Query.prototype.hierarchy = function (query, selectorFn) {\n        this.subQuerySelector = selectorFn;\n        this.subQuery = query;\n        return this;\n    };\n    /**\n     * Sets the foreign key which is used to get data from the related table.\n     * @param  {string} key - Defines the foreign key.\n     */\n    Query.prototype.foreignKey = function (key) {\n        this.fKey = key;\n        return this;\n    };\n    /**\n     * It is used to get total number of records in the DataManager execution result.\n     */\n    Query.prototype.requiresCount = function () {\n        this.isCountRequired = true;\n        return this;\n    };\n    //type - sum, avg, min, max\n    /**\n     * Aggregate the data with given type and field name.\n     * @param  {string} type - Defines the aggregate type.\n     * @param  {string} field - Defines the column field to aggregate.\n     */\n    Query.prototype.aggregate = function (type, field) {\n        this.queries.push({\n            fn: 'onAggregates',\n            e: { field: field, type: type }\n        });\n        return this;\n    };\n    /**\n     * Pass array of filterColumn query for performing filter operation.\n     * @param  {QueryOptions[]} queries\n     * @param  {string} name\n     * @hidden\n     */\n    Query.filterQueries = function (queries, name) {\n        return queries.filter(function (q) {\n            return q.fn === name;\n        });\n    };\n    /**\n     * To get the list of queries which is already filtered in current data source.\n     * @param  {Object[]} queries\n     * @param  {string[]} singles\n     * @hidden\n     */\n    Query.filterQueryLists = function (queries, singles) {\n        var filtered = queries.filter(function (q) {\n            return singles.indexOf(q.fn) !== -1;\n        });\n        var res = {};\n        for (var i = 0; i < filtered.length; i++) {\n            if (!res[filtered[i].fn]) {\n                res[filtered[i].fn] = filtered[i].e;\n            }\n        }\n        return res;\n    };\n    return Query;\n}());\nexport { Query };\n/**\n * Predicate class is used to generate complex filter criteria.\n * This will be used by DataManager to perform multiple filtering operation.\n */\nvar Predicate = /** @class */ (function () {\n    /**\n     * Constructor for Predicate class.\n     * @param  {string|Predicate} field\n     * @param  {string} operator\n     * @param  {string|number|boolean|Predicate|Predicate[]} value\n     * @param  {boolean=false} ignoreCase\n     * @hidden\n     */\n    function Predicate(field, operator, value, ignoreCase, ignoreAccent) {\n        if (ignoreCase === void 0) { ignoreCase = false; }\n        /** @hidden */\n        this.ignoreAccent = false;\n        /** @hidden */\n        this.isComplex = false;\n        if (typeof field === 'string') {\n            this.field = field;\n            this.operator = operator.toLowerCase();\n            this.value = value;\n            this.ignoreCase = ignoreCase;\n            this.ignoreAccent = ignoreAccent;\n            this.isComplex = false;\n            this.comparer = DataUtil.fnOperators.processOperator(this.operator);\n        }\n        else if (field instanceof Predicate && value instanceof Predicate || value instanceof Array) {\n            this.isComplex = true;\n            this.condition = operator.toLowerCase();\n            this.predicates = [field];\n            if (value instanceof Array) {\n                [].push.apply(this.predicates, value);\n            }\n            else {\n                this.predicates.push(value);\n            }\n        }\n        return this;\n    }\n    /**\n     * Adds n-number of new predicates on existing predicate with “and” condition.\n     * @param  {Object[]} args - Defines the collection of predicates.\n     */\n    Predicate.and = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return Predicate.combinePredicates([].slice.call(args, 0), 'and');\n    };\n    /**\n     * Adds new predicate on existing predicate with “and” condition.\n     * @param  {string} field - Defines the column field.\n     * @param  {string} operator - Defines the operator how to filter data.\n     * @param  {string} value - Defines the values to match with data.\n     * @param  {boolean} ignoreCase? - If ignore case set to false, then filter data with exact match or else\n     * filter data with case insensitive.\n     */\n    Predicate.prototype.and = function (field, operator, value, ignoreCase, ignoreAccent) {\n        return Predicate.combine(this, field, operator, value, 'and', ignoreCase, ignoreAccent);\n    };\n    /**\n     * Adds n-number of new predicates on existing predicate with “or” condition.\n     * @param  {Object[]} args - Defines the collection of predicates.\n     */\n    Predicate.or = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return Predicate.combinePredicates([].slice.call(args, 0), 'or');\n    };\n    /**\n     * Adds new predicate on existing predicate with “or” condition.\n     * @param  {string} field - Defines the column field.\n     * @param  {string} operator - Defines the operator how to filter data.\n     * @param  {string} value - Defines the values to match with data.\n     * @param  {boolean} ignoreCase? - If ignore case set to false, then filter data with exact match or else\n     * filter data with case insensitive.\n     */\n    Predicate.prototype.or = function (field, operator, value, ignoreCase, ignoreAccent) {\n        return Predicate.combine(this, field, operator, value, 'or', ignoreCase, ignoreAccent);\n    };\n    /**\n     * Converts plain JavaScript object to Predicate object.\n     * @param  {Predicate[]|Predicate} json - Defines single or collection of Predicate.\n     */\n    Predicate.fromJson = function (json) {\n        if (json instanceof Array) {\n            var res = [];\n            for (var i = 0, len = json.length; i < len; i++) {\n                res.push(this.fromJSONData(json[i]));\n            }\n            return res;\n        }\n        var pred = json;\n        return this.fromJSONData(pred);\n    };\n    /**\n     * Validate the record based on the predicates.\n     * @param  {Object} record - Defines the datasource record.\n     */\n    Predicate.prototype.validate = function (record) {\n        var predicate = this.predicates ? this.predicates : [];\n        var isAnd;\n        var ret;\n        if (!this.isComplex && this.comparer) {\n            return this.comparer.call(this, DataUtil.getObject(this.field, record), this.value, this.ignoreCase, this.ignoreAccent);\n        }\n        isAnd = this.condition === 'and';\n        for (var i = 0; i < predicate.length; i++) {\n            ret = predicate[i].validate(record);\n            if (isAnd) {\n                if (!ret) {\n                    return false;\n                }\n            }\n            else {\n                if (ret) {\n                    return true;\n                }\n            }\n        }\n        return isAnd;\n    };\n    /**\n     * Converts predicates to plain JavaScript.\n     * This method is uses Json stringify when serializing Predicate object.\n     */\n    Predicate.prototype.toJson = function () {\n        var predicates;\n        var p;\n        if (this.isComplex) {\n            predicates = [];\n            p = this.predicates;\n            for (var i = 0; i < p.length; i++) {\n                predicates.push(p[i].toJson());\n            }\n        }\n        return {\n            isComplex: this.isComplex,\n            field: this.field,\n            operator: this.operator,\n            value: this.value,\n            ignoreCase: this.ignoreCase,\n            ignoreAccent: this.ignoreAccent,\n            condition: this.condition,\n            predicates: predicates\n        };\n    };\n    Predicate.combinePredicates = function (predicates, operator) {\n        if (predicates.length === 1) {\n            if (!(predicates[0] instanceof Array)) {\n                return predicates[0];\n            }\n            predicates = predicates[0];\n        }\n        return new Predicate(predicates[0], operator, predicates.slice(1));\n    };\n    Predicate.combine = function (pred, field, operator, value, condition, ignoreCase, ignoreAccent) {\n        if (field instanceof Predicate) {\n            return Predicate[condition](pred, field);\n        }\n        if (typeof field === 'string') {\n            return Predicate[condition](pred, new Predicate(field, operator, value, ignoreCase, ignoreAccent));\n        }\n        return DataUtil.throwError('Predicate - ' + condition + ' : invalid arguments');\n    };\n    Predicate.fromJSONData = function (json) {\n        var preds = json.predicates || [];\n        var len = preds.length;\n        var predicates = [];\n        var result;\n        for (var i = 0; i < len; i++) {\n            predicates.push(this.fromJSONData(preds[i]));\n        }\n        if (!json.isComplex) {\n            result = new Predicate(json.field, json.operator, json.value, json.ignoreCase, json.ignoreAccent);\n        }\n        else {\n            result = new Predicate(predicates[0], json.condition, predicates.slice(1));\n        }\n        return result;\n    };\n    return Predicate;\n}());\nexport { Predicate };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from './manager';\nimport { Query } from './query';\nvar consts = { GroupGuid: '{271bbba0-1ee7}' };\n/**\n * Data manager common utility methods.\n * @hidden\n */\nvar DataUtil = /** @class */ (function () {\n    function DataUtil() {\n    }\n    /**\n     * Returns the value by invoking the provided parameter function.\n     * If the paramater is not of type function then it will be returned as it is.\n     * @param  {Function|string|string[]|number} value\n     * @param  {Object} inst?\n     * @hidden\n     */\n    DataUtil.getValue = function (value, inst) {\n        if (typeof value === 'function') {\n            return value.call(inst || {});\n        }\n        return value;\n    };\n    /**\n     * Returns true if the input string ends with given string.\n     * @param  {string} input\n     * @param  {string} substr\n     */\n    DataUtil.endsWith = function (input, substr) {\n        return input.slice(-substr.length) === substr;\n    };\n    /**\n     * Returns true if the input string starts with given string.\n     * @param  {string} str\n     * @param  {string} startstr\n     */\n    DataUtil.startsWith = function (input, start) {\n        return input.slice(0, start.length) === start;\n    };\n    /**\n     * To return the sorting function based on the string.\n     * @param  {string} order\n     * @hidden\n     */\n    DataUtil.fnSort = function (order) {\n        order = order ? DataUtil.toLowerCase(order) : 'ascending';\n        if (order === 'ascending') {\n            return this.fnAscending;\n        }\n        return this.fnDescending;\n    };\n    /**\n     * Comparer function which is used to sort the data in ascending order.\n     * @param  {string|number} x\n     * @param  {string|number} y\n     * @returns number\n     */\n    DataUtil.fnAscending = function (x, y) {\n        if (y === null || y === undefined) {\n            return -1;\n        }\n        if (typeof x === 'string') {\n            return x.localeCompare(y);\n        }\n        if (x === null || x === undefined) {\n            return 1;\n        }\n        return x - y;\n    };\n    /**\n     * Comparer function which is used to sort the data in descending order.\n     * @param  {string|number} x\n     * @param  {string|number} y\n     * @returns number\n     */\n    DataUtil.fnDescending = function (x, y) {\n        if (y === null || y === undefined) {\n            return 1;\n        }\n        if (typeof x === 'string') {\n            return x.localeCompare(y) * -1;\n        }\n        if (x === null || x === undefined) {\n            return -1;\n        }\n        return y - x;\n    };\n    DataUtil.extractFields = function (obj, fields) {\n        var newObj = {};\n        for (var i = 0; i < fields.length; i++) {\n            newObj = this.setValue(fields[i], this.getObject(fields[i], obj), newObj);\n        }\n        return newObj;\n    };\n    /**\n     * Select objects by given fields from jsonArray.\n     * @param  {Object[]} jsonArray\n     * @param  {string[]} fields\n     */\n    DataUtil.select = function (jsonArray, fields) {\n        var newData = [];\n        for (var i = 0; i < jsonArray.length; i++) {\n            newData.push(this.extractFields(jsonArray[i], fields));\n        }\n        return newData;\n    };\n    /**\n     * Group the input data based on the field name.\n     * It also performs aggregation of the grouped records based on the aggregates paramater.\n     * @param  {Object[]} jsonArray\n     * @param  {string} field?\n     * @param  {Object[]} agg?\n     * @param  {number} level?\n     * @param  {Object[]} groupDs?\n     */\n    DataUtil.group = function (jsonArray, field, aggregates, level, groupDs, format) {\n        level = level || 1;\n        var jsonData = jsonArray;\n        var guid = 'GroupGuid';\n        if (jsonData.GroupGuid === consts[guid]) {\n            var _loop_1 = function (j) {\n                if (!isNullOrUndefined(groupDs)) {\n                    var indx = -1;\n                    var temp = groupDs.filter(function (e) { return e.key === jsonData[j].key; });\n                    indx = groupDs.indexOf(temp[0]);\n                    jsonData[j].items = this_1.group(jsonData[j].items, field, aggregates, jsonData.level + 1, groupDs[indx].items, format);\n                    jsonData[j].count = groupDs[indx].count;\n                }\n                else {\n                    jsonData[j].items = this_1.group(jsonData[j].items, field, aggregates, jsonData.level + 1, null, format);\n                    jsonData[j].count = jsonData[j].items.length;\n                }\n            };\n            var this_1 = this;\n            for (var j = 0; j < jsonData.length; j++) {\n                _loop_1(j);\n            }\n            jsonData.childLevels += 1;\n            return jsonData;\n        }\n        var grouped = {};\n        var groupedArray = [];\n        groupedArray.GroupGuid = consts[guid];\n        groupedArray.level = level;\n        groupedArray.childLevels = 0;\n        groupedArray.records = jsonData;\n        var _loop_2 = function (i) {\n            var val = this_2.getVal(jsonData, i, field);\n            if (!isNullOrUndefined(format)) {\n                val = format(val, field);\n            }\n            if (!grouped[val]) {\n                grouped[val] = {\n                    key: val,\n                    count: 0,\n                    items: [],\n                    aggregates: {},\n                    field: field\n                };\n                groupedArray.push(grouped[val]);\n                if (!isNullOrUndefined(groupDs)) {\n                    var tempObj = groupDs.filter(function (e) { return e.key === grouped[val].key; });\n                    grouped[val].count = tempObj[0].count;\n                }\n            }\n            grouped[val].count = !isNullOrUndefined(groupDs) ? grouped[val].count : grouped[val].count += 1;\n            grouped[val].items.push(jsonData[i]);\n        };\n        var this_2 = this;\n        for (var i = 0; i < jsonData.length; i++) {\n            _loop_2(i);\n        }\n        if (aggregates && aggregates.length) {\n            var _loop_3 = function (i) {\n                var res = {};\n                var fn = void 0;\n                var aggs = aggregates;\n                for (var j = 0; j < aggregates.length; j++) {\n                    fn = DataUtil.aggregates[aggregates[j].type];\n                    if (!isNullOrUndefined(groupDs)) {\n                        var temp = groupDs.filter(function (e) { return e.key === groupedArray[i].key; });\n                        if (fn) {\n                            res[aggs[j].field + ' - ' + aggs[j].type] = fn(temp[0].items, aggs[j].field);\n                        }\n                    }\n                    else {\n                        if (fn) {\n                            res[aggs[j].field + ' - ' + aggs[j].type] = fn(groupedArray[i].items, aggs[j].field);\n                        }\n                    }\n                }\n                groupedArray[i].aggregates = res;\n            };\n            for (var i = 0; i < groupedArray.length; i++) {\n                _loop_3(i);\n            }\n        }\n        return jsonData.length && groupedArray || jsonData;\n    };\n    /**\n     * It is used to categorize the multiple items based on a specific field in jsonArray.\n     * The hierarchical queries are commonly required when you use foreign key binding.\n     * @param  {string} fKey\n     * @param  {string} from\n     * @param  {Object[]} source\n     * @param  {Group} lookup?\n     * @param  {string} pKey?\n     * @hidden\n     */\n    DataUtil.buildHierarchy = function (fKey, from, source, lookup, pKey) {\n        var i;\n        var grp = {};\n        var temp;\n        if (lookup.result) {\n            lookup = lookup.result;\n        }\n        if (lookup.GroupGuid) {\n            this.throwError('DataManager: Do not have support Grouping in hierarchy');\n        }\n        for (i = 0; i < lookup.length; i++) {\n            var fKeyData = this.getObject(fKey, lookup[i]);\n            temp = grp[fKeyData] || (grp[fKeyData] = []);\n            temp.push(lookup[i]);\n        }\n        for (i = 0; i < source.length; i++) {\n            var fKeyData = this.getObject(pKey || fKey, source[i]);\n            source[i][from] = grp[fKeyData];\n        }\n    };\n    /**\n     * The method used to get the field names which started with specified characters.\n     * @param  {Object} obj\n     * @param  {string[]} fields?\n     * @param  {string} prefix?\n     * @hidden\n     */\n    DataUtil.getFieldList = function (obj, fields, prefix) {\n        if (prefix === undefined) {\n            prefix = '';\n        }\n        if (fields === undefined || fields === null) {\n            return this.getFieldList(obj, [], prefix);\n        }\n        var copyObj = obj;\n        var keys = Object.keys(obj);\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var prop = keys_1[_i];\n            if (typeof copyObj[prop] === 'object' && !(copyObj[prop] instanceof Array)) {\n                this.getFieldList(copyObj[prop], fields, prefix + prop + '.');\n            }\n            else {\n                fields.push(prefix + prop);\n            }\n        }\n        return fields;\n    };\n    /**\n     * Gets the value of the property in the given object.\n     * The complex object can be accessed by providing the field names concatenated with dot(.).\n     * @param  {string} nameSpace - The name of the property to be accessed.\n     * @param  {Object} from - Defines the source object.\n     */\n    DataUtil.getObject = function (nameSpace, from) {\n        if (!nameSpace) {\n            return from;\n        }\n        if (!from) {\n            return undefined;\n        }\n        if (nameSpace.indexOf('.') === -1) {\n            return from[nameSpace];\n        }\n        var value = from;\n        var splits = nameSpace.split('.');\n        for (var i = 0; i < splits.length; i++) {\n            if (value == null) {\n                break;\n            }\n            value = value[splits[i]];\n        }\n        return value;\n    };\n    /**\n     * To set value for the nameSpace in desired object.\n     * @param {string} nameSpace - String value to the get the inner object.\n     * @param {Object} value - Value that you need to set.\n     * @param {Object} obj - Object to get the inner object value.\n     * @return { [key: string]: Object; } | Object\n     * @hidden\n     */\n    DataUtil.setValue = function (nameSpace, value, obj) {\n        var keys = nameSpace.toString().split('.');\n        var start = obj || {};\n        var fromObj = start;\n        var i;\n        var length = keys.length;\n        var key;\n        for (i = 0; i < length; i++) {\n            key = keys[i];\n            if (i + 1 === length) {\n                fromObj[key] = value === undefined ? undefined : value;\n            }\n            else if (isNullOrUndefined(fromObj[key])) {\n                fromObj[key] = {};\n            }\n            fromObj = fromObj[key];\n        }\n        return start;\n    };\n    /**\n     * Sort the given data based on the field and comparer.\n     * @param  {Object[]} ds - Defines the input data.\n     * @param  {string} field - Defines the field to be sorted.\n     * @param  {Function} comparer - Defines the comparer function used to sort the records.\n     */\n    DataUtil.sort = function (ds, field, comparer) {\n        if (ds.length <= 1) {\n            return ds;\n        }\n        var middle = parseInt((ds.length / 2).toString(), 10);\n        var left = ds.slice(0, middle);\n        var right = ds.slice(middle);\n        left = this.sort(left, field, comparer);\n        right = this.sort(right, field, comparer);\n        return this.merge(left, right, field, comparer);\n    };\n    DataUtil.ignoreDiacritics = function (value) {\n        if (typeof value !== 'string') {\n            return value;\n        }\n        var result = value.split('');\n        var newValue = result.map(function (temp) { return temp in DataUtil.diacritics ? DataUtil.diacritics[temp] : temp; });\n        return newValue.join('');\n    };\n    DataUtil.merge = function (left, right, fieldName, comparer) {\n        var result = [];\n        var current;\n        while (left.length > 0 || right.length > 0) {\n            if (left.length > 0 && right.length > 0) {\n                if (comparer) {\n                    current = comparer(this.getVal(left, 0, fieldName), this.getVal(right, 0, fieldName), left[0], right[0]) <= 0 ? left : right;\n                }\n                else {\n                    current = left[0][fieldName] < left[0][fieldName] ? left : right;\n                }\n            }\n            else {\n                current = left.length > 0 ? left : right;\n            }\n            result.push(current.shift());\n        }\n        return result;\n    };\n    DataUtil.getVal = function (array, index, field) {\n        return field ? this.getObject(field, array[index]) : array[index];\n    };\n    DataUtil.toLowerCase = function (val) {\n        return val ? typeof val === 'string' ? val.toLowerCase() : val.toString() : (val === 0 || val === false) ? val.toString() : '';\n    };\n    /**\n     * To perform the filter operation with specified adaptor and returns the result.\n     * @param  {Object} adaptor\n     * @param  {string} fnName\n     * @param  {Object} param1?\n     * @param  {Object} param2?\n     * @hidden\n     */\n    DataUtil.callAdaptorFunction = function (adaptor, fnName, param1, param2) {\n        if (fnName in adaptor) {\n            var res = adaptor[fnName](param1, param2);\n            if (!isNullOrUndefined(res)) {\n                param1 = res;\n            }\n        }\n        return param1;\n    };\n    DataUtil.getAddParams = function (adp, dm, query) {\n        var req = {};\n        DataUtil.callAdaptorFunction(adp, 'addParams', {\n            dm: dm,\n            query: query,\n            params: query.params,\n            reqParams: req\n        });\n        return req;\n    };\n    /**\n     * Checks wheather the given input is a plain object or not.\n     * @param  {Object|Object[]} obj\n     */\n    DataUtil.isPlainObject = function (obj) {\n        return (!!obj) && (obj.constructor === Object);\n    };\n    /**\n     * Returns true when the browser cross origin request.\n     */\n    DataUtil.isCors = function () {\n        var xhr = null;\n        var request = 'XMLHttpRequest';\n        try {\n            xhr = new window[request]();\n        }\n        catch (e) {\n            // No exception handling\n        }\n        return !!xhr && ('withCredentials' in xhr);\n    };\n    /**\n     * Generate random GUID value which will be prefixed with the given value.\n     * @param  {string} prefix\n     */\n    DataUtil.getGuid = function (prefix) {\n        var hexs = '0123456789abcdef';\n        var rand;\n        return (prefix || '') + '00000000-0000-4000-0000-000000000000'.replace(/0/g, function (val, i) {\n            if ('crypto' in window && 'getRandomValues' in crypto) {\n                var arr = new Uint8Array(1);\n                window.crypto.getRandomValues(arr);\n                rand = arr[0] % 16 | 0;\n            }\n            else {\n                rand = Math.random() * 16 | 0;\n            }\n            return hexs[i === 19 ? rand & 0x3 | 0x8 : rand];\n        });\n    };\n    /**\n     * Checks wheather the given value is null or not.\n     * @param  {string|Object} val\n     * @returns boolean\n     */\n    DataUtil.isNull = function (val) {\n        return val === undefined || val === null;\n    };\n    /**\n     * To get the required items from collection of objects.\n     * @param  {Object[]} array\n     * @param  {string} field\n     * @param  {Function} comparer\n     * @returns Object\n     * @hidden\n     */\n    DataUtil.getItemFromComparer = function (array, field, comparer) {\n        var keyVal;\n        var current;\n        var key;\n        var i = 0;\n        var castRequired = typeof DataUtil.getVal(array, 0, field) === 'string';\n        if (array.length) {\n            while (isNullOrUndefined(keyVal) && i < array.length) {\n                keyVal = DataUtil.getVal(array, i, field);\n                key = array[i++];\n            }\n        }\n        for (; i < array.length; i++) {\n            current = DataUtil.getVal(array, i, field);\n            if (isNullOrUndefined(current)) {\n                continue;\n            }\n            if (castRequired) {\n                keyVal = +keyVal;\n                current = +current;\n            }\n            if (comparer(keyVal, current) > 0) {\n                keyVal = current;\n                key = array[i];\n            }\n        }\n        return key;\n    };\n    /**\n     * To get distinct values of Array or Array of Objects.\n     * @param  {Object[]} json\n     * @param  {string} field\n     * @param  {boolean} requiresCompleteRecord\n     * @returns Object[]\n     * * distinct array of objects is return when requiresCompleteRecord set as true.\n     * @hidden\n     */\n    DataUtil.distinct = function (json, fieldName, requiresCompleteRecord) {\n        requiresCompleteRecord = isNullOrUndefined(requiresCompleteRecord) ? false : requiresCompleteRecord;\n        var result = [];\n        var val;\n        var tmp = {};\n        json.forEach(function (data, index) {\n            val = DataUtil.getVal(json, index, fieldName);\n            if (!(val in tmp)) {\n                result.push(!requiresCompleteRecord ? val : json[index]);\n                tmp[val] = 1;\n            }\n        });\n        return result;\n    };\n    /**\n     * Specifies the value which will be used to adjust the date value to server timezone.\n     * @default null\n     */\n    DataUtil.serverTimezoneOffset = null;\n    /**\n     * Species whether are not to be parsed with serverTimezoneOffset value.\n     * @hidden\n     */\n    DataUtil.timeZoneHandling = true;\n    /**\n     * Throw error with the given string as message.\n     * @param  {string} er\n     */\n    DataUtil.throwError = function (error) {\n        try {\n            throw new Error(error);\n        }\n        catch (e) {\n            throw e.message + '\\n' + e.stack;\n        }\n    };\n    DataUtil.aggregates = {\n        /**\n         * Calculate sum of the given field in the data.\n         * @param  {Object[]} ds\n         * @param  {string} field\n         */\n        sum: function (ds, field) {\n            var result = 0;\n            var val;\n            var castRequired = typeof DataUtil.getVal(ds, 0, field) !== 'number';\n            for (var i = 0; i < ds.length; i++) {\n                val = DataUtil.getVal(ds, i, field);\n                if (!isNaN(val) && val !== null) {\n                    if (castRequired) {\n                        val = +val;\n                    }\n                    result += val;\n                }\n            }\n            return result;\n        },\n        /**\n         * Calculate average value of the given field in the data.\n         * @param  {Object[]} ds\n         * @param  {string} field\n         */\n        average: function (ds, field) {\n            return DataUtil.aggregates.sum(ds, field) / ds.length;\n        },\n        /**\n         * Returns the min value of the data based on the field.\n         * @param  {Object[]} ds\n         * @param  {string|Function} field\n         */\n        min: function (ds, field) {\n            var comparer;\n            if (typeof field === 'function') {\n                comparer = field;\n                field = null;\n            }\n            return DataUtil.getObject(field, DataUtil.getItemFromComparer(ds, field, comparer || DataUtil.fnAscending));\n        },\n        /**\n         * Returns the max value of the data based on the field.\n         * @param  {Object[]} ds\n         * @param  {string} field\n         * @returns number\n         */\n        max: function (ds, field) {\n            var comparer;\n            if (typeof field === 'function') {\n                comparer = field;\n                field = null;\n            }\n            return DataUtil.getObject(field, DataUtil.getItemFromComparer(ds, field, comparer || DataUtil.fnDescending));\n        },\n        /**\n         * Returns the total number of true value present in the data based on the given boolean field name.\n         * @param  {Object[]} ds\n         * @param  {string} field\n         */\n        truecount: function (ds, field) {\n            return new DataManager(ds).executeLocal(new Query().where(field, 'equal', true, true)).length;\n        },\n        /**\n         * Returns the total number of false value present in the data based on the given boolean field name.\n         * @param  {Object[]} ds\n         * @param  {string} field\n         */\n        falsecount: function (ds, field) {\n            return new DataManager(ds).executeLocal(new Query().where(field, 'equal', false, true)).length;\n        },\n        /**\n         * Returns the length of the given data.\n         * @param  {Object[]} ds\n         * @param  {string} field?\n         * @returns number\n         */\n        count: function (ds, field) {\n            return ds.length;\n        }\n    };\n    /**\n     * Specifies the Object with filter operators.\n     */\n    DataUtil.operatorSymbols = {\n        '<': 'lessthan',\n        '>': 'greaterthan',\n        '<=': 'lessthanorequal',\n        '>=': 'greaterthanorequal',\n        '==': 'equal',\n        '!=': 'notequal',\n        '*=': 'contains',\n        '$=': 'endswith',\n        '^=': 'startswith'\n    };\n    /**\n     * Specifies the Object with filter operators which will be used for OData filter query generation.\n     * * It will be used for date/number type filter query.\n     */\n    DataUtil.odBiOperator = {\n        '<': ' lt ',\n        '>': ' gt ',\n        '<=': ' le ',\n        '>=': ' ge ',\n        '==': ' eq ',\n        '!=': ' ne ',\n        'lessthan': ' lt ',\n        'lessthanorequal': ' le ',\n        'greaterthan': ' gt ',\n        'greaterthanorequal': ' ge ',\n        'equal': ' eq ',\n        'notequal': ' ne '\n    };\n    /**\n     * Specifies the Object with filter operators which will be used for OData filter query generation.\n     * It will be used for string type filter query.\n     */\n    DataUtil.odUniOperator = {\n        '$=': 'endswith',\n        '^=': 'startswith',\n        '*=': 'substringof',\n        'endswith': 'endswith',\n        'startswith': 'startswith',\n        'contains': 'substringof'\n    };\n    /**\n     * Specifies the Object with filter operators which will be used for ODataV4 filter query generation.\n     * It will be used for string type filter query.\n     */\n    DataUtil.odv4UniOperator = {\n        '$=': 'endswith',\n        '^=': 'startswith',\n        '*=': 'contains',\n        'endswith': 'endswith',\n        'startswith': 'startswith',\n        'contains': 'contains'\n    };\n    DataUtil.diacritics = {\n        '\\u24B6': 'A',\n        '\\uFF21': 'A',\n        '\\u00C0': 'A',\n        '\\u00C1': 'A',\n        '\\u00C2': 'A',\n        '\\u1EA6': 'A',\n        '\\u1EA4': 'A',\n        '\\u1EAA': 'A',\n        '\\u1EA8': 'A',\n        '\\u00C3': 'A',\n        '\\u0100': 'A',\n        '\\u0102': 'A',\n        '\\u1EB0': 'A',\n        '\\u1EAE': 'A',\n        '\\u1EB4': 'A',\n        '\\u1EB2': 'A',\n        '\\u0226': 'A',\n        '\\u01E0': 'A',\n        '\\u00C4': 'A',\n        '\\u01DE': 'A',\n        '\\u1EA2': 'A',\n        '\\u00C5': 'A',\n        '\\u01FA': 'A',\n        '\\u01CD': 'A',\n        '\\u0200': 'A',\n        '\\u0202': 'A',\n        '\\u1EA0': 'A',\n        '\\u1EAC': 'A',\n        '\\u1EB6': 'A',\n        '\\u1E00': 'A',\n        '\\u0104': 'A',\n        '\\u023A': 'A',\n        '\\u2C6F': 'A',\n        '\\uA732': 'AA',\n        '\\u00C6': 'AE',\n        '\\u01FC': 'AE',\n        '\\u01E2': 'AE',\n        '\\uA734': 'AO',\n        '\\uA736': 'AU',\n        '\\uA738': 'AV',\n        '\\uA73A': 'AV',\n        '\\uA73C': 'AY',\n        '\\u24B7': 'B',\n        '\\uFF22': 'B',\n        '\\u1E02': 'B',\n        '\\u1E04': 'B',\n        '\\u1E06': 'B',\n        '\\u0243': 'B',\n        '\\u0182': 'B',\n        '\\u0181': 'B',\n        '\\u24B8': 'C',\n        '\\uFF23': 'C',\n        '\\u0106': 'C',\n        '\\u0108': 'C',\n        '\\u010A': 'C',\n        '\\u010C': 'C',\n        '\\u00C7': 'C',\n        '\\u1E08': 'C',\n        '\\u0187': 'C',\n        '\\u023B': 'C',\n        '\\uA73E': 'C',\n        '\\u24B9': 'D',\n        '\\uFF24': 'D',\n        '\\u1E0A': 'D',\n        '\\u010E': 'D',\n        '\\u1E0C': 'D',\n        '\\u1E10': 'D',\n        '\\u1E12': 'D',\n        '\\u1E0E': 'D',\n        '\\u0110': 'D',\n        '\\u018B': 'D',\n        '\\u018A': 'D',\n        '\\u0189': 'D',\n        '\\uA779': 'D',\n        '\\u01F1': 'DZ',\n        '\\u01C4': 'DZ',\n        '\\u01F2': 'Dz',\n        '\\u01C5': 'Dz',\n        '\\u24BA': 'E',\n        '\\uFF25': 'E',\n        '\\u00C8': 'E',\n        '\\u00C9': 'E',\n        '\\u00CA': 'E',\n        '\\u1EC0': 'E',\n        '\\u1EBE': 'E',\n        '\\u1EC4': 'E',\n        '\\u1EC2': 'E',\n        '\\u1EBC': 'E',\n        '\\u0112': 'E',\n        '\\u1E14': 'E',\n        '\\u1E16': 'E',\n        '\\u0114': 'E',\n        '\\u0116': 'E',\n        '\\u00CB': 'E',\n        '\\u1EBA': 'E',\n        '\\u011A': 'E',\n        '\\u0204': 'E',\n        '\\u0206': 'E',\n        '\\u1EB8': 'E',\n        '\\u1EC6': 'E',\n        '\\u0228': 'E',\n        '\\u1E1C': 'E',\n        '\\u0118': 'E',\n        '\\u1E18': 'E',\n        '\\u1E1A': 'E',\n        '\\u0190': 'E',\n        '\\u018E': 'E',\n        '\\u24BB': 'F',\n        '\\uFF26': 'F',\n        '\\u1E1E': 'F',\n        '\\u0191': 'F',\n        '\\uA77B': 'F',\n        '\\u24BC': 'G',\n        '\\uFF27': 'G',\n        '\\u01F4': 'G',\n        '\\u011C': 'G',\n        '\\u1E20': 'G',\n        '\\u011E': 'G',\n        '\\u0120': 'G',\n        '\\u01E6': 'G',\n        '\\u0122': 'G',\n        '\\u01E4': 'G',\n        '\\u0193': 'G',\n        '\\uA7A0': 'G',\n        '\\uA77D': 'G',\n        '\\uA77E': 'G',\n        '\\u24BD': 'H',\n        '\\uFF28': 'H',\n        '\\u0124': 'H',\n        '\\u1E22': 'H',\n        '\\u1E26': 'H',\n        '\\u021E': 'H',\n        '\\u1E24': 'H',\n        '\\u1E28': 'H',\n        '\\u1E2A': 'H',\n        '\\u0126': 'H',\n        '\\u2C67': 'H',\n        '\\u2C75': 'H',\n        '\\uA78D': 'H',\n        '\\u24BE': 'I',\n        '\\uFF29': 'I',\n        '\\u00CC': 'I',\n        '\\u00CD': 'I',\n        '\\u00CE': 'I',\n        '\\u0128': 'I',\n        '\\u012A': 'I',\n        '\\u012C': 'I',\n        '\\u0130': 'I',\n        '\\u00CF': 'I',\n        '\\u1E2E': 'I',\n        '\\u1EC8': 'I',\n        '\\u01CF': 'I',\n        '\\u0208': 'I',\n        '\\u020A': 'I',\n        '\\u1ECA': 'I',\n        '\\u012E': 'I',\n        '\\u1E2C': 'I',\n        '\\u0197': 'I',\n        '\\u24BF': 'J',\n        '\\uFF2A': 'J',\n        '\\u0134': 'J',\n        '\\u0248': 'J',\n        '\\u24C0': 'K',\n        '\\uFF2B': 'K',\n        '\\u1E30': 'K',\n        '\\u01E8': 'K',\n        '\\u1E32': 'K',\n        '\\u0136': 'K',\n        '\\u1E34': 'K',\n        '\\u0198': 'K',\n        '\\u2C69': 'K',\n        '\\uA740': 'K',\n        '\\uA742': 'K',\n        '\\uA744': 'K',\n        '\\uA7A2': 'K',\n        '\\u24C1': 'L',\n        '\\uFF2C': 'L',\n        '\\u013F': 'L',\n        '\\u0139': 'L',\n        '\\u013D': 'L',\n        '\\u1E36': 'L',\n        '\\u1E38': 'L',\n        '\\u013B': 'L',\n        '\\u1E3C': 'L',\n        '\\u1E3A': 'L',\n        '\\u0141': 'L',\n        '\\u023D': 'L',\n        '\\u2C62': 'L',\n        '\\u2C60': 'L',\n        '\\uA748': 'L',\n        '\\uA746': 'L',\n        '\\uA780': 'L',\n        '\\u01C7': 'LJ',\n        '\\u01C8': 'Lj',\n        '\\u24C2': 'M',\n        '\\uFF2D': 'M',\n        '\\u1E3E': 'M',\n        '\\u1E40': 'M',\n        '\\u1E42': 'M',\n        '\\u2C6E': 'M',\n        '\\u019C': 'M',\n        '\\u24C3': 'N',\n        '\\uFF2E': 'N',\n        '\\u01F8': 'N',\n        '\\u0143': 'N',\n        '\\u00D1': 'N',\n        '\\u1E44': 'N',\n        '\\u0147': 'N',\n        '\\u1E46': 'N',\n        '\\u0145': 'N',\n        '\\u1E4A': 'N',\n        '\\u1E48': 'N',\n        '\\u0220': 'N',\n        '\\u019D': 'N',\n        '\\uA790': 'N',\n        '\\uA7A4': 'N',\n        '\\u01CA': 'NJ',\n        '\\u01CB': 'Nj',\n        '\\u24C4': 'O',\n        '\\uFF2F': 'O',\n        '\\u00D2': 'O',\n        '\\u00D3': 'O',\n        '\\u00D4': 'O',\n        '\\u1ED2': 'O',\n        '\\u1ED0': 'O',\n        '\\u1ED6': 'O',\n        '\\u1ED4': 'O',\n        '\\u00D5': 'O',\n        '\\u1E4C': 'O',\n        '\\u022C': 'O',\n        '\\u1E4E': 'O',\n        '\\u014C': 'O',\n        '\\u1E50': 'O',\n        '\\u1E52': 'O',\n        '\\u014E': 'O',\n        '\\u022E': 'O',\n        '\\u0230': 'O',\n        '\\u00D6': 'O',\n        '\\u022A': 'O',\n        '\\u1ECE': 'O',\n        '\\u0150': 'O',\n        '\\u01D1': 'O',\n        '\\u020C': 'O',\n        '\\u020E': 'O',\n        '\\u01A0': 'O',\n        '\\u1EDC': 'O',\n        '\\u1EDA': 'O',\n        '\\u1EE0': 'O',\n        '\\u1EDE': 'O',\n        '\\u1EE2': 'O',\n        '\\u1ECC': 'O',\n        '\\u1ED8': 'O',\n        '\\u01EA': 'O',\n        '\\u01EC': 'O',\n        '\\u00D8': 'O',\n        '\\u01FE': 'O',\n        '\\u0186': 'O',\n        '\\u019F': 'O',\n        '\\uA74A': 'O',\n        '\\uA74C': 'O',\n        '\\u01A2': 'OI',\n        '\\uA74E': 'OO',\n        '\\u0222': 'OU',\n        '\\u24C5': 'P',\n        '\\uFF30': 'P',\n        '\\u1E54': 'P',\n        '\\u1E56': 'P',\n        '\\u01A4': 'P',\n        '\\u2C63': 'P',\n        '\\uA750': 'P',\n        '\\uA752': 'P',\n        '\\uA754': 'P',\n        '\\u24C6': 'Q',\n        '\\uFF31': 'Q',\n        '\\uA756': 'Q',\n        '\\uA758': 'Q',\n        '\\u024A': 'Q',\n        '\\u24C7': 'R',\n        '\\uFF32': 'R',\n        '\\u0154': 'R',\n        '\\u1E58': 'R',\n        '\\u0158': 'R',\n        '\\u0210': 'R',\n        '\\u0212': 'R',\n        '\\u1E5A': 'R',\n        '\\u1E5C': 'R',\n        '\\u0156': 'R',\n        '\\u1E5E': 'R',\n        '\\u024C': 'R',\n        '\\u2C64': 'R',\n        '\\uA75A': 'R',\n        '\\uA7A6': 'R',\n        '\\uA782': 'R',\n        '\\u24C8': 'S',\n        '\\uFF33': 'S',\n        '\\u1E9E': 'S',\n        '\\u015A': 'S',\n        '\\u1E64': 'S',\n        '\\u015C': 'S',\n        '\\u1E60': 'S',\n        '\\u0160': 'S',\n        '\\u1E66': 'S',\n        '\\u1E62': 'S',\n        '\\u1E68': 'S',\n        '\\u0218': 'S',\n        '\\u015E': 'S',\n        '\\u2C7E': 'S',\n        '\\uA7A8': 'S',\n        '\\uA784': 'S',\n        '\\u24C9': 'T',\n        '\\uFF34': 'T',\n        '\\u1E6A': 'T',\n        '\\u0164': 'T',\n        '\\u1E6C': 'T',\n        '\\u021A': 'T',\n        '\\u0162': 'T',\n        '\\u1E70': 'T',\n        '\\u1E6E': 'T',\n        '\\u0166': 'T',\n        '\\u01AC': 'T',\n        '\\u01AE': 'T',\n        '\\u023E': 'T',\n        '\\uA786': 'T',\n        '\\uA728': 'TZ',\n        '\\u24CA': 'U',\n        '\\uFF35': 'U',\n        '\\u00D9': 'U',\n        '\\u00DA': 'U',\n        '\\u00DB': 'U',\n        '\\u0168': 'U',\n        '\\u1E78': 'U',\n        '\\u016A': 'U',\n        '\\u1E7A': 'U',\n        '\\u016C': 'U',\n        '\\u00DC': 'U',\n        '\\u01DB': 'U',\n        '\\u01D7': 'U',\n        '\\u01D5': 'U',\n        '\\u01D9': 'U',\n        '\\u1EE6': 'U',\n        '\\u016E': 'U',\n        '\\u0170': 'U',\n        '\\u01D3': 'U',\n        '\\u0214': 'U',\n        '\\u0216': 'U',\n        '\\u01AF': 'U',\n        '\\u1EEA': 'U',\n        '\\u1EE8': 'U',\n        '\\u1EEE': 'U',\n        '\\u1EEC': 'U',\n        '\\u1EF0': 'U',\n        '\\u1EE4': 'U',\n        '\\u1E72': 'U',\n        '\\u0172': 'U',\n        '\\u1E76': 'U',\n        '\\u1E74': 'U',\n        '\\u0244': 'U',\n        '\\u24CB': 'V',\n        '\\uFF36': 'V',\n        '\\u1E7C': 'V',\n        '\\u1E7E': 'V',\n        '\\u01B2': 'V',\n        '\\uA75E': 'V',\n        '\\u0245': 'V',\n        '\\uA760': 'VY',\n        '\\u24CC': 'W',\n        '\\uFF37': 'W',\n        '\\u1E80': 'W',\n        '\\u1E82': 'W',\n        '\\u0174': 'W',\n        '\\u1E86': 'W',\n        '\\u1E84': 'W',\n        '\\u1E88': 'W',\n        '\\u2C72': 'W',\n        '\\u24CD': 'X',\n        '\\uFF38': 'X',\n        '\\u1E8A': 'X',\n        '\\u1E8C': 'X',\n        '\\u24CE': 'Y',\n        '\\uFF39': 'Y',\n        '\\u1EF2': 'Y',\n        '\\u00DD': 'Y',\n        '\\u0176': 'Y',\n        '\\u1EF8': 'Y',\n        '\\u0232': 'Y',\n        '\\u1E8E': 'Y',\n        '\\u0178': 'Y',\n        '\\u1EF6': 'Y',\n        '\\u1EF4': 'Y',\n        '\\u01B3': 'Y',\n        '\\u024E': 'Y',\n        '\\u1EFE': 'Y',\n        '\\u24CF': 'Z',\n        '\\uFF3A': 'Z',\n        '\\u0179': 'Z',\n        '\\u1E90': 'Z',\n        '\\u017B': 'Z',\n        '\\u017D': 'Z',\n        '\\u1E92': 'Z',\n        '\\u1E94': 'Z',\n        '\\u01B5': 'Z',\n        '\\u0224': 'Z',\n        '\\u2C7F': 'Z',\n        '\\u2C6B': 'Z',\n        '\\uA762': 'Z',\n        '\\u24D0': 'a',\n        '\\uFF41': 'a',\n        '\\u1E9A': 'a',\n        '\\u00E0': 'a',\n        '\\u00E1': 'a',\n        '\\u00E2': 'a',\n        '\\u1EA7': 'a',\n        '\\u1EA5': 'a',\n        '\\u1EAB': 'a',\n        '\\u1EA9': 'a',\n        '\\u00E3': 'a',\n        '\\u0101': 'a',\n        '\\u0103': 'a',\n        '\\u1EB1': 'a',\n        '\\u1EAF': 'a',\n        '\\u1EB5': 'a',\n        '\\u1EB3': 'a',\n        '\\u0227': 'a',\n        '\\u01E1': 'a',\n        '\\u00E4': 'a',\n        '\\u01DF': 'a',\n        '\\u1EA3': 'a',\n        '\\u00E5': 'a',\n        '\\u01FB': 'a',\n        '\\u01CE': 'a',\n        '\\u0201': 'a',\n        '\\u0203': 'a',\n        '\\u1EA1': 'a',\n        '\\u1EAD': 'a',\n        '\\u1EB7': 'a',\n        '\\u1E01': 'a',\n        '\\u0105': 'a',\n        '\\u2C65': 'a',\n        '\\u0250': 'a',\n        '\\uA733': 'aa',\n        '\\u00E6': 'ae',\n        '\\u01FD': 'ae',\n        '\\u01E3': 'ae',\n        '\\uA735': 'ao',\n        '\\uA737': 'au',\n        '\\uA739': 'av',\n        '\\uA73B': 'av',\n        '\\uA73D': 'ay',\n        '\\u24D1': 'b',\n        '\\uFF42': 'b',\n        '\\u1E03': 'b',\n        '\\u1E05': 'b',\n        '\\u1E07': 'b',\n        '\\u0180': 'b',\n        '\\u0183': 'b',\n        '\\u0253': 'b',\n        '\\u24D2': 'c',\n        '\\uFF43': 'c',\n        '\\u0107': 'c',\n        '\\u0109': 'c',\n        '\\u010B': 'c',\n        '\\u010D': 'c',\n        '\\u00E7': 'c',\n        '\\u1E09': 'c',\n        '\\u0188': 'c',\n        '\\u023C': 'c',\n        '\\uA73F': 'c',\n        '\\u2184': 'c',\n        '\\u24D3': 'd',\n        '\\uFF44': 'd',\n        '\\u1E0B': 'd',\n        '\\u010F': 'd',\n        '\\u1E0D': 'd',\n        '\\u1E11': 'd',\n        '\\u1E13': 'd',\n        '\\u1E0F': 'd',\n        '\\u0111': 'd',\n        '\\u018C': 'd',\n        '\\u0256': 'd',\n        '\\u0257': 'd',\n        '\\uA77A': 'd',\n        '\\u01F3': 'dz',\n        '\\u01C6': 'dz',\n        '\\u24D4': 'e',\n        '\\uFF45': 'e',\n        '\\u00E8': 'e',\n        '\\u00E9': 'e',\n        '\\u00EA': 'e',\n        '\\u1EC1': 'e',\n        '\\u1EBF': 'e',\n        '\\u1EC5': 'e',\n        '\\u1EC3': 'e',\n        '\\u1EBD': 'e',\n        '\\u0113': 'e',\n        '\\u1E15': 'e',\n        '\\u1E17': 'e',\n        '\\u0115': 'e',\n        '\\u0117': 'e',\n        '\\u00EB': 'e',\n        '\\u1EBB': 'e',\n        '\\u011B': 'e',\n        '\\u0205': 'e',\n        '\\u0207': 'e',\n        '\\u1EB9': 'e',\n        '\\u1EC7': 'e',\n        '\\u0229': 'e',\n        '\\u1E1D': 'e',\n        '\\u0119': 'e',\n        '\\u1E19': 'e',\n        '\\u1E1B': 'e',\n        '\\u0247': 'e',\n        '\\u025B': 'e',\n        '\\u01DD': 'e',\n        '\\u24D5': 'f',\n        '\\uFF46': 'f',\n        '\\u1E1F': 'f',\n        '\\u0192': 'f',\n        '\\uA77C': 'f',\n        '\\u24D6': 'g',\n        '\\uFF47': 'g',\n        '\\u01F5': 'g',\n        '\\u011D': 'g',\n        '\\u1E21': 'g',\n        '\\u011F': 'g',\n        '\\u0121': 'g',\n        '\\u01E7': 'g',\n        '\\u0123': 'g',\n        '\\u01E5': 'g',\n        '\\u0260': 'g',\n        '\\uA7A1': 'g',\n        '\\u1D79': 'g',\n        '\\uA77F': 'g',\n        '\\u24D7': 'h',\n        '\\uFF48': 'h',\n        '\\u0125': 'h',\n        '\\u1E23': 'h',\n        '\\u1E27': 'h',\n        '\\u021F': 'h',\n        '\\u1E25': 'h',\n        '\\u1E29': 'h',\n        '\\u1E2B': 'h',\n        '\\u1E96': 'h',\n        '\\u0127': 'h',\n        '\\u2C68': 'h',\n        '\\u2C76': 'h',\n        '\\u0265': 'h',\n        '\\u0195': 'hv',\n        '\\u24D8': 'i',\n        '\\uFF49': 'i',\n        '\\u00EC': 'i',\n        '\\u00ED': 'i',\n        '\\u00EE': 'i',\n        '\\u0129': 'i',\n        '\\u012B': 'i',\n        '\\u012D': 'i',\n        '\\u00EF': 'i',\n        '\\u1E2F': 'i',\n        '\\u1EC9': 'i',\n        '\\u01D0': 'i',\n        '\\u0209': 'i',\n        '\\u020B': 'i',\n        '\\u1ECB': 'i',\n        '\\u012F': 'i',\n        '\\u1E2D': 'i',\n        '\\u0268': 'i',\n        '\\u0131': 'i',\n        '\\u24D9': 'j',\n        '\\uFF4A': 'j',\n        '\\u0135': 'j',\n        '\\u01F0': 'j',\n        '\\u0249': 'j',\n        '\\u24DA': 'k',\n        '\\uFF4B': 'k',\n        '\\u1E31': 'k',\n        '\\u01E9': 'k',\n        '\\u1E33': 'k',\n        '\\u0137': 'k',\n        '\\u1E35': 'k',\n        '\\u0199': 'k',\n        '\\u2C6A': 'k',\n        '\\uA741': 'k',\n        '\\uA743': 'k',\n        '\\uA745': 'k',\n        '\\uA7A3': 'k',\n        '\\u24DB': 'l',\n        '\\uFF4C': 'l',\n        '\\u0140': 'l',\n        '\\u013A': 'l',\n        '\\u013E': 'l',\n        '\\u1E37': 'l',\n        '\\u1E39': 'l',\n        '\\u013C': 'l',\n        '\\u1E3D': 'l',\n        '\\u1E3B': 'l',\n        '\\u017F': 'l',\n        '\\u0142': 'l',\n        '\\u019A': 'l',\n        '\\u026B': 'l',\n        '\\u2C61': 'l',\n        '\\uA749': 'l',\n        '\\uA781': 'l',\n        '\\uA747': 'l',\n        '\\u01C9': 'lj',\n        '\\u24DC': 'm',\n        '\\uFF4D': 'm',\n        '\\u1E3F': 'm',\n        '\\u1E41': 'm',\n        '\\u1E43': 'm',\n        '\\u0271': 'm',\n        '\\u026F': 'm',\n        '\\u24DD': 'n',\n        '\\uFF4E': 'n',\n        '\\u01F9': 'n',\n        '\\u0144': 'n',\n        '\\u00F1': 'n',\n        '\\u1E45': 'n',\n        '\\u0148': 'n',\n        '\\u1E47': 'n',\n        '\\u0146': 'n',\n        '\\u1E4B': 'n',\n        '\\u1E49': 'n',\n        '\\u019E': 'n',\n        '\\u0272': 'n',\n        '\\u0149': 'n',\n        '\\uA791': 'n',\n        '\\uA7A5': 'n',\n        '\\u01CC': 'nj',\n        '\\u24DE': 'o',\n        '\\uFF4F': 'o',\n        '\\u00F2': 'o',\n        '\\u00F3': 'o',\n        '\\u00F4': 'o',\n        '\\u1ED3': 'o',\n        '\\u1ED1': 'o',\n        '\\u1ED7': 'o',\n        '\\u1ED5': 'o',\n        '\\u00F5': 'o',\n        '\\u1E4D': 'o',\n        '\\u022D': 'o',\n        '\\u1E4F': 'o',\n        '\\u014D': 'o',\n        '\\u1E51': 'o',\n        '\\u1E53': 'o',\n        '\\u014F': 'o',\n        '\\u022F': 'o',\n        '\\u0231': 'o',\n        '\\u00F6': 'o',\n        '\\u022B': 'o',\n        '\\u1ECF': 'o',\n        '\\u0151': 'o',\n        '\\u01D2': 'o',\n        '\\u020D': 'o',\n        '\\u020F': 'o',\n        '\\u01A1': 'o',\n        '\\u1EDD': 'o',\n        '\\u1EDB': 'o',\n        '\\u1EE1': 'o',\n        '\\u1EDF': 'o',\n        '\\u1EE3': 'o',\n        '\\u1ECD': 'o',\n        '\\u1ED9': 'o',\n        '\\u01EB': 'o',\n        '\\u01ED': 'o',\n        '\\u00F8': 'o',\n        '\\u01FF': 'o',\n        '\\u0254': 'o',\n        '\\uA74B': 'o',\n        '\\uA74D': 'o',\n        '\\u0275': 'o',\n        '\\u01A3': 'oi',\n        '\\u0223': 'ou',\n        '\\uA74F': 'oo',\n        '\\u24DF': 'p',\n        '\\uFF50': 'p',\n        '\\u1E55': 'p',\n        '\\u1E57': 'p',\n        '\\u01A5': 'p',\n        '\\u1D7D': 'p',\n        '\\uA751': 'p',\n        '\\uA753': 'p',\n        '\\uA755': 'p',\n        '\\u24E0': 'q',\n        '\\uFF51': 'q',\n        '\\u024B': 'q',\n        '\\uA757': 'q',\n        '\\uA759': 'q',\n        '\\u24E1': 'r',\n        '\\uFF52': 'r',\n        '\\u0155': 'r',\n        '\\u1E59': 'r',\n        '\\u0159': 'r',\n        '\\u0211': 'r',\n        '\\u0213': 'r',\n        '\\u1E5B': 'r',\n        '\\u1E5D': 'r',\n        '\\u0157': 'r',\n        '\\u1E5F': 'r',\n        '\\u024D': 'r',\n        '\\u027D': 'r',\n        '\\uA75B': 'r',\n        '\\uA7A7': 'r',\n        '\\uA783': 'r',\n        '\\u24E2': 's',\n        '\\uFF53': 's',\n        '\\u00DF': 's',\n        '\\u015B': 's',\n        '\\u1E65': 's',\n        '\\u015D': 's',\n        '\\u1E61': 's',\n        '\\u0161': 's',\n        '\\u1E67': 's',\n        '\\u1E63': 's',\n        '\\u1E69': 's',\n        '\\u0219': 's',\n        '\\u015F': 's',\n        '\\u023F': 's',\n        '\\uA7A9': 's',\n        '\\uA785': 's',\n        '\\u1E9B': 's',\n        '\\u24E3': 't',\n        '\\uFF54': 't',\n        '\\u1E6B': 't',\n        '\\u1E97': 't',\n        '\\u0165': 't',\n        '\\u1E6D': 't',\n        '\\u021B': 't',\n        '\\u0163': 't',\n        '\\u1E71': 't',\n        '\\u1E6F': 't',\n        '\\u0167': 't',\n        '\\u01AD': 't',\n        '\\u0288': 't',\n        '\\u2C66': 't',\n        '\\uA787': 't',\n        '\\uA729': 'tz',\n        '\\u24E4': 'u',\n        '\\uFF55': 'u',\n        '\\u00F9': 'u',\n        '\\u00FA': 'u',\n        '\\u00FB': 'u',\n        '\\u0169': 'u',\n        '\\u1E79': 'u',\n        '\\u016B': 'u',\n        '\\u1E7B': 'u',\n        '\\u016D': 'u',\n        '\\u00FC': 'u',\n        '\\u01DC': 'u',\n        '\\u01D8': 'u',\n        '\\u01D6': 'u',\n        '\\u01DA': 'u',\n        '\\u1EE7': 'u',\n        '\\u016F': 'u',\n        '\\u0171': 'u',\n        '\\u01D4': 'u',\n        '\\u0215': 'u',\n        '\\u0217': 'u',\n        '\\u01B0': 'u',\n        '\\u1EEB': 'u',\n        '\\u1EE9': 'u',\n        '\\u1EEF': 'u',\n        '\\u1EED': 'u',\n        '\\u1EF1': 'u',\n        '\\u1EE5': 'u',\n        '\\u1E73': 'u',\n        '\\u0173': 'u',\n        '\\u1E77': 'u',\n        '\\u1E75': 'u',\n        '\\u0289': 'u',\n        '\\u24E5': 'v',\n        '\\uFF56': 'v',\n        '\\u1E7D': 'v',\n        '\\u1E7F': 'v',\n        '\\u028B': 'v',\n        '\\uA75F': 'v',\n        '\\u028C': 'v',\n        '\\uA761': 'vy',\n        '\\u24E6': 'w',\n        '\\uFF57': 'w',\n        '\\u1E81': 'w',\n        '\\u1E83': 'w',\n        '\\u0175': 'w',\n        '\\u1E87': 'w',\n        '\\u1E85': 'w',\n        '\\u1E98': 'w',\n        '\\u1E89': 'w',\n        '\\u2C73': 'w',\n        '\\u24E7': 'x',\n        '\\uFF58': 'x',\n        '\\u1E8B': 'x',\n        '\\u1E8D': 'x',\n        '\\u24E8': 'y',\n        '\\uFF59': 'y',\n        '\\u1EF3': 'y',\n        '\\u00FD': 'y',\n        '\\u0177': 'y',\n        '\\u1EF9': 'y',\n        '\\u0233': 'y',\n        '\\u1E8F': 'y',\n        '\\u00FF': 'y',\n        '\\u1EF7': 'y',\n        '\\u1E99': 'y',\n        '\\u1EF5': 'y',\n        '\\u01B4': 'y',\n        '\\u024F': 'y',\n        '\\u1EFF': 'y',\n        '\\u24E9': 'z',\n        '\\uFF5A': 'z',\n        '\\u017A': 'z',\n        '\\u1E91': 'z',\n        '\\u017C': 'z',\n        '\\u017E': 'z',\n        '\\u1E93': 'z',\n        '\\u1E95': 'z',\n        '\\u01B6': 'z',\n        '\\u0225': 'z',\n        '\\u0240': 'z',\n        '\\u2C6C': 'z',\n        '\\uA763': 'z',\n        '\\u0386': '\\u0391',\n        '\\u0388': '\\u0395',\n        '\\u0389': '\\u0397',\n        '\\u038A': '\\u0399',\n        '\\u03AA': '\\u0399',\n        '\\u038C': '\\u039F',\n        '\\u038E': '\\u03A5',\n        '\\u03AB': '\\u03A5',\n        '\\u038F': '\\u03A9',\n        '\\u03AC': '\\u03B1',\n        '\\u03AD': '\\u03B5',\n        '\\u03AE': '\\u03B7',\n        '\\u03AF': '\\u03B9',\n        '\\u03CA': '\\u03B9',\n        '\\u0390': '\\u03B9',\n        '\\u03CC': '\\u03BF',\n        '\\u03CD': '\\u03C5',\n        '\\u03CB': '\\u03C5',\n        '\\u03B0': '\\u03C5',\n        '\\u03C9': '\\u03C9',\n        '\\u03C2': '\\u03C3'\n    };\n    DataUtil.fnOperators = {\n        /**\n         * Returns true when the actual input is equal to the given input.\n         * @param  {string|number|boolean} actual\n         * @param  {string|number|boolean} expected\n         * @param  {boolean} ignoreCase?\n         * @param  {boolean} ignoreAccent?\n         */\n        equal: function (actual, expected, ignoreCase, ignoreAccent) {\n            if (ignoreAccent) {\n                actual = DataUtil.ignoreDiacritics(actual);\n                expected = DataUtil.ignoreDiacritics(expected);\n            }\n            if (ignoreCase) {\n                return DataUtil.toLowerCase(actual) === DataUtil.toLowerCase(expected);\n            }\n            return actual === expected;\n        },\n        /**\n         * Returns true when the actual input is not equal to the given input.\n         * @param  {string|number|boolean} actual\n         * @param  {string|number|boolean} expected\n         * @param  {boolean} ignoreCase?\n         */\n        notequal: function (actual, expected, ignoreCase, ignoreAccent) {\n            if (ignoreAccent) {\n                actual = DataUtil.ignoreDiacritics(actual);\n                expected = DataUtil.ignoreDiacritics(expected);\n            }\n            return !DataUtil.fnOperators.equal(actual, expected, ignoreCase);\n        },\n        /**\n         * Returns true when the actual input is less than to the given input.\n         * @param  {string|number|boolean} actual\n         * @param  {string|number|boolean} expected\n         * @param  {boolean} ignoreCase?\n         */\n        lessthan: function (actual, expected, ignoreCase) {\n            if (ignoreCase) {\n                return DataUtil.toLowerCase(actual) < DataUtil.toLowerCase(expected);\n            }\n            return actual < expected;\n        },\n        /**\n         * Returns true when the actual input is greater than to the given input.\n         * @param  {string|number|boolean} actual\n         * @param  {string|number|boolean} expected\n         * @param  {boolean} ignoreCase?\n         */\n        greaterthan: function (actual, expected, ignoreCase) {\n            if (ignoreCase) {\n                return DataUtil.toLowerCase(actual) > DataUtil.toLowerCase(expected);\n            }\n            return actual > expected;\n        },\n        /**\n         * Returns true when the actual input is less than or equal to the given input.\n         * @param  {string|number|boolean} actual\n         * @param  {string|number|boolean} expected\n         * @param  {boolean} ignoreCase?\n         */\n        lessthanorequal: function (actual, expected, ignoreCase) {\n            if (ignoreCase) {\n                return DataUtil.toLowerCase(actual) <= DataUtil.toLowerCase(expected);\n            }\n            return actual <= expected;\n        },\n        /**\n         * Returns true when the actual input is greater than or equal to the given input.\n         * @param  {string|number|boolean} actual\n         * @param  {string|number|boolean} expected\n         * @param  {boolean} ignoreCase?\n         */\n        greaterthanorequal: function (actual, expected, ignoreCase) {\n            if (ignoreCase) {\n                return DataUtil.toLowerCase(actual) >= DataUtil.toLowerCase(expected);\n            }\n            return actual >= expected;\n        },\n        /**\n         * Returns true when the actual input contains the given string.\n         * @param  {string|number} actual\n         * @param  {string|number} expected\n         * @param  {boolean} ignoreCase?\n         */\n        contains: function (actual, expected, ignoreCase, ignoreAccent) {\n            if (ignoreAccent) {\n                actual = DataUtil.ignoreDiacritics(actual);\n                expected = DataUtil.ignoreDiacritics(expected);\n            }\n            if (ignoreCase) {\n                return !isNullOrUndefined(actual) && !isNullOrUndefined(expected) &&\n                    DataUtil.toLowerCase(actual).indexOf(DataUtil.toLowerCase(expected)) !== -1;\n            }\n            return !isNullOrUndefined(actual) && !isNullOrUndefined(expected) &&\n                actual.toString().indexOf(expected) !== -1;\n        },\n        /**\n         * Returns true when the given input value is not null.\n         * @param  {string|number} actual\n         * @returns boolean\n         */\n        notnull: function (actual) {\n            return actual !== null;\n        },\n        /**\n         * Returns true when the given input value is null.\n         * @param  {string|number} actual\n         * @returns boolean\n         */\n        isnull: function (actual) {\n            return actual === null;\n        },\n        /**\n         * Returns true when the actual input starts with the given string\n         * @param  {string} actual\n         * @param  {string} expected\n         * @param  {boolean} ignoreCase?\n         */\n        startswith: function (actual, expected, ignoreCase, ignoreAccent) {\n            if (ignoreAccent) {\n                actual = DataUtil.ignoreDiacritics(actual);\n                expected = DataUtil.ignoreDiacritics(expected);\n            }\n            if (ignoreCase) {\n                return actual && expected && DataUtil.startsWith(DataUtil.toLowerCase(actual), DataUtil.toLowerCase(expected));\n            }\n            return actual && expected && DataUtil.startsWith(actual, expected);\n        },\n        /**\n         * Returns true when the actual input ends with the given string.\n         * @param  {string} actual\n         * @param  {string} expected\n         * @param  {boolean} ignoreCase?\n         */\n        endswith: function (actual, expected, ignoreCase, ignoreAccent) {\n            if (ignoreAccent) {\n                actual = DataUtil.ignoreDiacritics(actual);\n                expected = DataUtil.ignoreDiacritics(expected);\n            }\n            if (ignoreCase) {\n                return actual && expected && DataUtil.endsWith(DataUtil.toLowerCase(actual), DataUtil.toLowerCase(expected));\n            }\n            return actual && expected && DataUtil.endsWith(actual, expected);\n        },\n        /**\n         * It will return the filter operator based on the filter symbol.\n         * @param  {string} operator\n         * @hidden\n         */\n        processSymbols: function (operator) {\n            var fnName = DataUtil.operatorSymbols[operator];\n            if (fnName) {\n                var fn = DataUtil.fnOperators[fnName];\n                return fn;\n            }\n            return DataUtil.throwError('Query - Process Operator : Invalid operator');\n        },\n        /**\n         * It will return the valid filter operator based on the specified operators.\n         * @param  {string} operator\n         * @hidden\n         */\n        processOperator: function (operator) {\n            var fn = DataUtil.fnOperators[operator];\n            if (fn) {\n                return fn;\n            }\n            return DataUtil.fnOperators.processSymbols(operator);\n        }\n    };\n    /**\n     * To perform the parse operation on JSON data, like convert to string from JSON or convert to JSON from string.\n     */\n    DataUtil.parse = {\n        /**\n         * Parse the given string to the plain JavaScript object.\n         * @param  {string|Object|Object[]} jsonText\n         */\n        parseJson: function (jsonText) {\n            if (typeof jsonText === 'string') {\n                jsonText = JSON.parse(jsonText, DataUtil.parse.jsonReviver);\n            }\n            else if (jsonText instanceof Array) {\n                DataUtil.parse.iterateAndReviveArray(jsonText);\n            }\n            else if (typeof jsonText === 'object' && jsonText !== null) {\n                DataUtil.parse.iterateAndReviveJson(jsonText);\n            }\n            return jsonText;\n        },\n        /**\n         * It will perform on array of values.\n         * @param  {string[]|Object[]} array\n         * @hidden\n         */\n        iterateAndReviveArray: function (array) {\n            for (var i = 0; i < array.length; i++) {\n                if (typeof array[i] === 'object' && array[i] !== null) {\n                    DataUtil.parse.iterateAndReviveJson(array[i]);\n                }\n                else if (typeof array[i] === 'string' && !/^[\\s]*\\[|^[\\s]*\\{(.)+:|\\\"/g.test(array[i])) {\n                    array[i] = DataUtil.parse.jsonReviver('', array[i]);\n                }\n                else {\n                    array[i] = DataUtil.parse.parseJson(array[i]);\n                }\n            }\n        },\n        /**\n         * It will perform on JSON values\n         * @param  {JSON} json\n         * @hidden\n         */\n        iterateAndReviveJson: function (json) {\n            var value;\n            var keys = Object.keys(json);\n            for (var _i = 0, keys_2 = keys; _i < keys_2.length; _i++) {\n                var prop = keys_2[_i];\n                if (DataUtil.startsWith(prop, '__')) {\n                    continue;\n                }\n                value = json[prop];\n                if (typeof value === 'object') {\n                    if (value instanceof Array) {\n                        DataUtil.parse.iterateAndReviveArray(value);\n                    }\n                    else if (value) {\n                        DataUtil.parse.iterateAndReviveJson(value);\n                    }\n                }\n                else {\n                    json[prop] = DataUtil.parse.jsonReviver(json[prop], value);\n                }\n            }\n        },\n        /**\n         * It will perform on JSON values\n         * @param  {string} field\n         * @param  {string|Date} value\n         * @hidden\n         */\n        jsonReviver: function (field, value) {\n            var dupValue = value;\n            if (typeof value === 'string') {\n                var ms = /^\\/Date\\(([+-]?[0-9]+)([+-][0-9]{4})?\\)\\/$/.exec(value);\n                var offSet = DataUtil.timeZoneHandling ? DataUtil.serverTimezoneOffset : null;\n                if (ms) {\n                    return DataUtil.dateParse.toTimeZone(new Date(parseInt(ms[1], 10)), offSet, true);\n                }\n                else if (/^(\\d{4}\\-\\d\\d\\-\\d\\d([tT][\\d:\\.]*){1})([zZ]|([+\\-])(\\d\\d):?(\\d\\d))?$/.test(value)) {\n                    var arr = dupValue.split(/[^0-9]/);\n                    value = DataUtil.dateParse\n                        .toTimeZone(new Date(parseInt(arr[0], 10), parseInt(arr[1], 10) - 1, parseInt(arr[2], 10), parseInt(arr[3], 10), parseInt(arr[4], 10), parseInt(arr[5], 10)), offSet, true);\n                }\n            }\n            return value;\n        },\n        /**\n         * Check wheather the given value is JSON or not.\n         * @param  {Object[]} jsonData\n         */\n        isJson: function (jsonData) {\n            if (typeof jsonData[0] === 'string') {\n                return jsonData;\n            }\n            return DataUtil.parse.parseJson(jsonData);\n        },\n        /**\n         * Checks wheather the given value is GUID or not.\n         * @param  {string} value\n         */\n        isGuid: function (value) {\n            var regex = /[A-Fa-f0-9]{8}(?:-[A-Fa-f0-9]{4}){3}-[A-Fa-f0-9]{12}/i;\n            var match = regex.exec(value);\n            return match != null;\n        },\n        /**\n         * The method used to replace the value based on the type.\n         * @param  {Object} value\n         * @param  {boolean} stringify\n         * @hidden\n         */\n        replacer: function (value, stringify) {\n            if (DataUtil.isPlainObject(value)) {\n                return DataUtil.parse.jsonReplacer(value, stringify);\n            }\n            if (value instanceof Array) {\n                return DataUtil.parse.arrayReplacer(value);\n            }\n            if (value instanceof Date) {\n                return DataUtil.parse.jsonReplacer({ val: value }, stringify).val;\n            }\n            return value;\n        },\n        /**\n         * It will replace the JSON value.\n         * @param  {string} key\n         * @param  {Object} val\n         * @hidden\n         */\n        jsonReplacer: function (val, stringify) {\n            var value;\n            var keys = Object.keys(val);\n            for (var _i = 0, keys_3 = keys; _i < keys_3.length; _i++) {\n                var prop = keys_3[_i];\n                value = val[prop];\n                if (!(value instanceof Date)) {\n                    continue;\n                }\n                var d = value;\n                val[prop] = DataUtil.dateParse.toTimeZone(DataUtil.dateParse.addSelfOffset(d), DataUtil.serverTimezoneOffset).toJSON();\n            }\n            return val;\n        },\n        /**\n         * It will replace the Array of value.\n         * @param  {string} key\n         * @param  {Object[]} val\n         * @hidden\n         */\n        arrayReplacer: function (val) {\n            for (var i = 0; i < val.length; i++) {\n                if (DataUtil.isPlainObject(val[i])) {\n                    val[i] = DataUtil.parse.jsonReplacer(val[i]);\n                }\n                else if (val[i] instanceof Date) {\n                    val[i] = DataUtil.parse.jsonReplacer({ date: val[i] }).date;\n                }\n            }\n            return val;\n        },\n        /**\n         * It will replace the Date object with respective to UTC format value.\n         * @param  {string} key\n         * @param  {any} value\n         * @hidden\n         */\n        /* tslint:disable-next-line:no-any */\n        jsonDateReplacer: function (key, value) {\n            if (key === 'value' && value) {\n                if (typeof value === 'string') {\n                    var ms = /^\\/Date\\(([+-]?[0-9]+)([+-][0-9]{4})?\\)\\/$/.exec(value);\n                    if (ms) {\n                        value = DataUtil.dateParse.toTimeZone(new Date(parseInt(ms[1], 10)), null, true);\n                    }\n                    else if (/^(\\d{4}\\-\\d\\d\\-\\d\\d([tT][\\d:\\.]*){1})([zZ]|([+\\-])(\\d\\d):?(\\d\\d))?$/.test(value)) {\n                        var arr = value.split(/[^0-9]/);\n                        value = DataUtil.dateParse\n                            .toTimeZone(new Date(parseInt(arr[0], 10), parseInt(arr[1], 10) - 1, parseInt(arr[2], 10), parseInt(arr[3], 10), parseInt(arr[4], 10), parseInt(arr[5], 10)), null, true);\n                    }\n                }\n                if (value instanceof Date) {\n                    value = DataUtil.dateParse.addSelfOffset(value);\n                    if (DataUtil.serverTimezoneOffset === null) {\n                        return DataUtil.dateParse.toTimeZone(DataUtil.dateParse.addSelfOffset(value), null).toJSON();\n                    }\n                    else {\n                        value = DataUtil.dateParse.toTimeZone(value, (((value.getTimezoneOffset() / 60) * 2)\n                            - DataUtil.serverTimezoneOffset), false);\n                        return value.toJSON();\n                    }\n                }\n            }\n            return value;\n        }\n    };\n    /**\n     * @hidden\n     */\n    DataUtil.dateParse = {\n        addSelfOffset: function (input) {\n            return new Date(+input - (input.getTimezoneOffset() * 60000));\n        },\n        toUTC: function (input) {\n            return new Date(+input + (input.getTimezoneOffset() * 60000));\n        },\n        toTimeZone: function (input, offset, utc) {\n            if (offset === null) {\n                return input;\n            }\n            var unix = utc ? DataUtil.dateParse.toUTC(input) : input;\n            return new Date(+unix - (offset * 3600000));\n        },\n        toLocalTime: function (input) {\n            var datefn = input;\n            var timeZone = -datefn.getTimezoneOffset();\n            var differenceString = timeZone >= 0 ? '+' : '-';\n            var localtimefn = function (num) {\n                var norm = Math.floor(Math.abs(num));\n                return (norm < 10 ? '0' : '') + norm;\n            };\n            var val = datefn.getFullYear() + '-' + localtimefn(datefn.getMonth() + 1) + '-' + localtimefn(datefn.getDate()) +\n                'T' + localtimefn(datefn.getHours()) +\n                ':' + localtimefn(datefn.getMinutes()) +\n                ':' + localtimefn(datefn.getSeconds()) +\n                differenceString + localtimefn(timeZone / 60) +\n                ':' + localtimefn(timeZone % 60);\n            return val;\n        }\n    };\n    return DataUtil;\n}());\nexport { DataUtil };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { merge, extend, isNullOrUndefined, setValue } from '@syncfusion/ej2-base';\nimport { DataUtil } from './util';\nimport { Query, Predicate } from './query';\n/**\n * Adaptors are specific data source type aware interfaces that are used by DataManager to communicate with DataSource.\n * This is the base adaptor class that other adaptors can extend.\n * @hidden\n */\nvar Adaptor = /** @class */ (function () {\n    /**\n     * Constructor for Adaptor class\n     * @param  {DataOptions} ds?\n     * @hidden\n     * @returns aggregates\n     */\n    function Adaptor(ds) {\n        // common options for all the adaptors \n        this.options = {\n            from: 'table',\n            requestType: 'json',\n            sortBy: 'sorted',\n            select: 'select',\n            skip: 'skip',\n            group: 'group',\n            take: 'take',\n            search: 'search',\n            count: 'requiresCounts',\n            where: 'where',\n            aggregates: 'aggregates'\n        };\n        /**\n         * Specifies the type of adaptor.\n         * @default Adaptor\n         */\n        this.type = Adaptor;\n        this.dataSource = ds;\n        this.pvt = {};\n    }\n    /**\n     * Returns the data from the query processing.\n     * @param  {Object} data\n     * @param  {DataOptions} ds?\n     * @param  {Query} query?\n     * @param  {XMLHttpRequest} xhr?\n     * @returns Object\n     */\n    Adaptor.prototype.processResponse = function (data, ds, query, xhr) {\n        return data;\n    };\n    return Adaptor;\n}());\nexport { Adaptor };\n/**\n * JsonAdaptor is used to process JSON data. It contains methods to process the given JSON data based on the queries.\n * @hidden\n */\nvar JsonAdaptor = /** @class */ (function (_super) {\n    __extends(JsonAdaptor, _super);\n    function JsonAdaptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Process the JSON data based on the provided queries.\n     * @param  {DataManager} dataManager\n     * @param  {Query} query\n     * @returns Object\n     */\n    JsonAdaptor.prototype.processQuery = function (dataManager, query) {\n        var result = dataManager.dataSource.json.slice(0);\n        var count = result.length;\n        var countFlg = true;\n        var ret;\n        var key;\n        var agg = {};\n        for (var i = 0; i < query.queries.length; i++) {\n            key = query.queries[i];\n            ret = this[key.fn].call(this, result, key.e, query);\n            if (key.fn === 'onAggregates') {\n                agg[key.e.field + ' - ' + key.e.type] = ret;\n            }\n            else {\n                result = ret !== undefined ? ret : result;\n            }\n            if (key.fn === 'onPage' || key.fn === 'onSkip' || key.fn === 'onTake' || key.fn === 'onRange') {\n                countFlg = false;\n            }\n            if (countFlg) {\n                count = result.length;\n            }\n        }\n        if (query.isCountRequired) {\n            result = {\n                result: result,\n                count: count,\n                aggregates: agg\n            };\n        }\n        return result;\n    };\n    /**\n     * Performs batch update in the JSON array which add, remove and update records.\n     * @param  {DataManager} dm\n     * @param  {CrudOptions} changes\n     * @param  {RemoteArgs} e\n     */\n    JsonAdaptor.prototype.batchRequest = function (dm, changes, e) {\n        var i;\n        var deletedRecordsLen = changes.deletedRecords.length;\n        for (i = 0; i < changes.addedRecords.length; i++) {\n            this.insert(dm, changes.addedRecords[i]);\n        }\n        for (i = 0; i < changes.changedRecords.length; i++) {\n            this.update(dm, e.key, changes.changedRecords[i]);\n        }\n        for (i = 0; i < deletedRecordsLen; i++) {\n            this.remove(dm, e.key, changes.deletedRecords[i]);\n        }\n        return changes;\n    };\n    /**\n     * Performs filter operation with the given data and where query.\n     * @param  {Object[]} ds\n     * @param  {{validate:Function}} e\n     */\n    JsonAdaptor.prototype.onWhere = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return ds.filter(function (obj) {\n            if (e) {\n                return e.validate(obj);\n            }\n        });\n    };\n    /**\n     * Returns aggregate function based on the aggregate type.\n     * @param  {Object[]} ds\n     * @param  {{field:string} e\n     * @param  {string}} type\n     */\n    JsonAdaptor.prototype.onAggregates = function (ds, e) {\n        var fn = DataUtil.aggregates[e.type];\n        if (!ds || !fn || ds.length === 0) {\n            return null;\n        }\n        return fn(ds, e.field);\n    };\n    /**\n     * Performs search operation based on the given query.\n     * @param  {Object[]} ds\n     * @param  {QueryOptions} e\n     */\n    JsonAdaptor.prototype.onSearch = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        if (e.fieldNames.length === 0) {\n            DataUtil.getFieldList(ds[0], e.fieldNames);\n        }\n        return ds.filter(function (obj) {\n            for (var j = 0; j < e.fieldNames.length; j++) {\n                if (e.comparer.call(obj, DataUtil.getObject(e.fieldNames[j], obj), e.searchKey, e.ignoreCase, e.ignoreAccent)) {\n                    return true;\n                }\n            }\n            return false;\n        });\n    };\n    /**\n     * Sort the data with given direction and field.\n     * @param  {Object[]} ds\n     * @param  {{comparer:(a:Object} e\n     * @param  {Object} b\n     */\n    JsonAdaptor.prototype.onSortBy = function (ds, e, query) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        var fnCompare;\n        var field = DataUtil.getValue(e.fieldName, query);\n        if (!field) {\n            return ds.sort(e.comparer);\n        }\n        if (field instanceof Array) {\n            field = field.slice(0);\n            for (var i = field.length - 1; i >= 0; i--) {\n                if (!field[i]) {\n                    continue;\n                }\n                fnCompare = e.comparer;\n                if (DataUtil.endsWith(field[i], ' desc')) {\n                    fnCompare = DataUtil.fnSort('descending');\n                    field[i] = field[i].replace(' desc', '');\n                }\n                ds = DataUtil.sort(ds, field[i], fnCompare);\n            }\n            return ds;\n        }\n        return DataUtil.sort(ds, field, e.comparer);\n    };\n    /**\n     * Group the data based on the given query.\n     * @param  {Object[]} ds\n     * @param  {QueryOptions} e\n     * @param  {Query} query\n     */\n    JsonAdaptor.prototype.onGroup = function (ds, e, query) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        var aggQuery = Query.filterQueries(query.queries, 'onAggregates');\n        var agg = [];\n        if (aggQuery.length) {\n            var tmp = void 0;\n            for (var i = 0; i < aggQuery.length; i++) {\n                tmp = aggQuery[i].e;\n                agg.push({ type: tmp.type, field: DataUtil.getValue(tmp.field, query) });\n            }\n        }\n        return DataUtil.group(ds, DataUtil.getValue(e.fieldName, query), agg, null, null, e.comparer);\n    };\n    /**\n     * Retrieves records based on the given page index and size.\n     * @param  {Object[]} ds\n     * @param  {{pageSize:number} e\n     * @param  {number}} pageIndex\n     * @param  {Query} query\n     */\n    JsonAdaptor.prototype.onPage = function (ds, e, query) {\n        var size = DataUtil.getValue(e.pageSize, query);\n        var start = (DataUtil.getValue(e.pageIndex, query) - 1) * size;\n        var end = start + size;\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return ds.slice(start, end);\n    };\n    /**\n     * Retrieves records based on the given start and end index from query.\n     * @param  {Object[]} ds\n     * @param  {{start:number} e\n     * @param  {number}} end\n     */\n    JsonAdaptor.prototype.onRange = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return ds.slice(DataUtil.getValue(e.start), DataUtil.getValue(e.end));\n    };\n    /**\n     * Picks the given count of records from the top of the datasource.\n     * @param  {Object[]} ds\n     * @param  {{nos:number}} e\n     */\n    JsonAdaptor.prototype.onTake = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return ds.slice(0, DataUtil.getValue(e.nos));\n    };\n    /**\n     * Skips the given count of records from the data source.\n     * @param  {Object[]} ds\n     * @param  {{nos:number}} e\n     */\n    JsonAdaptor.prototype.onSkip = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return ds.slice(DataUtil.getValue(e.nos));\n    };\n    /**\n     * Selects specified columns from the data source.\n     * @param  {Object[]} ds\n     * @param  {{fieldNames:string}} e\n     */\n    JsonAdaptor.prototype.onSelect = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return DataUtil.select(ds, DataUtil.getValue(e.fieldNames));\n    };\n    /**\n     * Inserts new record in the table.\n     * @param  {DataManager} dm\n     * @param  {Object} data\n     * @param  {number} position\n     */\n    JsonAdaptor.prototype.insert = function (dm, data, tableName, query, position) {\n        if (isNullOrUndefined(position)) {\n            return dm.dataSource.json.push(data);\n        }\n        else {\n            return dm.dataSource.json.splice(position, 0, data);\n        }\n    };\n    /**\n     * Remove the data from the dataSource based on the key field value.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName?\n     * @returns null\n     */\n    JsonAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n        var ds = dm.dataSource.json;\n        var i;\n        if (typeof value === 'object' && !(value instanceof Date)) {\n            value = value[keyField];\n        }\n        for (i = 0; i < ds.length; i++) {\n            if (ds[i][keyField] === value) {\n                break;\n            }\n        }\n        return i !== ds.length ? ds.splice(i, 1) : null;\n    };\n    /**\n     * Updates existing record and saves the changes to the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName?\n     * @returns null\n     */\n    JsonAdaptor.prototype.update = function (dm, keyField, value, tableName) {\n        var ds = dm.dataSource.json;\n        var i;\n        var key = value[keyField];\n        for (i = 0; i < ds.length; i++) {\n            if (ds[i][keyField] === key) {\n                break;\n            }\n        }\n        return i < ds.length ? merge(ds[i], value) : null;\n    };\n    return JsonAdaptor;\n}(Adaptor));\nexport { JsonAdaptor };\n/**\n * URL Adaptor of DataManager can be used when you are required to use remote service to retrieve data.\n * It interacts with server-side for all DataManager Queries and CRUD operations.\n * @hidden\n */\nvar UrlAdaptor = /** @class */ (function (_super) {\n    __extends(UrlAdaptor, _super);\n    function UrlAdaptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Process the query to generate request body.\n     * @param  {DataManager} dm\n     * @param  {Query} query\n     * @param  {Object[]} hierarchyFilters?\n     * @returns p\n     */\n    UrlAdaptor.prototype.processQuery = function (dm, query, hierarchyFilters) {\n        var queries = this.getQueryRequest(query);\n        var singles = Query.filterQueryLists(query.queries, ['onSelect', 'onPage', 'onSkip', 'onTake', 'onRange']);\n        var params = query.params;\n        var url = dm.dataSource.url;\n        var temp;\n        var skip;\n        var take = null;\n        var options = this.options;\n        var request = { sorts: [], groups: [], filters: [], searches: [], aggregates: [] };\n        // calc Paging & Range\n        if ('onPage' in singles) {\n            temp = singles.onPage;\n            skip = DataUtil.getValue(temp.pageIndex, query);\n            take = DataUtil.getValue(temp.pageSize, query);\n            skip = (skip - 1) * take;\n        }\n        else if ('onRange' in singles) {\n            temp = singles.onRange;\n            skip = temp.start;\n            take = temp.end - temp.start;\n        }\n        // Sorting\n        for (var i = 0; i < queries.sorts.length; i++) {\n            temp = DataUtil.getValue(queries.sorts[i].e.fieldName, query);\n            request.sorts.push(DataUtil.callAdaptorFunction(this, 'onEachSort', { name: temp, direction: queries.sorts[i].e.direction }, query));\n        }\n        // hierarchy\n        if (hierarchyFilters) {\n            temp = this.getFiltersFrom(hierarchyFilters, query);\n            if (temp) {\n                request.filters.push(DataUtil.callAdaptorFunction(this, 'onEachWhere', temp.toJson(), query));\n            }\n        }\n        // Filters\n        for (var i = 0; i < queries.filters.length; i++) {\n            request.filters.push(DataUtil.callAdaptorFunction(this, 'onEachWhere', queries.filters[i].e.toJson(), query));\n            var keys_3 = typeof request.filters[i] === 'object' ? Object.keys(request.filters[i]) : [];\n            for (var _i = 0, keys_1 = keys_3; _i < keys_1.length; _i++) {\n                var prop = keys_1[_i];\n                if (DataUtil.isNull((request)[prop])) {\n                    delete request[prop];\n                }\n            }\n        }\n        // Searches\n        for (var i = 0; i < queries.searches.length; i++) {\n            temp = queries.searches[i].e;\n            request.searches.push(DataUtil.callAdaptorFunction(this, 'onEachSearch', {\n                fields: temp.fieldNames,\n                operator: temp.operator,\n                key: temp.searchKey,\n                ignoreCase: temp.ignoreCase\n            }, query));\n        }\n        // Grouping\n        for (var i = 0; i < queries.groups.length; i++) {\n            request.groups.push(DataUtil.getValue(queries.groups[i].e.fieldName, query));\n        }\n        // aggregates\n        for (var i = 0; i < queries.aggregates.length; i++) {\n            temp = queries.aggregates[i].e;\n            request.aggregates.push({ type: temp.type, field: DataUtil.getValue(temp.field, query) });\n        }\n        var req = {};\n        this.getRequestQuery(options, query, singles, request, req);\n        // Params\n        DataUtil.callAdaptorFunction(this, 'addParams', { dm: dm, query: query, params: params, reqParams: req });\n        // cleanup\n        var keys = Object.keys(req);\n        for (var _a = 0, keys_2 = keys; _a < keys_2.length; _a++) {\n            var prop = keys_2[_a];\n            if (DataUtil.isNull(req[prop]) || req[prop] === '' || req[prop].length === 0) {\n                delete req[prop];\n            }\n        }\n        if (!(options.skip in req && options.take in req) && take !== null) {\n            req[options.skip] = DataUtil.callAdaptorFunction(this, 'onSkip', skip, query);\n            req[options.take] = DataUtil.callAdaptorFunction(this, 'onTake', take, query);\n        }\n        var p = this.pvt;\n        this.pvt = {};\n        if (this.options.requestType === 'json') {\n            return {\n                data: JSON.stringify(req, DataUtil.parse.jsonDateReplacer),\n                url: url,\n                pvtData: p,\n                type: 'POST',\n                contentType: 'application/json; charset=utf-8'\n            };\n        }\n        temp = this.convertToQueryString(req, query, dm);\n        temp = (dm.dataSource.url.indexOf('?') !== -1 ? '&' : '/') + temp;\n        return {\n            type: 'GET', url: temp.length ? url.replace(/\\/*$/, temp) : url, pvtData: p\n        };\n    };\n    UrlAdaptor.prototype.getRequestQuery = function (options, query, singles, request, request1) {\n        var param = 'param';\n        var req = request1;\n        req[options.from] = query.fromTable;\n        if (options.apply && query.distincts.length) {\n            req[options.apply] = 'onDistinct' in this ? DataUtil.callAdaptorFunction(this, 'onDistinct', query.distincts) : '';\n        }\n        if (!query.distincts.length && options.expand) {\n            req[options.expand] = 'onExpand' in this && 'onSelect' in singles ?\n                DataUtil.callAdaptorFunction(this, 'onExpand', { selects: DataUtil.getValue(singles.onSelect.fieldNames, query), expands: query.expands }, query) : query.expands;\n        }\n        req[options.select] = 'onSelect' in singles && !query.distincts.length ?\n            DataUtil.callAdaptorFunction(this, 'onSelect', DataUtil.getValue(singles.onSelect.fieldNames, query), query) : '';\n        req[options.count] = query.isCountRequired ? DataUtil.callAdaptorFunction(this, 'onCount', query.isCountRequired, query) : '';\n        req[options.search] = request.searches.length ? DataUtil.callAdaptorFunction(this, 'onSearch', request.searches, query) : '';\n        req[options.skip] = 'onSkip' in singles ?\n            DataUtil.callAdaptorFunction(this, 'onSkip', DataUtil.getValue(singles.onSkip.nos, query), query) : '';\n        req[options.take] = 'onTake' in singles ?\n            DataUtil.callAdaptorFunction(this, 'onTake', DataUtil.getValue(singles.onTake.nos, query), query) : '';\n        req[options.where] = request.filters.length || request.searches.length ?\n            DataUtil.callAdaptorFunction(this, 'onWhere', request.filters, query) : '';\n        req[options.sortBy] = request.sorts.length ? DataUtil.callAdaptorFunction(this, 'onSortBy', request.sorts, query) : '';\n        req[options.group] = request.groups.length ? DataUtil.callAdaptorFunction(this, 'onGroup', request.groups, query) : '';\n        req[options.aggregates] = request.aggregates.length ?\n            DataUtil.callAdaptorFunction(this, 'onAggregates', request.aggregates, query) : '';\n        req[param] = [];\n    };\n    /**\n     * Convert the object from processQuery to string which can be added query string.\n     * @param  {Object} req\n     * @param  {Query} query\n     * @param  {DataManager} dm\n     */\n    UrlAdaptor.prototype.convertToQueryString = function (request, query, dm) {\n        return '';\n        // this needs to be overridden\n    };\n    /**\n     * Return the data from the data manager processing.\n     * @param  {DataResult} data\n     * @param  {DataOptions} ds?\n     * @param  {Query} query?\n     * @param  {XMLHttpRequest} xhr?\n     * @param  {Object} request?\n     * @param  {CrudOptions} changes?\n     */\n    UrlAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n        if (xhr && xhr.getResponseHeader('Content-Type') &&\n            xhr.getResponseHeader('Content-Type').indexOf('application/json') !== -1) {\n            var handleTimeZone = DataUtil.timeZoneHandling;\n            if (ds && !ds.timeZoneHandling) {\n                DataUtil.timeZoneHandling = false;\n            }\n            data = DataUtil.parse.parseJson(data);\n            DataUtil.timeZoneHandling = handleTimeZone;\n        }\n        var requests = request;\n        var pvt = requests.pvtData || {};\n        var groupDs = data ? data.groupDs : [];\n        if (xhr && xhr.getResponseHeader('Content-Type') &&\n            xhr.getResponseHeader('Content-Type').indexOf('xml') !== -1) {\n            return (query.isCountRequired ? { result: [], count: 0 } : []);\n        }\n        var d = JSON.parse(requests.data);\n        if (d && d.action === 'batch' && data && data.addedRecords) {\n            changes.addedRecords = data.addedRecords;\n            return changes;\n        }\n        if (data && data.d) {\n            data = data.d;\n        }\n        var args = {};\n        if (data && 'count' in data) {\n            args.count = data.count;\n        }\n        args.result = data && data.result ? data.result : data;\n        this.getAggregateResult(pvt, data, args, groupDs, query);\n        return DataUtil.isNull(args.count) ? args.result : { result: args.result, count: args.count, aggregates: args.aggregates };\n    };\n    /**\n     * Add the group query to the adaptor`s option.\n     * @param  {Object[]} e\n     * @returns void\n     */\n    UrlAdaptor.prototype.onGroup = function (e) {\n        this.pvt.groups = e;\n        return e;\n    };\n    /**\n     * Add the aggregate query to the adaptor`s option.\n     * @param  {Aggregates[]} e\n     * @returns void\n     */\n    UrlAdaptor.prototype.onAggregates = function (e) {\n        this.pvt.aggregates = e;\n    };\n    /**\n     * Prepare the request body based on the newly added, removed and updated records.\n     * The result is used by the batch request.\n     * @param  {DataManager} dm\n     * @param  {CrudOptions} changes\n     * @param  {Object} e\n     */\n    UrlAdaptor.prototype.batchRequest = function (dm, changes, e, query, original) {\n        var url;\n        var key;\n        return {\n            type: 'POST',\n            url: dm.dataSource.batchUrl || dm.dataSource.crudUrl || dm.dataSource.removeUrl || dm.dataSource.url,\n            contentType: 'application/json; charset=utf-8',\n            dataType: 'json',\n            data: JSON.stringify(extend({}, {\n                changed: changes.changedRecords,\n                added: changes.addedRecords,\n                deleted: changes.deletedRecords,\n                action: 'batch',\n                table: e[url],\n                key: e[key]\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    /**\n     * Method will trigger before send the request to server side.\n     * Used to set the custom header or modify the request options.\n     * @param  {DataManager} dm\n     * @param  {XMLHttpRequest} request\n     * @returns void\n     */\n    UrlAdaptor.prototype.beforeSend = function (dm, request) {\n        // need to extend this method\n    };\n    /**\n     * Prepare and returns request body which is used to insert a new record in the table.\n     * @param  {DataManager} dm\n     * @param  {Object} data\n     * @param  {string} tableName\n     */\n    UrlAdaptor.prototype.insert = function (dm, data, tableName, query) {\n        return {\n            url: dm.dataSource.insertUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify(extend({}, {\n                value: data,\n                table: tableName,\n                action: 'insert'\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    /**\n     * Prepare and return request body which is used to remove record from the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {number|string} value\n     * @param  {string} tableName\n     */\n    UrlAdaptor.prototype.remove = function (dm, keyField, value, tableName, query) {\n        return {\n            type: 'POST',\n            url: dm.dataSource.removeUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify(extend({}, {\n                key: value,\n                keyColumn: keyField,\n                table: tableName,\n                action: 'remove'\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    /**\n     * Prepare and return request body which is used to update record.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName\n     */\n    UrlAdaptor.prototype.update = function (dm, keyField, value, tableName, query) {\n        return {\n            type: 'POST',\n            url: dm.dataSource.updateUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify(extend({}, {\n                value: value,\n                action: 'update',\n                keyColumn: keyField,\n                key: value[keyField],\n                table: tableName\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    /**\n     * To generate the predicate based on the filtered query.\n     * @param  {Object[]|string[]|number[]} data\n     * @param  {Query} query\n     * @hidden\n     */\n    UrlAdaptor.prototype.getFiltersFrom = function (data, query) {\n        var key = query.fKey;\n        var value;\n        var prop = key;\n        var pKey = query.key;\n        var predicats = [];\n        if (typeof data[0] !== 'object') {\n            prop = null;\n        }\n        for (var i = 0; i < data.length; i++) {\n            if (typeof data[0] === 'object') {\n                value = DataUtil.getObject(pKey || prop, data[i]);\n            }\n            else {\n                value = data[i];\n            }\n            predicats.push(new Predicate(key, 'equal', value));\n        }\n        return Predicate.or(predicats);\n    };\n    UrlAdaptor.prototype.getAggregateResult = function (pvt, data, args, groupDs, query) {\n        var pData = data;\n        if (data && data.result) {\n            pData = data.result;\n        }\n        if (pvt && pvt.aggregates && pvt.aggregates.length) {\n            var agg = pvt.aggregates;\n            var fn = void 0;\n            var aggregateData = pData;\n            var res = {};\n            if (data.aggregate) {\n                aggregateData = data.aggregate;\n            }\n            for (var i = 0; i < agg.length; i++) {\n                fn = DataUtil.aggregates[agg[i].type];\n                if (fn) {\n                    res[agg[i].field + ' - ' + agg[i].type] = fn(aggregateData, agg[i].field);\n                }\n            }\n            args.aggregates = res;\n        }\n        if (pvt && pvt.groups && pvt.groups.length) {\n            var groups = pvt.groups;\n            for (var i = 0; i < groups.length; i++) {\n                var level = null;\n                if (!isNullOrUndefined(groupDs)) {\n                    groupDs = DataUtil.group(groupDs, groups[i]);\n                }\n                var groupQuery = Query.filterQueries(query.queries, 'onGroup')[i].e;\n                pData = DataUtil.group(pData, groups[i], pvt.aggregates, level, groupDs, groupQuery.comparer);\n            }\n            args.result = pData;\n        }\n        return args;\n    };\n    UrlAdaptor.prototype.getQueryRequest = function (query) {\n        var req = { sorts: [], groups: [], filters: [], searches: [], aggregates: [] };\n        req.sorts = Query.filterQueries(query.queries, 'onSortBy');\n        req.groups = Query.filterQueries(query.queries, 'onGroup');\n        req.filters = Query.filterQueries(query.queries, 'onWhere');\n        req.searches = Query.filterQueries(query.queries, 'onSearch');\n        req.aggregates = Query.filterQueries(query.queries, 'onAggregates');\n        return req;\n    };\n    UrlAdaptor.prototype.addParams = function (options) {\n        var req = options.reqParams;\n        if (options.params.length) {\n            req.params = {};\n        }\n        for (var _i = 0, _a = options.params; _i < _a.length; _i++) {\n            var tmp = _a[_i];\n            if (req[tmp.key]) {\n                throw new Error('Query() - addParams: Custom Param is conflicting other request arguments');\n            }\n            req[tmp.key] = tmp.value;\n            if (tmp.fn) {\n                req[tmp.key] = tmp.fn.call(options.query, tmp.key, options.query, options.dm);\n            }\n            req.params[tmp.key] = req[tmp.key];\n        }\n    };\n    return UrlAdaptor;\n}(Adaptor));\nexport { UrlAdaptor };\n/**\n * OData Adaptor that is extended from URL Adaptor, is used for consuming data through OData Service.\n * @hidden\n */\nvar ODataAdaptor = /** @class */ (function (_super) {\n    __extends(ODataAdaptor, _super);\n    function ODataAdaptor(props) {\n        var _this = _super.call(this) || this;\n        // options replaced the default adaptor options\n        _this.options = extend({}, _this.options, {\n            requestType: 'get',\n            accept: 'application/json;odata=light;q=1,application/json;odata=verbose;q=0.5',\n            multipartAccept: 'multipart/mixed',\n            sortBy: '$orderby',\n            select: '$select',\n            skip: '$skip',\n            take: '$top',\n            count: '$inlinecount',\n            where: '$filter',\n            expand: '$expand',\n            batch: '$batch',\n            changeSet: '--changeset_',\n            batchPre: 'batch_',\n            contentId: 'Content-Id: ',\n            batchContent: 'Content-Type: multipart/mixed; boundary=',\n            changeSetContent: 'Content-Type: application/http\\nContent-Transfer-Encoding: binary ',\n            batchChangeSetContentType: 'Content-Type: application/json; charset=utf-8 ',\n            updateType: 'PUT'\n        });\n        extend(_this.options, props || {});\n        return _this;\n    }\n    ODataAdaptor.prototype.getModuleName = function () {\n        return 'ODataAdaptor';\n    };\n    /**\n     * Generate request string based on the filter criteria from query.\n     * @param  {Predicate} pred\n     * @param  {boolean} requiresCast?\n     */\n    ODataAdaptor.prototype.onPredicate = function (predicate, query, requiresCast) {\n        var returnValue = '';\n        var operator;\n        var guid;\n        var val = predicate.value;\n        var type = typeof val;\n        var field = predicate.field ? ODataAdaptor.getField(predicate.field) : null;\n        if (val instanceof Date) {\n            val = 'datetime\\'' + DataUtil.parse.replacer(val) + '\\'';\n        }\n        if (type === 'string') {\n            val = encodeURIComponent(val);\n            val = '\\'' + val + '\\'';\n            if (requiresCast) {\n                field = 'cast(' + field + ', \\'Edm.String\\')';\n            }\n            if (DataUtil.parse.isGuid(val)) {\n                guid = 'guid';\n            }\n            if (predicate.ignoreCase) {\n                if (!guid) {\n                    field = 'tolower(' + field + ')';\n                }\n                val = val.toLowerCase();\n            }\n        }\n        operator = DataUtil.odBiOperator[predicate.operator];\n        if (operator) {\n            returnValue += field;\n            returnValue += operator;\n            if (guid) {\n                returnValue += guid;\n            }\n            return returnValue + val;\n        }\n        if (!isNullOrUndefined(this.getModuleName) && this.getModuleName() === 'ODataV4Adaptor') {\n            operator = DataUtil.odv4UniOperator[predicate.operator];\n        }\n        else {\n            operator = DataUtil.odUniOperator[predicate.operator];\n        }\n        if (operator === 'substringof') {\n            var temp = val;\n            val = field;\n            field = temp;\n        }\n        returnValue += operator + '(';\n        returnValue += field + ',';\n        if (guid) {\n            returnValue += guid;\n        }\n        returnValue += val + ')';\n        return returnValue;\n    };\n    ODataAdaptor.prototype.addParams = function (options) {\n        _super.prototype.addParams.call(this, options);\n        delete options.reqParams.params;\n    };\n    /**\n     * Generate request string based on the multiple filter criteria from query.\n     * @param  {Predicate} pred\n     * @param  {boolean} requiresCast?\n     */\n    ODataAdaptor.prototype.onComplexPredicate = function (predicate, query, requiresCast) {\n        var res = [];\n        for (var i = 0; i < predicate.predicates.length; i++) {\n            res.push('(' + this.onEachWhere(predicate.predicates[i], query, requiresCast) + ')');\n        }\n        return res.join(' ' + predicate.condition + ' ');\n    };\n    /**\n     * Generate query string based on the multiple filter criteria from query.\n     * @param  {Predicate} filter\n     * @param  {boolean} requiresCast?\n     */\n    ODataAdaptor.prototype.onEachWhere = function (filter, query, requiresCast) {\n        return filter.isComplex ? this.onComplexPredicate(filter, query, requiresCast) : this.onPredicate(filter, query, requiresCast);\n    };\n    /**\n     * Generate query string based on the multiple filter criteria from query.\n     * @param  {string[]} filters\n     */\n    ODataAdaptor.prototype.onWhere = function (filters) {\n        if (this.pvt.search) {\n            filters.push(this.onEachWhere(this.pvt.search, null, true));\n        }\n        return filters.join(' and ');\n    };\n    /**\n     * Generate query string based on the multiple search criteria from query.\n     * @param  {{fields:string[]} e\n     * @param  {string} operator\n     * @param  {string} key\n     * @param  {boolean}} ignoreCase\n     */\n    ODataAdaptor.prototype.onEachSearch = function (e) {\n        if (e.fields && e.fields.length === 0) {\n            DataUtil.throwError('Query() - Search : oData search requires list of field names to search');\n        }\n        var filter = this.pvt.search || [];\n        for (var i = 0; i < e.fields.length; i++) {\n            filter.push(new Predicate(e.fields[i], e.operator, e.key, e.ignoreCase));\n        }\n        this.pvt.search = filter;\n    };\n    /**\n     * Generate query string based on the search criteria from query.\n     * @param  {Object} e\n     */\n    ODataAdaptor.prototype.onSearch = function (e) {\n        this.pvt.search = Predicate.or(this.pvt.search);\n        return '';\n    };\n    /**\n     * Generate query string based on multiple sort criteria from query.\n     * @param  {QueryOptions} e\n     */\n    ODataAdaptor.prototype.onEachSort = function (e) {\n        var res = [];\n        if (e.name instanceof Array) {\n            for (var i = 0; i < e.name.length; i++) {\n                res.push(ODataAdaptor.getField(e.name[i]) + (e.direction === 'descending' ? ' desc' : ''));\n            }\n        }\n        else {\n            res.push(ODataAdaptor.getField(e.name) + (e.direction === 'descending' ? ' desc' : ''));\n        }\n        return res.join(',');\n    };\n    /**\n     * Returns sort query string.\n     * @param  {string[]} e\n     */\n    ODataAdaptor.prototype.onSortBy = function (e) {\n        return e.reverse().join(',');\n    };\n    /**\n     * Adds the group query to the adaptor option.\n     * @param  {Object[]} e\n     * @returns string\n     */\n    ODataAdaptor.prototype.onGroup = function (e) {\n        this.pvt.groups = e;\n        return [];\n    };\n    /**\n     * Returns the select query string.\n     * @param  {string[]} e\n     */\n    ODataAdaptor.prototype.onSelect = function (e) {\n        for (var i = 0; i < e.length; i++) {\n            e[i] = ODataAdaptor.getField(e[i]);\n        }\n        return e.join(',');\n    };\n    /**\n     * Add the aggregate query to the adaptor option.\n     * @param  {Object[]} e\n     * @returns string\n     */\n    ODataAdaptor.prototype.onAggregates = function (e) {\n        this.pvt.aggregates = e;\n        return '';\n    };\n    /**\n     * Returns the query string which requests total count from the data source.\n     * @param  {boolean} e\n     * @returns string\n     */\n    ODataAdaptor.prototype.onCount = function (e) {\n        return e === true ? 'allpages' : '';\n    };\n    /**\n     * Method will trigger before send the request to server side.\n     * Used to set the custom header or modify the request options.\n     * @param  {DataManager} dm\n     * @param  {XMLHttpRequest} request\n     * @param  {Ajax} settings?\n     */\n    ODataAdaptor.prototype.beforeSend = function (dm, request, settings) {\n        if (DataUtil.endsWith(settings.url, this.options.batch) && settings.type.toLowerCase() === 'post') {\n            request.setRequestHeader('Accept', this.options.multipartAccept);\n            request.setRequestHeader('DataServiceVersion', '2.0');\n            request.overrideMimeType('text/plain; charset=x-user-defined');\n        }\n        else {\n            request.setRequestHeader('Accept', this.options.accept);\n        }\n        request.setRequestHeader('DataServiceVersion', '2.0');\n        request.setRequestHeader('MaxDataServiceVersion', '2.0');\n    };\n    /**\n     * Returns the data from the query processing.\n     * @param  {DataResult} data\n     * @param  {DataOptions} ds?\n     * @param  {Query} query?\n     * @param  {XMLHttpRequest} xhr?\n     * @param  {Ajax} request?\n     * @param  {CrudOptions} changes?\n     * @returns aggregateResult\n     */\n    ODataAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n        var metaCheck = 'odata.metadata';\n        if ((request && request.type === 'GET') && !this.rootUrl && data[metaCheck]) {\n            var dataUrls = data[metaCheck].split('/$metadata#');\n            this.rootUrl = dataUrls[0];\n            this.resourceTableName = dataUrls[1];\n        }\n        var pvtData = 'pvtData';\n        if (!isNullOrUndefined(data.d)) {\n            var dataCopy = ((query && query.isCountRequired) ? data.d.results : data.d);\n            var metaData = '__metadata';\n            if (!isNullOrUndefined(dataCopy)) {\n                for (var i = 0; i < dataCopy.length; i++) {\n                    if (!isNullOrUndefined(dataCopy[i][metaData])) {\n                        delete dataCopy[i][metaData];\n                    }\n                }\n            }\n        }\n        var pvt = request && request[pvtData];\n        var emptyAndBatch = this.processBatchResponse(data, query, xhr, request, changes);\n        if (emptyAndBatch) {\n            return emptyAndBatch;\n        }\n        var versionCheck = xhr && request.getResponseHeader('DataServiceVersion');\n        var count = null;\n        var version = (versionCheck && parseInt(versionCheck, 10)) || 2;\n        if (query && query.isCountRequired) {\n            var oDataCount = '__count';\n            if (data[oDataCount] || data['odata.count']) {\n                count = data[oDataCount] || data['odata.count'];\n            }\n            if (data.d) {\n                data = data.d;\n            }\n            if (data[oDataCount] || data['odata.count']) {\n                count = data[oDataCount] || data['odata.count'];\n            }\n        }\n        if (version === 3 && data.value) {\n            data = data.value;\n        }\n        if (data.d) {\n            data = data.d;\n        }\n        if (version < 3 && data.results) {\n            data = data.results;\n        }\n        var args = {};\n        args.count = count;\n        args.result = data;\n        this.getAggregateResult(pvt, data, args, null, query);\n        return DataUtil.isNull(count) ? args.result : { result: args.result, count: args.count, aggregates: args.aggregates };\n    };\n    /**\n     * Converts the request object to query string.\n     * @param  {Object} req\n     * @param  {Query} query\n     * @param  {DataManager} dm\n     * @returns tableName\n     */\n    ODataAdaptor.prototype.convertToQueryString = function (request, query, dm) {\n        var res = [];\n        var table = 'table';\n        var tableName = request[table] || '';\n        var format = '$format';\n        delete request[table];\n        if (dm.dataSource.requiresFormat) {\n            request[format] = 'json';\n        }\n        var keys = Object.keys(request);\n        for (var _i = 0, keys_4 = keys; _i < keys_4.length; _i++) {\n            var prop = keys_4[_i];\n            res.push(prop + '=' + request[prop]);\n        }\n        res = res.join('&');\n        if (dm.dataSource.url && dm.dataSource.url.indexOf('?') !== -1 && !tableName) {\n            return res;\n        }\n        return res.length ? tableName + '?' + res : tableName || '';\n    };\n    ODataAdaptor.prototype.localTimeReplacer = function (key, convertObj) {\n        for (var _i = 0, _a = !isNullOrUndefined(convertObj) ? Object.keys(convertObj) : []; _i < _a.length; _i++) {\n            var prop = _a[_i];\n            if ((convertObj[prop] instanceof Date)) {\n                convertObj[prop] = DataUtil.dateParse.toLocalTime(convertObj[prop]);\n            }\n        }\n        return convertObj;\n    };\n    /**\n     * Prepare and returns request body which is used to insert a new record in the table.\n     * @param  {DataManager} dm\n     * @param  {Object} data\n     * @param  {string} tableName?\n     */\n    ODataAdaptor.prototype.insert = function (dm, data, tableName) {\n        return {\n            url: (dm.dataSource.insertUrl || dm.dataSource.url).replace(/\\/*$/, tableName ? '/' + tableName : ''),\n            data: JSON.stringify(data, this.options.localTime ? this.localTimeReplacer : null)\n        };\n    };\n    /**\n     * Prepare and return request body which is used to remove record from the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {number} value\n     * @param  {string} tableName?\n     */\n    ODataAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n        var url;\n        if (typeof value === 'string' && !DataUtil.parse.isGuid(value)) {\n            url = \"('\" + value + \"')\";\n        }\n        else {\n            url = \"(\" + value + \")\";\n        }\n        return {\n            type: 'DELETE',\n            url: (dm.dataSource.removeUrl || dm.dataSource.url).replace(/\\/*$/, tableName ? '/' + tableName : '') + url\n        };\n    };\n    /**\n     * Updates existing record and saves the changes to the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName?\n     * @returns this\n     */\n    ODataAdaptor.prototype.update = function (dm, keyField, value, tableName, query, original) {\n        if (this.options.updateType === 'PATCH' && !isNullOrUndefined(original)) {\n            value = this.compareAndRemove(value, original, keyField);\n        }\n        var url;\n        if (typeof value[keyField] === 'string' && !DataUtil.parse.isGuid(value[keyField])) {\n            url = \"('\" + value[keyField] + \"')\";\n        }\n        else {\n            url = \"(\" + value[keyField] + \")\";\n        }\n        return {\n            type: this.options.updateType,\n            url: (dm.dataSource.updateUrl || dm.dataSource.url).replace(/\\/*$/, tableName ? '/' + tableName : '') + url,\n            data: JSON.stringify(value, this.options.localTime ? this.localTimeReplacer : null),\n            accept: this.options.accept\n        };\n    };\n    /**\n     * Prepare the request body based on the newly added, removed and updated records.\n     * The result is used by the batch request.\n     * @param  {DataManager} dm\n     * @param  {CrudOptions} changes\n     * @param  {RemoteArgs} e\n     * @returns {Object}\n     */\n    ODataAdaptor.prototype.batchRequest = function (dm, changes, e, query, original) {\n        var initialGuid = e.guid = DataUtil.getGuid(this.options.batchPre);\n        var url = this.rootUrl ? this.rootUrl + '/' + this.options.batch :\n            dm.dataSource.url.replace(/\\/*$/, '/' + this.options.batch);\n        e.url = this.resourceTableName ? this.resourceTableName : e.url;\n        var args = {\n            url: e.url,\n            key: e.key,\n            cid: 1,\n            cSet: DataUtil.getGuid(this.options.changeSet)\n        };\n        var req = '--' + initialGuid + '\\n';\n        req += 'Content-Type: multipart/mixed; boundary=' + args.cSet.replace('--', '') + '\\n';\n        this.pvt.changeSet = 0;\n        req += this.generateInsertRequest(changes.addedRecords, args, dm);\n        req += this.generateUpdateRequest(changes.changedRecords, args, dm, original ? original.changedRecords : []);\n        req += this.generateDeleteRequest(changes.deletedRecords, args, dm);\n        req += args.cSet + '--\\n';\n        req += '--' + initialGuid + '--';\n        return {\n            type: 'POST',\n            url: url,\n            dataType: 'json',\n            contentType: 'multipart/mixed; charset=UTF-8;boundary=' + initialGuid,\n            data: req\n        };\n    };\n    /**\n     * Generate the string content from the removed records.\n     * The result will be send during batch update.\n     * @param  {Object[]} arr\n     * @param  {RemoteArgs} e\n     * @returns this\n     */\n    ODataAdaptor.prototype.generateDeleteRequest = function (arr, e, dm) {\n        if (!arr) {\n            return '';\n        }\n        var req = '';\n        var stat = {\n            'method': 'DELETE ',\n            'url': function (data, i, key) {\n                var url = DataUtil.getObject(key, data[i]);\n                if (typeof url === 'number' || DataUtil.parse.isGuid(url)) {\n                    return '(' + url + ')';\n                }\n                else if (url instanceof Date) {\n                    var dateTime = data[i][key];\n                    return '(' + dateTime.toJSON() + ')';\n                }\n                else {\n                    return \"('\" + url + \"')\";\n                }\n            },\n            'data': function (data, i) { return ''; }\n        };\n        req = this.generateBodyContent(arr, e, stat, dm);\n        return req + '\\n';\n    };\n    /**\n     * Generate the string content from the inserted records.\n     * The result will be send during batch update.\n     * @param  {Object[]} arr\n     * @param  {RemoteArgs} e\n     */\n    ODataAdaptor.prototype.generateInsertRequest = function (arr, e, dm) {\n        if (!arr) {\n            return '';\n        }\n        var req = '';\n        var stat = {\n            'method': 'POST ',\n            'url': function (data, i, key) { return ''; },\n            'data': function (data, i) { return JSON.stringify(data[i]) + '\\n\\n'; }\n        };\n        req = this.generateBodyContent(arr, e, stat, dm);\n        return req;\n    };\n    /**\n     * Generate the string content from the updated records.\n     * The result will be send during batch update.\n     * @param  {Object[]} arr\n     * @param  {RemoteArgs} e\n     */\n    ODataAdaptor.prototype.generateUpdateRequest = function (arr, e, dm, org) {\n        var _this = this;\n        if (!arr) {\n            return '';\n        }\n        var req = '';\n        arr.forEach(function (change) { return change = _this.compareAndRemove(change, org.filter(function (o) { return DataUtil.getObject(e.key, o) === DataUtil.getObject(e.key, change); })[0], e.key); });\n        var stat = {\n            'method': this.options.updateType + ' ',\n            'url': function (data, i, key) {\n                if (typeof data[i][key] === 'number' || DataUtil.parse.isGuid(data[i][key])) {\n                    return '(' + data[i][key] + ')';\n                }\n                else if (data[i][key] instanceof Date) {\n                    var date = data[i][key];\n                    return '(' + date.toJSON() + ')';\n                }\n                else {\n                    return \"('\" + data[i][key] + \"')\";\n                }\n            },\n            'data': function (data, i) { return JSON.stringify(data[i]) + '\\n\\n'; }\n        };\n        req = this.generateBodyContent(arr, e, stat, dm);\n        return req;\n    };\n    ODataAdaptor.getField = function (prop) {\n        return prop.replace(/\\./g, '/');\n    };\n    ODataAdaptor.prototype.generateBodyContent = function (arr, e, stat, dm) {\n        var req = '';\n        for (var i = 0; i < arr.length; i++) {\n            req += '\\n' + e.cSet + '\\n';\n            req += this.options.changeSetContent + '\\n\\n';\n            req += stat.method;\n            if (stat.method === 'POST ') {\n                req += (dm.dataSource.insertUrl || dm.dataSource.crudUrl || e.url) + stat.url(arr, i, e.key) + ' HTTP/1.1\\n';\n            }\n            else if (stat.method === 'PUT ' || stat.method === 'PATCH ') {\n                req += (dm.dataSource.updateUrl || dm.dataSource.crudUrl || e.url) + stat.url(arr, i, e.key) + ' HTTP/1.1\\n';\n            }\n            else if (stat.method === 'DELETE ') {\n                req += (dm.dataSource.removeUrl || dm.dataSource.crudUrl || e.url) + stat.url(arr, i, e.key) + ' HTTP/1.1\\n';\n            }\n            req += 'Accept: ' + this.options.accept + '\\n';\n            req += 'Content-Id: ' + this.pvt.changeSet++ + '\\n';\n            req += this.options.batchChangeSetContentType + '\\n';\n            if (!isNullOrUndefined(arr[i]['@odata.etag'])) {\n                req += 'If-Match: ' + arr[i]['@odata.etag'] + '\\n\\n';\n                delete arr[i]['@odata.etag'];\n            }\n            else {\n                req += '\\n';\n            }\n            req += stat.data(arr, i);\n        }\n        return req;\n    };\n    ODataAdaptor.prototype.processBatchResponse = function (data, query, xhr, request, changes) {\n        if (xhr && xhr.getResponseHeader('Content-Type') && xhr.getResponseHeader('Content-Type').indexOf('xml') !== -1) {\n            return (query.isCountRequired ? { result: [], count: 0 } : []);\n        }\n        if (request && this.options.batch && DataUtil.endsWith(request.url, this.options.batch) && request.type.toLowerCase() === 'post') {\n            var guid = xhr.getResponseHeader('Content-Type');\n            var cIdx = void 0;\n            var jsonObj = void 0;\n            var d = data + '';\n            guid = guid.substring(guid.indexOf('=batchresponse') + 1);\n            d = d.split(guid);\n            if (d.length < 2) {\n                return {};\n            }\n            d = d[1];\n            var exVal = /(?:\\bContent-Type.+boundary=)(changesetresponse.+)/i.exec(d);\n            if (exVal) {\n                d.replace(exVal[0], '');\n            }\n            var changeGuid = exVal ? exVal[1] : '';\n            d = d.split(changeGuid);\n            for (var i = d.length; i > -1; i--) {\n                if (!/\\bContent-ID:/i.test(d[i]) || !/\\bHTTP.+201/.test(d[i])) {\n                    continue;\n                }\n                cIdx = parseInt(/\\bContent-ID: (\\d+)/i.exec(d[i])[1], 10);\n                if (changes.addedRecords[cIdx]) {\n                    jsonObj = DataUtil.parse.parseJson(/^\\{.+\\}/m.exec(d[i])[0]);\n                    extend({}, changes.addedRecords[cIdx], this.processResponse(jsonObj));\n                }\n            }\n            return changes;\n        }\n        return null;\n    };\n    ODataAdaptor.prototype.compareAndRemove = function (data, original, key) {\n        var _this = this;\n        if (isNullOrUndefined(original)) {\n            return data;\n        }\n        Object.keys(data).forEach(function (prop) {\n            if (prop !== key && prop !== '@odata.etag') {\n                if (DataUtil.isPlainObject(data[prop])) {\n                    _this.compareAndRemove(data[prop], original[prop]);\n                    var final = Object.keys(data[prop]).filter(function (data) { return data !== '@odata.etag'; });\n                    if (final.length === 0) {\n                        delete data[prop];\n                    }\n                }\n                else if (data[prop] === original[prop]) {\n                    delete data[prop];\n                }\n                else if (data[prop] && original[prop] && data[prop].valueOf() === original[prop].valueOf()) {\n                    delete data[prop];\n                }\n            }\n        });\n        return data;\n    };\n    return ODataAdaptor;\n}(UrlAdaptor));\nexport { ODataAdaptor };\n/**\n * The OData v4 is an improved version of OData protocols.\n * The DataManager uses the ODataV4Adaptor to consume OData v4 services.\n * @hidden\n */\nvar ODataV4Adaptor = /** @class */ (function (_super) {\n    __extends(ODataV4Adaptor, _super);\n    function ODataV4Adaptor(props) {\n        var _this = _super.call(this, props) || this;\n        // options replaced the default adaptor options\n        _this.options = extend({}, _this.options, {\n            requestType: 'get',\n            accept: 'application/json, text/javascript, */*; q=0.01',\n            multipartAccept: 'multipart/mixed',\n            sortBy: '$orderby',\n            select: '$select',\n            skip: '$skip',\n            take: '$top',\n            count: '$count',\n            search: '$search',\n            where: '$filter',\n            expand: '$expand',\n            batch: '$batch',\n            changeSet: '--changeset_',\n            batchPre: 'batch_',\n            contentId: 'Content-Id: ',\n            batchContent: 'Content-Type: multipart/mixed; boundary=',\n            changeSetContent: 'Content-Type: application/http\\nContent-Transfer-Encoding: binary ',\n            batchChangeSetContentType: 'Content-Type: application/json; charset=utf-8 ',\n            updateType: 'PATCH',\n            localTime: false,\n            apply: '$apply'\n        });\n        extend(_this.options, props || {});\n        return _this;\n    }\n    /**\n     * @hidden\n     */\n    ODataV4Adaptor.prototype.getModuleName = function () {\n        return 'ODataV4Adaptor';\n    };\n    /**\n     * Returns the query string which requests total count from the data source.\n     * @param  {boolean} e\n     * @returns string\n     */\n    ODataV4Adaptor.prototype.onCount = function (e) {\n        return e === true ? 'true' : '';\n    };\n    /**\n     * Generate request string based on the filter criteria from query.\n     * @param  {Predicate} pred\n     * @param  {boolean} requiresCast?\n     */\n    ODataV4Adaptor.prototype.onPredicate = function (predicate, query, requiresCast) {\n        var returnValue = '';\n        var val = predicate.value;\n        var isDate = val instanceof Date;\n        returnValue = _super.prototype.onPredicate.call(this, predicate, query, requiresCast);\n        if (isDate) {\n            returnValue = returnValue.replace(/datetime'(.*)'$/, '$1');\n        }\n        return returnValue;\n    };\n    /**\n     *  Generate query string based on the multiple search criteria from query.\n     * @param  {{fields:string[]} e\n     * @param  {string} operator\n     * @param  {string} key\n     * @param  {boolean}} ignoreCase\n     */\n    ODataV4Adaptor.prototype.onEachSearch = function (e) {\n        var search = this.pvt.searches || [];\n        search.push(e.key);\n        this.pvt.searches = search;\n    };\n    /**\n     *  Generate query string based on the search criteria from query.\n     * @param  {Object} e\n     */\n    ODataV4Adaptor.prototype.onSearch = function (e) {\n        return this.pvt.searches.join(' OR ');\n    };\n    /**\n     * Returns the expand query string.\n     * @param  {string} e\n     */\n    ODataV4Adaptor.prototype.onExpand = function (e) {\n        var _this = this;\n        var selected = {};\n        var expanded = {};\n        var expands = e.expands.slice();\n        var exArr = [];\n        var selects = e.selects.filter(function (item) { return item.indexOf('.') > -1; });\n        selects.forEach(function (select) {\n            var splits = select.split('.');\n            if (!(splits[0] in selected)) {\n                selected[splits[0]] = [];\n            }\n            selected[splits[0]].push(splits[1]);\n        });\n        //Auto expand from select query\n        Object.keys(selected).forEach(function (expand) {\n            if ((expands.indexOf(expand) === -1)) {\n                expands.push(expand);\n            }\n        });\n        expands.forEach(function (expand) {\n            expanded[expand] = expand in selected ? expand + \"(\" + _this.options.select + \"=\" + selected[expand].join(',') + \")\" : expand;\n        });\n        Object.keys(expanded).forEach(function (ex) { return exArr.push(expanded[ex]); });\n        return exArr.join(',');\n    };\n    /**\n     * Returns the groupby query string.\n     * @param  {string} e\n     */\n    ODataV4Adaptor.prototype.onDistinct = function (distinctFields) {\n        var fields = distinctFields.map(function (field) { return ODataAdaptor.getField(field); }).join(',');\n        return \"groupby((\" + fields + \"))\";\n    };\n    /**\n     * Returns the select query string.\n     * @param  {string[]} e\n     */\n    ODataV4Adaptor.prototype.onSelect = function (e) {\n        return _super.prototype.onSelect.call(this, e.filter(function (item) { return item.indexOf('.') === -1; }));\n    };\n    /**\n     * Method will trigger before send the request to server side.\n     * Used to set the custom header or modify the request options.\n     * @param  {DataManager} dm\n     * @param  {XMLHttpRequest} request\n     * @param  {Ajax} settings\n     * @returns void\n     */\n    ODataV4Adaptor.prototype.beforeSend = function (dm, request, settings) {\n        if (settings.type === 'POST' || settings.type === 'PUT' || settings.type === 'PATCH') {\n            request.setRequestHeader('Prefer', 'return=representation');\n        }\n        request.setRequestHeader('Accept', this.options.accept);\n    };\n    /**\n     * Returns the data from the query processing.\n     * @param  {DataResult} data\n     * @param  {DataOptions} ds?\n     * @param  {Query} query?\n     * @param  {XMLHttpRequest} xhr?\n     * @param  {Ajax} request?\n     * @param  {CrudOptions} changes?\n     * @returns aggregateResult\n     */\n    ODataV4Adaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n        var metaName = '@odata.context';\n        if ((request && request.type === 'GET') && !this.rootUrl && data[metaName]) {\n            var dataUrl = data[metaName].split('/$metadata#');\n            this.rootUrl = dataUrl[0];\n            this.resourceTableName = dataUrl[1];\n        }\n        var pvtData = 'pvtData';\n        var pvt = request && request[pvtData];\n        var emptyAndBatch = _super.prototype.processBatchResponse.call(this, data, query, xhr, request, changes);\n        if (emptyAndBatch) {\n            return emptyAndBatch;\n        }\n        var count = null;\n        var dataCount = '@odata.count';\n        if (query && query.isCountRequired) {\n            if (dataCount in data) {\n                count = data[dataCount];\n            }\n        }\n        data = !isNullOrUndefined(data.value) ? data.value : data;\n        var args = {};\n        args.count = count;\n        args.result = data;\n        this.getAggregateResult(pvt, data, args, null, query);\n        return DataUtil.isNull(count) ? args.result : { result: args.result, count: count, aggregates: args.aggregates };\n    };\n    return ODataV4Adaptor;\n}(ODataAdaptor));\nexport { ODataV4Adaptor };\n/**\n * The Web API is a programmatic interface to define the request and response messages system that is mostly exposed in JSON or XML.\n * The DataManager uses the WebApiAdaptor to consume Web API.\n * Since this adaptor is targeted to interact with Web API created using OData endpoint, it is extended from ODataAdaptor\n * @hidden\n */\nvar WebApiAdaptor = /** @class */ (function (_super) {\n    __extends(WebApiAdaptor, _super);\n    function WebApiAdaptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    WebApiAdaptor.prototype.getModuleName = function () {\n        return 'WebApiAdaptor';\n    };\n    /**\n     * Prepare and returns request body which is used to insert a new record in the table.\n     * @param  {DataManager} dm\n     * @param  {Object} data\n     * @param  {string} tableName?\n     */\n    WebApiAdaptor.prototype.insert = function (dm, data, tableName) {\n        return {\n            type: 'POST',\n            url: dm.dataSource.url,\n            data: JSON.stringify(data)\n        };\n    };\n    /**\n     * Prepare and return request body which is used to remove record from the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {number} value\n     * @param  {string} tableName?\n     */\n    WebApiAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n        return {\n            type: 'DELETE',\n            url: dm.dataSource.url + '/' + value,\n            data: JSON.stringify(value)\n        };\n    };\n    /**\n     * Prepare and return request body which is used to update record.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName?\n     */\n    WebApiAdaptor.prototype.update = function (dm, keyField, value, tableName) {\n        return {\n            type: 'PUT',\n            url: dm.dataSource.url,\n            data: JSON.stringify(value)\n        };\n    };\n    /**\n     * Method will trigger before send the request to server side.\n     * Used to set the custom header or modify the request options.\n     * @param  {DataManager} dm\n     * @param  {XMLHttpRequest} request\n     * @param  {Ajax} settings\n     * @returns void\n     */\n    WebApiAdaptor.prototype.beforeSend = function (dm, request, settings) {\n        request.setRequestHeader('Accept', 'application/json, text/javascript, */*; q=0.01');\n    };\n    /**\n     * Returns the data from the query processing.\n     * @param  {DataResult} data\n     * @param  {DataOptions} ds?\n     * @param  {Query} query?\n     * @param  {XMLHttpRequest} xhr?\n     * @param  {Ajax} request?\n     * @param  {CrudOptions} changes?\n     * @returns aggregateResult\n     */\n    WebApiAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n        var pvtData = 'pvtData';\n        var pvt = request && request[pvtData];\n        var count = null;\n        var args = {};\n        if (request && request.type.toLowerCase() !== 'post') {\n            var versionCheck = xhr && request.getResponseHeader('DataServiceVersion');\n            var version = (versionCheck && parseInt(versionCheck, 10)) || 2;\n            if (query && query.isCountRequired) {\n                if (!DataUtil.isNull(data.Count)) {\n                    count = data.Count;\n                }\n            }\n            if (version < 3 && data.Items) {\n                data = data.Items;\n            }\n            args.count = count;\n            args.result = data;\n            this.getAggregateResult(pvt, data, args, null, query);\n        }\n        args.result = args.result || data;\n        return DataUtil.isNull(count) ? args.result : { result: args.result, count: args.count, aggregates: args.aggregates };\n    };\n    return WebApiAdaptor;\n}(ODataAdaptor));\nexport { WebApiAdaptor };\n/**\n * WebMethodAdaptor can be used by DataManager to interact with web method.\n * @hidden\n */\nvar WebMethodAdaptor = /** @class */ (function (_super) {\n    __extends(WebMethodAdaptor, _super);\n    function WebMethodAdaptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Prepare the request body based on the query.\n     * The query information can be accessed at the WebMethod using variable named `value`.\n     * @param  {DataManager} dm\n     * @param  {Query} query\n     * @param  {Object[]} hierarchyFilters?\n     * @returns application\n     */\n    WebMethodAdaptor.prototype.processQuery = function (dm, query, hierarchyFilters) {\n        var obj = new UrlAdaptor().processQuery(dm, query, hierarchyFilters);\n        var getData = 'data';\n        var data = DataUtil.parse.parseJson(obj[getData]);\n        var result = {};\n        var value = 'value';\n        if (data.param) {\n            for (var i = 0; i < data.param.length; i++) {\n                var param = data.param[i];\n                var key = Object.keys(param)[0];\n                result[key] = param[key];\n            }\n        }\n        result[value] = data;\n        var pvtData = 'pvtData';\n        var url = 'url';\n        return {\n            data: JSON.stringify(result),\n            url: obj[url],\n            pvtData: obj[pvtData],\n            type: 'POST',\n            contentType: 'application/json; charset=utf-8'\n        };\n    };\n    return WebMethodAdaptor;\n}(UrlAdaptor));\nexport { WebMethodAdaptor };\n/**\n * RemoteSaveAdaptor, extended from JsonAdaptor and it is used for binding local data and performs all DataManager queries in client-side.\n * It interacts with server-side only for CRUD operations.\n * @hidden\n */\nvar RemoteSaveAdaptor = /** @class */ (function (_super) {\n    __extends(RemoteSaveAdaptor, _super);\n    /**\n     * @hidden\n     */\n    function RemoteSaveAdaptor() {\n        var _this = _super.call(this) || this;\n        setValue('beforeSend', UrlAdaptor.prototype.beforeSend, _this);\n        return _this;\n    }\n    RemoteSaveAdaptor.prototype.insert = function (dm, data, tableName, query, position) {\n        this.pvt.position = position;\n        this.updateType = 'add';\n        return {\n            url: dm.dataSource.insertUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify(extend({}, {\n                value: data,\n                table: tableName,\n                action: 'insert'\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    RemoteSaveAdaptor.prototype.remove = function (dm, keyField, val, tableName, query) {\n        _super.prototype.remove.call(this, dm, keyField, val);\n        return {\n            type: 'POST',\n            url: dm.dataSource.removeUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify(extend({}, {\n                key: val,\n                keyColumn: keyField,\n                table: tableName,\n                action: 'remove'\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    RemoteSaveAdaptor.prototype.update = function (dm, keyField, val, tableName, query) {\n        this.updateType = 'update';\n        this.updateKey = keyField;\n        return {\n            type: 'POST',\n            url: dm.dataSource.updateUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify(extend({}, {\n                value: val,\n                action: 'update',\n                keyColumn: keyField,\n                key: val[keyField],\n                table: tableName\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    RemoteSaveAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes, e) {\n        var i;\n        if (this.updateType === 'add') {\n            _super.prototype.insert.call(this, ds, data, null, null, this.pvt.position);\n        }\n        if (this.updateType === 'update') {\n            _super.prototype.update.call(this, ds, this.updateKey, data);\n        }\n        this.updateType = undefined;\n        if (data.added) {\n            for (i = 0; i < data.added.length; i++) {\n                _super.prototype.insert.call(this, ds, data.added[i]);\n            }\n        }\n        if (data.changed) {\n            for (i = 0; i < data.changed.length; i++) {\n                _super.prototype.update.call(this, ds, e.key, data.changed[i]);\n            }\n        }\n        if (data.deleted) {\n            for (i = 0; i < data.deleted.length; i++) {\n                _super.prototype.remove.call(this, ds, e.key, data.deleted[i]);\n            }\n        }\n        return data;\n    };\n    /**\n     * Prepare the request body based on the newly added, removed and updated records.\n     * Also perform the changes in the locally cached data to sync with the remote data.\n     * The result is used by the batch request.\n     * @param  {DataManager} dm\n     * @param  {CrudOptions} changes\n     * @param  {RemoteArgs} e\n     */\n    RemoteSaveAdaptor.prototype.batchRequest = function (dm, changes, e) {\n        return {\n            type: 'POST',\n            url: dm.dataSource.batchUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            contentType: 'application/json; charset=utf-8',\n            dataType: 'json',\n            data: JSON.stringify({\n                changed: changes.changedRecords,\n                added: changes.addedRecords,\n                deleted: changes.deletedRecords,\n                action: 'batch',\n                table: e.url,\n                key: e.key\n            })\n        };\n    };\n    RemoteSaveAdaptor.prototype.addParams = function (options) {\n        var urlParams = new UrlAdaptor();\n        urlParams.addParams(options);\n    };\n    return RemoteSaveAdaptor;\n}(JsonAdaptor));\nexport { RemoteSaveAdaptor };\n/**\n * Cache Adaptor is used to cache the data of the visited pages. It prevents new requests for the previously visited pages.\n * You can configure cache page size and duration of caching by using cachingPageSize and timeTillExpiration properties of the DataManager\n * @hidden\n */\nvar CacheAdaptor = /** @class */ (function (_super) {\n    __extends(CacheAdaptor, _super);\n    /**\n     * Constructor for CacheAdaptor class.\n     * @param  {CacheAdaptor} adaptor?\n     * @param  {number} timeStamp?\n     * @param  {number} pageSize?\n     * @hidden\n     */\n    function CacheAdaptor(adaptor, timeStamp, pageSize) {\n        var _this = _super.call(this) || this;\n        _this.isCrudAction = false;\n        _this.isInsertAction = false;\n        if (!isNullOrUndefined(adaptor)) {\n            _this.cacheAdaptor = adaptor;\n        }\n        _this.pageSize = pageSize;\n        _this.guidId = DataUtil.getGuid('cacheAdaptor');\n        var obj = { keys: [], results: [] };\n        window.localStorage.setItem(_this.guidId, JSON.stringify(obj));\n        var guid = _this.guidId;\n        if (!isNullOrUndefined(timeStamp)) {\n            setInterval(function () {\n                var data;\n                data = DataUtil.parse.parseJson(window.localStorage.getItem(guid));\n                var forDel = [];\n                for (var i = 0; i < data.results.length; i++) {\n                    var currentTime = +new Date();\n                    var requestTime = +new Date(data.results[i].timeStamp);\n                    data.results[i].timeStamp = currentTime - requestTime;\n                    if (currentTime - requestTime > timeStamp) {\n                        forDel.push(i);\n                    }\n                }\n                for (var i = 0; i < forDel.length; i++) {\n                    data.results.splice(forDel[i], 1);\n                    data.keys.splice(forDel[i], 1);\n                }\n                window.localStorage.removeItem(guid);\n                window.localStorage.setItem(guid, JSON.stringify(data));\n            }, timeStamp);\n        }\n        return _this;\n    }\n    /**\n     * It will generate the key based on the URL when we send a request to server.\n     * @param  {string} url\n     * @param  {Query} query?\n     * @hidden\n     */\n    CacheAdaptor.prototype.generateKey = function (url, query) {\n        var queries = this.getQueryRequest(query);\n        var singles = Query.filterQueryLists(query.queries, ['onSelect', 'onPage', 'onSkip', 'onTake', 'onRange']);\n        var key = url;\n        var page = 'onPage';\n        if (page in singles) {\n            key += singles[page].pageIndex;\n        }\n        queries.sorts.forEach(function (obj) {\n            key += obj.e.direction + obj.e.fieldName;\n        });\n        queries.groups.forEach(function (obj) {\n            key += obj.e.fieldName;\n        });\n        queries.searches.forEach(function (obj) {\n            key += obj.e.searchKey;\n        });\n        for (var filter = 0; filter < queries.filters.length; filter++) {\n            var currentFilter = queries.filters[filter];\n            if (currentFilter.e.isComplex) {\n                var newQuery = query.clone();\n                newQuery.queries = [];\n                for (var i = 0; i < currentFilter.e.predicates.length; i++) {\n                    newQuery.queries.push({ fn: 'onWhere', e: currentFilter.e.predicates[i], filter: query.queries.filter });\n                }\n                key += currentFilter.e.condition + this.generateKey(url, newQuery);\n            }\n            else {\n                key += currentFilter.e.field + currentFilter.e.operator + currentFilter.e.value;\n            }\n        }\n        return key;\n    };\n    /**\n     * Process the query to generate request body.\n     * If the data is already cached, it will return the cached data.\n     * @param  {DataManager} dm\n     * @param  {Query} query?\n     * @param  {Object[]} hierarchyFilters?\n     */\n    CacheAdaptor.prototype.processQuery = function (dm, query, hierarchyFilters) {\n        var key = this.generateKey(dm.dataSource.url, query);\n        var cachedItems;\n        cachedItems = DataUtil.parse.parseJson(window.localStorage.getItem(this.guidId));\n        var data = cachedItems ? cachedItems.results[cachedItems.keys.indexOf(key)] : null;\n        if (data != null && !this.isCrudAction && !this.isInsertAction) {\n            return data;\n        }\n        this.isCrudAction = null;\n        this.isInsertAction = null;\n        return this.cacheAdaptor.processQuery.apply(this.cacheAdaptor, [].slice.call(arguments, 0));\n    };\n    /**\n     * Returns the data from the query processing.\n     * It will also cache the data for later usage.\n     * @param  {DataResult} data\n     * @param  {DataManager} ds?\n     * @param  {Query} query?\n     * @param  {XMLHttpRequest} xhr?\n     * @param  {Ajax} request?\n     * @param  {CrudOptions} changes?\n     */\n    CacheAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n        if (this.isInsertAction || (request && this.cacheAdaptor.options.batch &&\n            DataUtil.endsWith(request.url, this.cacheAdaptor.options.batch) && request.type.toLowerCase() === 'post')) {\n            return this.cacheAdaptor.processResponse(data, ds, query, xhr, request, changes);\n        }\n        data = this.cacheAdaptor.processResponse.apply(this.cacheAdaptor, [].slice.call(arguments, 0));\n        var key = query ? this.generateKey(ds.dataSource.url, query) : ds.dataSource.url;\n        var obj = {};\n        obj = DataUtil.parse.parseJson(window.localStorage.getItem(this.guidId));\n        var index = obj.keys.indexOf(key);\n        if (index !== -1) {\n            obj.results.splice(index, 1);\n            obj.keys.splice(index, 1);\n        }\n        obj.results[obj.keys.push(key) - 1] = { keys: key, result: data.result, timeStamp: new Date(), count: data.count };\n        while (obj.results.length > this.pageSize) {\n            obj.results.splice(0, 1);\n            obj.keys.splice(0, 1);\n        }\n        window.localStorage.setItem(this.guidId, JSON.stringify(obj));\n        return data;\n    };\n    /**\n     * Method will trigger before send the request to server side. Used to set the custom header or modify the request options.\n     * @param  {DataManager} dm\n     * @param  {XMLHttpRequest} request\n     * @param  {Ajax} settings?\n     */\n    CacheAdaptor.prototype.beforeSend = function (dm, request, settings) {\n        if (DataUtil.endsWith(settings.url, this.cacheAdaptor.options.batch) && settings.type.toLowerCase() === 'post') {\n            request.setRequestHeader('Accept', this.cacheAdaptor.options.multipartAccept);\n        }\n        if (!dm.dataSource.crossDomain) {\n            request.setRequestHeader('Accept', this.cacheAdaptor.options.accept);\n        }\n    };\n    /**\n     * Updates existing record and saves the changes to the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName\n     */\n    CacheAdaptor.prototype.update = function (dm, keyField, value, tableName) {\n        this.isCrudAction = true;\n        return this.cacheAdaptor.update(dm, keyField, value, tableName);\n    };\n    /**\n     * Prepare and returns request body which is used to insert a new record in the table.\n     * @param  {DataManager} dm\n     * @param  {Object} data\n     * @param  {string} tableName?\n     */\n    CacheAdaptor.prototype.insert = function (dm, data, tableName) {\n        this.isInsertAction = true;\n        return this.cacheAdaptor.insert(dm, data, tableName);\n    };\n    /**\n     * Prepare and return request body which is used to remove record from the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName?\n     */\n    CacheAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n        this.isCrudAction = true;\n        return this.cacheAdaptor.remove(dm, keyField, value, tableName);\n    };\n    /**\n     * Prepare the request body based on the newly added, removed and updated records.\n     * The result is used by the batch request.\n     * @param  {DataManager} dm\n     * @param  {CrudOptions} changes\n     * @param  {RemoteArgs} e\n     */\n    CacheAdaptor.prototype.batchRequest = function (dm, changes, e) {\n        return this.cacheAdaptor.batchRequest(dm, changes, e);\n    };\n    return CacheAdaptor;\n}(UrlAdaptor));\nexport { CacheAdaptor };\n","import { Ajax } from '@syncfusion/ej2-base';\nimport { extend, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataUtil } from './util';\nimport { Query } from './query';\nimport { ODataAdaptor, JsonAdaptor, CacheAdaptor, RemoteSaveAdaptor } from './adaptors';\n/**\n * DataManager is used to manage and manipulate relational data.\n */\nvar DataManager = /** @class */ (function () {\n    /**\n     * Constructor for DataManager class\n     * @param  {DataOptions|JSON[]} dataSource?\n     * @param  {Query} query?\n     * @param  {AdaptorOptions|string} adaptor?\n     * @hidden\n     */\n    function DataManager(dataSource, query, adaptor) {\n        var _this = this;\n        /** @hidden */\n        this.dateParse = true;\n        /** @hidden */\n        this.timeZoneHandling = true;\n        this.requests = [];\n        if (!dataSource && !this.dataSource) {\n            dataSource = [];\n        }\n        adaptor = adaptor || dataSource.adaptor;\n        if (dataSource && dataSource.timeZoneHandling === false) {\n            this.timeZoneHandling = dataSource.timeZoneHandling;\n        }\n        var data;\n        if (dataSource instanceof Array) {\n            data = {\n                json: dataSource,\n                offline: true\n            };\n        }\n        else if (typeof dataSource === 'object') {\n            if (!dataSource.json) {\n                dataSource.json = [];\n            }\n            data = {\n                url: dataSource.url,\n                insertUrl: dataSource.insertUrl,\n                removeUrl: dataSource.removeUrl,\n                updateUrl: dataSource.updateUrl,\n                crudUrl: dataSource.crudUrl,\n                batchUrl: dataSource.batchUrl,\n                json: dataSource.json,\n                headers: dataSource.headers,\n                accept: dataSource.accept,\n                data: dataSource.data,\n                timeTillExpiration: dataSource.timeTillExpiration,\n                cachingPageSize: dataSource.cachingPageSize,\n                enableCaching: dataSource.enableCaching,\n                requestType: dataSource.requestType,\n                key: dataSource.key,\n                crossDomain: dataSource.crossDomain,\n                jsonp: dataSource.jsonp,\n                dataType: dataSource.dataType,\n                offline: dataSource.offline !== undefined ? dataSource.offline\n                    : dataSource.adaptor instanceof RemoteSaveAdaptor ? false : dataSource.url ? false : true,\n                requiresFormat: dataSource.requiresFormat\n            };\n        }\n        else {\n            DataUtil.throwError('DataManager: Invalid arguments');\n        }\n        if (data.requiresFormat === undefined && !DataUtil.isCors()) {\n            data.requiresFormat = isNullOrUndefined(data.crossDomain) ? true : data.crossDomain;\n        }\n        if (data.dataType === undefined) {\n            data.dataType = 'json';\n        }\n        this.dataSource = data;\n        this.defaultQuery = query;\n        if (data.url && data.offline && !data.json.length) {\n            this.isDataAvailable = false;\n            this.adaptor = adaptor || new ODataAdaptor();\n            this.dataSource.offline = false;\n            this.ready = this.executeQuery(query || new Query());\n            this.ready.then(function (e) {\n                _this.dataSource.offline = true;\n                _this.isDataAvailable = true;\n                data.json = e.result;\n                _this.adaptor = new JsonAdaptor();\n            });\n        }\n        else {\n            this.adaptor = data.offline ? new JsonAdaptor() : new ODataAdaptor();\n        }\n        if (!data.jsonp && this.adaptor instanceof ODataAdaptor) {\n            data.jsonp = 'callback';\n        }\n        this.adaptor = adaptor || this.adaptor;\n        if (data.enableCaching) {\n            this.adaptor = new CacheAdaptor(this.adaptor, data.timeTillExpiration, data.cachingPageSize);\n        }\n        return this;\n    }\n    /**\n     * Overrides DataManager's default query with given query.\n     * @param  {Query} query - Defines the new default query.\n     */\n    DataManager.prototype.setDefaultQuery = function (query) {\n        this.defaultQuery = query;\n        return this;\n    };\n    /**\n     * Executes the given query with local data source.\n     * @param  {Query} query - Defines the query to retrieve data.\n     */\n    DataManager.prototype.executeLocal = function (query) {\n        if (!this.defaultQuery && !(query instanceof Query)) {\n            DataUtil.throwError('DataManager - executeLocal() : A query is required to execute');\n        }\n        if (!this.dataSource.json) {\n            DataUtil.throwError('DataManager - executeLocal() : Json data is required to execute');\n        }\n        query = query || this.defaultQuery;\n        var result = this.adaptor.processQuery(this, query);\n        if (query.subQuery) {\n            var from = query.subQuery.fromTable;\n            var lookup = query.subQuery.lookups;\n            var res = query.isCountRequired ? result.result :\n                result;\n            if (lookup && lookup instanceof Array) {\n                DataUtil.buildHierarchy(query.subQuery.fKey, from, res, lookup, query.subQuery.key);\n            }\n            for (var j = 0; j < res.length; j++) {\n                if (res[j][from] instanceof Array) {\n                    res[j] = extend({}, {}, res[j]);\n                    res[j][from] = this.adaptor.processResponse(query.subQuery.using(new DataManager(res[j][from].slice(0))).executeLocal(), this, query);\n                }\n            }\n        }\n        return this.adaptor.processResponse(result, this, query);\n    };\n    /**\n     * Executes the given query with either local or remote data source.\n     * It will be executed as asynchronously and returns Promise object which will be resolved or rejected after action completed.\n     * @param  {Query|Function} query - Defines the query to retrieve data.\n     * @param  {Function} done - Defines the callback function and triggers when the Promise is resolved.\n     * @param  {Function} fail - Defines the callback function and triggers when the Promise is rejected.\n     * @param  {Function} always - Defines the callback function and triggers when the Promise is resolved or rejected.\n     */\n    DataManager.prototype.executeQuery = function (query, done, fail, always) {\n        var _this = this;\n        var makeRequest = 'makeRequest';\n        if (typeof query === 'function') {\n            always = fail;\n            fail = done;\n            done = query;\n            query = null;\n        }\n        if (!query) {\n            query = this.defaultQuery;\n        }\n        if (!(query instanceof Query)) {\n            DataUtil.throwError('DataManager - executeQuery() : A query is required to execute');\n        }\n        var deffered = new Deferred();\n        var args = { query: query };\n        if (!this.dataSource.offline && (this.dataSource.url !== undefined && this.dataSource.url !== '')\n            || (!isNullOrUndefined(this.adaptor[makeRequest]))) {\n            var result = this.adaptor.processQuery(this, query);\n            if (!isNullOrUndefined(this.adaptor[makeRequest])) {\n                this.adaptor[makeRequest](result, deffered, args, query);\n            }\n            else {\n                this.makeRequest(result, deffered, args, query);\n            }\n        }\n        else {\n            DataManager.nextTick(function () {\n                var res = _this.executeLocal(query);\n                args = DataManager.getDeferedArgs(query, res, args);\n                deffered.resolve(args);\n            });\n        }\n        if (done || fail) {\n            deffered.promise.then(done, fail);\n        }\n        if (always) {\n            deffered.promise.then(always, always);\n        }\n        return deffered.promise;\n    };\n    DataManager.getDeferedArgs = function (query, result, args) {\n        if (query.isCountRequired) {\n            args.result = result.result;\n            args.count = result.count;\n            args.aggregates = result.aggregates;\n        }\n        else {\n            args.result = result;\n        }\n        return args;\n    };\n    DataManager.nextTick = function (fn) {\n        (window.setImmediate || window.setTimeout)(fn, 0);\n    };\n    DataManager.prototype.extendRequest = function (url, fnSuccess, fnFail) {\n        return extend({}, {\n            type: 'GET',\n            dataType: this.dataSource.dataType,\n            crossDomain: this.dataSource.crossDomain,\n            jsonp: this.dataSource.jsonp,\n            cache: true,\n            processData: false,\n            onSuccess: fnSuccess,\n            onFailure: fnFail\n        }, url);\n    };\n    DataManager.prototype.makeRequest = function (url, deffered, args, query) {\n        var _this = this;\n        var isSelector = !!query.subQuerySelector;\n        var fnFail = function (e) {\n            args.error = e;\n            deffered.reject(args);\n        };\n        var process = function (data, count, xhr, request, actual, aggregates, virtualSelectRecords) {\n            args.xhr = xhr;\n            args.count = count ? parseInt(count.toString(), 10) : 0;\n            args.result = data;\n            args.request = request;\n            args.aggregates = aggregates;\n            args.actual = actual;\n            args.virtualSelectRecords = virtualSelectRecords;\n            deffered.resolve(args);\n        };\n        var fnQueryChild = function (data, selector) {\n            var subDeffer = new Deferred();\n            var childArgs = { parent: args };\n            query.subQuery.isChild = true;\n            var subUrl = _this.adaptor.processQuery(_this, query.subQuery, data ? _this.adaptor.processResponse(data) : selector);\n            var childReq = _this.makeRequest(subUrl, subDeffer, childArgs, query.subQuery);\n            if (!isSelector) {\n                subDeffer.then(function (subData) {\n                    if (data) {\n                        DataUtil.buildHierarchy(query.subQuery.fKey, query.subQuery.fromTable, data, subData, query.subQuery.key);\n                        process(data, subData.count, subData.xhr);\n                    }\n                }, fnFail);\n            }\n            return childReq;\n        };\n        var fnSuccess = function (data, request) {\n            if (request.httpRequest.getResponseHeader('Content-Type').indexOf('xml') === -1 && _this.dateParse) {\n                data = DataUtil.parse.parseJson(data);\n            }\n            var result = _this.adaptor.processResponse(data, _this, query, request.httpRequest, request);\n            var count = 0;\n            var aggregates = null;\n            var virtualSelectRecords = 'virtualSelectRecords';\n            var virtualRecords = data[virtualSelectRecords];\n            if (query.isCountRequired) {\n                count = result.count;\n                aggregates = result.aggregates;\n                result = result.result;\n            }\n            if (!query.subQuery) {\n                process(result, count, request.httpRequest, request.type, data, aggregates, virtualRecords);\n                return;\n            }\n            if (!isSelector) {\n                fnQueryChild(result, request);\n            }\n        };\n        var req = this.extendRequest(url, fnSuccess, fnFail);\n        var ajax = new Ajax(req);\n        ajax.beforeSend = function () {\n            _this.beforeSend(ajax.httpRequest, ajax);\n        };\n        req = ajax.send();\n        req.catch(function (e) { return true; }); // to handle failure remote requests.        \n        this.requests.push(ajax);\n        if (isSelector) {\n            var promise = void 0;\n            var res = query.subQuerySelector.call(this, { query: query.subQuery, parent: query });\n            if (res && res.length) {\n                promise = Promise.all([req, fnQueryChild(null, res)]);\n                promise.then(function () {\n                    var args = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        args[_i] = arguments[_i];\n                    }\n                    var result = args[0];\n                    var pResult = _this.adaptor.processResponse(result[0], _this, query, _this.requests[0].httpRequest, _this.requests[0]);\n                    var count = 0;\n                    if (query.isCountRequired) {\n                        count = pResult.count;\n                        pResult = pResult.result;\n                    }\n                    var cResult = _this.adaptor.processResponse(result[1], _this, query.subQuery, _this.requests[1].httpRequest, _this.requests[1]);\n                    count = 0;\n                    if (query.subQuery.isCountRequired) {\n                        count = cResult.count;\n                        cResult = cResult.result;\n                    }\n                    DataUtil.buildHierarchy(query.subQuery.fKey, query.subQuery.fromTable, pResult, cResult, query.subQuery.key);\n                    isSelector = false;\n                    process(pResult, count, _this.requests[0].httpRequest);\n                });\n            }\n            else {\n                isSelector = false;\n            }\n        }\n        return req;\n    };\n    DataManager.prototype.beforeSend = function (request, settings) {\n        this.adaptor.beforeSend(this, request, settings);\n        var headers = this.dataSource.headers;\n        var props;\n        for (var i = 0; headers && i < headers.length; i++) {\n            props = [];\n            var keys = Object.keys(headers[i]);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var prop = keys_1[_i];\n                props.push(prop);\n                request.setRequestHeader(prop, headers[i][prop]);\n            }\n        }\n    };\n    /**\n     * Save bulk changes to the given table name.\n     * User can add a new record, edit an existing record, and delete a record at the same time.\n     * If the datasource from remote, then updated in a single post.\n     * @param  {Object} changes - Defines the CrudOptions.\n     * @param  {string} key - Defines the column field.\n     * @param  {string|Query} tableName - Defines the table name.\n     * @param  {Query} query - Sets default query for the DataManager.\n     */\n    DataManager.prototype.saveChanges = function (changes, key, tableName, query, original) {\n        var _this = this;\n        if (tableName instanceof Query) {\n            query = tableName;\n            tableName = null;\n        }\n        var args = {\n            url: tableName,\n            key: key || this.dataSource.key\n        };\n        var req = this.adaptor.batchRequest(this, changes, args, query || new Query(), original);\n        var doAjaxRequest = 'doAjaxRequest';\n        if (this.dataSource.offline) {\n            return req;\n        }\n        if (!isNullOrUndefined(this.adaptor[doAjaxRequest])) {\n            return this.adaptor[doAjaxRequest](req);\n        }\n        else {\n            var deff_1 = new Deferred();\n            var ajax_1 = new Ajax(req);\n            ajax_1.beforeSend = function () {\n                _this.beforeSend(ajax_1.httpRequest, ajax_1);\n            };\n            ajax_1.onSuccess = function (data, request) {\n                deff_1.resolve(_this.adaptor.processResponse(data, _this, null, request.httpRequest, request, changes, args));\n            };\n            ajax_1.onFailure = function (e) {\n                deff_1.reject([{ error: e }]);\n            };\n            ajax_1.send().catch(function (e) { return true; }); // to handle the failure requests.        \n            return deff_1.promise;\n        }\n    };\n    /**\n     * Inserts new record in the given table.\n     * @param  {Object} data - Defines the data to insert.\n     * @param  {string|Query} tableName - Defines the table name.\n     * @param  {Query} query - Sets default query for the DataManager.\n     */\n    DataManager.prototype.insert = function (data, tableName, query, position) {\n        if (tableName instanceof Query) {\n            query = tableName;\n            tableName = null;\n        }\n        var req = this.adaptor.insert(this, data, tableName, query, position);\n        var doAjaxRequest = 'doAjaxRequest';\n        if (this.dataSource.offline) {\n            return req;\n        }\n        if (!isNullOrUndefined(this.adaptor[doAjaxRequest])) {\n            return this.adaptor[doAjaxRequest](req);\n        }\n        else {\n            return this.doAjaxRequest(req);\n        }\n    };\n    /**\n     * Removes data from the table with the given key.\n     * @param  {string} keyField - Defines the column field.\n     * @param  {Object} value - Defines the value to find the data in the specified column.\n     * @param  {string|Query} tableName - Defines the table name\n     * @param  {Query} query - Sets default query for the DataManager.\n     */\n    DataManager.prototype.remove = function (keyField, value, tableName, query) {\n        if (typeof value === 'object') {\n            value = value[keyField];\n        }\n        if (tableName instanceof Query) {\n            query = tableName;\n            tableName = null;\n        }\n        var res = this.adaptor.remove(this, keyField, value, tableName, query);\n        var doAjaxRequest = 'doAjaxRequest';\n        if (this.dataSource.offline) {\n            return res;\n        }\n        if (!isNullOrUndefined(this.adaptor[doAjaxRequest])) {\n            return this.adaptor[doAjaxRequest](res);\n        }\n        else {\n            return this.doAjaxRequest(res);\n        }\n    };\n    /**\n     * Updates existing record in the given table.\n     * @param  {string} keyField - Defines the column field.\n     * @param  {Object} value - Defines the value to find the data in the specified column.\n     * @param  {string|Query} tableName - Defines the table name\n     * @param  {Query} query - Sets default query for the DataManager.\n     */\n    DataManager.prototype.update = function (keyField, value, tableName, query, original) {\n        if (tableName instanceof Query) {\n            query = tableName;\n            tableName = null;\n        }\n        var res = this.adaptor.update(this, keyField, value, tableName, query, original);\n        var doAjaxRequest = 'doAjaxRequest';\n        if (this.dataSource.offline) {\n            return res;\n        }\n        if (!isNullOrUndefined(this.adaptor[doAjaxRequest])) {\n            return this.adaptor[doAjaxRequest](res);\n        }\n        else {\n            return this.doAjaxRequest(res);\n        }\n    };\n    DataManager.prototype.doAjaxRequest = function (res) {\n        var _this = this;\n        var defer = new Deferred();\n        res = extend({}, {\n            type: 'POST',\n            contentType: 'application/json; charset=utf-8',\n            processData: false\n        }, res);\n        var ajax = new Ajax(res);\n        ajax.beforeSend = function () {\n            _this.beforeSend(ajax.httpRequest, ajax);\n        };\n        ajax.onSuccess = function (record, request) {\n            try {\n                DataUtil.parse.parseJson(record);\n            }\n            catch (e) {\n                record = [];\n            }\n            record = _this.adaptor.processResponse(DataUtil.parse.parseJson(record), _this, null, request.httpRequest, request);\n            defer.resolve(record);\n        };\n        ajax.onFailure = function (e) {\n            defer.reject([{ error: e }]);\n        };\n        ajax.send().catch(function (e) { return true; }); // to handle the failure requests.\n        return defer.promise;\n    };\n    return DataManager;\n}());\nexport { DataManager };\n/**\n * Deferred is used to handle asynchronous operation.\n */\nvar Deferred = /** @class */ (function () {\n    function Deferred() {\n        var _this = this;\n        /**\n         * Promise is an object that represents a value that may not be available yet, but will be resolved at some point in the future.\n         */\n        this.promise = new Promise(function (resolve, reject) {\n            _this.resolve = resolve;\n            _this.reject = reject;\n        });\n        /**\n         * Defines the callback function triggers when the Deferred object is resolved.\n         */\n        this.then = this.promise.then.bind(this.promise);\n        /**\n         * Defines the callback function triggers when the Deferred object is rejected.\n         */\n        this.catch = this.promise.catch.bind(this.promise);\n    }\n    return Deferred;\n}());\nexport { Deferred };\n"],"names":["Query","from","this","subQuery","isChild","distincts","queries","key","fKey","fromTable","Array","lookups","expands","sortedColumns","groupedColumns","params","prototype","setKey","field","using","dataManager","execute","done","fail","always","executeQuery","DataUtil","throwError","executeLocal","clone","cloned","slice","subQuerySelector","isCountRequired","tableName","addParams","value","push","fn","distinct","fields","call","expand","tables","where","fieldName","operator","ignoreCase","ignoreAccent","toLowerCase","predicate","Predicate","e","search","searchKey","fieldNames","comparer","fnOperators","sortBy","isFromGroup","sorts","temp","order","endsWith","replace","fnSort","filterQueries","i","length","j","direction","sortByDesc","group","format","page","pageIndex","pageSize","range","start","end","take","nos","skip","select","hierarchy","query","selectorFn","foreignKey","requiresCount","aggregate","type","name","filter","q","filterQueryLists","singles","filtered","indexOf","res","isComplex","processOperator","condition","predicates","apply","and","args","_i","arguments","combinePredicates","combine","or","fromJson","json","len","fromJSONData","pred","validate","record","isAnd","ret","getObject","toJson","p","preds","consts","GroupGuid","getValue","inst","input","substr","startsWith","fnAscending","fnDescending","x","y","undefined","localeCompare","extractFields","obj","newObj","setValue","jsonArray","newData","aggregates","level","groupDs","jsonData","_loop_1","isNullOrUndefined","items","this_1","count","indx","childLevels","grouped","groupedArray","records","_loop_2","val","this_2","getVal","tempObj","_loop_3","aggs","buildHierarchy","source","lookup","pKey","grp","result","fKeyData","getFieldList","prefix","copyObj","keys_1","Object","keys","prop","nameSpace","splits","split","toString","fromObj","sort","ds","middle","parseInt","left","right","merge","ignoreDiacritics","map","diacritics","join","current","shift","array","index","callAdaptorFunction","adaptor","fnName","param1","param2","getAddParams","adp","dm","req","reqParams","isPlainObject","constructor","isCors","xhr","window","getGuid","rand","crypto","arr","Uint8Array","getRandomValues","Math","random","isNull","getItemFromComparer","keyVal","castRequired","requiresCompleteRecord","tmp","forEach","data","serverTimezoneOffset","timeZoneHandling","error","Error","message","stack","sum","isNaN","average","min","max","truecount","DataManager","falsecount","operatorSymbols","<",">","<=",">=","==","!=","*=","$=","^=","odBiOperator","lessthan","lessthanorequal","greaterthan","greaterthanorequal","equal","notequal","odUniOperator","endswith","startswith","contains","odv4UniOperator","Ⓐ","Ａ","À","Á","Â","Ầ","Ấ","Ẫ","Ẩ","Ã","Ā","Ă","Ằ","Ắ","Ẵ","Ẳ","Ȧ","Ǡ","Ä","Ǟ","Ả","Å","Ǻ","Ǎ","Ȁ","Ȃ","Ạ","Ậ","Ặ","Ḁ","Ą","Ⱥ","Ɐ","Ꜳ","Æ","Ǽ","Ǣ","Ꜵ","Ꜷ","Ꜹ","Ꜻ","Ꜽ","Ⓑ","Ｂ","Ḃ","Ḅ","Ḇ","Ƀ","Ƃ","Ɓ","Ⓒ","Ｃ","Ć","Ĉ","Ċ","Č","Ç","Ḉ","Ƈ","Ȼ","Ꜿ","Ⓓ","Ｄ","Ḋ","Ď","Ḍ","Ḑ","Ḓ","Ḏ","Đ","Ƌ","Ɗ","Ɖ","Ꝺ","Ǳ","Ǆ","ǲ","ǅ","Ⓔ","Ｅ","È","É","Ê","Ề","Ế","Ễ","Ể","Ẽ","Ē","Ḕ","Ḗ","Ĕ","Ė","Ë","Ẻ","Ě","Ȅ","Ȇ","Ẹ","Ệ","Ȩ","Ḝ","Ę","Ḙ","Ḛ","Ɛ","Ǝ","Ⓕ","Ｆ","Ḟ","Ƒ","Ꝼ","Ⓖ","Ｇ","Ǵ","Ĝ","Ḡ","Ğ","Ġ","Ǧ","Ģ","Ǥ","Ɠ","Ꞡ","Ᵹ","Ꝿ","Ⓗ","Ｈ","Ĥ","Ḣ","Ḧ","Ȟ","Ḥ","Ḩ","Ḫ","Ħ","Ⱨ","Ⱶ","Ɥ","Ⓘ","Ｉ","Ì","Í","Î","Ĩ","Ī","Ĭ","İ","Ï","Ḯ","Ỉ","Ǐ","Ȉ","Ȋ","Ị","Į","Ḭ","Ɨ","Ⓙ","Ｊ","Ĵ","Ɉ","Ⓚ","Ｋ","Ḱ","Ǩ","Ḳ","Ķ","Ḵ","Ƙ","Ⱪ","Ꝁ","Ꝃ","Ꝅ","Ꞣ","Ⓛ","Ｌ","Ŀ","Ĺ","Ľ","Ḷ","Ḹ","Ļ","Ḽ","Ḻ","Ł","Ƚ","Ɫ","Ⱡ","Ꝉ","Ꝇ","Ꞁ","Ǉ","ǈ","Ⓜ","Ｍ","Ḿ","Ṁ","Ṃ","Ɱ","Ɯ","Ⓝ","Ｎ","Ǹ","Ń","Ñ","Ṅ","Ň","Ṇ","Ņ","Ṋ","Ṉ","Ƞ","Ɲ","Ꞑ","Ꞥ","Ǌ","ǋ","Ⓞ","Ｏ","Ò","Ó","Ô","Ồ","Ố","Ỗ","Ổ","Õ","Ṍ","Ȭ","Ṏ","Ō","Ṑ","Ṓ","Ŏ","Ȯ","Ȱ","Ö","Ȫ","Ỏ","Ő","Ǒ","Ȍ","Ȏ","Ơ","Ờ","Ớ","Ỡ","Ở","Ợ","Ọ","Ộ","Ǫ","Ǭ","Ø","Ǿ","Ɔ","Ɵ","Ꝋ","Ꝍ","Ƣ","Ꝏ","Ȣ","Ⓟ","Ｐ","Ṕ","Ṗ","Ƥ","Ᵽ","Ꝑ","Ꝓ","Ꝕ","Ⓠ","Ｑ","Ꝗ","Ꝙ","Ɋ","Ⓡ","Ｒ","Ŕ","Ṙ","Ř","Ȑ","Ȓ","Ṛ","Ṝ","Ŗ","Ṟ","Ɍ","Ɽ","Ꝛ","Ꞧ","Ꞃ","Ⓢ","Ｓ","ẞ","Ś","Ṥ","Ŝ","Ṡ","Š","Ṧ","Ṣ","Ṩ","Ș","Ş","Ȿ","Ꞩ","Ꞅ","Ⓣ","Ｔ","Ṫ","Ť","Ṭ","Ț","Ţ","Ṱ","Ṯ","Ŧ","Ƭ","Ʈ","Ⱦ","Ꞇ","Ꜩ","Ⓤ","Ｕ","Ù","Ú","Û","Ũ","Ṹ","Ū","Ṻ","Ŭ","Ü","Ǜ","Ǘ","Ǖ","Ǚ","Ủ","Ů","Ű","Ǔ","Ȕ","Ȗ","Ư","Ừ","Ứ","Ữ","Ử","Ự","Ụ","Ṳ","Ų","Ṷ","Ṵ","Ʉ","Ⓥ","Ｖ","Ṽ","Ṿ","Ʋ","Ꝟ","Ʌ","Ꝡ","Ⓦ","Ｗ","Ẁ","Ẃ","Ŵ","Ẇ","Ẅ","Ẉ","Ⱳ","Ⓧ","Ｘ","Ẋ","Ẍ","Ⓨ","Ｙ","Ỳ","Ý","Ŷ","Ỹ","Ȳ","Ẏ","Ÿ","Ỷ","Ỵ","Ƴ","Ɏ","Ỿ","Ⓩ","Ｚ","Ź","Ẑ","Ż","Ž","Ẓ","Ẕ","Ƶ","Ȥ","Ɀ","Ⱬ","Ꝣ","ⓐ","ａ","ẚ","à","á","â","ầ","ấ","ẫ","ẩ","ã","ā","ă","ằ","ắ","ẵ","ẳ","ȧ","ǡ","ä","ǟ","ả","å","ǻ","ǎ","ȁ","ȃ","ạ","ậ","ặ","ḁ","ą","ⱥ","ɐ","ꜳ","æ","ǽ","ǣ","ꜵ","ꜷ","ꜹ","ꜻ","ꜽ","ⓑ","ｂ","ḃ","ḅ","ḇ","ƀ","ƃ","ɓ","ⓒ","ｃ","ć","ĉ","ċ","č","ç","ḉ","ƈ","ȼ","ꜿ","ↄ","ⓓ","ｄ","ḋ","ď","ḍ","ḑ","ḓ","ḏ","đ","ƌ","ɖ","ɗ","ꝺ","ǳ","ǆ","ⓔ","ｅ","è","é","ê","ề","ế","ễ","ể","ẽ","ē","ḕ","ḗ","ĕ","ė","ë","ẻ","ě","ȅ","ȇ","ẹ","ệ","ȩ","ḝ","ę","ḙ","ḛ","ɇ","ɛ","ǝ","ⓕ","ｆ","ḟ","ƒ","ꝼ","ⓖ","ｇ","ǵ","ĝ","ḡ","ğ","ġ","ǧ","ģ","ǥ","ɠ","ꞡ","ᵹ","ꝿ","ⓗ","ｈ","ĥ","ḣ","ḧ","ȟ","ḥ","ḩ","ḫ","ẖ","ħ","ⱨ","ⱶ","ɥ","ƕ","ⓘ","ｉ","ì","í","î","ĩ","ī","ĭ","ï","ḯ","ỉ","ǐ","ȉ","ȋ","ị","į","ḭ","ɨ","ı","ⓙ","ｊ","ĵ","ǰ","ɉ","ⓚ","ｋ","ḱ","ǩ","ḳ","ķ","ḵ","ƙ","ⱪ","ꝁ","ꝃ","ꝅ","ꞣ","ⓛ","ｌ","ŀ","ĺ","ľ","ḷ","ḹ","ļ","ḽ","ḻ","ſ","ł","ƚ","ɫ","ⱡ","ꝉ","ꞁ","ꝇ","ǉ","ⓜ","ｍ","ḿ","ṁ","ṃ","ɱ","ɯ","ⓝ","ｎ","ǹ","ń","ñ","ṅ","ň","ṇ","ņ","ṋ","ṉ","ƞ","ɲ","ŉ","ꞑ","ꞥ","ǌ","ⓞ","ｏ","ò","ó","ô","ồ","ố","ỗ","ổ","õ","ṍ","ȭ","ṏ","ō","ṑ","ṓ","ŏ","ȯ","ȱ","ö","ȫ","ỏ","ő","ǒ","ȍ","ȏ","ơ","ờ","ớ","ỡ","ở","ợ","ọ","ộ","ǫ","ǭ","ø","ǿ","ɔ","ꝋ","ꝍ","ɵ","ƣ","ȣ","ꝏ","ⓟ","ｐ","ṕ","ṗ","ƥ","ᵽ","ꝑ","ꝓ","ꝕ","ⓠ","ｑ","ɋ","ꝗ","ꝙ","ⓡ","ｒ","ŕ","ṙ","ř","ȑ","ȓ","ṛ","ṝ","ŗ","ṟ","ɍ","ɽ","ꝛ","ꞧ","ꞃ","ⓢ","ｓ","ß","ś","ṥ","ŝ","ṡ","š","ṧ","ṣ","ṩ","ș","ş","ȿ","ꞩ","ꞅ","ẛ","ⓣ","ｔ","ṫ","ẗ","ť","ṭ","ț","ţ","ṱ","ṯ","ŧ","ƭ","ʈ","ⱦ","ꞇ","ꜩ","ⓤ","ｕ","ù","ú","û","ũ","ṹ","ū","ṻ","ŭ","ü","ǜ","ǘ","ǖ","ǚ","ủ","ů","ű","ǔ","ȕ","ȗ","ư","ừ","ứ","ữ","ử","ự","ụ","ṳ","ų","ṷ","ṵ","ʉ","ⓥ","ｖ","ṽ","ṿ","ʋ","ꝟ","ʌ","ꝡ","ⓦ","ｗ","ẁ","ẃ","ŵ","ẇ","ẅ","ẘ","ẉ","ⱳ","ⓧ","ｘ","ẋ","ẍ","ⓨ","ｙ","ỳ","ý","ŷ","ỹ","ȳ","ẏ","ÿ","ỷ","ẙ","ỵ","ƴ","ɏ","ỿ","ⓩ","ｚ","ź","ẑ","ż","ž","ẓ","ẕ","ƶ","ȥ","ɀ","ⱬ","ꝣ","Ά","Έ","Ή","Ί","Ϊ","Ό","Ύ","Ϋ","Ώ","ά","έ","ή","ί","ϊ","ΐ","ό","ύ","ϋ","ΰ","ω","ς","actual","expected","notnull","isnull","processSymbols","parse","parseJson","jsonText","JSON","jsonReviver","iterateAndReviveArray","iterateAndReviveJson","test","keys_2","dupValue","ms","exec","offSet","dateParse","toTimeZone","Date","isJson","isGuid","replacer","stringify","jsonReplacer","arrayReplacer","keys_3","d","addSelfOffset","toJSON","date","jsonDateReplacer","getTimezoneOffset","toUTC","offset","utc","unix","toLocalTime","datefn","timeZone","differenceString","localtimefn","num","norm","floor","abs","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","__extends","extendStatics","b","setPrototypeOf","__proto__","hasOwnProperty","__","create","Adaptor","options","requestType","dataSource","pvt","processResponse","JsonAdaptor","_super","processQuery","countFlg","agg","batchRequest","changes","deletedRecordsLen","deletedRecords","addedRecords","insert","changedRecords","update","remove","onWhere","onAggregates","onSearch","onSortBy","fnCompare","onGroup","aggQuery","onPage","size","onRange","onTake","onSkip","onSelect","position","splice","keyField","UrlAdaptor","hierarchyFilters","getQueryRequest","url","request","groups","filters","searches","getFiltersFrom","getRequestQuery","_a","pvtData","contentType","convertToQueryString","request1","selects","getResponseHeader","handleTimeZone","requests","action","getAggregateResult","original","batchUrl","crudUrl","removeUrl","dataType","extend","changed","added","deleted","table","beforeSend","insertUrl","keyColumn","updateUrl","predicats","pData","aggregateData","groupQuery","ODataAdaptor","props","_this","accept","multipartAccept","batch","changeSet","batchPre","contentId","batchContent","changeSetContent","batchChangeSetContentType","updateType","getModuleName","onPredicate","requiresCast","guid","returnValue","getField","encodeURIComponent","onComplexPredicate","onEachWhere","onEachSearch","onEachSort","reverse","onCount","settings","setRequestHeader","overrideMimeType","metaCheck","rootUrl","dataUrls","resourceTableName","dataCopy","results","emptyAndBatch","processBatchResponse","versionCheck","version","oDataCount","requiresFormat","keys_4","localTimeReplacer","convertObj","localTime","compareAndRemove","initialGuid","cid","cSet","generateInsertRequest","generateUpdateRequest","generateDeleteRequest","stat","method","generateBodyContent","org","change","o","cIdx","jsonObj","substring","exVal","changeGuid","valueOf","ODataV4Adaptor","isDate","onExpand","selected","expanded","exArr","item","ex","onDistinct","distinctFields","metaName","dataUrl","WebApiAdaptor","Count","Items","WebMethodAdaptor","param","RemoteSaveAdaptor","updateKey","CacheAdaptor","timeStamp","isCrudAction","isInsertAction","cacheAdaptor","guidId","localStorage","setItem","setInterval","getItem","forDel","currentTime","requestTime","removeItem","generateKey","currentFilter","newQuery","cachedItems","crossDomain","offline","headers","timeTillExpiration","cachingPageSize","enableCaching","jsonp","defaultQuery","isDataAvailable","ready","then","setDefaultQuery","makeRequest","deffered","Deferred","nextTick","getDeferedArgs","resolve","promise","setImmediate","setTimeout","extendRequest","fnSuccess","fnFail","cache","processData","onSuccess","onFailure","isSelector","reject","process","virtualSelectRecords","fnQueryChild","selector","subDeffer","childArgs","parent","subUrl","childReq","subData","httpRequest","virtualRecords","ajax","Ajax","send","catch","Promise","all","pResult","cResult","saveChanges","deff_1","ajax_1","doAjaxRequest","defer","bind"],"mappings":"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"}