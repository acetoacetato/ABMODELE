{"version":3,"file":"ej2-heatmap.umd.min.js","sources":["../src/heatmap/utils/helper.js","../src/heatmap/model/theme.js","../src/heatmap/model/base.js","../src/heatmap/utils/colorMapping.js","../src/heatmap/axis/axis.js","../src/heatmap/axis/axis-helpers.js","../src/heatmap/series/series.js","../src/heatmap/utils/tooltip.js","../src/heatmap/datasource/twodimensional.js","../src/heatmap/legend/legend.js","../src/heatmap/heatmap.js","../src/heatmap/datasource/adaptor.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { remove, createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\nimport { RgbColor } from '../utils/colorMapping';\n/**\n * Helper method for heatmap\n */\n/** @private */\nexport function stringToNumber(value, containerSize) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (containerSize / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Function to measure the height and width of the text.\n * @private\n */\nexport function measureText(text, font) {\n    var htmlObject = document.getElementById('heatmapmeasuretext');\n    if (htmlObject === null) {\n        htmlObject = createElement('text', { id: 'heatmapmeasuretext' });\n        document.body.appendChild(htmlObject);\n    }\n    htmlObject.innerText = text;\n    htmlObject.style.position = 'absolute';\n    htmlObject.style.visibility = 'hidden';\n    htmlObject.style.fontSize = (font.size).indexOf('px') !== -1 ? font.size : font.size + 'px';\n    htmlObject.style.fontWeight = font.fontWeight;\n    htmlObject.style.fontStyle = font.fontStyle;\n    htmlObject.style.fontFamily = font.fontFamily;\n    htmlObject.style.top = '-100';\n    htmlObject.style.left = '0';\n    htmlObject.style.whiteSpace = 'nowrap';\n    // For bootstrap line height issue\n    htmlObject.style.lineHeight = 'normal';\n    return new Size(htmlObject.clientWidth, htmlObject.clientHeight);\n}\n/** @private */\nvar TextElement = /** @class */ (function () {\n    function TextElement(fontModel, fontColor) {\n        this['font-size'] = fontModel.size;\n        this['font-style'] = fontModel.fontStyle;\n        this['font-family'] = fontModel.fontFamily;\n        this['font-weight'] = fontModel.fontWeight;\n        this.fill = fontColor ? fontColor : '';\n    }\n    return TextElement;\n}());\nexport { TextElement };\nexport function titlePositionX(width, leftPadding, rightPadding, titleStyle) {\n    var positionX;\n    if (titleStyle.textAlignment === 'Near') {\n        positionX = leftPadding;\n    }\n    else if (titleStyle.textAlignment === 'Center') {\n        positionX = leftPadding + width / 2;\n    }\n    else {\n        positionX = width + leftPadding;\n    }\n    return positionX;\n}\n/**\n * Internal class size for height and width\n * @private\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    return Size;\n}());\nexport { Size };\n/** @private */\nvar CustomizeOption = /** @class */ (function () {\n    function CustomizeOption(id) {\n        this.id = id;\n    }\n    return CustomizeOption;\n}());\nexport { CustomizeOption };\n/** @private */\nvar PathOption = /** @class */ (function (_super) {\n    __extends(PathOption, _super);\n    function PathOption(id, fill, width, color, opacity, dashArray, d) {\n        var _this = _super.call(this, id) || this;\n        _this.opacity = opacity;\n        _this.fill = fill;\n        _this.stroke = color ? color : '';\n        _this['stroke-width'] = parseFloat(width.toString());\n        _this['stroke-dasharray'] = dashArray;\n        _this.d = d;\n        return _this;\n    }\n    return PathOption;\n}(CustomizeOption));\nexport { PathOption };\n/**\n * Class to define currentRect private property.\n * @private\n */\nvar CurrentRect = /** @class */ (function () {\n    function CurrentRect(x, y, width, height, value, id, xIndex, yIndex, xValue, yValue, visible, displayText, textId, allowCollection) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.value = value;\n        this.id = id;\n        this.xIndex = xIndex;\n        this.yIndex = yIndex;\n        this.xValue = xValue;\n        this.yValue = yValue;\n        this.visible = visible;\n        this.displayText = displayText;\n        this.textId = textId;\n        /** @private */\n        this.allowCollection = allowCollection;\n    }\n    return CurrentRect;\n}());\nexport { CurrentRect };\n/**\n * Class to define the details of selected cell.\n * @private\n */\nvar SelectedCellDetails = /** @class */ (function () {\n    function SelectedCellDetails(value, xLabel, yLabel, xValue, yValue, cellElement, xPosition, yPosition, width, height, x, y) {\n        this.value = value;\n        this.xLabel = xLabel;\n        this.yLabel = yLabel;\n        this.xValue = xValue;\n        this.yValue = yValue;\n        this.cellElement = cellElement;\n        this.xPosition = xPosition;\n        this.yPosition = yPosition;\n        this.width = width;\n        this.height = height;\n        this.x = x;\n        this.y = y;\n    }\n    return SelectedCellDetails;\n}());\nexport { SelectedCellDetails };\n/**\n * Class to define property to draw rectangle.\n * @private\n */\nvar RectOption = /** @class */ (function (_super) {\n    __extends(RectOption, _super);\n    function RectOption(id, fill, border, opacity, rect, borderColor, rx, ry, transform, dashArray) {\n        var _this = _super.call(this, id, fill, border.width, borderColor, opacity, dashArray) || this;\n        _this.y = rect.y;\n        _this.x = rect.x;\n        _this.height = rect.height > 0 ? rect.height : 0;\n        _this.width = rect.width > 0 ? rect.width : 0;\n        _this.rx = rx ? rx : 0;\n        _this.ry = ry ? ry : 0;\n        _this.transform = transform ? transform : '';\n        return _this;\n    }\n    return RectOption;\n}(PathOption));\nexport { RectOption };\n/**\n * Class to define property to draw circle.\n * @private\n */\nvar CircleOption = /** @class */ (function (_super) {\n    __extends(CircleOption, _super);\n    function CircleOption(id, fill, border, opacity, borderColor, cx, cy, r) {\n        var _this = _super.call(this, id, fill, border.width, borderColor, opacity) || this;\n        _this.cx = cx ? cx : 0;\n        _this.cy = cy ? cy : 0;\n        _this.r = r ? r : 0;\n        return _this;\n    }\n    return CircleOption;\n}(PathOption));\nexport { CircleOption };\n/**\n * Helper Class to define property to draw rectangle.\n * @private\n */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    return Rect;\n}());\nexport { Rect };\n/**\n * Class to define property to draw text.\n * @private\n */\nvar TextOption = /** @class */ (function (_super) {\n    __extends(TextOption, _super);\n    function TextOption(id, basic, element, fontColor) {\n        var _this = _super.call(this, element, fontColor) || this;\n        _this.transform = '';\n        _this['dominant-baseline'] = 'auto';\n        _this.labelRotation = 0;\n        _this.baseline = 'auto';\n        _this.id = id;\n        _this.x = basic.x;\n        _this.y = basic.y;\n        _this['text-anchor'] = basic['text-anchor'];\n        _this.text = basic.text;\n        _this.transform = basic.transform;\n        _this.labelRotation = basic.labelRotation;\n        _this['dominant-baseline'] = basic['dominant-baseline'];\n        _this.baseline = basic.baseline;\n        _this.dy = basic.dy;\n        return _this;\n    }\n    return TextOption;\n}(TextElement));\nexport { TextOption };\n/**\n * Helper Class to define property to draw text.\n * @private\n */\nvar TextBasic = /** @class */ (function () {\n    function TextBasic(x, y, anchor, text, labelRotation, transform, baseLine, dy) {\n        this.transform = '';\n        this['dominant-baseline'] = 'auto';\n        this.labelRotation = 0;\n        this.baseline = 'auto';\n        this.x = x ? x : 0;\n        this.y = y ? y : 0;\n        this['text-anchor'] = anchor ? anchor : '';\n        this.text = text ? text : '';\n        this.transform = transform ? transform : '';\n        this.labelRotation = labelRotation;\n        this['dominant-baseline'] = baseLine ? baseLine : '';\n        this.baseline = baseLine ? baseLine : '';\n        this.dy = dy ? dy : '';\n    }\n    return TextBasic;\n}());\nexport { TextBasic };\n/**\n * Class to define property to draw line.\n * @private\n */\nvar Line = /** @class */ (function () {\n    function Line(x1, y1, x2, y2) {\n        this.x1 = x1;\n        this.y1 = y1;\n        this.x2 = x2;\n        this.y2 = y2;\n    }\n    return Line;\n}());\nexport { Line };\n/**\n * Class to define property to draw line.\n * @private\n */\nvar LineOption = /** @class */ (function (_super) {\n    __extends(LineOption, _super);\n    function LineOption(id, line, stroke, strokewidth, opacity, dasharray) {\n        var _this = _super.call(this, id, null, strokewidth, stroke, opacity, dasharray, null) || this;\n        _this.x1 = line.x1;\n        _this.y1 = line.y1;\n        _this.x2 = line.x2;\n        _this.y2 = line.y2;\n        return _this;\n    }\n    return LineOption;\n}(PathOption));\nexport { LineOption };\n/**\n * Properties required to render path.\n * @private\n */\nvar PathAttributes = /** @class */ (function (_super) {\n    __extends(PathAttributes, _super);\n    function PathAttributes(id, path, fill, border, borderWidth, opacity, borderColor) {\n        var _this = _super.call(this, id, fill, borderWidth, borderColor, opacity, null) || this;\n        _this.d = path.d;\n        _this.x = path.x;\n        _this.y = path.y;\n        return _this;\n    }\n    return PathAttributes;\n}(PathOption));\nexport { PathAttributes };\n/**\n * Helper Class to define property to path.\n * @private\n */\nvar Path = /** @class */ (function () {\n    function Path(d, innerR, x, y, x1, y1, cx, cy, start, end, radius, counterClockWise) {\n        this.d = d;\n        this.innerR = innerR;\n        this.cx = cx;\n        this.cy = cy;\n        this.x = x;\n        this.y = y;\n        this.x1 = x1;\n        this.y1 = y1;\n        this.start = start;\n        this.end = end;\n        this.radius = radius;\n        this.counterClockWise = counterClockWise;\n    }\n    return Path;\n}());\nexport { Path };\n/** @private */\nexport function sum(values) {\n    var sum = 0;\n    for (var _i = 0, values_1 = values; _i < values_1.length; _i++) {\n        var value = values_1[_i];\n        sum += value;\n    }\n    return sum;\n}\n/** @private */\nexport function titlePositionY(heatmapSize, topPadding, bottomPadding, titleStyle) {\n    var positionY;\n    if (titleStyle.textAlignment === 'Near') {\n        positionY = heatmapSize.height - bottomPadding;\n    }\n    else if (titleStyle.textAlignment === 'Center') {\n        positionY = heatmapSize.height / 2;\n    }\n    else {\n        positionY = topPadding;\n    }\n    return positionY;\n}\n/** @private */\nexport function rotateTextSize(font, text, angle) {\n    var renderer = new SvgRenderer('heatmapMeasureRotateText');\n    var svgObject = renderer.createSvg({ id: 'heatmapMeasureRotateText_svg', width: 100, height: 100 });\n    var box;\n    var options;\n    var htmlObject;\n    options = {\n        'font-size': font.size,\n        'font-style': font.fontStyle,\n        'font-family': font.fontFamily,\n        'font-weight': font.fontWeight,\n        'transform': 'rotate(' + angle + ', 0, 0)',\n        'text-anchor': 'middle'\n    };\n    htmlObject = renderer.createText(options, text);\n    svgObject.appendChild(htmlObject);\n    document.body.appendChild(svgObject);\n    box = htmlObject.getBoundingClientRect();\n    remove(svgObject);\n    return new Size((box.right - box.left), (box.bottom - box.top));\n}\n/**\n * Class to draw SVG and Canvas Rectangle & Text.\n * @private\n */\nvar DrawSvgCanvas = /** @class */ (function () {\n    function DrawSvgCanvas(heatmap) {\n        this.heatMap = heatmap;\n    }\n    //Svg & Canvas Rectangle Part\n    DrawSvgCanvas.prototype.drawRectangle = function (properties, parentElement, isFromSeries) {\n        if (!this.heatMap.enableCanvasRendering) {\n            parentElement.appendChild(this.heatMap.renderer.drawRectangle(properties));\n        }\n        else {\n            this.drawCanvasRectangle(this.heatMap.canvasRenderer, properties, isFromSeries);\n        }\n    };\n    //Svg & Canvas Bubble Part\n    DrawSvgCanvas.prototype.drawCircle = function (properties, parentElement) {\n        if (!this.heatMap.enableCanvasRendering) {\n            parentElement.appendChild(this.heatMap.renderer.drawCircle(properties));\n        }\n        else {\n            this.drawCanvasCircle(this.heatMap.canvasRenderer, properties);\n        }\n    };\n    //Svg & Canvas Pie Part\n    DrawSvgCanvas.prototype.drawPath = function (properties, options, parentElement) {\n        if (!this.heatMap.enableCanvasRendering) {\n            parentElement.appendChild(this.heatMap.renderer.drawPath(properties));\n        }\n        else {\n            this.drawCanvasPath(this.heatMap.canvasRenderer, properties, options);\n        }\n    };\n    //Svg & Canvas Text Part\n    DrawSvgCanvas.prototype.createText = function (properties, parentElement, text) {\n        if (!this.heatMap.enableCanvasRendering) {\n            parentElement.appendChild(this.heatMap.renderer.createText(properties, text));\n        }\n        else {\n            this.canvasDrawText(properties, text);\n        }\n    };\n    //Draw the wrapped text for both SVG & canvas\n    DrawSvgCanvas.prototype.createWrapText = function (options, font, parentElement) {\n        var renderOptions = {};\n        var htmlObject;\n        var tspanElement;\n        var text;\n        var height;\n        renderOptions = {\n            'id': options.id,\n            'x': options.x,\n            'y': options.y,\n            'fill': options.fill,\n            'font-size': font.size,\n            'font-style': font.fontStyle,\n            'font-family': font.fontFamily,\n            'font-weight': font.fontWeight,\n            'text-anchor': options['text-anchor'],\n            'transform': options.transform,\n            'dominant-baseline': options['dominant-baseline']\n        };\n        text = options.text[0];\n        if (!this.heatMap.enableCanvasRendering) {\n            htmlObject = this.heatMap.renderer.createText(renderOptions, text);\n        }\n        else {\n            this.heatMap.canvasRenderer.createText(options, text);\n        }\n        if (typeof options.text !== 'string' && options.text.length > 1) {\n            for (var i = 1, len = options.text.length; i < len; i++) {\n                height = (measureText(options.text[i], font).height);\n                if (!this.heatMap.enableCanvasRendering) {\n                    tspanElement = this.heatMap.renderer.createTSpan({\n                        'x': options.x, 'id': options.id + i,\n                        'y': (options.y) + (i * height)\n                    }, options.text[i]);\n                    htmlObject.appendChild(tspanElement);\n                }\n                else {\n                    options.id = options.id + i;\n                    options.y += height;\n                    this.heatMap.canvasRenderer.createText(options, options.text[i]);\n                }\n            }\n        }\n        if (!this.heatMap.enableCanvasRendering) {\n            parentElement.appendChild(htmlObject);\n        }\n    };\n    DrawSvgCanvas.prototype.drawLine = function (properties, parentElement) {\n        if (!this.heatMap.enableCanvasRendering) {\n            parentElement.appendChild(this.heatMap.renderer.drawLine(properties));\n        }\n        else {\n            this.heatMap.canvasRenderer.drawLine(properties);\n        }\n    };\n    //Canvas Text Part\n    DrawSvgCanvas.prototype.canvasDrawText = function (options, label, translateX, translateY) {\n        var ctx = this.heatMap.canvasRenderer.ctx;\n        if (!translateX) {\n            translateX = options.x;\n        }\n        if (!translateY) {\n            translateY = options.y;\n        }\n        var fontWeight = this.getOptionValue(options, 'font-weight');\n        if (!isNullOrUndefined(fontWeight) && fontWeight.toLowerCase() === 'regular') {\n            fontWeight = 'normal';\n        }\n        var fontFamily = this.getOptionValue(options, 'font-family');\n        var fontSize = (options['font-size'].toString()).indexOf('px') === -1 ? options['font-size'] + 'px' : options['font-size'];\n        var anchor = this.getOptionValue(options, 'text-anchor');\n        var fontStyle = this.getOptionValue(options, 'font-style').toLowerCase();\n        var font = (fontStyle + ' ' + fontWeight + ' ' + fontSize + ' ' + fontFamily);\n        if (anchor === 'middle') {\n            anchor = 'center';\n        }\n        ctx.save();\n        ctx.fillStyle = options.fill;\n        ctx.font = font;\n        ctx.textAlign = anchor;\n        if (options.baseline) {\n            ctx.textBaseline = options.baseline;\n        }\n        ctx.translate(translateX, translateY);\n        ctx.rotate(options.labelRotation * Math.PI / 180);\n        ctx.fillText(label, options.x - translateX, options.y - translateY);\n        ctx.restore();\n    };\n    // method to get the attributes value\n    /* tslint:disable */\n    DrawSvgCanvas.prototype.getOptionValue = function (options, key) {\n        return options[key];\n    };\n    DrawSvgCanvas.prototype.setAttributes = function (canvas, options) {\n        canvas.ctx.lineWidth = options['stroke-width'];\n        var dashArray = options['stroke-dasharray'];\n        if (!isNullOrUndefined(dashArray)) {\n            var dashArrayString = dashArray.split(',');\n            canvas.ctx.setLineDash([parseInt(dashArrayString[0], 10), parseInt(dashArrayString[1], 10)]);\n        }\n        canvas.ctx.strokeStyle = options['stroke'];\n    };\n    ;\n    DrawSvgCanvas.prototype.drawCanvasRectangle = function (canvas, options, isFromSeries) {\n        var canvasCtx = canvas.ctx;\n        var cornerRadius = options.rx;\n        canvas.ctx.save();\n        canvas.ctx.beginPath();\n        canvas.ctx.globalAlpha = options['opacity'];\n        this.setAttributes(canvas, options);\n        this.drawCornerRadius(canvas, options);\n        if ((options['stroke-width'] && options['stroke-width'] != 0) || isFromSeries) {\n            canvas.ctx.stroke();\n        }\n        canvas.ctx.restore();\n        canvas.ctx = canvasCtx;\n    };\n    ;\n    // To draw the corner of a rectangle\n    DrawSvgCanvas.prototype.drawCornerRadius = function (canvas, options) {\n        var cornerRadius = options.rx;\n        var x = options.x;\n        var y = options.y;\n        var width = options.width;\n        var height = options.height;\n        if (options.fill === 'none') {\n            options.fill = 'transparent';\n        }\n        canvas.ctx.fillStyle = options.fill;\n        if (width < 2 * cornerRadius) {\n            cornerRadius = width / 2;\n        }\n        if (height < 2 * cornerRadius) {\n            cornerRadius = height / 2;\n        }\n        canvas.ctx.beginPath();\n        canvas.ctx.moveTo(x + width - cornerRadius, y);\n        canvas.ctx.arcTo(x + width, y, x + width, y + height, cornerRadius);\n        canvas.ctx.arcTo(x + width, y + height, x, y + height, cornerRadius);\n        canvas.ctx.arcTo(x, y + height, x, y, cornerRadius);\n        canvas.ctx.arcTo(x, y, x + width, y, cornerRadius);\n        canvas.ctx.closePath();\n        canvas.ctx.fill();\n    };\n    ;\n    DrawSvgCanvas.prototype.drawCanvasCircle = function (canvas, options) {\n        canvas.ctx.save();\n        canvas.ctx.beginPath();\n        canvas.ctx.arc(options.cx, options.cy, options.r, 0, 2 * Math.PI);\n        canvas.ctx.fillStyle = options.fill;\n        canvas.ctx.globalAlpha = options.opacity;\n        canvas.ctx.fill();\n        this.setAttributes(canvas, options);\n        if (options['stroke-width'] && options['stroke-width'] !== 0) {\n            canvas.ctx.stroke();\n        }\n        canvas.ctx.restore();\n    };\n    ;\n    DrawSvgCanvas.prototype.drawCanvasPath = function (canvas, properties, options) {\n        var path = properties.d;\n        var dataSplit = path.split(' ');\n        var borderWidth = this.getOptionValue(options, 'stroke-width');\n        canvas.ctx.save();\n        canvas.ctx.beginPath();\n        canvas.ctx.globalAlpha = properties.opacity;\n        canvas.ctx.fillStyle = properties.fill;\n        this.setAttributes(canvas, properties);\n        for (var i = 0; i < dataSplit.length; i = i + 3) {\n            var x1 = parseFloat(dataSplit[i + 1]);\n            var y1 = parseFloat(dataSplit[i + 2]);\n            switch (dataSplit[i]) {\n                case 'M':\n                    canvas.ctx.moveTo(x1, y1);\n                    break;\n                case 'L':\n                    canvas.ctx.lineTo(x1, y1);\n                    break;\n                case 'A':\n                case 'a':\n                    canvas.ctx.arc(options.x, options.y, options.radius, (options.start * 0.0174533), (options.end * 0.0174533), false);\n                    i = dataSplit[i] === 'a' ? i + 13 : i + 5;\n                    break;\n                case 'Z':\n                    canvas.ctx.closePath();\n                    break;\n            }\n        }\n        canvas.ctx.fill();\n        if (properties['stroke-width'] && properties['stroke-width'] !== 0) {\n            canvas.ctx.stroke();\n        }\n        canvas.ctx.restore();\n    };\n    ;\n    return DrawSvgCanvas;\n}());\nexport { DrawSvgCanvas };\nexport function getTitle(title, style, width) {\n    var titleCollection = [];\n    switch (style.textOverflow) {\n        case 'Wrap':\n            titleCollection = textWrap(title, width, style);\n            break;\n        case 'Trim':\n            titleCollection.push(textTrim(width, title, style));\n            break;\n        default:\n            titleCollection.push(textNone(width, title, style));\n            break;\n    }\n    return titleCollection;\n}\nexport function textWrap(currentLabel, maximumWidth, font) {\n    var textCollection = currentLabel.split(' ');\n    var label = '';\n    var labelCollection = [];\n    var text;\n    for (var i = 0, len = textCollection.length; i < len; i++) {\n        text = textCollection[i];\n        if (measureText(label.concat(text), font).width < maximumWidth) {\n            label = label.concat((label === '' ? '' : ' ') + text);\n        }\n        else {\n            if (label !== '') {\n                labelCollection.push(textTrim(maximumWidth, label, font));\n                label = text;\n            }\n            else {\n                labelCollection.push(textTrim(maximumWidth, text, font));\n                text = '';\n            }\n        }\n        if (label && i === len - 1) {\n            labelCollection.push(textTrim(maximumWidth, label, font));\n        }\n    }\n    return labelCollection;\n}\n/** @private */\nexport function textTrim(maxWidth, text, font) {\n    var label = text;\n    var size = measureText(text, font).width;\n    if (size > maxWidth) {\n        var textLength = text.length;\n        for (var index = textLength - 1; index >= 0; --index) {\n            label = text.substring(0, index) + '...';\n            size = measureText(label, font).width;\n            if (size <= maxWidth) {\n                return label;\n            }\n        }\n    }\n    return label;\n}\n/** @private */\nexport function textNone(maxWidth, text, font) {\n    var label = text;\n    var size = measureText(text, font).width;\n    if (size > maxWidth) {\n        var textLength = text.length;\n        for (var i = textLength - 1; i >= 0; --i) {\n            label = text.substring(0, i);\n            size = measureText(label, font).width;\n            if (size <= maxWidth) {\n                return label;\n            }\n        }\n    }\n    return label;\n}\n/** @private */\nvar Gradient = /** @class */ (function () {\n    function Gradient(x, x1, x2, y1, y2) {\n        this.id = x;\n        this.x1 = x1;\n        this.x2 = x2;\n        this.y1 = y1;\n        this.y2 = y2;\n    }\n    return Gradient;\n}());\nexport { Gradient };\nvar GradientColor = /** @class */ (function () {\n    function GradientColor(color, colorStop) {\n        this.color = color;\n        this.colorStop = colorStop;\n    }\n    return GradientColor;\n}());\nexport { GradientColor };\n/** @private */\nexport function showTooltip(text, x, y, areaWidth, id, element, isTouch, heatmap) {\n    var tooltip = document.getElementById(id);\n    var initialClip = heatmap.initialClipRect;\n    var size = measureText(text, {\n        fontFamily: 'Segoe UI', size: '12px',\n        fontStyle: 'Normal', fontWeight: 'Regular'\n    });\n    var width = size.width + 5;\n    x = (x + width > areaWidth) ? x - width : x;\n    x = x < 0 ? 5 : x;\n    if (!tooltip) {\n        tooltip = createElement('div', {\n            id: id,\n            styles: 'top:' + (y + 15).toString() + 'px;left:' + (x + 15).toString() +\n                'px;background-color: rgb(255, 255, 255) !important; color:black !important; ' +\n                'position:absolute;border:1px solid rgb(112, 112, 112); padding-left : 3px; padding-right : 2px;' +\n                'padding-bottom : 2px; padding-top : 2px; font-size:12px; font-family: Segoe UI'\n        });\n        tooltip.innerText = text;\n        element.appendChild(tooltip);\n    }\n    else {\n        tooltip.innerText = text;\n        tooltip.style.top = (y + 15).toString() + 'px';\n        tooltip.style.left = (x + 15).toString() + 'px';\n    }\n    if (text === heatmap.titleSettings.text) {\n        tooltip.style.width = (x + 15) + size.width + 7 > heatmap.availableSize.width ?\n            (heatmap.availableSize.width - (x + 15)).toString() + 'px' : '';\n    }\n    else {\n        tooltip.style.left = (x + 15) + size.width + 7 > heatmap.availableSize.width ?\n            (heatmap.availableSize.width - (size.width + 7)).toString() + 'px' : x.toString() + 'px';\n        tooltip.style.top = (y + 15) + size.height + 6 > heatmap.availableSize.height ?\n            (y - (size.height + 6) - 10).toString() + 'px' : tooltip.style.top; // 6 and 7 are padding and border width\n    }\n    if (isTouch) {\n        setTimeout(function () { removeElement(id); }, 1500);\n    }\n}\n/** @private */\nexport function removeElement(id) {\n    var element = getElement(id);\n    if (element) {\n        remove(element);\n    }\n}\n/** @private */\nexport function getElement(id) {\n    return document.getElementById(id);\n}\n/** @private */\nexport function increaseDateTimeInterval(value, interval, intervalType, increment) {\n    var result = new Date(value);\n    interval = Math.ceil(interval * increment);\n    switch (intervalType) {\n        case 'Years':\n            result.setFullYear(result.getFullYear() + interval);\n            break;\n        case 'Months':\n            result.setMonth(result.getMonth() + interval);\n            break;\n        case 'Days':\n            result.setDate(result.getDate() + interval);\n            break;\n        case 'Hours':\n            result.setHours(result.getHours() + interval);\n            break;\n        case 'Minutes':\n            result.setMinutes(result.getMinutes() + interval);\n            break;\n    }\n    return result;\n}\n/* private */\nvar CanvasTooltip = /** @class */ (function () {\n    function CanvasTooltip(text, rect) {\n        this.region = new Rect(0, 0, 0, 0);\n        this.text = text;\n        this.region = rect;\n    }\n    return CanvasTooltip;\n}());\nexport { CanvasTooltip };\n/* private*/\n/* Method to get the tool tip text in canvas based on region. */\nexport function getTooltipText(tooltipCollection, xPosition, yPosition) {\n    var length = tooltipCollection.length;\n    var tooltip;\n    var region;\n    var text;\n    for (var i = 0; i < length; i++) {\n        tooltip = tooltipCollection[i];\n        region = tooltip.region;\n        if (xPosition >= region.x && xPosition <= (region.x + region.width) && yPosition >= region.y && yPosition <= (region.y + region.height)) {\n            text = tooltip.text;\n            break;\n        }\n    }\n    return text;\n}\n/**\n * @private\n */\nvar PaletterColor = /** @class */ (function () {\n    function PaletterColor() {\n    }\n    return PaletterColor;\n}());\nexport { PaletterColor };\n/**\n * @private\n */\nvar GradientPointer = /** @class */ (function () {\n    function GradientPointer(pathX1, pathY1, pathX2, pathY2, pathX3, pathY3) {\n        this.pathX1 = pathX1;\n        this.pathY1 = pathY1;\n        this.pathX2 = pathX2;\n        this.pathY2 = pathY2;\n        this.pathX3 = pathX3;\n        this.pathY3 = pathY3;\n    }\n    return GradientPointer;\n}());\nexport { GradientPointer };\n/**\n * Class to define currentRect private property.\n * @private\n */\nvar CurrentLegendRect = /** @class */ (function () {\n    function CurrentLegendRect(x, y, width, height, label, id) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.label = label;\n        this.id = id;\n    }\n    return CurrentLegendRect;\n}());\nexport { CurrentLegendRect };\n/** @private */\nvar LegendRange = /** @class */ (function () {\n    function LegendRange(x, y, width, height, value, visible, currentPage) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.value = value;\n        this.visible = visible;\n        this.currentPage = currentPage;\n    }\n    return LegendRange;\n}());\nexport { LegendRange };\n/** @private */\nvar ToggleVisibility = /** @class */ (function () {\n    function ToggleVisibility(visible, value) {\n        this.visible = visible;\n        this.value = value;\n    }\n    return ToggleVisibility;\n}());\nexport { ToggleVisibility };\n/** @private */\nexport function colorNameToHex(color) {\n    var element;\n    color = color === 'transparent' ? 'white' : color;\n    element = document.getElementById('heatmapmeasuretext');\n    element.style.color = color;\n    color = window.getComputedStyle(element).color;\n    var exp = /^(rgb|hsl)(a?)[(]\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*(?:,\\s*([\\d.]+)\\s*)?[)]$/;\n    var isRGBValue = exp.exec(color);\n    return convertToHexCode(new RgbColor(parseInt(isRGBValue[3], 10), parseInt(isRGBValue[4], 10), parseInt(isRGBValue[5], 10)));\n}\n/** @private */\nexport function convertToHexCode(value) {\n    return '#' + componentToHex(value.R) + componentToHex(value.G) + componentToHex(value.B);\n}\n/** @private */\nexport function componentToHex(value) {\n    var hex = value.toString(16);\n    return hex.length === 1 ? '0' + hex : hex;\n}\n/** @private */\nexport function convertHexToColor(hex) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? new RgbColor(parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)) :\n        new RgbColor(255, 255, 255);\n}\n/** @private */\nexport function formatValue(isCustom, format, tempInterval, formatFun) {\n    return isCustom ? format.replace('{value}', formatFun(tempInterval))\n        : formatFun(tempInterval);\n}\n/** @private */\nvar MultiLevelPosition = /** @class */ (function () {\n    function MultiLevelPosition(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    return MultiLevelPosition;\n}());\nexport { MultiLevelPosition };\n","/**\n * Specifies HeatMaps Themes\n */\nexport var Theme;\n(function (Theme) {\n    /** @private */\n    Theme.heatMapTitleFont = {\n        size: '15px',\n        fontWeight: '500',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n    /** @private */\n    Theme.axisTitleFont = {\n        size: '12px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n    /** @private */\n    Theme.axisLabelFont = {\n        size: '12px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n    /** @private */\n    Theme.legendLabelFont = {\n        size: '12px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI',\n        textOverflow: 'None',\n    };\n    /** @private */\n    Theme.rectLabelFont = {\n        size: '12px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI',\n        textOverflow: 'None',\n    };\n    /** @private */\n    Theme.tooltipFont = {\n        size: '13px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI',\n        textOverflow: 'None',\n    };\n})(Theme || (Theme = {}));\n/** @private */\nexport function getThemeColor(theme) {\n    var style;\n    switch (theme.toLowerCase()) {\n        case 'highcontrastlight':\n        case 'highcontrast':\n            style = {\n                heatMapTitle: '#ffffff',\n                axisTitle: '#ffffff',\n                axisLabel: '#ffffff',\n                cellBorder: '#EEEEEE',\n                background: '#000000',\n                cellTextColor: '#000000',\n                toggledColor: '#000000',\n                emptyCellColor: '#EEEEEE',\n                legendLabel: '#ffffff',\n                palette: [{ 'color': '#BEE7EE' },\n                    { 'color': '#85c4cf' },\n                    { 'color': '#4CA1AF' }]\n            };\n            break;\n        case 'materialdark':\n        case 'fabricdark':\n        case 'bootstrapdark':\n            style = {\n                heatMapTitle: '#ffffff',\n                axisTitle: '#ffffff',\n                axisLabel: '#DADADA',\n                cellBorder: '#EEEEEE',\n                background: '#000000',\n                cellTextColor: '#000000',\n                toggledColor: '#000000',\n                emptyCellColor: '#EEEEEE',\n                legendLabel: '#ffffff',\n                palette: [{ 'color': '#BEE7EE' },\n                    { 'color': '#85c4cf' },\n                    { 'color': '#4CA1AF' }]\n            };\n            break;\n        case 'bootstrap4':\n            style = {\n                heatMapTitle: '#212529',\n                axisTitle: '#212529',\n                axisLabel: '#212529',\n                cellBorder: '#E9ECEF',\n                background: '#FFFFFF',\n                cellTextColor: '#212529',\n                toggledColor: '#ffffff',\n                emptyCellColor: '#E9ECEF',\n                legendLabel: '#212529',\n                palette: [{ 'color': '#BEE7EE' },\n                    { 'color': '#85c4cf' },\n                    { 'color': '#4CA1AF' }]\n            };\n            break;\n        default:\n            style = {\n                heatMapTitle: '#424242',\n                axisTitle: '#424242',\n                axisLabel: '#686868',\n                cellBorder: '#EEEEEE',\n                cellTextColor: '#000000',\n                toggledColor: '#ffffff',\n                background: '#FFFFFF',\n                emptyCellColor: '#EEEEEE',\n                legendLabel: '#353535',\n                palette: [{ 'color': '#BEE7EE' },\n                    { 'color': '#85c4cf' },\n                    { 'color': '#4CA1AF' }]\n            };\n            break;\n    }\n    return style;\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex, Collection } from '@syncfusion/ej2-base';\nimport { Theme } from './theme';\n/**\n * Configures the fonts in heat map.\n */\nvar Font = /** @class */ (function (_super) {\n    __extends(Font, _super);\n    function Font() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('16px')\n    ], Font.prototype, \"size\", void 0);\n    __decorate([\n        Property('')\n    ], Font.prototype, \"color\", void 0);\n    __decorate([\n        Property('Segoe UI')\n    ], Font.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontWeight\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontStyle\", void 0);\n    __decorate([\n        Property('Center')\n    ], Font.prototype, \"textAlignment\", void 0);\n    __decorate([\n        Property('Trim')\n    ], Font.prototype, \"textOverflow\", void 0);\n    return Font;\n}(ChildProperty));\nexport { Font };\n/**\n * Configures the heat map margins.\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Configures the borders in the heat map.\n */\nvar Border = /** @class */ (function (_super) {\n    __extends(Border, _super);\n    function Border() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Border.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], Border.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], Border.prototype, \"radius\", void 0);\n    return Border;\n}(ChildProperty));\nexport { Border };\n/**\n * Configures the tooltip borders in the heat map.\n */\nvar TooltipBorder = /** @class */ (function (_super) {\n    __extends(TooltipBorder, _super);\n    function TooltipBorder() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], TooltipBorder.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], TooltipBorder.prototype, \"width\", void 0);\n    return TooltipBorder;\n}(ChildProperty));\nexport { TooltipBorder };\n/**\n * Configures the mapping name for size and color in SizeAndColor type.\n */\nvar BubbleData = /** @class */ (function (_super) {\n    __extends(BubbleData, _super);\n    function BubbleData() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], BubbleData.prototype, \"size\", void 0);\n    __decorate([\n        Property(null)\n    ], BubbleData.prototype, \"color\", void 0);\n    return BubbleData;\n}(ChildProperty));\nexport { BubbleData };\n/**\n * class used to maintain Title styles.\n */\nvar Title = /** @class */ (function (_super) {\n    __extends(Title, _super);\n    function Title() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Title.prototype, \"text\", void 0);\n    __decorate([\n        Complex({}, Font)\n    ], Title.prototype, \"textStyle\", void 0);\n    return Title;\n}(ChildProperty));\nexport { Title };\n/**\n * class used to maintain palette information.\n */\nvar PaletteCollection = /** @class */ (function (_super) {\n    __extends(PaletteCollection, _super);\n    function PaletteCollection() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], PaletteCollection.prototype, \"value\", void 0);\n    __decorate([\n        Property(null)\n    ], PaletteCollection.prototype, \"color\", void 0);\n    __decorate([\n        Property(null)\n    ], PaletteCollection.prototype, \"label\", void 0);\n    return PaletteCollection;\n}(ChildProperty));\nexport { PaletteCollection };\n/**\n * label border properties.\n */\nvar AxisLabelBorder = /** @class */ (function (_super) {\n    __extends(AxisLabelBorder, _super);\n    function AxisLabelBorder() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('#b5b5b5')\n    ], AxisLabelBorder.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], AxisLabelBorder.prototype, \"width\", void 0);\n    __decorate([\n        Property('Rectangle')\n    ], AxisLabelBorder.prototype, \"type\", void 0);\n    return AxisLabelBorder;\n}(ChildProperty));\nexport { AxisLabelBorder };\nvar BubbleSize = /** @class */ (function (_super) {\n    __extends(BubbleSize, _super);\n    function BubbleSize() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('0%')\n    ], BubbleSize.prototype, \"minimum\", void 0);\n    __decorate([\n        Property('100%')\n    ], BubbleSize.prototype, \"maximum\", void 0);\n    return BubbleSize;\n}(ChildProperty));\nexport { BubbleSize };\n/**\n * categories for multi level labels\n */\nvar MultiLevelCategories = /** @class */ (function (_super) {\n    __extends(MultiLevelCategories, _super);\n    function MultiLevelCategories() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], MultiLevelCategories.prototype, \"start\", void 0);\n    __decorate([\n        Property(null)\n    ], MultiLevelCategories.prototype, \"end\", void 0);\n    __decorate([\n        Property('')\n    ], MultiLevelCategories.prototype, \"text\", void 0);\n    __decorate([\n        Property(null)\n    ], MultiLevelCategories.prototype, \"maximumTextWidth\", void 0);\n    return MultiLevelCategories;\n}(ChildProperty));\nexport { MultiLevelCategories };\n/**\n * MultiLevelLabels properties\n */\nvar MultiLevelLabels = /** @class */ (function (_super) {\n    __extends(MultiLevelLabels, _super);\n    function MultiLevelLabels() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Center')\n    ], MultiLevelLabels.prototype, \"alignment\", void 0);\n    __decorate([\n        Property('Wrap')\n    ], MultiLevelLabels.prototype, \"overflow\", void 0);\n    __decorate([\n        Complex(Theme.axisLabelFont, Font)\n    ], MultiLevelLabels.prototype, \"textStyle\", void 0);\n    __decorate([\n        Complex({ color: '#b5b5b5', width: 1, type: 'Rectangle' }, AxisLabelBorder)\n    ], MultiLevelLabels.prototype, \"border\", void 0);\n    __decorate([\n        Collection([], MultiLevelCategories)\n    ], MultiLevelLabels.prototype, \"categories\", void 0);\n    return MultiLevelLabels;\n}(ChildProperty));\nexport { MultiLevelLabels };\n/**\n * Internal class used to maintain colorcollection.\n */\nvar ColorCollection = /** @class */ (function () {\n    function ColorCollection(value, color, label) {\n        this.value = value;\n        this.color = color;\n        this.label = label;\n    }\n    return ColorCollection;\n}());\nexport { ColorCollection };\n/**\n * class used to maintain color and value collection.\n */\nvar BubbleTooltipData = /** @class */ (function () {\n    function BubbleTooltipData(mappingName, bubbleData, valueType) {\n        this.mappingName = mappingName;\n        this.bubbleData = bubbleData;\n        this.valueType = valueType;\n    }\n    return BubbleTooltipData;\n}());\nexport { BubbleTooltipData };\n/**\n * Internal class used to maintain legend colorcollection.\n */\nvar LegendColorCollection = /** @class */ (function () {\n    function LegendColorCollection(value, color, label, isHidden) {\n        this.value = value;\n        this.color = color;\n        this.label = label;\n        this.isHidden = isHidden;\n    }\n    return LegendColorCollection;\n}());\nexport { LegendColorCollection };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, extend, ChildProperty, Collection, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { ColorCollection, LegendColorCollection, PaletteCollection } from '../model/base';\nimport { PaletterColor } from './helper';\n/**\n * Configures the color property in Heatmap.\n */\nvar PaletteSettings = /** @class */ (function (_super) {\n    __extends(PaletteSettings, _super);\n    function PaletteSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([{}], PaletteCollection)\n    ], PaletteSettings.prototype, \"palette\", void 0);\n    __decorate([\n        Property('Gradient')\n    ], PaletteSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], PaletteSettings.prototype, \"emptyPointColor\", void 0);\n    return PaletteSettings;\n}(ChildProperty));\nexport { PaletteSettings };\n/**\n * Helper class for colormapping\n */\nvar RgbColor = /** @class */ (function () {\n    function RgbColor(r, g, b) {\n        this.R = r;\n        this.G = g;\n        this.B = b;\n    }\n    return RgbColor;\n}());\nexport { RgbColor };\nvar CellColor = /** @class */ (function () {\n    function CellColor(heatMap) {\n        this.heatMap = heatMap;\n    }\n    /**\n     * To convert hexa color to RGB.\n     * @return {RGB}\n     * @private\n     */\n    CellColor.prototype.convertToRGB = function (value, colorMapping) {\n        var previousOffset = colorMapping[0].value;\n        var nextOffset = 0;\n        for (var i = 1; i < colorMapping.length; i++) {\n            var offset = Number(colorMapping[i].value);\n            if (value <= offset) {\n                nextOffset = offset;\n                break;\n            }\n            else {\n                nextOffset = offset;\n                previousOffset = offset;\n            }\n        }\n        var percent = 0;\n        var full = nextOffset - previousOffset;\n        percent = (value - previousOffset) / full;\n        percent = isNaN(percent) ? 0 : percent;\n        var previousColor = this.getEqualColor(colorMapping, previousOffset);\n        var nextColor = this.getEqualColor(colorMapping, nextOffset);\n        return this.getPercentageColor(percent, previousColor, nextColor);\n    };\n    /**\n     * To convert RGB to HEX.\n     * @return {string}\n     * @private\n     */\n    CellColor.prototype.rgbToHex = function (r, g, b) {\n        return '#' + this.componentToHex(r) + this.componentToHex(g) + this.componentToHex(b);\n    };\n    /**\n     * To convert Component to HEX.\n     * @return {string}\n     * @private\n     */\n    CellColor.prototype.componentToHex = function (c) {\n        var hex = c.toString(16);\n        return hex.length === 1 ? '0' + hex : hex;\n    };\n    /**\n     * To get similar color.\n     * @return {string}\n     * @private\n     */\n    CellColor.prototype.getEqualColor = function (list, offset) {\n        for (var i = 0; i < list.length; i++) {\n            if (Number(list[i].value) === offset) {\n                var color = list[i].color;\n                if (color.indexOf('rgb') !== -1) {\n                    color = this.convertToHex(color);\n                }\n                else if (color.indexOf('#') === -1) {\n                    color = '#FFFFFF';\n                }\n                return color;\n            }\n        }\n        return '#00000';\n    };\n    /**\n     * To convert RGB to HEX.\n     * @return {string}\n     * @private\n     */\n    CellColor.prototype.convertToHex = function (color) {\n        var itemColor = color.substr(3);\n        itemColor = itemColor.split('(')[1].split(')')[0];\n        var colorSplit = itemColor.split(',');\n        itemColor = this.rgbToHex(parseInt(colorSplit[0], 10), parseInt(colorSplit[1], 10), parseInt(colorSplit[2], 10));\n        return itemColor;\n    };\n    /**\n     * To get RGB for percentage value.\n     * @return {RGB}\n     * @private\n     */\n    CellColor.prototype.getPercentageColor = function (percent, previous, next) {\n        var nextColor = next.split('#')[1];\n        var prevColor = previous.split('#')[1];\n        var r = this.getPercentage(percent, parseInt(prevColor.substr(0, 2), 16), parseInt(nextColor.substr(0, 2), 16));\n        var g = this.getPercentage(percent, parseInt(prevColor.substr(2, 2), 16), parseInt(nextColor.substr(2, 2), 16));\n        var b = this.getPercentage(percent, parseInt(prevColor.substr(4, 2), 16), parseInt(nextColor.substr(4, 2), 16));\n        return new RgbColor(r, g, b);\n    };\n    /**\n     * To convert numbet to percentage.\n     * @return {RGB}\n     * @private\n     */\n    CellColor.prototype.getPercentage = function (percent, previous, next) {\n        var full = next - previous;\n        return Math.round((previous + (full * percent)));\n    };\n    /**\n     * To get complete color Collection.\n     * @private\n     */\n    CellColor.prototype.getColorCollection = function () {\n        var heatMap = this.heatMap;\n        heatMap.colorCollection = [];\n        heatMap.legendColorCollection = [];\n        var range;\n        var minValue = heatMap.bubbleSizeWithColor ? heatMap.minColorValue : heatMap.dataSourceMinValue;\n        var maxValue = heatMap.bubbleSizeWithColor ? heatMap.maxColorValue : heatMap.dataSourceMaxValue;\n        heatMap.emptyPointColor = heatMap.paletteSettings.emptyPointColor ? heatMap.paletteSettings.emptyPointColor :\n            heatMap.themeStyle.emptyCellColor;\n        var tempcolorMapping = this.orderbyOffset(heatMap.paletteSettings.palette && heatMap.paletteSettings.palette.length > 1 ?\n            heatMap.paletteSettings.palette : heatMap.themeStyle.palette);\n        if (!tempcolorMapping.isCompact) {\n            if (heatMap.paletteSettings.type === 'Gradient') {\n                range = (maxValue - minValue) / (tempcolorMapping.offsets.length - 1);\n            }\n            else {\n                range = (maxValue - minValue) / (tempcolorMapping.offsets.length);\n            }\n            if (tempcolorMapping.offsets.length >= 2) {\n                for (var index = 0; index < tempcolorMapping.offsets.length; index++) {\n                    heatMap.colorCollection.push(new ColorCollection(Math.round(((minValue) + (index * range)) * 100) / 100, tempcolorMapping.offsets[index].color, tempcolorMapping.offsets[index].label));\n                    heatMap.legendColorCollection.push(new LegendColorCollection(Math.round(((minValue) + (index * range)) * 100) / 100, tempcolorMapping.offsets[index].color, tempcolorMapping.offsets[index].label, false));\n                }\n            }\n        }\n        else {\n            heatMap.colorCollection = tempcolorMapping.offsets;\n            heatMap.legendColorCollection = extend([], tempcolorMapping.offsets, null, true);\n        }\n        this.updateLegendColorCollection(minValue, maxValue, tempcolorMapping);\n    };\n    /**\n     * To update legend color Collection.\n     * @private\n     */\n    CellColor.prototype.updateLegendColorCollection = function (minValue, maxValue, tempcolorMapping) {\n        if (this.heatMap.paletteSettings.type === 'Fixed' && (tempcolorMapping.isCompact || tempcolorMapping.isLabel)) {\n            return;\n        }\n        if (Math.round(minValue * 100) / 100 < this.heatMap.legendColorCollection[0].value) {\n            this.heatMap.legendColorCollection.unshift(new LegendColorCollection(Math.round(minValue * 100) / 100, this.heatMap.legendColorCollection[0].color, this.heatMap.legendColorCollection[0].label, true));\n        }\n        if (Math.round(maxValue * 100) / 100 > this.heatMap.legendColorCollection[this.heatMap.legendColorCollection.length - 1].value) {\n            this.heatMap.legendColorCollection.push(new LegendColorCollection(Math.round(maxValue * 100) / 100, this.heatMap.legendColorCollection[this.heatMap.legendColorCollection.length - 1].color, this.heatMap.legendColorCollection[this.heatMap.legendColorCollection.length - 1].label, true));\n        }\n    };\n    /**\n     * To get ordered palette color collection.\n     * @private\n     */\n    CellColor.prototype.orderbyOffset = function (offsets) {\n        var returnCollection = new PaletterColor();\n        var key = 'value';\n        var label = 'label';\n        returnCollection.isCompact = true;\n        returnCollection.isLabel = true;\n        // tslint:disable-next-line:no-any\n        returnCollection.offsets = offsets.sort(function (a, b) {\n            if (isNullOrUndefined(a[label]) && isNullOrUndefined(b[label])) {\n                returnCollection.isLabel = false;\n            }\n            if (!isNullOrUndefined(a[key]) && !isNullOrUndefined(b[key])) {\n                return a[key] - b[key];\n            }\n            else {\n                returnCollection.isCompact = false;\n                return a;\n            }\n        });\n        if (!returnCollection.isCompact) {\n            returnCollection.offsets = this.heatMap.paletteSettings.palette && this.heatMap.paletteSettings.palette.length > 1 ?\n                this.heatMap.paletteSettings.palette : this.heatMap.themeStyle.palette;\n        }\n        return returnCollection;\n    };\n    /**\n     * To get color depends to value.\n     * @private\n     */\n    CellColor.prototype.getColorByValue = function (text) {\n        var color = '';\n        var rbg;\n        var compareValue = 0;\n        if (text.toString() !== '') {\n            if (this.heatMap.cellSettings.tileType === 'Bubble' &&\n                (this.heatMap.cellSettings.bubbleType === 'Size' || this.heatMap.cellSettings.bubbleType === 'Sector')) {\n                color = this.heatMap.colorCollection[0].color;\n            }\n            else if (this.heatMap.paletteSettings.type === 'Fixed') {\n                for (var y = 0; y < this.heatMap.colorCollection.length; y++) {\n                    compareValue = this.heatMap.colorCollection[y + 1] ? this.heatMap.colorCollection[y + 1].value :\n                        this.heatMap.colorCollection[y].value;\n                    var singleValue = this.heatMap.dataSourceMinValue === this.heatMap.dataSourceMaxValue;\n                    if ((text <= compareValue && y === 0 && singleValue) || text < compareValue ||\n                        (text >= compareValue && y === this.heatMap.colorCollection.length - 1)) {\n                        var legendRange = void 0;\n                        if (this.heatMap.legendVisibilityByCellType) {\n                            legendRange = this.heatMap.legendModule.legendRange;\n                        }\n                        color = (this.heatMap.legendVisibilityByCellType && legendRange[y] && !legendRange[y].visible) ?\n                            this.heatMap.themeStyle.toggledColor : this.heatMap.colorCollection[y].color;\n                        break;\n                    }\n                }\n            }\n            else {\n                if (text < this.heatMap.colorCollection[0].value) {\n                    color = this.heatMap.colorCollection[0].color;\n                }\n                else if (text > this.heatMap.colorCollection[this.heatMap.colorCollection.length - 1].value) {\n                    color = this.heatMap.colorCollection[this.heatMap.colorCollection.length - 1].color;\n                }\n                else {\n                    rbg = this.convertToRGB(text, this.heatMap.colorCollection);\n                    color = this.rgbToHex(rbg.R, rbg.G, rbg.B);\n                }\n            }\n        }\n        else {\n            color = this.heatMap.emptyPointColor;\n        }\n        return color;\n    };\n    return CellColor;\n}());\nexport { CellColor };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/**\n * HeatMap Axis file\n */\nimport { Property, Complex, ChildProperty, isNullOrUndefined, Collection } from '@syncfusion/ej2-base';\nimport { DataUtil } from '@syncfusion/ej2-data';\nimport { Font, Title, AxisLabelBorder, MultiLevelLabels } from '../model/base';\nimport { Theme } from '../model/theme';\nimport { Rect, measureText, Size, rotateTextSize, increaseDateTimeInterval, formatValue } from '../utils/helper';\nimport { MultiLevelPosition, textWrap } from '../utils/helper';\nvar Axis = /** @class */ (function (_super) {\n    __extends(Axis, _super);\n    function Axis() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** @private */\n        _this.rect = new Rect(undefined, undefined, 0, 0);\n        /** @private */\n        _this.nearSizes = [];\n        /** @private */\n        _this.farSizes = [];\n        /** @private */\n        _this.maxLabelSize = new Size(0, 0);\n        /** @private */\n        _this.titleSize = new Size(0, 0);\n        /** @private */\n        _this.axisLabels = [];\n        /** @private */\n        _this.tooltipLabels = [];\n        /** @private */\n        _this.labelValue = [];\n        /** @private */\n        _this.axisLabelSize = 0;\n        /** @private */\n        _this.axisLabelInterval = 0;\n        /** @private */\n        _this.dateTimeAxisLabelInterval = [];\n        /** @private */\n        _this.maxLength = 0;\n        /** @private */\n        _this.min = 0;\n        /** @private */\n        _this.max = 0;\n        /** @private */\n        _this.isIntersect = false;\n        /** @private */\n        _this.jsonCellLabel = [];\n        _this.multiLevelSize = [];\n        /** @private */\n        _this.xAxisMultiLabelHeight = [];\n        /** @private */\n        _this.yAxisMultiLabelHeight = [];\n        /** @private */\n        _this.multiLevelPosition = [];\n        return _this;\n    }\n    /**\n     * measure the axis title and label size\n     * @param axis\n     * @param heatmap\n     * @private\n     */\n    Axis.prototype.computeSize = function (axis, heatmap, rect) {\n        var size = new Size(0, 0);\n        var innerPadding = 10;\n        this.titleSize = axis.getTitleSize(axis, innerPadding);\n        this.maxLabelSize = axis.getMaxLabelSize(axis, heatmap);\n        this.getMultilevelLabelsHeight(axis, rect, heatmap);\n        for (var i = 0; i < this.multiLevelLabels.length; i++) {\n            size = axis.multiLevelLabelSize(innerPadding, i);\n            this.multiLevelSize.push(size);\n        }\n    };\n    /**\n     * calculating x, y position of multi level labels\n     * @private\n     */\n    Axis.prototype.multiPosition = function (axis, index) {\n        var innerPadding = axis.orientation === 'Horizontal' ? 10 : 20;\n        var multiPosition = new MultiLevelPosition(0, 0);\n        if (axis.orientation === 'Horizontal') {\n            var level0 = axis.maxLabelSize.height + innerPadding;\n            var level1 = this.xAxisMultiLabelHeight[index - 1];\n            multiPosition.x = (axis.isInversed ? axis.rect.x + axis.rect.width : axis.rect.x);\n            multiPosition.y = index === 0 ? axis.rect.y + (axis.opposedPosition ? -level0 : level0) :\n                axis.multiLevelPosition[index - 1].y + (axis.opposedPosition ? -level1 : level1);\n        }\n        else {\n            var level0 = axis.maxLabelSize.width + innerPadding;\n            var level1 = index !== 0 && (this.multiLevelSize[index - 1].width);\n            multiPosition.x = index === 0 ? axis.rect.x - (axis.opposedPosition ? -level0 : level0) :\n                axis.multiLevelPosition[index - 1].x - (axis.opposedPosition ? -(level1 + innerPadding) : level1 + innerPadding);\n            multiPosition.y = axis.isInversed ? axis.rect.y : axis.rect.y + axis.rect.height;\n        }\n        return multiPosition;\n    };\n    Axis.prototype.multiLevelLabelSize = function (innerPadding, index) {\n        var labelSize = new Size(0, 0);\n        var multiLevel = this.multiLevelLabels;\n        var categoryLabel = multiLevel[index].categories;\n        for (var i = 0; i < categoryLabel.length; i++) {\n            var size_1 = measureText(categoryLabel[i].text, multiLevel[index].textStyle);\n            labelSize.width = (labelSize.width > size_1.width) ? labelSize.width : size_1.width;\n            labelSize.height = (labelSize.height > size_1.height) ? labelSize.height : size_1.height;\n        }\n        var size = (this.orientation === 'Horizontal') ? this.xAxisMultiLabelHeight[index] : this.yAxisMultiLabelHeight[index];\n        if (this.opposedPosition) {\n            this.farSizes.push(size);\n        }\n        else {\n            this.nearSizes.push(size);\n        }\n        return labelSize;\n    };\n    Axis.prototype.getMultilevelLabelsHeight = function (axis, rect, heatmap) {\n        var labelSize;\n        var gap;\n        var height;\n        var multiLevelLabelsHeight = [];\n        var start;\n        var end;\n        var startPosition;\n        var endPosition;\n        var isVertical = axis.orientation === 'Vertical';\n        var axisValue = (isVertical ? rect.height : rect.width) / axis.axisLabelSize;\n        var padding = axis.orientation === 'Vertical' ? 20 : 10;\n        this.multiLevelLabels.map(function (multiLevel, index) {\n            multiLevel.categories.map(function (categoryLabel) {\n                start = typeof categoryLabel.start === 'number' ? categoryLabel.start : Number(new Date(categoryLabel.start));\n                end = typeof categoryLabel.end === 'number' ? categoryLabel.end : Number(new Date(categoryLabel.end));\n                if (categoryLabel.text !== '' && categoryLabel.start !== null && categoryLabel.end !== null) {\n                    labelSize = measureText(categoryLabel.text, multiLevel.textStyle);\n                    height = isVertical ? labelSize.width : labelSize.height;\n                    startPosition = heatmap.heatMapAxis.calculateLeftPosition(axis, start, categoryLabel.start, rect);\n                    endPosition = heatmap.heatMapAxis.calculateWidth(axis, categoryLabel.end, end, rect);\n                    labelSize = measureText(categoryLabel.text, multiLevel.textStyle);\n                    gap = ((categoryLabel.maximumTextWidth === null) ? Math.abs(endPosition - startPosition) :\n                        categoryLabel.maximumTextWidth);\n                    if ((labelSize.width > gap - padding) && (multiLevel.overflow === 'Wrap') && !isVertical) {\n                        height = (height * (textWrap(categoryLabel.text, gap - padding, multiLevel.textStyle).length));\n                    }\n                    multiLevelLabelsHeight[index] = !multiLevelLabelsHeight[index] ? height + padding :\n                        ((multiLevelLabelsHeight[index] < height) ? height + padding : multiLevelLabelsHeight[index]);\n                }\n            });\n        });\n        if (isVertical) {\n            this.yAxisMultiLabelHeight = multiLevelLabelsHeight;\n        }\n        else {\n            this.xAxisMultiLabelHeight = multiLevelLabelsHeight;\n        }\n    };\n    Axis.prototype.getTitleSize = function (axis, innerPadding) {\n        var titleSize = new Size(0, 0);\n        if (this.title.text) {\n            titleSize = measureText(this.title.text, this.title.textStyle);\n            titleSize.height += innerPadding;\n        }\n        if (axis.opposedPosition) {\n            this.farSizes.push(titleSize.height);\n        }\n        else {\n            this.nearSizes.push(titleSize.height);\n        }\n        return titleSize;\n    };\n    Axis.prototype.getMaxLabelSize = function (axis, heatmap) {\n        var labelSize = new Size(0, 0);\n        var labels = this.axisLabels;\n        var padding = (axis.border.width > 0 || axis.multiLevelLabels.length > 0) ? 10 : 0;\n        axis.angle = axis.labelRotation;\n        axis.isIntersect = false;\n        if (axis.orientation === 'Horizontal' && (axis.labelIntersectAction === 'Rotate45' ||\n            (axis.labelRotation % 180 === 0 && axis.labelIntersectAction === 'Trim'))) {\n            var interval = (axis.valueType === 'DateTime' && axis.showLabelOn !== 'None') ?\n                heatmap.initialClipRect.width / axis.axisLabelSize : heatmap.initialClipRect.width / axis.axisLabels.length;\n            var startX = heatmap.initialClipRect.x + ((!axis.isInversed) ? 0 : heatmap.initialClipRect.width);\n            var previousEnd = void 0;\n            var previousStart = void 0;\n            for (var i = 0, len = labels.length; i < len; i++) {\n                var label = labels[i];\n                var elementSize = measureText(label, axis.textStyle);\n                var axisInterval = (axis.valueType === 'DateTime' && axis.showLabelOn !== 'None') ?\n                    axis.dateTimeAxisLabelInterval[i] * interval : interval;\n                var startPoint = startX + (!axis.isInversed ?\n                    ((interval - elementSize.width) / 2) : -((interval + elementSize.width) / 2));\n                startPoint = startPoint < heatmap.initialClipRect.x ? heatmap.initialClipRect.x : startPoint;\n                var endPoint = startPoint + elementSize.width;\n                if (!axis.isInversed) {\n                    if (isNullOrUndefined(previousEnd)) {\n                        previousEnd = endPoint;\n                    }\n                    else if ((startPoint < previousEnd)) {\n                        if (axis.labelIntersectAction === 'Rotate45') {\n                            axis.angle = 45;\n                        }\n                        else {\n                            axis.isIntersect = true;\n                        }\n                        break;\n                    }\n                    previousEnd = endPoint;\n                }\n                else {\n                    if (isNullOrUndefined(previousStart)) {\n                        previousStart = startPoint;\n                    }\n                    else if ((previousStart < endPoint)) {\n                        if (axis.labelIntersectAction === 'Rotate45') {\n                            axis.angle = 45;\n                        }\n                        else {\n                            axis.isIntersect = true;\n                        }\n                        break;\n                    }\n                    previousStart = startPoint;\n                }\n                startX += axis.isInversed ? -axisInterval : axisInterval;\n            }\n        }\n        for (var i = 0; i < labels.length; i++) {\n            var size = (axis.angle % 180 === 0) ?\n                measureText(labels[i], axis.textStyle) : rotateTextSize(axis.textStyle, labels[i], axis.angle);\n            labelSize.width = (labelSize.width > size.width) ? labelSize.width : size.width;\n            labelSize.height = (labelSize.height > size.height) ? labelSize.height : size.height;\n        }\n        if (axis.opposedPosition) {\n            this.farSizes.push((axis.orientation === 'Horizontal') ? labelSize.height : labelSize.width + padding);\n        }\n        else {\n            this.nearSizes.push((axis.orientation === 'Horizontal') ? labelSize.height : labelSize.width + padding);\n        }\n        return labelSize;\n    };\n    /**\n     * Generate the axis lables for numeric axis\n     * @param heatmap\n     * @private\n     */\n    Axis.prototype.calculateNumericAxisLabels = function (heatmap) {\n        //Axis Min\n        var min = 0;\n        var max = 0;\n        var interval = this.interval ? this.interval : 1;\n        var adaptorMin;\n        var adaptorMax;\n        if (heatmap.adaptorModule && heatmap.isCellData) {\n            adaptorMin = this.orientation === 'Horizontal' ?\n                heatmap.adaptorModule.adaptiveXMinMax.min : heatmap.adaptorModule.adaptiveYMinMax.min;\n            adaptorMax = this.orientation === 'Horizontal' ?\n                heatmap.adaptorModule.adaptiveXMinMax.max : heatmap.adaptorModule.adaptiveYMinMax.max;\n        }\n        min = !isNullOrUndefined(this.minimum) ? this.minimum : ((adaptorMin) ? adaptorMin : 0);\n        max = !isNullOrUndefined(this.maximum) ? this.maximum :\n            ((adaptorMax) ? adaptorMax : (this.maxLength * this.increment));\n        var temp;\n        if (this.minimum && this.maximum && min > max) {\n            temp = min;\n            min = max;\n            max = temp;\n        }\n        max = !isNullOrUndefined(this.maximum) ? max : (adaptorMax ? adaptorMax : (max + min));\n        var format = this.labelFormat;\n        var isCustom = format.match('{value}') !== null;\n        this.format = heatmap.intl.getNumberFormat({\n            format: isCustom ? '' : format\n        });\n        for (var i = min; i <= max; i = i + (interval * this.increment)) {\n            var value = formatValue(isCustom, format, i, this.format);\n            this.axisLabels.push(value);\n        }\n        this.min = 0;\n        this.axisLabelSize = Math.floor(((max - min) / this.increment) + 1);\n        this.max = this.axisLabelSize - 1;\n        this.axisLabelInterval = interval;\n        for (var i = min; i <= max; i = i + this.increment) {\n            var value = formatValue(isCustom, format, i, this.format);\n            this.tooltipLabels.push(value);\n            this.labelValue.push(i);\n        }\n        this.labelValue = this.isInversed ? this.labelValue.reverse() : this.labelValue;\n    };\n    /**\n     * Generate the axis lables for category axis\n     * @private\n     */\n    Axis.prototype.calculateCategoryAxisLabels = function () {\n        var labels = this.labels ? this.labels : [];\n        labels = (labels.length > 0) ? labels : this.jsonCellLabel;\n        var min = !isNullOrUndefined(this.minimum) ? this.minimum : 0;\n        var max = !isNullOrUndefined(this.maximum) ? this.maximum : this.maxLength;\n        var interval = this.interval ? this.interval : 1;\n        var temp;\n        if (!isNullOrUndefined(this.minimum) && !isNullOrUndefined(this.maximum) && min > max) {\n            temp = min;\n            min = max;\n            max = temp;\n        }\n        if (labels && labels.length > 0) {\n            for (var i = min; i <= max; i = i + interval) {\n                var value = labels[i] ? labels[i].toString() : i.toString();\n                this.axisLabels.push(value);\n            }\n        }\n        else {\n            for (var i = min; i <= max; i = i + interval) {\n                this.axisLabels.push(i.toString());\n            }\n        }\n        for (var i = min; i <= max; i++) {\n            this.tooltipLabels.push(labels[i] ? labels[i].toString() : i.toString());\n            this.labelValue.push(labels[i] ? labels[i].toString() : i.toString());\n        }\n        this.min = min;\n        this.max = max;\n        this.axisLabelSize = max - min + 1;\n        this.axisLabelInterval = interval;\n        this.labelValue = this.isInversed ? this.labelValue.reverse() : this.labelValue;\n    };\n    /**\n     * Generate the axis labels for date time axis.\n     * @param heatmap\n     * @private\n     */\n    Axis.prototype.calculateDateTimeAxisLabel = function (heatmap) {\n        var interval = this.interval ? this.interval : 1;\n        var option = {\n            skeleton: 'full',\n            type: 'dateTime'\n        };\n        var dateParser = heatmap.intl.getDateParser(option);\n        var dateFormatter = heatmap.intl.getDateFormat(option);\n        var min;\n        var max;\n        var adaptorMin = null;\n        var adaptorMax = null;\n        if (heatmap.adaptorModule && heatmap.isCellData) {\n            adaptorMin = this.orientation === 'Horizontal' ? heatmap.adaptorModule.adaptiveXMinMax.min :\n                heatmap.adaptorModule.adaptiveYMinMax.min;\n            adaptorMax = this.orientation === 'Horizontal' ? heatmap.adaptorModule.adaptiveXMinMax.max :\n                heatmap.adaptorModule.adaptiveYMinMax.max;\n        }\n        var minimum = this.minimum ? this.minimum : (adaptorMin ? adaptorMin : null);\n        var maximum = this.maximum ? this.maximum : (adaptorMax ? adaptorMax : null);\n        if (minimum === null && maximum === null) {\n            min = 0;\n            max = this.maxLength * this.increment;\n            for (var i = min; i <= max; i = i + (interval * this.increment)) {\n                this.axisLabels.push(i.toString());\n                this.tooltipLabels.push(i.toString());\n                this.labelValue.push(i.toString());\n            }\n            this.min = 0;\n            this.max = this.maxLength;\n            this.axisLabelSize = (max - min) / this.increment + 1;\n            this.axisLabelInterval = interval;\n        }\n        else {\n            if (minimum !== null && maximum === null) {\n                min = Date.parse(dateParser(dateFormatter(new Date(DataUtil.parse.parseJson({ val: minimum }).val))));\n                max = increaseDateTimeInterval(min, this.maxLength, this.intervalType, this.increment).getTime();\n            }\n            else if (minimum === null && maximum !== null) {\n                max = Date.parse(dateParser(dateFormatter(new Date(DataUtil.parse.parseJson({ val: maximum }).val))));\n                min = increaseDateTimeInterval(max, -this.maxLength, this.intervalType, this.increment).getTime();\n            }\n            else {\n                min = Date.parse(dateParser(dateFormatter(new Date(DataUtil.parse.parseJson({ val: minimum }).val))));\n                max = Date.parse(dateParser(dateFormatter(new Date(DataUtil.parse.parseJson({ val: maximum }).val))));\n            }\n            this.format = heatmap.intl.getDateFormat({\n                format: this.labelFormat, skeleton: this.getSkeleton()\n            });\n            var tempInterval = min;\n            while (tempInterval <= max) {\n                var value = this.format(new Date(tempInterval));\n                this.axisLabels.push(value);\n                if (this.showLabelOn !== 'None') {\n                    interval = this.calculateLabelInterval(tempInterval);\n                    this.dateTimeAxisLabelInterval.push(interval);\n                }\n                tempInterval = increaseDateTimeInterval(tempInterval, interval, this.intervalType, this.increment).getTime();\n            }\n            this.min = 0;\n            this.axisLabelInterval = interval;\n            this.axisLabelSize = this.getTotalLabelLength(min, max); // this.tooltipLabels.length;\n            this.max = this.axisLabelSize - 1;\n            tempInterval = min;\n            while (tempInterval <= max) {\n                var value = this.format(new Date(tempInterval));\n                this.tooltipLabels.push(value);\n                this.labelValue.push(new Date(tempInterval));\n                tempInterval = increaseDateTimeInterval(tempInterval, 1, this.intervalType, this.increment).getTime();\n            }\n        }\n        this.labelValue = this.isInversed ? this.labelValue.reverse() : this.labelValue;\n    };\n    Axis.prototype.calculateLabelInterval = function (interval) {\n        var year = new Date(interval).getFullYear();\n        var month = new Date(interval).getMonth() + 1;\n        var day = new Date(interval).getDate();\n        var numberOfDays;\n        var tempInterval;\n        if (this.showLabelOn === 'Years' || this.showLabelOn === 'Months') {\n            if (this.showLabelOn === 'Years' && this.intervalType === 'Months') {\n                tempInterval = Math.ceil(12 / this.increment);\n            }\n            else {\n                numberOfDays = this.showLabelOn === 'Years' ? year % 4 === 0 ? 366 : 365 : new Date(year, month, 0).getDate();\n                numberOfDays += 1 - day;\n                tempInterval = this.intervalType === 'Days' ? Math.ceil(numberOfDays / this.increment) : this.intervalType === 'Hours' ?\n                    Math.ceil((numberOfDays * 24) / this.increment) : this.intervalType === 'Minutes' ?\n                    Math.ceil((numberOfDays * 24 * 60) / this.increment) : 1;\n            }\n        }\n        else if (this.showLabelOn === 'Days') {\n            tempInterval = this.intervalType === 'Hours' ? Math.ceil(24 / this.increment) : this.intervalType === 'Minutes' ?\n                Math.ceil((24 * 60) / this.increment) : 1;\n        }\n        else if (this.showLabelOn === 'Hours') {\n            var minutes = new Date(interval).getMinutes();\n            tempInterval = this.intervalType === 'Minutes' ? Math.ceil((60 - minutes) / this.increment) : 1;\n        }\n        else {\n            tempInterval = 1;\n        }\n        return tempInterval;\n    };\n    /**\n     * @private\n     */\n    Axis.prototype.getSkeleton = function () {\n        var skeleton;\n        if (this.intervalType === 'Years') {\n            skeleton = 'yMMM';\n        }\n        else if (this.intervalType === 'Months') {\n            skeleton = 'MMMd';\n        }\n        else if (this.intervalType === 'Days') {\n            skeleton = 'yMd';\n        }\n        else if (this.intervalType === 'Hours') {\n            skeleton = 'EHm';\n        }\n        else if (this.intervalType === 'Minutes') {\n            skeleton = 'Hms';\n        }\n        else {\n            skeleton = 'Hms';\n        }\n        return skeleton;\n    };\n    /** @private */\n    Axis.prototype.getTotalLabelLength = function (min, max) {\n        var length = 0;\n        var minimum = new Date(min);\n        var maximum = new Date(max);\n        var difference;\n        var days;\n        switch (this.intervalType) {\n            case 'Years':\n                var years = ((maximum.getFullYear() - minimum.getFullYear()) / this.increment) + 1;\n                length = Math.floor(years);\n                break;\n            case 'Months':\n                var months = (maximum.getFullYear() - minimum.getFullYear()) * 12;\n                months -= minimum.getMonth();\n                months += maximum.getMonth();\n                length = months <= 0 ? 1 : Math.floor((months / this.increment) + 1);\n                break;\n            case 'Days':\n                difference = Math.abs(minimum.getTime() - maximum.getTime());\n                days = Math.floor(difference / (1000 * 3600 * 24));\n                length = Math.floor((days / this.increment) + 1);\n                break;\n            case 'Hours':\n                difference = Math.abs(minimum.getTime() - maximum.getTime());\n                var hours = Math.floor(difference / (1000 * 3600));\n                length = Math.floor(hours / this.increment) + 1;\n                break;\n            case 'Minutes':\n                difference = Math.abs(minimum.getTime() - maximum.getTime());\n                var minutes = Math.floor(difference / (1000 * 60));\n                length = Math.floor(minutes / this.increment) + 1;\n                break;\n        }\n        return length;\n    };\n    /**\n     * Clear the axis label collection\n     * @private\n     */\n    Axis.prototype.clearAxisLabel = function () {\n        this.axisLabels = [];\n        this.tooltipLabels = [];\n        this.dateTimeAxisLabelInterval = [];\n        this.labelValue = [];\n    };\n    __decorate([\n        Complex({ text: '', textStyle: Theme.axisTitleFont }, Title)\n    ], Axis.prototype, \"title\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"opposedPosition\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"labels\", void 0);\n    __decorate([\n        Complex(Theme.axisLabelFont, Font)\n    ], Axis.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(0)\n    ], Axis.prototype, \"labelRotation\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"isInversed\", void 0);\n    __decorate([\n        Property('Category')\n    ], Axis.prototype, \"valueType\", void 0);\n    __decorate([\n        Property(1)\n    ], Axis.prototype, \"increment\", void 0);\n    __decorate([\n        Property('None')\n    ], Axis.prototype, \"showLabelOn\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"minimum\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"maximum\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"interval\", void 0);\n    __decorate([\n        Property('')\n    ], Axis.prototype, \"labelFormat\", void 0);\n    __decorate([\n        Property('Days')\n    ], Axis.prototype, \"intervalType\", void 0);\n    __decorate([\n        Property('Trim')\n    ], Axis.prototype, \"labelIntersectAction\", void 0);\n    __decorate([\n        Complex({ color: '#b5b5b5', width: 0, type: 'Rectangle' }, AxisLabelBorder)\n    ], Axis.prototype, \"border\", void 0);\n    __decorate([\n        Collection([], MultiLevelLabels)\n    ], Axis.prototype, \"multiLevelLabels\", void 0);\n    return Axis;\n}(ChildProperty));\nexport { Axis };\n","import { Rect, measureText, TextOption, rotateTextSize, textTrim, CanvasTooltip, PathOption, textWrap } from '../utils/helper';\nimport { sum, titlePositionX, LineOption, Line, DrawSvgCanvas, TextBasic, titlePositionY } from '../utils/helper';\nimport { extend, Browser } from '@syncfusion/ej2-base';\nvar AxisHelper = /** @class */ (function () {\n    function AxisHelper(heatMap) {\n        this.heatMap = heatMap;\n        this.padding = 10;\n        this.drawSvgCanvas = new DrawSvgCanvas(heatMap);\n    }\n    /**\n     * To render the x and y axis.\n     *  @private\n     */\n    AxisHelper.prototype.renderAxes = function () {\n        this.initialClipRect = this.heatMap.initialClipRect;\n        var heatMap = this.heatMap;\n        var axisElement;\n        var element;\n        if (!heatMap.enableCanvasRendering) {\n            axisElement = this.heatMap.renderer.createGroup({ id: heatMap.element.id + 'AxisCollection' });\n        }\n        var axes = this.heatMap.axisCollections;\n        for (var i = 0, len = axes.length; i < len; i++) {\n            var axis = axes[i];\n            var optionsLine = {};\n            if (axis.orientation === 'Horizontal') {\n                if (!heatMap.enableCanvasRendering) {\n                    element = this.heatMap.renderer.createGroup({ id: heatMap.element.id + 'XAxisGroup' });\n                }\n                this.drawXAxisLine(element, axis);\n                this.drawXAxisTitle(axis, element, axis.rect);\n                this.drawXAxisLabels(axis, element, axis.rect);\n            }\n            else {\n                element = heatMap.renderer.createGroup({ id: heatMap.element.id + 'YAxisGroup' });\n                this.drawYAxisLine(element, axis);\n                this.drawYAxisTitle(axis, element, axis.rect);\n                this.drawYAxisLabels(axis, element, axis.rect);\n            }\n            if (axis.multiLevelLabels.length > 0) {\n                this.drawMultiLevels(element, axis);\n            }\n            if (!heatMap.enableCanvasRendering) {\n                axisElement.appendChild(element);\n            }\n        }\n        if (!heatMap.enableCanvasRendering) {\n            this.heatMap.svgObject.appendChild(axisElement);\n        }\n    };\n    AxisHelper.prototype.drawXAxisLine = function (parent, axis) {\n        var y = this.initialClipRect.y + (!axis.opposedPosition ? this.initialClipRect.height : 0);\n        var line = new LineOption(this.heatMap.element.id + '_XAxisLine', new Line(this.initialClipRect.x, y, this.initialClipRect.x + this.initialClipRect.width, y), 'transparent', 0);\n        this.drawSvgCanvas.drawLine(line, parent);\n    };\n    AxisHelper.prototype.drawYAxisLine = function (parent, axis) {\n        var x = this.initialClipRect.x + ((!axis.opposedPosition) ? 0 : this.initialClipRect.width);\n        var line = new LineOption(this.heatMap.element.id + '_YAxisLine', new Line(x, this.initialClipRect.y, x, this.initialClipRect.height + this.initialClipRect.y), 'transparent', 0);\n        this.drawSvgCanvas.drawLine(line, parent);\n    };\n    AxisHelper.prototype.drawXAxisTitle = function (axis, parent, rect) {\n        var titlepadding = (axis.textStyle.size === '0px' ? 0 : 10);\n        var y = rect.y + (!axis.opposedPosition ? (axis.maxLabelSize.height + titlepadding +\n            sum(axis.xAxisMultiLabelHeight)) : -(axis.maxLabelSize.height + titlepadding + sum(axis.xAxisMultiLabelHeight)));\n        if (axis.title.text) {\n            var heatMap = this.heatMap;\n            var title = axis.title;\n            var elementSize = measureText(title.text, title.textStyle);\n            var padding = this.padding;\n            var anchor = title.textStyle.textAlignment === 'Near' ? 'start' :\n                title.textStyle.textAlignment === 'Far' ? 'end' : 'middle';\n            padding = axis.opposedPosition ? -(padding + elementSize.height / 4) : (padding + (3 * elementSize.height / 4));\n            var options = new TextOption(heatMap.element.id + '_XAxisTitle', new TextBasic(rect.x + titlePositionX(rect.width, 0, 0, title.textStyle), y + padding, anchor, title.text), title.textStyle, title.textStyle.color || heatMap.themeStyle.axisTitle);\n            this.drawSvgCanvas.createText(options, parent, title.text);\n        }\n    };\n    AxisHelper.prototype.drawYAxisTitle = function (axis, parent, rect) {\n        if (axis.title.text) {\n            var title = axis.title;\n            var heatMap = this.heatMap;\n            var labelRotation = (axis.opposedPosition) ? 90 : -90;\n            var elementSize = measureText(title.text, title.textStyle);\n            var anchor = title.textStyle.textAlignment === 'Near' ? 'start' :\n                title.textStyle.textAlignment === 'Far' ? 'end' : 'middle';\n            var padding = 10;\n            padding = axis.opposedPosition ? padding : -padding;\n            var titlepadding = (axis.textStyle.size === '0px' ? 0 : padding);\n            var x = rect.x + titlepadding + ((axis.opposedPosition) ? axis.maxLabelSize.width + sum(axis.yAxisMultiLabelHeight) :\n                -(axis.maxLabelSize.width + sum(axis.yAxisMultiLabelHeight)));\n            var y = rect.y + titlePositionY(rect, 0, 0, title.textStyle) + (axis.opposedPosition ? this.padding : -this.padding);\n            var options = new TextOption(heatMap.element.id + '_YAxisTitle', new TextBasic(x, y - this.padding, anchor, title.text, labelRotation, 'rotate(' + labelRotation + ',' + (x) + ',' + (y) + ')', 'auto'), title.textStyle, title.textStyle.color || heatMap.themeStyle.axisTitle);\n            if (!this.heatMap.enableCanvasRendering) {\n                this.drawSvgCanvas.createText(options, parent, title.text);\n            }\n            else {\n                this.drawSvgCanvas.canvasDrawText(options, title.text, x, y);\n            }\n        }\n    };\n    /**\n     * Get the visible labels for both x and y axis\n     * @private\n     */\n    AxisHelper.prototype.calculateVisibleLabels = function () {\n        var heatmap = this.heatMap;\n        var axis;\n        var axisCollection = heatmap.axisCollections;\n        var data = this.heatMap.dataSource;\n        var processLabels = !(data && data.isJsonData && data.adaptorType === 'Cell');\n        for (var i = 0, len = axisCollection.length; i < len; i++) {\n            axis = axisCollection[i];\n            if (axis.valueType === 'Numeric' && processLabels) {\n                axis.clearAxisLabel();\n                axis.calculateNumericAxisLabels(this.heatMap);\n            }\n            else if (axis.valueType === 'DateTime' && processLabels) {\n                axis.clearAxisLabel();\n                axis.calculateDateTimeAxisLabel(this.heatMap);\n            }\n            else if (axis.valueType === 'Category') {\n                axis.clearAxisLabel();\n                axis.calculateCategoryAxisLabels();\n            }\n            axis.tooltipLabels = axis.isInversed ? axis.tooltipLabels.reverse() : axis.tooltipLabels;\n        }\n    };\n    /**\n     * Measure the title and labels rendering position for both X and Y axis.\n     * @param rect\n     * @private\n     */\n    AxisHelper.prototype.measureAxis = function (rect) {\n        var heatmap = this.heatMap;\n        var axis;\n        var axisCollection = heatmap.axisCollections;\n        for (var i = axisCollection.length - 1; i >= 0; i--) {\n            axis = axisCollection[i];\n            var padding = axis.textStyle.size === '0px' ? 0 : this.padding;\n            axis.nearSizes = [];\n            axis.farSizes = [];\n            axis.computeSize(axis, heatmap, rect);\n            if (!axis.opposedPosition) {\n                if (axis.orientation === 'Horizontal') {\n                    rect.height -= (sum(axis.nearSizes) + padding);\n                }\n                else {\n                    rect.x += sum(axis.nearSizes) + padding;\n                    rect.width -= sum(axis.nearSizes) + padding;\n                }\n            }\n            else {\n                if (axis.orientation === 'Horizontal') {\n                    rect.y += sum(axis.farSizes) + padding;\n                    rect.height -= sum(axis.farSizes) + padding;\n                }\n                else {\n                    rect.width -= sum(axis.farSizes) + padding;\n                }\n            }\n        }\n    };\n    /**\n     * Calculate the X and Y axis line position\n     * @param rect\n     * @private\n     */\n    AxisHelper.prototype.calculateAxisSize = function (rect) {\n        var heatmap = this.heatMap;\n        var axis;\n        var axisCollection = heatmap.axisCollections;\n        for (var i = 0, len = axisCollection.length; i < len; i++) {\n            var axis_1 = axisCollection[i];\n            axis_1.rect = extend({}, rect, null, true);\n            if (axis_1.orientation === 'Horizontal' && !axis_1.opposedPosition) {\n                axis_1.rect.y = rect.y + rect.height;\n                axis_1.rect.height = 0;\n            }\n            if (axis_1.orientation === 'Vertical' && axis_1.opposedPosition) {\n                axis_1.rect.x = rect.x + rect.width;\n                axis_1.rect.width = 0;\n            }\n            axis_1.multiLevelPosition = [];\n            for (var i_1 = 0; i_1 < axis_1.multiLevelLabels.length; i_1++) {\n                var multiPosition = axis_1.multiPosition(axis_1, i_1);\n                axis_1.multiLevelPosition.push(multiPosition);\n            }\n        }\n    };\n    AxisHelper.prototype.drawXAxisLabels = function (axis, parent, rect) {\n        var heatMap = this.heatMap;\n        var labels = axis.axisLabels;\n        var interval = rect.width / axis.axisLabelSize;\n        var compactInterval = 0;\n        var axisInterval = axis.interval ? axis.interval : 1;\n        var tempintervel = rect.width / (axis.axisLabelSize / axis.axisLabelInterval);\n        var temp = axis.axisLabelInterval;\n        if (tempintervel > 0) {\n            while (tempintervel < parseInt(axis.textStyle.size, 10)) {\n                temp = temp + 1;\n                tempintervel = rect.width / (axis.axisLabelSize / temp);\n            }\n        }\n        else {\n            temp = axis.tooltipLabels.length;\n        }\n        if (axis.axisLabelInterval < temp) {\n            compactInterval = temp;\n            labels = axis.tooltipLabels;\n            axisInterval = temp;\n        }\n        var padding = 10;\n        var lableStrtX = rect.x + (!axis.isInversed ? 0 : rect.width);\n        var labelPadding;\n        var angle = axis.angle;\n        padding = this.padding;\n        var labelElement;\n        var borderElement;\n        if (!heatMap.enableCanvasRendering) {\n            labelElement = this.heatMap.renderer.createGroup({ id: heatMap.element.id + 'XAxisLabels' });\n            borderElement = this.heatMap.renderer.createGroup({ id: heatMap.element.id + 'XAxisLabelBorder' });\n        }\n        for (var i = 0, len = labels.length; i < len; i++) {\n            var lableRect = new Rect(lableStrtX, rect.y, interval, rect.height);\n            var label = (axis.labelIntersectAction === 'Trim' && axis.isIntersect) ? axis.valueType !== 'DateTime' ||\n                axis.showLabelOn === 'None' ? textTrim(interval * axisInterval, labels[i], axis.textStyle) :\n                textTrim(axis.dateTimeAxisLabelInterval[i] * interval, labels[i], axis.textStyle) : labels[i];\n            var elementSize = measureText(label, axis.textStyle);\n            var transform = void 0;\n            labelPadding = (axis.opposedPosition) ?\n                -(padding)\n                : (padding + ((angle % 360) === 0 ? (elementSize.height / 2) : 0));\n            var x = lableRect.x + ((!axis.isInversed) ?\n                (lableRect.width / 2) - (elementSize.width / 2) : -((lableRect.width / 2) + (elementSize.width / 2)));\n            if (axis.labelIntersectAction === 'Trim') {\n                x = (!axis.isInversed) ? (x >= lableRect.x ? x : lableRect.x) : (x > (lableStrtX - interval) ? x : (lableStrtX - interval));\n            }\n            else if (angle % 180 === 0) {\n                x = x < rect.x ? rect.x : x;\n                x = ((x + elementSize.width) > (rect.x + rect.width)) ? (rect.x + rect.width - elementSize.width) : x;\n            }\n            var y = rect.y + labelPadding;\n            this.drawXAxisBorder(axis, borderElement, axis.rect, x, elementSize.width, i);\n            if (angle % 360 !== 0) {\n                angle = (angle > 360) ? angle % 360 : angle;\n                var rotateSize = rotateTextSize(axis.textStyle, label, angle);\n                var diffHeight = axis.maxLabelSize.height - Math.ceil(rotateSize.height - elementSize.height);\n                var yLocation = axis.opposedPosition ? diffHeight / 2 : -diffHeight / 2;\n                x = lableRect.x + (axis.isInversed ? -(lableRect.width / 2) : (lableRect.width / 2));\n                y = y + (axis.opposedPosition ? -(rotateSize.height / 2) :\n                    (((angle % 360) === 180 || (angle % 360) === -180) ? 0 : (rotateSize.height) / 2));\n                transform = 'rotate(' + angle + ',' + x + ','\n                    + y + ')';\n            }\n            var options = new TextOption(heatMap.element.id + '_XAxis_Label' + i, new TextBasic(x, y, (angle % 360 === 0) ? 'start' : 'middle', label, angle, transform), axis.textStyle, axis.textStyle.color || heatMap.themeStyle.axisLabel);\n            if (angle !== 0 && this.heatMap.enableCanvasRendering) {\n                this.drawSvgCanvas.canvasDrawText(options, label);\n            }\n            else {\n                this.drawSvgCanvas.createText(options, labelElement, label);\n            }\n            if (compactInterval === 0) {\n                var labelInterval = (axis.valueType === 'DateTime' && axis.showLabelOn !== 'None') ?\n                    axis.dateTimeAxisLabelInterval[i] : axis.axisLabelInterval;\n                lableStrtX = lableStrtX + (!axis.isInversed ? (labelInterval * interval) :\n                    -(labelInterval * interval));\n            }\n            else {\n                lableStrtX = lableStrtX + (!axis.isInversed ? (compactInterval * interval) : -(compactInterval * interval));\n            }\n            if (label.indexOf('...') !== -1) {\n                this.heatMap.tooltipCollection.push(new CanvasTooltip(labels[i], new Rect(x, y - elementSize.height, elementSize.width, elementSize.height)));\n            }\n            if (compactInterval !== 0) {\n                i = i + (compactInterval - 1);\n            }\n        }\n        if (!heatMap.enableCanvasRendering) {\n            parent.appendChild(labelElement);\n            parent.appendChild(borderElement);\n        }\n    };\n    AxisHelper.prototype.drawYAxisLabels = function (axis, parent, rect) {\n        var heatMap = this.heatMap;\n        var labels = axis.axisLabels;\n        var interval = rect.height / axis.axisLabelSize;\n        var compactInterval = 0;\n        var tempintervel = rect.height / (axis.axisLabelSize / axis.axisLabelInterval);\n        var temp = axis.axisLabelInterval;\n        if (tempintervel > 0) {\n            while (tempintervel < parseInt(axis.textStyle.size, 10)) {\n                temp = temp + 1;\n                tempintervel = rect.height / (axis.axisLabelSize / temp);\n            }\n        }\n        else {\n            temp = axis.tooltipLabels.length;\n        }\n        if (axis.axisLabelInterval < temp) {\n            compactInterval = temp;\n            labels = axis.tooltipLabels;\n        }\n        var padding = 10;\n        var lableStartY = rect.y + (axis.isInversed ? 0 : rect.height);\n        var anchor = axis.opposedPosition ? 'start' : 'end';\n        padding = axis.opposedPosition ? padding : -padding;\n        var labelElement;\n        var borderElement;\n        if (!heatMap.enableCanvasRendering) {\n            labelElement = this.heatMap.renderer.createGroup({ id: heatMap.element.id + 'YAxisLabels' });\n            borderElement = this.heatMap.renderer.createGroup({ id: heatMap.element.id + 'YAxisLabelBorder' });\n        }\n        for (var i = 0, len = labels.length; i < len; i++) {\n            var labelRect = new Rect(rect.x, lableStartY, rect.width, interval);\n            var position = labelRect.height / 2; //titlePositionY(lableRect, 0, 0, axis.textStyle);\n            var x = labelRect.x + padding;\n            var y = labelRect.y + (axis.isInversed ? position : -position);\n            var options = new TextOption(heatMap.element.id + '_YAxis_Label' + i, new TextBasic(x, y, anchor, labels[i], 0, 'rotate(' + 0 + ',' + (x) + ',' + (y) + ')', 'middle'), axis.textStyle, axis.textStyle.color || heatMap.themeStyle.axisLabel);\n            if (Browser.isIE && !heatMap.enableCanvasRendering) {\n                options.dy = '1ex';\n            }\n            this.drawSvgCanvas.createText(options, labelElement, labels[i]);\n            if (compactInterval === 0) {\n                var labelInterval = (axis.valueType === 'DateTime' && axis.showLabelOn !== 'None') ?\n                    axis.dateTimeAxisLabelInterval[i] : axis.axisLabelInterval;\n                lableStartY = lableStartY + (axis.isInversed ? (labelInterval * interval) :\n                    -(labelInterval * interval));\n            }\n            else {\n                lableStartY = lableStartY + (axis.isInversed ? (compactInterval * interval) : -(compactInterval * interval));\n                i = i + (compactInterval - 1);\n            }\n            var elementSize = measureText(labels[i], axis.textStyle);\n            this.drawYAxisBorder(axis, borderElement, axis.rect, y, elementSize.height, i);\n        }\n        if (!heatMap.enableCanvasRendering) {\n            parent.appendChild(labelElement);\n            parent.appendChild(borderElement);\n        }\n    };\n    AxisHelper.prototype.drawXAxisBorder = function (axis, parent, rect, lableX, width, index) {\n        var interval = rect.width / axis.axisLabelSize;\n        var path = '';\n        var padding = 10;\n        var axisInterval = axis.interval ? axis.interval : 1;\n        var startX = axis.isInversed ? rect.x + rect.width - (interval * index * axisInterval) :\n            rect.x + (interval * index * axisInterval);\n        var startY = rect.y;\n        var endX;\n        var endY;\n        endY = startY + (axis.opposedPosition ? -(axis.maxLabelSize.height + padding) : axis.maxLabelSize.height + padding);\n        endX = axis.isInversed ? startX - interval : startX + interval;\n        switch (axis.border.type) {\n            case 'Rectangle':\n                path = ('M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' +\n                    'L' + ' ' + endX + ' ' + endY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + startY);\n                break;\n            case 'WithoutTopBorder':\n                path = 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' +\n                    'L' + ' ' + endX + ' ' + endY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ';\n                break;\n            case 'WithoutBottomBorder':\n                path = 'M' + ' ' + startX + ' ' + endY + ' ' + 'L' + ' ' + startX + ' ' + startY + ' ' +\n                    'L' + ' ' + endX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ';\n                break;\n            case 'WithoutTopandBottomBorder':\n                path = 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' +\n                    'M' + ' ' + endX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ';\n                break;\n            case 'Brace':\n                var padding_1 = 3;\n                endY = startY + ((endY - startY) / 2) + (axis.opposedPosition ? 0 : 5);\n                var endY1 = axis.isInversed ? (lableX + width + padding_1) : (lableX - padding_1);\n                var endY2 = axis.isInversed ? (lableX - padding_1) : (lableX + width + padding_1);\n                path = 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' +\n                    'L' + ' ' + endY1 + ' ' + endY + ' ' + 'M' + ' ' + endY2 +\n                    ' ' + endY + ' ' + 'L' +\n                    ' ' + endX + ' ' + endY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ';\n                break;\n        }\n        if (axis.border.width > 0 && axis.border.type !== 'WithoutBorder') {\n            this.createAxisBorderElement(axis, path, parent, index);\n        }\n    };\n    AxisHelper.prototype.drawYAxisBorder = function (axis, parent, rect, lableY, height, index) {\n        var interval = rect.height / axis.axisLabelSize;\n        var path = '';\n        var padding = 20;\n        var axisInterval = axis.interval ? axis.interval : 1;\n        var startX = rect.x;\n        var startY = axis.isInversed ? rect.y + (interval * index * axisInterval) :\n            rect.y + rect.height - (interval * index * axisInterval);\n        var endX;\n        var endY;\n        endX = startX + (!axis.opposedPosition ? -(axis.maxLabelSize.width + padding) : axis.maxLabelSize.width + padding);\n        endY = axis.isInversed ? startY + interval : startY - interval;\n        switch (axis.border.type) {\n            case 'Rectangle':\n                path = 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' +\n                    'L' + ' ' + endX + ' ' + endY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + startY;\n                break;\n            case 'WithoutTopBorder':\n                path = 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ' +\n                    'L' + ' ' + endX + ' ' + endY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ';\n                break;\n            case 'WithoutBottomBorder':\n                path = 'M' + ' ' + endX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + startY + ' ' +\n                    'L' + ' ' + startX + ' ' + endY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ';\n                break;\n            case 'WithoutTopandBottomBorder':\n                path = 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ' +\n                    'M' + ' ' + endX + ' ' + endY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ';\n                break;\n            case 'Brace':\n                endX = startX - (startX - endX) / 2;\n                var endY1 = axis.isInversed ? lableY - height / 2 : lableY + height / 2;\n                var endY2 = axis.isInversed ? lableY + height / 2 : lableY - height / 2;\n                path = 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ' +\n                    'L' + ' ' + endX + ' ' + endY1 + ' ' + 'M' + ' ' +\n                    endX + ' ' + endY2 + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ' +\n                    'L' + ' ' + startX + ' ' + endY;\n                break;\n        }\n        if (axis.border.width > 0 && axis.border.type !== 'WithoutBorder') {\n            this.createAxisBorderElement(axis, path, parent, index);\n        }\n    };\n    /**\n     * To create border element for axis.\n     * @return {void}\n     * @private\n     */\n    AxisHelper.prototype.createAxisBorderElement = function (axis, labelBorder, parent, index) {\n        var canvasTranslate;\n        var id = axis.orientation === 'Horizontal' ? '_XAxis_Label_Border' : '_YAxis_Label_Border';\n        var pathOptions = new PathOption(this.heatMap.element.id + id + index, 'transparent', axis.border.width, axis.border.color, 1, 'none', labelBorder);\n        if (!this.heatMap.enableCanvasRendering) {\n            var borderElement = this.heatMap.renderer.drawPath(pathOptions);\n            parent.appendChild(borderElement);\n        }\n        else {\n            this.heatMap.canvasRenderer.drawPath(pathOptions, canvasTranslate);\n        }\n    };\n    AxisHelper.prototype.drawMultiLevels = function (parent, axis) {\n        var element;\n        if (!this.heatMap.enableCanvasRendering) {\n            element = this.heatMap.renderer.createGroup({ id: this.heatMap.element.id + '_' + axis.orientation + '_MultiLevelLabel' });\n        }\n        axis.orientation === 'Horizontal' ? this.renderXAxisMultiLevelLabels(axis, element, axis.rect) :\n            this.renderYAxisMultiLevelLabels(axis, element, axis.rect);\n        if (!this.heatMap.enableCanvasRendering) {\n            parent.appendChild(element);\n        }\n    };\n    /**\n     * render x axis multi level labels\n     * @private\n     * @return {void}\n     */\n    AxisHelper.prototype.renderXAxisMultiLevelLabels = function (axis, parent, rect) {\n        var _this = this;\n        var x = 0;\n        var y;\n        var padding = 10;\n        var startX;\n        var startY;\n        var endX = 0;\n        var tooltip;\n        var start;\n        var end;\n        var labelSize;\n        var anchor;\n        var isInversed = axis.isInversed;\n        var labelElement;\n        var opposedPosition = axis.opposedPosition;\n        var pathRect = '';\n        var gap;\n        var width;\n        var textLength;\n        var position = (isInversed ? axis.rect.width : 0) + axis.rect.x;\n        axis.multiLevelLabels.map(function (multiLevel, level) {\n            labelElement = _this.heatMap.renderer.createGroup({ id: _this.heatMap.element.id + '_XAxisMultiLevelLabel' + level });\n            multiLevel.categories.map(function (categoryLabel, i) {\n                tooltip = false;\n                start = typeof categoryLabel.start === 'number' ? categoryLabel.start : Number(new Date(categoryLabel.start));\n                end = typeof categoryLabel.end === 'number' ? categoryLabel.end : Number(new Date(categoryLabel.end));\n                startX = position + _this.calculateLeftPosition(axis, start, categoryLabel.start, axis.rect);\n                startY = axis.multiLevelPosition[level].y;\n                endX = position + _this.calculateWidth(axis, categoryLabel.end, end, axis.rect);\n                labelSize = measureText(categoryLabel.text, multiLevel.textStyle);\n                gap = ((categoryLabel.maximumTextWidth === null) ? Math.abs(endX - startX) : categoryLabel.maximumTextWidth) - padding;\n                y = startY + (opposedPosition ? -((axis.xAxisMultiLabelHeight[level] - labelSize.height)) : labelSize.height);\n                width = categoryLabel.maximumTextWidth ? categoryLabel.maximumTextWidth : labelSize.width;\n                x = !isInversed ? startX + padding : startX - gap;\n                if (multiLevel.alignment === 'Center') {\n                    x = ((endX - startX) / 2) + startX;\n                    x -= (labelSize.width > gap ? gap : labelSize.width) / 2;\n                }\n                else if (multiLevel.alignment === 'Far') {\n                    x = !isInversed ? endX - padding : startX - padding;\n                    x -= (labelSize.width > gap ? gap : labelSize.width);\n                }\n                else {\n                    x = !isInversed ? startX + padding : endX + padding;\n                }\n                if (multiLevel.overflow === 'None' && labelSize.width > Math.abs(endX - startX)) {\n                    x = !isInversed ? startX + padding : startX - labelSize.width - padding;\n                    anchor = 'start';\n                }\n                var textBasic = new TextBasic(x, y, anchor, categoryLabel.text, 0, 'translate(0,0)');\n                var options = new TextOption(_this.heatMap.element.id + '_XAxis_MultiLevel' + level + '_Text' + i, textBasic, multiLevel.textStyle, multiLevel.textStyle.color || _this.heatMap.themeStyle.axisLabel);\n                if (multiLevel.overflow === 'Wrap') {\n                    options.text = textWrap(categoryLabel.text, gap, multiLevel.textStyle);\n                    textLength = options.text.length;\n                }\n                else if (multiLevel.overflow === 'Trim') {\n                    options.text = textTrim(gap, categoryLabel.text, multiLevel.textStyle);\n                    textLength = 1;\n                }\n                if (multiLevel.overflow === 'Wrap' && options.text.length > 1) {\n                    _this.drawSvgCanvas.createWrapText(options, multiLevel.textStyle, labelElement);\n                    for (var i_2 = 0; i_2 < options.text.length; i_2++) {\n                        if (options.text[i_2].indexOf('...') !== -1) {\n                            tooltip = true;\n                            break;\n                        }\n                    }\n                }\n                else {\n                    _this.drawSvgCanvas.createText(options, labelElement, options.text);\n                }\n                if (!_this.heatMap.enableCanvasRendering) {\n                    parent.appendChild(labelElement);\n                }\n                if (options.text.indexOf('...') !== -1 || options.text[0].indexOf('...') !== -1 || tooltip) {\n                    _this.heatMap.tooltipCollection.push(new CanvasTooltip(categoryLabel.text, new Rect(x, y - labelSize.height, gap, labelSize.height * textLength)));\n                }\n                if (multiLevel.border.width > 0 && multiLevel.border.type !== 'WithoutBorder') {\n                    pathRect = _this.renderXAxisLabelBorder(level, axis, startX, startY, endX, pathRect, level, labelSize, gap, x);\n                }\n            });\n            if (pathRect !== '') {\n                _this.createBorderElement(level, axis, pathRect, parent);\n                pathRect = '';\n            }\n        });\n        if (!this.heatMap.enableCanvasRendering) {\n            parent.appendChild(labelElement);\n        }\n    };\n    /**\n     * render x axis multi level labels border\n     * @private\n     * @return {void}\n     */\n    AxisHelper.prototype.renderXAxisLabelBorder = function (labelIndex, axis, startX, startY, endX, path, level, labelSize, gap, x) {\n        var path1;\n        var path2;\n        var endY = startY + (axis.opposedPosition ? -(axis.xAxisMultiLabelHeight[labelIndex]) :\n            axis.xAxisMultiLabelHeight[labelIndex]);\n        switch (axis.multiLevelLabels[level].border.type) {\n            case 'Rectangle':\n                path += 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' +\n                    'L' + ' ' + endX + ' ' + endY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + startY + ' ';\n                break;\n            case 'WithoutTopBorder':\n                path += 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' +\n                    'L' + ' ' + endX + ' ' + endY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ';\n                break;\n            case 'WithoutBottomBorder':\n                path += 'M' + ' ' + startX + ' ' + endY + ' ' + 'L' + ' ' + startX + ' ' + startY + ' ' +\n                    'L' + ' ' + endX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ';\n                break;\n            case 'WithoutTopandBottomBorder':\n                path += 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' +\n                    'M' + ' ' + endX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ';\n                break;\n            case 'Brace':\n                var padding = 3;\n                path1 = axis.isInversed ? (labelSize.width > gap ? gap : labelSize.width) + x + padding : x - padding;\n                path2 = axis.isInversed ? x - padding : (labelSize.width > gap ? gap : labelSize.width) + x + padding;\n                path += 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + (startY + (endY - startY) / 2) + ' ' +\n                    'L' + ' ' + path1 + ' ' + (startY + (endY - startY) / 2) + ' ' + 'M' + ' ' + path2 + ' ' + (startY +\n                    (endY - startY) / 2) + ' ' + 'L' + ' ' + endX + ' ' + (startY + (endY - startY) / 2) +\n                    ' ' + 'L' + ' ' + endX + ' ' + startY + ' ';\n                break;\n        }\n        return path;\n    };\n    /**\n     * render y axis multi level labels\n     * @private\n     * @return {void}\n     */\n    AxisHelper.prototype.renderYAxisMultiLevelLabels = function (axis, parent, rect) {\n        var _this = this;\n        var x = 0;\n        var y;\n        var padding = 10;\n        var startX;\n        var startY;\n        var startY2;\n        var endY;\n        var start;\n        var end;\n        var labelSize;\n        var anchor;\n        var isInversed = axis.isInversed;\n        var labelElement;\n        var opposedPosition = axis.opposedPosition;\n        var pathRect = '';\n        var gap;\n        var interval = (axis.rect.height / axis.axisLabelSize) / axis.increment;\n        var text;\n        var position = (!isInversed ? axis.rect.height : 0) + axis.rect.y;\n        axis.multiLevelLabels.map(function (multiLevel, level) {\n            startY2 = axis.multiLevelPosition[level].y;\n            labelElement = _this.heatMap.renderer.createGroup({ id: _this.heatMap.element.id + '_YAxisMultiLevelLabel' + level });\n            multiLevel.categories.map(function (categoryLabel, i) {\n                start = typeof categoryLabel.start === 'number' ? categoryLabel.start : Number(new Date(categoryLabel.start));\n                end = typeof categoryLabel.end === 'number' ? categoryLabel.end : Number(new Date(categoryLabel.end));\n                startY = position + _this.calculateLeftPosition(axis, start, categoryLabel.start, axis.rect);\n                startX = axis.multiLevelPosition[level].x;\n                endY = position + _this.calculateWidth(axis, categoryLabel.start, end, axis.rect);\n                labelSize = measureText(categoryLabel.text, multiLevel.textStyle);\n                gap = ((categoryLabel.maximumTextWidth === null) ? Math.abs(startX) : categoryLabel.maximumTextWidth) - padding;\n                var maxWidth = Math.abs(startX - (startX - axis.multiLevelSize[level].width - 2 * padding)) / 2 -\n                    (labelSize.width / 2);\n                x = (axis.opposedPosition ? startX : startX - axis.multiLevelSize[level].width - 2 * padding) + maxWidth;\n                y = startY + padding;\n                if (multiLevel.overflow !== 'None') {\n                    if (multiLevel.overflow === 'Wrap') {\n                        text = textWrap(categoryLabel.text, gap, multiLevel.textStyle);\n                    }\n                    else {\n                        text = textTrim(gap, categoryLabel.text, multiLevel.textStyle);\n                    }\n                }\n                if (multiLevel.alignment === 'Center') {\n                    y += ((endY - startY) / 2 - (text.length * labelSize.height) / 2);\n                }\n                else if (multiLevel.alignment === 'Far') {\n                    y = isInversed ? endY - labelSize.height / 2 : y - labelSize.height;\n                }\n                else {\n                    y = isInversed ? y + labelSize.height / 2 : endY + labelSize.height;\n                }\n                if (multiLevel.border.width > 0 && multiLevel.border.type !== 'WithoutBorder') {\n                    pathRect = _this.renderYAxisLabelBorder(level, axis, startX, startY, endY, pathRect, level, labelSize, gap, y);\n                }\n                var textBasic = new TextBasic(x, y, 'start', categoryLabel.text, 0, 'translate(0,0)');\n                var options = new TextOption(_this.heatMap.element.id + '_YAxis_MultiLevel' + level + '_Text' + i, textBasic, multiLevel.textStyle, multiLevel.textStyle.color || _this.heatMap.themeStyle.axisLabel);\n                options.text = text;\n                _this.drawSvgCanvas.createText(options, labelElement, options.text);\n                if (options.text.indexOf('...') !== -1) {\n                    _this.heatMap.tooltipCollection.push(new CanvasTooltip(categoryLabel.text, new Rect(x, y - labelSize.height, gap, labelSize.height)));\n                }\n                if (!_this.heatMap.enableCanvasRendering) {\n                    parent.appendChild(labelElement);\n                }\n            });\n            if (pathRect !== '') {\n                _this.createBorderElement(level, axis, pathRect, parent);\n                pathRect = '';\n            }\n        });\n        if (!this.heatMap.enableCanvasRendering) {\n            parent.appendChild(labelElement);\n        }\n    };\n    /**\n     * render x axis multi level labels border\n     * @private\n     * @return {void}\n     */\n    AxisHelper.prototype.renderYAxisLabelBorder = function (labelIndex, axis, startX, startY, endY, path, level, labelSize, gap, y) {\n        var padding = 20;\n        var path1;\n        var path2;\n        var endX = startX - (axis.opposedPosition ? -(axis.multiLevelSize[labelIndex].width + padding) :\n            (axis.multiLevelSize[labelIndex].width + padding));\n        switch (axis.multiLevelLabels[level].border.type) {\n            case 'Rectangle':\n                path += 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ' +\n                    'L' + ' ' + endX + ' ' + endY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' + 'L' + ' ' + startX + ' ' + startY + ' ';\n                break;\n            case 'WithoutTopBorder':\n                path += 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ' +\n                    'L' + ' ' + endX + ' ' + endY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ';\n                break;\n            case 'WithoutBottomBorder':\n                path += 'M' + ' ' + endX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + startY + ' ' +\n                    'L' + ' ' + startX + ' ' + endY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ';\n                break;\n            case 'WithoutTopandBottomBorder':\n                path += 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ' +\n                    'M' + ' ' + startX + ' ' + endY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ';\n                break;\n            case 'Brace':\n                var padding_2 = 10;\n                path1 = axis.isInversed ? (y - padding_2 - 5) : (y + (labelSize.height) - padding_2);\n                path2 = axis.isInversed ? (y + (labelSize.height) - padding_2) : (y - padding_2 - 5);\n                path += 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + (startX + (endX - startX) / 2) + ' ' + startY + ' ' +\n                    'L' + ' ' + (startX + (endX - startX) / 2) + ' ' + path1 + ' ' + 'M' + ' ' + (startX + (endX - startX) / 2) +\n                    ' ' + path2 + ' ' + 'L' + ' ' + (startX + (endX - startX) / 2) + ' ' +\n                    endY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ';\n                break;\n        }\n        return path;\n    };\n    /**\n     * create borer element\n     * @return {void}\n     * @private\n     */\n    AxisHelper.prototype.createBorderElement = function (borderIndex, axis, path, parent) {\n        var canvasTranslate;\n        var id = axis.orientation === 'Horizontal' ? 'XAxis' : 'YAxis';\n        var pathOptions = new PathOption(this.heatMap.element.id + '_' + id + '_MultiLevel_Rect_' + borderIndex, 'Transparent', axis.multiLevelLabels[borderIndex].border.width, axis.multiLevelLabels[borderIndex].border.color, 1, '', path);\n        var borderElement = this.heatMap.renderer.drawPath(pathOptions);\n        if (!this.heatMap.enableCanvasRendering) {\n            parent.appendChild(borderElement);\n        }\n        else {\n            this.heatMap.canvasRenderer.drawPath(pathOptions, canvasTranslate);\n        }\n    };\n    /**\n     * calculate left position of border element\n     * @private\n     */\n    AxisHelper.prototype.calculateLeftPosition = function (axis, start, label, rect) {\n        var value;\n        var interval;\n        if (typeof label === 'number') {\n            if (axis.valueType === 'Numeric' && (axis.minimum || axis.maximum)) {\n                var min = axis.minimum ? axis.minimum : 0;\n                start -= min;\n            }\n            var size = axis.orientation === 'Horizontal' ? rect.width : rect.height;\n            interval = size / (axis.axisLabelSize * axis.increment);\n            value = (axis.isInversed ? -1 : 1) * start * interval;\n            value = axis.orientation === 'Horizontal' ? value : -value;\n        }\n        else {\n            interval = this.calculateNumberOfDays(start, axis, true, rect);\n            value = axis.isInversed ? -interval : interval;\n            value = axis.orientation === 'Horizontal' ? value : -value;\n        }\n        return value;\n    };\n    /**\n     * calculate width of border element\n     * @private\n     */\n    AxisHelper.prototype.calculateWidth = function (axis, label, end, rect) {\n        var interval;\n        var value;\n        if (typeof label === 'number') {\n            if (axis.valueType === 'Numeric' && (axis.minimum || axis.maximum)) {\n                var min = axis.minimum ? axis.minimum : 0;\n                end -= min;\n            }\n            var size = axis.orientation === 'Horizontal' ? rect.width : rect.height;\n            interval = size / (axis.axisLabelSize * axis.increment);\n            value = (axis.isInversed ? -1 : 1) * (end + 1) * interval;\n            value = axis.orientation === 'Horizontal' ? value : -value;\n        }\n        else {\n            interval = this.calculateNumberOfDays(end, axis, false, rect);\n            value = interval;\n            value = axis.isInversed ? -value : value;\n            value = axis.orientation === 'Horizontal' ? value : -value;\n        }\n        return value;\n    };\n    AxisHelper.prototype.calculateNumberOfDays = function (date, axis, start, rect) {\n        var oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds\n        var oneMinute = 60 * 1000;\n        var oneHour = 60 * 60 * 1000;\n        var firstDate;\n        var secondDate;\n        var labels = axis.labelValue;\n        var position;\n        var interval = (axis.orientation === 'Horizontal' ? rect.width : rect.height) / axis.axisLabelSize;\n        var givenDate = new Date(Number(date));\n        var days = 0;\n        for (var index = 0; index < axis.axisLabelSize; index++) {\n            firstDate = new Date(Number(labels[index]));\n            secondDate = axis.isInversed ? new Date(Number(labels[index - 1])) : new Date(Number(labels[index + 1]));\n            if (index === (axis.isInversed ? 0 : axis.axisLabelSize - 1)) {\n                secondDate = new Date(Number(labels[index]));\n                if (axis.intervalType === 'Hours') {\n                    secondDate = new Date(Number(secondDate.setHours(secondDate.getHours() + 1)));\n                }\n                else if ((axis.intervalType === 'Minutes')) {\n                    secondDate = new Date(Number(secondDate.setMinutes(secondDate.getMinutes() + 1)));\n                }\n                else if ((axis.intervalType === 'Days')) {\n                    secondDate = new Date(Number(secondDate.setDate(secondDate.getDate() + 1)));\n                }\n                else {\n                    var numberOfDays = axis.intervalType === 'Months' ?\n                        new Date(secondDate.getFullYear(), secondDate.getMonth() + 1, 0).getDate() :\n                        secondDate.getFullYear() % 4 === 0 ? 366 : 365;\n                    secondDate = new Date(Number(secondDate.setDate(secondDate.getDate() + numberOfDays)));\n                }\n            }\n            if (Number(firstDate) <= date && Number(secondDate) >= date) {\n                if (axis.intervalType === 'Minutes' || axis.intervalType === 'Hours') {\n                    var totalMinutes = Math.round(Math.abs((firstDate.getTime() - secondDate.getTime()) / (oneMinute)));\n                    var minutesInHours = Math.abs((firstDate.getTime() - givenDate.getTime()) / (oneMinute));\n                    days = (interval / totalMinutes) * minutesInHours;\n                    index = axis.isInversed ? axis.axisLabelSize - 1 - index : index;\n                    position = index * interval + days;\n                    break;\n                }\n                else {\n                    var numberOfDays = Math.round(Math.abs((firstDate.getTime() - secondDate.getTime()) / (oneDay)));\n                    start ? givenDate.getDate() : givenDate.setDate(givenDate.getDate() + 1);\n                    if (numberOfDays !== 0) {\n                        days = (interval / numberOfDays) * (Math.abs((firstDate.getTime() - givenDate.getTime()) / (oneDay)));\n                    }\n                    index = axis.isInversed ? axis.axisLabelSize - 1 - index : index;\n                    position = index * interval + days;\n                    break;\n                }\n            }\n        }\n        return position;\n    };\n    return AxisHelper;\n}());\nexport { AxisHelper };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, extend, merge, Complex, Browser, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Rect, TextBasic, Path, PathAttributes, RectOption, CircleOption, TextOption, CurrentRect, DrawSvgCanvas } from '../utils/helper';\nimport { convertHexToColor, colorNameToHex, formatValue } from '../utils/helper';\nimport { CellColor } from '../utils/colorMapping';\nimport { Border, Font, BubbleTooltipData, BubbleSize } from '../model/base';\nimport { Theme } from '../model/theme';\n/**\n * Configures the CellSettings property in the Heatmap.\n */\nvar CellSettings = /** @class */ (function (_super) {\n    __extends(CellSettings, _super);\n    function CellSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], CellSettings.prototype, \"showLabel\", void 0);\n    __decorate([\n        Property('')\n    ], CellSettings.prototype, \"format\", void 0);\n    __decorate([\n        Property(true)\n    ], CellSettings.prototype, \"enableCellHighlighting\", void 0);\n    __decorate([\n        Complex({}, BubbleSize)\n    ], CellSettings.prototype, \"bubbleSize\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], CellSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex(Theme.rectLabelFont, Font)\n    ], CellSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property('Rect')\n    ], CellSettings.prototype, \"tileType\", void 0);\n    __decorate([\n        Property('Color')\n    ], CellSettings.prototype, \"bubbleType\", void 0);\n    __decorate([\n        Property(false)\n    ], CellSettings.prototype, \"isInversedBubbleSize\", void 0);\n    return CellSettings;\n}(ChildProperty));\nexport { CellSettings };\nvar Series = /** @class */ (function () {\n    function Series(heatMap) {\n        this.heatMap = heatMap;\n        this.drawSvgCanvas = new DrawSvgCanvas(this.heatMap);\n        this.cellColor = new CellColor(this.heatMap);\n    }\n    /**\n     * To render rect series.\n     * @return {void}\n     * @private\n     */\n    // tslint:disable-next-line:max-func-body-length\n    Series.prototype.renderRectSeries = function () {\n        this.createSeriesGroup();\n        var heatMap = this.heatMap;\n        var isValueInRange = false;\n        heatMap.xLength = heatMap.axisCollections[0].axisLabelSize;\n        heatMap.yLength = heatMap.axisCollections[1].axisLabelSize; // Series Part\n        var tempX = Math.round(heatMap.initialClipRect.x * 100) / 100;\n        var tempY = Math.round(heatMap.initialClipRect.y * 100) / 100;\n        var dataXIndex = 0;\n        var dataYIndex = 0;\n        var cellSetting = heatMap.cellSettings;\n        var tempWidth = Math.round(((heatMap.initialClipRect.width -\n            (cellSetting.border.width / 2)) / heatMap.xLength) * 100) / 100;\n        var tempHeight = Math.round(((heatMap.initialClipRect.height -\n            (cellSetting.border.width / 2)) / heatMap.yLength) * 100) / 100;\n        var tempVal = 0;\n        var themeStyle = heatMap.themeStyle;\n        var tempBorder;\n        var tempRectPosition = [];\n        var circleRadius;\n        tempBorder = cellSetting.border;\n        var borderColor;\n        var displayText;\n        this.rectPositionCollection = [];\n        this.color = '';\n        this.bubbleColorValue = [];\n        if (heatMap.yAxis.opposedPosition) {\n            tempX = Math.round((heatMap.initialClipRect.x + (parseFloat(tempBorder.width.toString()) / 2)) * 100) / 100;\n        }\n        circleRadius = this.getBubbleRadius(tempWidth, tempHeight);\n        for (var x = 0; x < (heatMap.xLength * heatMap.yLength); x++) {\n            this.setTextAndColor(dataXIndex, dataYIndex);\n            var rectPosition = new CurrentRect(0, 0, 0, 0, 0, '', 0, 0, 0, 0, true, '', '', true);\n            borderColor = tempBorder.color;\n            if ((heatMap.renderingMode === 'Canvas' && parseFloat(tempBorder.width.toString()) === 0) || (!borderColor &&\n                cellSetting.tileType === 'Bubble' && cellSetting.bubbleType === 'Sector')) {\n                borderColor = this.color;\n            }\n            if (this.heatMap.bubbleSizeWithColor) {\n                this.updateRectDetails(rectPosition, tempX, tempY, tempWidth, tempHeight, extend('', this.bubbleColorValue, null, true), x, dataYIndex, dataXIndex);\n            }\n            else {\n                this.updateRectDetails(rectPosition, tempX, tempY, tempWidth, tempHeight, this.text, x, dataYIndex, dataXIndex);\n            }\n            if (cellSetting.showLabel) {\n                displayText = this.getFormatedText(this.text, cellSetting.format);\n                rectPosition.displayText = displayText;\n                if (!isNullOrUndefined(this.heatMap.cellRender)) {\n                    displayText = this.cellRendering(rectPosition, displayText);\n                }\n            }\n            if (cellSetting.tileType === 'Rect') { // Rectangle/Tile Series\n                this.renderTileCell(rectPosition, tempBorder, x, this.color, borderColor);\n                this.updateLabelVisibleStatus(tempWidth, tempHeight, displayText);\n            }\n            else {\n                if (cellSetting.bubbleType === 'Color') { // Bubble by same size and different color Series\n                    this.renderBubbleCell(rectPosition, tempBorder, x, this.color, borderColor, circleRadius);\n                    this.updateLabelVisibleStatus((circleRadius * 2) - 12, (circleRadius * 2) - 6, displayText); // 6, 12 - circle padding\n                }\n                else if (!isNullOrUndefined(this.text) && (cellSetting.bubbleType === 'Size' || cellSetting.bubbleType === 'SizeAndColor')\n                    && this.text.toString() !== '') { // Bubble by same color and different size Series\n                    var tempCircleRadius = this.getRadiusBypercentage(parseFloat(this.text.toString()), heatMap.dataSourceMinValue, heatMap.dataSourceMaxValue, circleRadius);\n                    this.renderBubbleCell(rectPosition, tempBorder, x, this.color, borderColor, tempCircleRadius);\n                    this.updateLabelVisibleStatus((tempCircleRadius * 2) - 12, (tempCircleRadius * 2) - 6, displayText);\n                }\n                else if (cellSetting.bubbleType === 'Sector' && !isNullOrUndefined(this.text) && this.text.toString() !== '') {\n                    this.renderSectorCell(rectPosition, tempBorder, x.toString(), this.color, borderColor, circleRadius, this.text);\n                    this.checkLabelXDisplay = false;\n                    this.checkLabelYDisplay = false;\n                }\n            }\n            tempRectPosition.push(rectPosition);\n            if (heatMap.rangeSelection && heatMap.paletteSettings.type === 'Fixed') {\n                isValueInRange = this.isCellValueInRange(dataXIndex, dataYIndex);\n                rectPosition.visible = isValueInRange;\n            }\n            if (cellSetting.showLabel && this.checkLabelYDisplay && this.checkLabelXDisplay) {\n                var themeCellTextStyle = cellSetting.textStyle;\n                var options = new TextOption(heatMap.element.id + '_HeatMapRectLabels_' + x, new TextBasic(Math.round((tempX + tempWidth / 2) * 100) / 100, Math.round((tempY + tempHeight / 2) * 100) / 100, 'middle', displayText, null, null, 'middle'), themeCellTextStyle, themeCellTextStyle.color || this.getSaturatedColor(this.color));\n                rectPosition.textId = options.id;\n                if (heatMap.rangeSelection && heatMap.paletteSettings.type === 'Fixed') {\n                    options.fill = isValueInRange ? options.fill : this.heatMap.themeStyle.toggledColor;\n                }\n                if (Browser.isIE && !heatMap.enableCanvasRendering) {\n                    options.dy = this.heatMap.cellSettings.tileType === 'Bubble' ? '0.5ex' : '1ex';\n                }\n                this.drawSvgCanvas.createText(options, this.containerTextObject, displayText);\n            }\n            if (tempVal === heatMap.xLength - 1) {\n                tempY = Math.round((tempY + tempHeight) * 100) / 100;\n                tempVal = 0;\n                dataYIndex = 0;\n                if (heatMap.yAxis.opposedPosition) {\n                    tempX = Math.round((heatMap.initialClipRect.x + (parseFloat(tempBorder.width.toString()) / 2)) * 100) / 100;\n                }\n                else {\n                    tempX = Math.round(heatMap.initialClipRect.x * 100) / 100;\n                }\n                this.rectPositionCollection.push(tempRectPosition);\n                tempRectPosition = [];\n                dataXIndex++;\n            }\n            else {\n                tempX = Math.round((tempX + tempWidth) * 100) / 100;\n                tempVal++;\n                dataYIndex++;\n            }\n        }\n        if (!heatMap.enableCanvasRendering) {\n            heatMap.svgObject.appendChild(this.containerRectObject);\n            if (cellSetting.showLabel && !(cellSetting.tileType === 'Bubble' && cellSetting.bubbleType === 'Sector')) {\n                heatMap.svgObject.appendChild(this.containerTextObject);\n            }\n        }\n    };\n    /**\n     * To toggle the cell text color based on legend selection.\n     */\n    Series.prototype.isCellValueInRange = function (dataXIndex, dataYIndex) {\n        var isValueInRange = false;\n        for (var i = 0; i < this.heatMap.toggleValue.length; i++) {\n            var minValue = void 0;\n            var maxValue = void 0;\n            minValue = (i === 0) ? this.heatMap.dataSourceMinValue : this.heatMap.toggleValue[i].value;\n            if (this.heatMap.cellSettings.tileType === 'Bubble' && this.heatMap.cellSettings.bubbleType === 'SizeAndColor') {\n                maxValue = (i === this.heatMap.toggleValue.length - 1) ? this.heatMap.maxColorValue :\n                    this.heatMap.toggleValue[i + 1].value - 0.01;\n            }\n            else {\n                maxValue = (i === this.heatMap.toggleValue.length - 1) ? this.heatMap.dataSourceMaxValue :\n                    this.heatMap.toggleValue[i + 1].value - 0.01;\n            }\n            // tslint:disable-next-line:no-any\n            var clonedDataSource = this.heatMap.clonedDataSource;\n            var bubbleText = !isNullOrUndefined(clonedDataSource[dataXIndex][dataYIndex][1]) &&\n                clonedDataSource[dataXIndex][dataYIndex][1].toString() !== '' ? clonedDataSource[dataXIndex][dataYIndex][1] : '';\n            var text = parseFloat(this.heatMap.cellSettings.tileType === 'Bubble' && this.heatMap.cellSettings.bubbleType === 'SizeAndColor' ?\n                bubbleText.toString() : this.text.toString());\n            if (isNaN(text)) {\n                isValueInRange = true;\n            }\n            else if (!isNaN(text) && text >= minValue && text <= maxValue) {\n                if (!this.heatMap.toggleValue[i].visible) {\n                    isValueInRange = false;\n                    break;\n                }\n                else {\n                    isValueInRange = true;\n                    break;\n                }\n            }\n        }\n        return isValueInRange;\n    };\n    /**\n     * To customize the cell.\n     * @return {void}\n     * @private\n     */\n    Series.prototype.cellRendering = function (rectPosition, text) {\n        var xAxis = this.heatMap.axisCollections[0];\n        var yAxis = this.heatMap.axisCollections[1];\n        var xLabels = xAxis.tooltipLabels;\n        var yLabels = yAxis.tooltipLabels.slice().reverse();\n        var yLabelValue = yAxis.labelValue.slice().reverse();\n        var argData = {\n            heatmap: (this.heatMap.isBlazor ? null : this.heatMap),\n            cancel: false,\n            name: 'cellRender',\n            value: rectPosition.value,\n            xLabel: xLabels[rectPosition.xIndex].toString(),\n            yLabel: yLabels[rectPosition.yIndex].toString(),\n            displayText: text,\n            xValue: xAxis.labelValue[rectPosition.xIndex],\n            yValue: yLabelValue[rectPosition.yIndex]\n        };\n        this.heatMap.trigger('cellRender', argData);\n        return argData.displayText;\n    };\n    /**\n     * To set color and text details.\n     * @private\n     */\n    Series.prototype.setTextAndColor = function (dataXIndex, dataYIndex) {\n        var cellSetting = this.heatMap.cellSettings;\n        this.bubbleColorValue = [];\n        var adaptData = this.heatMap.dataSource;\n        // tslint:disable-next-line:no-any\n        var clonedDataSource = this.heatMap.clonedDataSource;\n        if (this.heatMap.bubbleSizeWithColor) {\n            this.text = !isNullOrUndefined(clonedDataSource[dataXIndex][dataYIndex][0]) &&\n                clonedDataSource[dataXIndex][dataYIndex][0].toString() !== '' ? clonedDataSource[dataXIndex][dataYIndex][0] : '';\n            this.color = !isNullOrUndefined(clonedDataSource[dataXIndex][dataYIndex][1]) &&\n                clonedDataSource[dataXIndex][dataYIndex][1].toString() !== '' ?\n                this.cellColor.getColorByValue(clonedDataSource[dataXIndex][dataYIndex][1])\n                : this.heatMap.isColorValueExist ? this.heatMap.emptyPointColor : this.cellColor.getColorByValue(this.text);\n            var tempBubbleCollection = new BubbleTooltipData(adaptData.isJsonData && adaptData.adaptorType === 'Cell' ? this.heatMap.dataSource.bubbleDataMapping.size : null, this.text, 'Size');\n            this.bubbleColorValue.push(tempBubbleCollection);\n            this.bubbleColorValue.push({\n                mappingName: adaptData.isJsonData && adaptData.adaptorType === 'Cell' ?\n                    this.heatMap.dataSource.bubbleDataMapping.color : null,\n                bubbleData: !isNullOrUndefined(clonedDataSource[dataXIndex][dataYIndex][1]) &&\n                    clonedDataSource[dataXIndex][dataYIndex][1].toString() !== '' ? clonedDataSource[dataXIndex][dataYIndex][1] : '',\n                valueType: 'Color'\n            });\n        }\n        else {\n            this.text = clonedDataSource[dataXIndex][dataYIndex];\n            this.color = this.cellColor.getColorByValue(this.text);\n        }\n    };\n    /**\n     * To update rect details.\n     * @private\n     */\n    Series.prototype.createSeriesGroup = function () {\n        if (!this.heatMap.enableCanvasRendering) {\n            this.containerRectObject = this.heatMap.renderer.createGroup({\n                id: this.heatMap.element.id + '_Container_RectGroup',\n                x: this.heatMap.initialClipRect.x, y: this.heatMap.initialClipRect.y, transform: 'translate( 0, 0)'\n            });\n            if (this.heatMap.cellSettings.showLabel &&\n                !(this.heatMap.cellSettings.tileType === 'Bubble' && this.heatMap.cellSettings.bubbleType === 'Sector')) {\n                this.containerTextObject = this.heatMap.renderer.createGroup({ id: this.heatMap.element.id + '_Container_TextGroup', transform: 'translate( 0, 0)' });\n            }\n        }\n    };\n    /**\n     * To update rect details.\n     * @private\n     */\n    Series.prototype.updateRectDetails = function (rectPosition, tempX, tempY, tempWidth, tempHeight, text, x, dataXIndex, dataYIndex) {\n        rectPosition.x = tempX;\n        rectPosition.y = tempY;\n        rectPosition.width = tempWidth;\n        rectPosition.height = tempHeight;\n        rectPosition.value = text;\n        rectPosition.id = this.heatMap.element.id + '_HeatMapRect_' + x;\n        rectPosition.xIndex = dataXIndex;\n        rectPosition.yIndex = dataYIndex;\n    };\n    /**\n     * To Render Tile Cell.\n     * @private\n     */\n    Series.prototype.renderTileCell = function (rectPosition, tempBorder, x, color, borderColor) {\n        var rect = new RectOption(this.heatMap.element.id + '_HeatMapRect_' + x, color, tempBorder, 1, new Rect(rectPosition.x, rectPosition.y, rectPosition.width, rectPosition.height), borderColor || this.heatMap.themeStyle.cellBorder, tempBorder.radius, tempBorder.radius);\n        this.drawSvgCanvas.drawRectangle(rect, this.containerRectObject, true);\n    };\n    /**\n     * To get bubble radius.\n     * @private\n     */\n    Series.prototype.getBubbleRadius = function (width, height) {\n        var radius = (width / 2) - 2;\n        if (height / 2 < width / 2) {\n            radius = (height / 2) - 2;\n        }\n        return radius < 0 ? 0 : radius;\n    };\n    /**\n     * To Render Bubble Cell.\n     * @private\n     */\n    Series.prototype.renderSectorCell = function (bubblePosition, tempBorder, x, color, borderColor, circleRadius, text) {\n        var curve;\n        var startAngle;\n        var endAngle;\n        var cX;\n        var cY;\n        var X1;\n        var Y1;\n        var tempcX;\n        var tempcY;\n        var pathBorderWidth;\n        var centerX = Math.round((bubblePosition.x + (bubblePosition.width / 2)) * 100) / 100;\n        var centerY = Math.round((bubblePosition.y + (bubblePosition.height / 2)) * 100) / 100;\n        var tempColor = color;\n        var sectorContibution = this.getRadiusBypercentage(text, this.heatMap.dataSourceMinValue, this.heatMap.dataSourceMaxValue, 360); // Circle total angle.\n        for (var y = 0; y < 2; y++) {\n            pathBorderWidth = parseFloat(tempBorder.width.toString());\n            if (y === 0) {\n                curve = sectorContibution >= 180 ? 1 : 0;\n                startAngle = -90;\n                if (sectorContibution === 0) {\n                    endAngle = 270; // (360 - 90) for zero position adjustment.\n                }\n                else {\n                    endAngle = (sectorContibution - 90);\n                }\n                cX = Math.round((centerX + circleRadius * Math.cos((sectorContibution - 90) * (Math.PI / 180))) * 100) / 100;\n                cY = Math.round((centerY + circleRadius * Math.sin((sectorContibution - 90) * (Math.PI / 180))) * 100) / 100;\n                X1 = Math.round(centerX * 100) / 100;\n                Y1 = Math.round((centerY - circleRadius) * 100) / 100;\n                if (sectorContibution === 0) {\n                    tempColor = this.heatMap.emptyPointColor;\n                }\n            }\n            else {\n                curve = sectorContibution >= 180 ? 0 : 1;\n                startAngle = endAngle;\n                endAngle = 270; // (360 - 90) for zero position adjustment.\n                tempColor = this.heatMap.emptyPointColor;\n                x = x + '_Unfilled';\n                tempcX = cX;\n                tempcY = cY;\n                cX = X1;\n                cY = Y1;\n                X1 = tempcX;\n                Y1 = tempcY;\n                if (sectorContibution === 0) {\n                    pathBorderWidth = 1;\n                    borderColor = color;\n                }\n            }\n            var path = new Path('', false, centerX, centerY, X1, Y1, cX, cY, startAngle, endAngle, circleRadius, true);\n            var sector = new PathAttributes(this.heatMap.element.id + '_HeatMapRect_' + x, path, tempColor, tempBorder, pathBorderWidth, 1, borderColor);\n            this.calculateShapes(sector, path, sectorContibution, curve);\n            this.drawSvgCanvas.drawPath(sector, path, this.containerRectObject);\n            if (sectorContibution === 360) {\n                break;\n            }\n        }\n    };\n    /**\n     * To Render sector Cell.\n     * @private\n     */\n    Series.prototype.calculateShapes = function (options, path, sectorContibution, curve) {\n        var pathString;\n        var clockWise;\n        switch (sectorContibution) {\n            case 360:\n            case 0:\n                if (sectorContibution === 0 && path.start === path.end) {\n                    pathString = 'M' + ' ' + options.x + ' ' + options.y + ' ' + 'L' + ' ' + path.x + ' ' + (path.y - path.radius);\n                }\n                else {\n                    pathString = !this.heatMap.enableCanvasRendering ? 'M' + ' ' + options.x + ' ' + options.y + ' ' : '';\n                    pathString = pathString + 'm' + ' ' + (-path.radius) + ' ' + '0' + ' ' +\n                        'a' + ' ' + path.radius + ' ' + path.radius + ' ' + '0' + ' ' + '1' + ' ' + '0' +\n                        ' ' + (path.radius * 2) + ' ' + '0' + ' ' + 'a' + ' ' + path.radius +\n                        ' ' + path.radius + ' ' + '0' + ' ' + '1' + ' ' + '0' +\n                        ' ' + (-(path.radius * 2)) + ' ' + '0' + ' ';\n                }\n                merge(options, { 'd': pathString });\n                break;\n            default:\n                pathString = 'M' + ' ' + options.x + ' ' + options.y + ' ' + 'L' + ' ' + path.x1 + ' ' + path.y1 + ' ' +\n                    'A' + ' ' + path.radius + ' ' + path.radius + ' ' + '0' + ' ' + curve + ' ' + '1' + ' ' +\n                    path.cx + ' ' + path.cy + ' ' + 'Z';\n                merge(options, { 'd': pathString });\n                break;\n        }\n    };\n    /**\n     * To Render Bubble Cell.\n     * @private\n     */\n    Series.prototype.renderBubbleCell = function (bubblePosition, tempBorder, x, color, borderColor, circleRadius) {\n        var circle = new CircleOption(this.heatMap.element.id + '_HeatMapRect_' + x, color, tempBorder, 1, borderColor || this.heatMap.themeStyle.cellBorder, Math.round((bubblePosition.x + (bubblePosition.width / 2)) * 100) / 100, Math.round((bubblePosition.y + (bubblePosition.height / 2)) * 100) / 100, circleRadius);\n        this.drawSvgCanvas.drawCircle(circle, this.containerRectObject);\n    };\n    /**\n     * To find whether the X,Y Label need to display or not.\n     * @private\n     */\n    Series.prototype.updateLabelVisibleStatus = function (tempWidth, tempHeight, displayText) {\n        if (this.heatMap.cellSettings.showLabel) {\n            this.checkLabelYDisplay = tempHeight > parseInt(this.heatMap.cellSettings.textStyle.size, 10) ? true : false;\n            this.checkLabelXDisplay = tempWidth > (displayText.length *\n                (parseInt(this.heatMap.cellSettings.textStyle.size, 10) / 2)) ? true : false;\n        }\n    };\n    /**\n     * To find percentage value.\n     * @private\n     */\n    Series.prototype.getRadiusBypercentage = function (text, min, max, radius) {\n        var minimum = parseInt(this.heatMap.cellSettings.bubbleSize.minimum, 10);\n        var maximum = parseInt(this.heatMap.cellSettings.bubbleSize.maximum, 10);\n        if (minimum < 0 || minimum > 100 || isNaN(minimum)) {\n            minimum = 0;\n        }\n        if (maximum < 0 || maximum > 100 || isNaN(maximum)) {\n            maximum = 100;\n        }\n        var valueInPrecentage = ((text - min) /\n            (max - min)) * 100;\n        valueInPrecentage = isNaN(valueInPrecentage) ? 100 : valueInPrecentage;\n        if ((this.heatMap.bubbleSizeWithColor ||\n            (this.heatMap.cellSettings.tileType === 'Bubble' && this.heatMap.cellSettings.bubbleType === 'Size'))) {\n            if (this.heatMap.cellSettings.isInversedBubbleSize) {\n                valueInPrecentage = 100 - valueInPrecentage;\n            }\n            valueInPrecentage = ((valueInPrecentage * (maximum - minimum)) / 100) + minimum;\n        }\n        radius = radius * (valueInPrecentage / 100);\n        return (Math.round(radius * 100) / 100) < 0 ? 0 : (Math.round(radius * 100) / 100);\n    };\n    /**\n     * To find saturated color for datalabel.\n     * @return {string}\n     * @private\n     */\n    Series.prototype.getSaturatedColor = function (color) {\n        var saturatedColor = color;\n        saturatedColor = (saturatedColor === 'transparent') ? window.getComputedStyle(document.body, null).backgroundColor : saturatedColor;\n        var rgbValue = convertHexToColor(colorNameToHex(saturatedColor));\n        var contrast = Math.round((rgbValue.R * 299 + rgbValue.G * 587 + rgbValue.B * 114) / 1000);\n        return contrast >= 128 ? 'black' : 'white';\n    };\n    /**\n     * To highlight the mouse hovered rect cell.\n     * @return {void}\n     * @private\n     */\n    Series.prototype.highlightSvgRect = function (tempID) {\n        if (tempID.indexOf('Celltooltip') === -1) {\n            if (tempID.indexOf('_HeatMapRect') !== -1) {\n                if (tempID.indexOf('_HeatMapRectLabels_') !== -1) {\n                    var tempIndex = tempID.indexOf('_HeatMapRectLabels_') + 19;\n                    tempID = this.heatMap.element.id + '_HeatMapRect_' + tempID.slice(tempIndex);\n                }\n                var element = document.getElementById(tempID);\n                if (this.heatMap.tempRectHoverClass !== tempID) {\n                    if (this.heatMap.cellSettings.enableCellHighlighting) {\n                        var oldElement = document.getElementById(this.heatMap.tempRectHoverClass);\n                        if (oldElement && !this.heatMap.rectSelected) {\n                            oldElement.setAttribute('opacity', '1');\n                        }\n                        if (element && !this.heatMap.rectSelected) {\n                            element.setAttribute('opacity', '0.65');\n                        }\n                    }\n                    this.heatMap.tempRectHoverClass = tempID;\n                }\n            }\n            else {\n                if (this.heatMap.cellSettings.enableCellHighlighting) {\n                    var oldElement = document.getElementById(this.heatMap.tempRectHoverClass);\n                    if (oldElement && !this.heatMap.rectSelected) {\n                        oldElement.setAttribute('opacity', '1');\n                        this.heatMap.tempRectHoverClass = '';\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * To get the value depends to format.\n     * @return {string}\n     * @private\n     */\n    Series.prototype.getFormatedText = function (val, getFormat) {\n        var format = getFormat;\n        var isCustom = format.match('{value}') !== null;\n        this.format = this.heatMap.intl.getNumberFormat({\n            format: isCustom ? '' : format\n        });\n        var value = '';\n        if (val.toString() !== '') {\n            value = formatValue(isCustom, format, val, this.format);\n        }\n        return value;\n    };\n    /**\n     * To get mouse hovered cell details.\n     * @return {CurrentRect}\n     * @private\n     */\n    Series.prototype.getCurrentRect = function (x, y) {\n        var currentRect;\n        var firstRectDetails = [];\n        firstRectDetails.push(this.heatMap.heatMapSeries.rectPositionCollection[0][0]);\n        var rectX = Math.ceil((x - firstRectDetails[0].x) / firstRectDetails[0].width) <\n            this.heatMap.axisCollections[0].axisLabelSize ?\n            Math.ceil((x - firstRectDetails[0].x) / firstRectDetails[0].width) :\n            this.heatMap.axisCollections[0].axisLabelSize;\n        var rectY = Math.floor(((y - firstRectDetails[0].y) / firstRectDetails[0].height)) <\n            this.heatMap.axisCollections[1].axisLabelSize ?\n            Math.floor(((y - firstRectDetails[0].y) / firstRectDetails[0].height)) :\n            this.heatMap.axisCollections[1].axisLabelSize - 1;\n        rectX = rectX === 0 ? 1 : rectX;\n        currentRect = this.heatMap.heatMapSeries.rectPositionCollection[rectY][rectX - 1];\n        this.hoverXAxisLabel = this.heatMap.axisCollections[0].tooltipLabels[rectX - 1];\n        this.hoverXAxisValue = this.heatMap.axisCollections[0].labelValue[rectX - 1];\n        this.hoverYAxisLabel = this.heatMap.axisCollections[1].tooltipLabels[(this.heatMap.axisCollections[1].tooltipLabels.length - 1) - rectY];\n        this.hoverYAxisValue = this.heatMap.axisCollections[1].labelValue[(this.heatMap.axisCollections[1].labelValue.length - 1) - rectY];\n        return currentRect;\n    };\n    return Series;\n}());\nexport { Series };\n","/**\n * HeatMap tool tip file\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { createElement, Property, Complex, ChildProperty, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Tooltip as tool } from '@syncfusion/ej2-svg-base';\nimport { TooltipBorder, Font, } from '../model/base';\nimport { Theme } from '../model/theme';\n/**\n * Configures the color property in Heatmap.\n */\nvar TooltipSettings = /** @class */ (function (_super) {\n    __extends(TooltipSettings, _super);\n    function TooltipSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], TooltipSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('')\n    ], TooltipSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Complex({}, TooltipBorder)\n    ], TooltipSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex(Theme.tooltipFont, Font)\n    ], TooltipSettings.prototype, \"textStyle\", void 0);\n    return TooltipSettings;\n}(ChildProperty));\nexport { TooltipSettings };\n/**\n *\n * The `Tooltip` module is used to render the tooltip for heatmap series.\n */\nvar Tooltip = /** @class */ (function () {\n    function Tooltip(heatMap) {\n        /* private */\n        this.isFirst = true;\n        /* private */\n        this.isFadeout = false;\n        this.heatMap = heatMap;\n    }\n    /**\n     * Get module name\n     */\n    Tooltip.prototype.getModuleName = function () {\n        return 'Tooltip';\n    };\n    /**\n     * To show/hide Tooltip.\n     * @private\n     */\n    Tooltip.prototype.showHideTooltip = function (isShow, isFadeout) {\n        var ele = document.getElementById(this.heatMap.element.id + 'Celltooltipcontainer');\n        if (!isShow) {\n            if (ele && ele.style.visibility !== 'hidden') {\n                if (this.tooltipObject && isFadeout) {\n                    this.tooltipObject.fadeOut();\n                }\n                else {\n                    if (this.tooltipObject && this.tooltipObject.element) {\n                        var tooltipElement = this.tooltipObject.element.firstChild;\n                        tooltipElement.setAttribute('opacity', '0');\n                    }\n                }\n                ele.style.visibility = 'hidden';\n            }\n            this.isFadeout = true;\n        }\n        else {\n            ele.style.visibility = 'visible';\n        }\n    };\n    /**\n     * To destroy the Tooltip.\n     * @return {void}\n     * @private\n     */\n    Tooltip.prototype.destroy = function (heatMap) {\n        /**\n         * Destroy method performed here\n         */\n    };\n    ;\n    /**\n     * To add Tooltip to the rect cell.\n     * @return {void}\n     * @private\n     */\n    Tooltip.prototype.createTooltip = function (currentRect, x, y, tempTooltipText) {\n        var offset = null;\n        if (this.heatMap.cellSettings.showLabel && this.heatMap.heatMapSeries.checkLabelXDisplay &&\n            this.heatMap.heatMapSeries.checkLabelYDisplay) {\n            offset = parseInt(this.heatMap.cellSettings.textStyle.size, 10) / 2;\n        }\n        this.tooltipObject = new tool({\n            enableAnimation: false,\n            offset: offset,\n            location: { x: x, y: y },\n            availableSize: this.heatMap.availableSize,\n            data: {\n                xValue: this.heatMap.heatMapSeries.hoverXAxisValue,\n                yValue: this.heatMap.heatMapSeries.hoverYAxisValue,\n                value: currentRect.value,\n                xLabel: this.heatMap.heatMapSeries.hoverXAxisLabel ?\n                    this.heatMap.heatMapSeries.hoverXAxisLabel.toString() : null,\n                yLabel: this.heatMap.heatMapSeries.hoverYAxisLabel ?\n                    this.heatMap.heatMapSeries.hoverYAxisLabel.toString() : null,\n            },\n            theme: this.heatMap.theme,\n            content: tempTooltipText,\n            fill: this.heatMap.tooltipSettings.fill,\n            template: this.heatMap.tooltipSettings.template === '' ? null : this.heatMap.tooltipSettings.template,\n            border: {\n                width: this.heatMap.tooltipSettings.border.width,\n                color: this.heatMap.tooltipSettings.border.color\n            },\n            textStyle: {\n                size: this.heatMap.tooltipSettings.textStyle.size,\n                fontWeight: this.heatMap.tooltipSettings.textStyle.fontWeight,\n                color: this.heatMap.tooltipSettings.textStyle.color,\n                fontStyle: this.heatMap.tooltipSettings.textStyle.fontStyle,\n                fontFamily: this.heatMap.tooltipSettings.textStyle.fontFamily\n            },\n            areaBounds: {\n                height: this.heatMap.initialClipRect.height + this.heatMap.initialClipRect.y,\n                width: this.heatMap.initialClipRect.width, x: this.heatMap.initialClipRect.x\n            },\n        }, '#' + this.heatMap.element.id + 'Celltooltipcontainer');\n    };\n    /**\n     * To create div container for tooltip.\n     * @return {void}\n     * @private\n     */\n    Tooltip.prototype.createTooltipDiv = function (heatMap) {\n        var position = 'absolute';\n        var top = heatMap.enableCanvasRendering && heatMap.allowSelection ? heatMap.availableSize.height : 0;\n        var element2 = createElement('div', {\n            id: this.heatMap.element.id + 'Celltooltipcontainer',\n            styles: 'position:' + position + '; z-index: 3;top:-' + top + 'px'\n        });\n        this.heatMap.element.appendChild(createElement('div', {\n            id: this.heatMap.element.id + 'Celltooltipparent',\n            styles: 'position:relative'\n        })\n            .appendChild(element2));\n    };\n    /**\n     * To get default tooltip content.\n     * @private\n     */\n    Tooltip.prototype.getTooltipContent = function (currentRect, hetmapSeries) {\n        var value;\n        var content;\n        var heatMap = this.heatMap;\n        var adaptData = this.heatMap.dataSource;\n        if (heatMap.bubbleSizeWithColor) {\n            var xAxis = heatMap.xAxis.title && heatMap.xAxis.title.text !== '' ? heatMap.xAxis.title.text : 'X-Axis';\n            var yAxis = heatMap.yAxis.title && heatMap.yAxis.title.text !== '' ? heatMap.yAxis.title.text : 'Y-Axis';\n            var value1 = adaptData.isJsonData && adaptData.adaptorType === 'Cell' ?\n                heatMap.dataSource.bubbleDataMapping.size : 'Value 1';\n            var value2 = adaptData.isJsonData && adaptData.adaptorType === 'Cell' ?\n                heatMap.dataSource.bubbleDataMapping.color : 'Value 2';\n            value = hetmapSeries.getFormatedText(currentRect.value[0].bubbleData, this.heatMap.cellSettings.format);\n            content = [xAxis + ' : ' + hetmapSeries.hoverXAxisLabel + '<br/>'\n                    + yAxis + ' : ' + hetmapSeries.hoverYAxisLabel + '<br/>'\n                    + value1 + ' : ' + value + '<br/>'\n                    + value2 + ' : '\n                    + hetmapSeries.getFormatedText(currentRect.value[1].bubbleData, this.heatMap.cellSettings.format)];\n        }\n        else {\n            value = currentRect.value;\n            content = [hetmapSeries.hoverXAxisLabel + ' | ' + hetmapSeries.hoverYAxisLabel + ' : ' +\n                    hetmapSeries.getFormatedText(value, this.heatMap.cellSettings.format)];\n        }\n        return content;\n    };\n    /**\n     * To render tooltip.\n     * @private\n     */\n    Tooltip.prototype.renderTooltip = function (currentRect) {\n        var _this = this;\n        var hetmapSeries = this.heatMap.heatMapSeries;\n        var tempTooltipText = [''];\n        var showTooltip = this.heatMap.bubbleSizeWithColor ?\n            !isNullOrUndefined(currentRect.value) && !isNullOrUndefined(currentRect.value[0].bubbleData)\n                && currentRect.value[0].bubbleData.toString() !== '' ? true : false\n            : isNullOrUndefined(currentRect.value) || (!isNullOrUndefined(currentRect.value) &&\n                currentRect.value.toString() === '') ? false : true;\n        if (!showTooltip) {\n            this.showHideTooltip(false, false);\n            if (!currentRect.visible) {\n                this.showHideTooltip(false, false);\n            }\n        }\n        else {\n            if (!isNullOrUndefined(this.heatMap.tooltipRender)) {\n                // this.tooltipObject.header = '';\n                // this.tooltipObject.content = this.getTemplateText(\n                //     currentRect, this.heatMap.tooltipTemplate, hetmapSeries.hoverXAxisLabel,\n                //     hetmapSeries.hoverYAxisLabel);\n                var content = this.getTooltipContent(currentRect, hetmapSeries);\n                var argData = {\n                    heatmap: (this.heatMap.isBlazor ? null : this.heatMap),\n                    cancel: false,\n                    name: 'tooltipRender',\n                    value: currentRect.value,\n                    xValue: this.heatMap.heatMapSeries.hoverXAxisValue,\n                    yValue: this.heatMap.heatMapSeries.hoverYAxisValue,\n                    xLabel: this.heatMap.heatMapSeries.hoverXAxisLabel ?\n                        this.heatMap.heatMapSeries.hoverXAxisLabel.toString() : null,\n                    yLabel: this.heatMap.heatMapSeries.hoverYAxisLabel ?\n                        this.heatMap.heatMapSeries.hoverYAxisLabel.toString() : null,\n                    content: content\n                };\n                this.heatMap.trigger('tooltipRender', argData, function (observedArgs) {\n                    if (!observedArgs.cancel) {\n                        tempTooltipText = observedArgs.content;\n                        _this.tooltipCallback(currentRect, tempTooltipText);\n                    }\n                    else {\n                        if (_this.tooltipObject) {\n                            _this.showHideTooltip(false);\n                        }\n                    }\n                });\n            }\n            else {\n                //  this.tooltipObject.header = hetmapSeries.hoverYAxisLabel.toString();\n                tempTooltipText = this.getTooltipContent(currentRect, hetmapSeries);\n                this.tooltipCallback(currentRect, tempTooltipText);\n            }\n        }\n    };\n    /**\n     * To render tooltip.\n     */\n    Tooltip.prototype.tooltipCallback = function (currentRect, tempTooltipText) {\n        if (!this.tooltipObject) {\n            this.createTooltip(currentRect, currentRect.x + (currentRect.width / 2), currentRect.y + (currentRect.height / 2), tempTooltipText);\n        }\n        else {\n            this.tooltipObject.content = tempTooltipText;\n            this.tooltipObject.data = {\n                xValue: this.heatMap.heatMapSeries.hoverXAxisValue,\n                yValue: this.heatMap.heatMapSeries.hoverYAxisValue,\n                xLabel: this.heatMap.heatMapSeries.hoverXAxisLabel ?\n                    this.heatMap.heatMapSeries.hoverXAxisLabel.toString() : null,\n                yLabel: this.heatMap.heatMapSeries.hoverYAxisLabel ?\n                    this.heatMap.heatMapSeries.hoverYAxisLabel.toString() : null,\n                value: currentRect.value,\n            };\n        }\n        this.showHideTooltip(true);\n        this.tooltipObject.enableAnimation = (this.isFirst || this.isFadeout) ? false : true;\n        this.isFirst = (this.isFirst) ? false : this.isFirst;\n        this.isFadeout = (this.isFadeout) ? false : this.isFadeout;\n        this.tooltipObject.location.x = currentRect.x + (currentRect.width / 2);\n        this.tooltipObject.location.y = currentRect.y + (currentRect.height / 2);\n        if (!currentRect.visible) {\n            this.showHideTooltip(false, false);\n        }\n    };\n    return Tooltip;\n}());\nexport { Tooltip };\n","import { extend, isNullOrUndefined } from '@syncfusion/ej2-base';\nvar TwoDimensional = /** @class */ (function () {\n    function TwoDimensional(heatMap) {\n        this.heatMap = heatMap;\n    }\n    /**\n     * To reconstruct proper two dimensional dataSource depends on min and max values.\n     *  @private\n     */\n    TwoDimensional.prototype.processDataSource = function (dataSource) {\n        // tslint:disable-next-line:no-any\n        var tempCloneData = extend([], dataSource, null, true);\n        this.heatMap.clonedDataSource = [];\n        this.completeDataSource = [];\n        var axis = this.heatMap.axisCollections;\n        var dataLength = axis[0].maxLength + 1;\n        var labelLength = axis[0].axisLabelSize + (axis[0].min > 0 ? axis[0].min : 0);\n        var xLength = dataLength > labelLength ? dataLength : labelLength;\n        var minVal;\n        var maxVal;\n        dataLength = axis[1].maxLength + 1;\n        labelLength = axis[1].axisLabelSize + (axis[1].min > 0 ? axis[1].min : 0);\n        var yLength = dataLength > labelLength ? dataLength : labelLength;\n        // tslint:disable-next-line:no-any \n        var tempVariable;\n        var cloneDataIndex = 0;\n        var minMaxDatasource = [];\n        this.tempSizeArray = [];\n        this.tempColorArray = [];\n        this.heatMap.minColorValue = null;\n        this.heatMap.maxColorValue = null;\n        for (var z = axis[1].valueType === 'Category' ? axis[1].min : 0; z < yLength; z++) {\n            var tempIndex = axis[0].valueType === 'Category' ? axis[0].min : 0;\n            this.completeDataSource.push([]);\n            while (tempIndex < xLength) {\n                if (tempIndex >= axis[0].min && tempIndex <= axis[0].max) {\n                    this.processDataArray(tempCloneData, tempIndex, z, cloneDataIndex);\n                }\n                tempIndex++;\n            }\n            tempVariable = extend([], this.completeDataSource[cloneDataIndex], null, true);\n            var minMaxVal = this.getMinMaxValue(minVal, maxVal, tempVariable);\n            minVal = minMaxVal[0];\n            maxVal = minMaxVal[1];\n            if (this.heatMap.xAxis.isInversed) {\n                this.completeDataSource[cloneDataIndex] = this.completeDataSource[cloneDataIndex].reverse();\n            }\n            if (z >= this.heatMap.axisCollections[1].min && z <= this.heatMap.axisCollections[1].max) {\n                minMaxDatasource.push(this.completeDataSource[cloneDataIndex]);\n            }\n            cloneDataIndex++;\n        }\n        if (!this.heatMap.yAxis.isInversed) {\n            this.completeDataSource.reverse();\n            minMaxDatasource.reverse();\n        }\n        this.heatMap.clonedDataSource = minMaxDatasource;\n        this.heatMap.dataSourceMinValue = isNullOrUndefined(minVal) ? 0 : parseFloat(minVal.toString());\n        this.heatMap.dataSourceMaxValue = isNullOrUndefined(maxVal) ? 0 : parseFloat(maxVal.toString());\n        this.heatMap.isColorValueExist = isNullOrUndefined(this.heatMap.minColorValue) ? false : true;\n        this.heatMap.minColorValue = isNullOrUndefined(this.heatMap.minColorValue) ?\n            this.heatMap.dataSourceMinValue : parseFloat(this.heatMap.minColorValue.toString());\n        this.heatMap.maxColorValue = isNullOrUndefined(this.heatMap.maxColorValue) ?\n            this.heatMap.dataSourceMaxValue : parseFloat(this.heatMap.maxColorValue.toString());\n    };\n    /**\n     * To process and create a proper data array.\n     *  @private\n     */\n    // tslint:disable-next-line:no-any\n    TwoDimensional.prototype.processDataArray = function (tempCloneData, tempIndex, z, cloneDataIndex) {\n        if (this.heatMap.bubbleSizeWithColor) {\n            if (tempCloneData[tempIndex] && !isNullOrUndefined(tempCloneData[tempIndex][z])\n                && typeof (tempCloneData[tempIndex][z]) === 'object') {\n                // tslint:disable-next-line:no-any \n                var internalArray = tempCloneData[tempIndex][z];\n                for (var tempx = 0; tempx < internalArray.length; tempx++) {\n                    if (isNullOrUndefined(internalArray[tempx]) || isNaN(internalArray[tempx])) {\n                        internalArray[tempx] = '';\n                    }\n                    if (tempx === 0) {\n                        this.tempSizeArray.push(internalArray[tempx]);\n                    }\n                    else if (tempx === 1) {\n                        this.tempColorArray.push(internalArray[tempx]);\n                        break;\n                    }\n                }\n                this.completeDataSource[cloneDataIndex].push(internalArray);\n            }\n            else {\n                if (!isNullOrUndefined(tempCloneData[tempIndex]) && (tempCloneData[tempIndex][z] ||\n                    (tempCloneData[tempIndex][z] === 0 &&\n                        tempCloneData[tempIndex][z].toString() !== ''))) {\n                    this.completeDataSource[cloneDataIndex].push([tempCloneData[tempIndex][z]]);\n                    this.tempSizeArray.push(tempCloneData[tempIndex][z]);\n                }\n                else {\n                    this.completeDataSource[cloneDataIndex].push('');\n                }\n            }\n        }\n        else {\n            if (tempCloneData[tempIndex] && (tempCloneData[tempIndex][z] ||\n                (tempCloneData[tempIndex][z] === 0 &&\n                    tempCloneData[tempIndex][z].toString() !== ''))) {\n                if (typeof (tempCloneData[tempIndex][z]) === 'object') {\n                    if (tempCloneData[tempIndex][z].length > 0 && !isNullOrUndefined(tempCloneData[tempIndex][z][0])) {\n                        this.completeDataSource[cloneDataIndex].push(tempCloneData[tempIndex][z][0]);\n                    }\n                    else {\n                        this.completeDataSource[cloneDataIndex].push('');\n                    }\n                }\n                else {\n                    this.completeDataSource[cloneDataIndex].push(tempCloneData[tempIndex][z]);\n                }\n            }\n            else {\n                this.completeDataSource[cloneDataIndex].push('');\n            }\n        }\n    };\n    /**\n     * To get minimum and maximum value\n     *  @private\n     */\n    TwoDimensional.prototype.getMinMaxValue = function (minVal, maxVal, tempVariable) {\n        var minMaxValue = [];\n        if (this.heatMap.bubbleSizeWithColor) {\n            minMaxValue.push(this.getMinValue(minVal, this.tempSizeArray));\n            minMaxValue.push(this.getMaxValue(maxVal, this.tempSizeArray));\n            this.heatMap.minColorValue = this.getMinValue(this.heatMap.minColorValue, this.tempColorArray);\n            this.heatMap.maxColorValue = this.getMaxValue(this.heatMap.maxColorValue, this.tempColorArray);\n        }\n        else {\n            minMaxValue.push(this.getMinValue(minVal, tempVariable));\n            minMaxValue.push(this.getMaxValue(maxVal, tempVariable));\n        }\n        return minMaxValue;\n    };\n    /**\n     * To get minimum value\n     *  @private\n     */\n    TwoDimensional.prototype.getMinValue = function (minVal, tempVariable) {\n        if (isNullOrUndefined(minVal)) {\n            minVal = this.performSort(tempVariable);\n        }\n        else if (this.performSort(tempVariable) < minVal) {\n            minVal = this.performSort(tempVariable);\n        }\n        return !isNullOrUndefined(minVal) ? parseFloat(minVal.toString()) : minVal;\n    };\n    /**\n     * To get maximum value\n     *  @private\n     */\n    TwoDimensional.prototype.getMaxValue = function (maxVal, tempVariable) {\n        if (isNullOrUndefined(maxVal) && tempVariable.length > 0) {\n            maxVal = Math.max.apply(Math, tempVariable);\n        }\n        else if (Math.max.apply(Math, tempVariable) > maxVal) {\n            maxVal = Math.max.apply(Math, tempVariable);\n        }\n        return !isNullOrUndefined(maxVal) ? parseFloat(maxVal.toString()) : maxVal;\n    };\n    /**\n     * To perform sort operation.\n     *  @private\n     */\n    // tslint:disable-next-line:no-any\n    TwoDimensional.prototype.performSort = function (tempVariable) {\n        return tempVariable.sort(function (a, b) { return a - b; }).filter(this.checkmin)[0];\n    };\n    /**\n     * To get minimum value\n     *  @private\n     */\n    TwoDimensional.prototype.checkmin = function (val) {\n        return !isNullOrUndefined(val) && val.toString() !== '';\n    };\n    return TwoDimensional;\n}());\nexport { TwoDimensional };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex, Browser, createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DrawSvgCanvas, TextOption, TextBasic, PathOption, Line, LineOption, GradientPointer } from '../utils/helper';\nimport { Size, measureText, getTitle, getElement, CanvasTooltip, formatValue, LegendRange, ToggleVisibility, sum } from '../utils/helper';\nimport { Font } from '../model/base';\nimport { Rect, RectOption, Gradient, GradientColor, showTooltip, stringToNumber, CurrentLegendRect, removeElement } from '../utils/helper';\nimport { Theme } from '../model/theme';\nimport { Tooltip as tool } from '@syncfusion/ej2-svg-base';\n/**\n * Configures the Legend\n */\nvar LegendSettings = /** @class */ (function (_super) {\n    __extends(LegendSettings, _super);\n    function LegendSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], LegendSettings.prototype, \"height\", void 0);\n    __decorate([\n        Property('')\n    ], LegendSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property('Right')\n    ], LegendSettings.prototype, \"position\", void 0);\n    __decorate([\n        Property(true)\n    ], LegendSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('Center')\n    ], LegendSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Property(true)\n    ], LegendSettings.prototype, \"showLabel\", void 0);\n    __decorate([\n        Property(true)\n    ], LegendSettings.prototype, \"showGradientPointer\", void 0);\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"enableSmartLegend\", void 0);\n    __decorate([\n        Property('All')\n    ], LegendSettings.prototype, \"labelDisplayType\", void 0);\n    __decorate([\n        Complex(Theme.legendLabelFont, Font)\n    ], LegendSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property('')\n    ], LegendSettings.prototype, \"labelFormat\", void 0);\n    __decorate([\n        Property(true)\n    ], LegendSettings.prototype, \"toggleVisibility\", void 0);\n    return LegendSettings;\n}(ChildProperty));\nexport { LegendSettings };\n/**\n *\n * The `Legend` module is used to render legend for the heatmap.\n */\nvar Legend = /** @class */ (function () {\n    function Legend(heatMap) {\n        this.maxLegendLabelSize = new Size(0, 0);\n        this.gradientScaleSize = 10;\n        this.segmentCollections = [];\n        this.textWrapCollections = [];\n        this.labelCollections = [];\n        this.labelCollection = [];\n        this.legendSize = 10;\n        this.previousOptions = new GradientPointer(0, 0, 0, 0, 0, 0);\n        this.listPerPage = 0;\n        this.numberOfPages = 1;\n        this.listWidth = 0;\n        this.fillRect = new Rect(0, 0, 0, 0);\n        this.legendRect = new Rect(0, 0, 0, 0);\n        this.currentPage = 1;\n        this.lastList = [];\n        this.navigationCollections = [];\n        this.pagingRect = new Rect(0, 0, 0, 0);\n        this.listInterval = 10; // padding between two lists\n        this.legendLabelTooltip = [];\n        this.labelXCollections = [];\n        this.labelYCollections = [];\n        this.legendXCollections = [];\n        this.legendYCollections = [];\n        /** @private */\n        this.legendRectPositionCollection = [];\n        /** @private */\n        this.legendRange = [];\n        /** @private */\n        this.legendTextRange = [];\n        /** @private */\n        this.visibilityCollections = [];\n        this.heatMap = heatMap;\n        this.drawSvgCanvas = new DrawSvgCanvas(heatMap);\n    }\n    ;\n    /**\n     * Get module name\n     */\n    Legend.prototype.getModuleName = function () {\n        return 'Legend';\n    };\n    /**\n     * To destroy the Legend.\n     * @return {void}\n     * @private\n     */\n    Legend.prototype.destroy = function (heatMap) {\n        /**\n         * destory code\n         */\n    };\n    ;\n    /**\n     * @private\n     */\n    Legend.prototype.renderLegendItems = function () {\n        var heatMap = this.heatMap;\n        var tempBorder = {\n            color: 'transparent',\n            width: 0,\n        };\n        this.legend = heatMap.renderer.createGroup({ id: heatMap.element.id + '_Heatmap_Legend' });\n        var rectItems = new RectOption(heatMap.element.id + '_LegendBound', 'none', tempBorder, 1, this.legendGroup);\n        this.drawSvgCanvas.drawRectangle(rectItems, this.legend);\n        var legendBound = this.legendRectScale;\n        var rectItemsSvg = new Rect(legendBound.x, legendBound.y, legendBound.width, legendBound.height);\n        if (heatMap.paletteSettings.type === 'Fixed') {\n            var colorCollection = (!heatMap.legendSettings.enableSmartLegend) ?\n                heatMap.colorCollection : heatMap.legendColorCollection;\n            this.legendRange = (heatMap.resizing || (!heatMap.legendOnLoad && heatMap.rendering)) ? [] : this.legendRange;\n            this.legendTextRange = (heatMap.resizing || (!heatMap.legendOnLoad && heatMap.rendering)) ? [] : this.legendTextRange;\n            heatMap.toggleValue = [];\n            for (var i = 0; i < colorCollection.length; i++) {\n                var visibility = !isNullOrUndefined(this.visibilityCollections[i]) ? this.visibilityCollections[i] : true;\n                heatMap.toggleValue.push(new ToggleVisibility(visibility, colorCollection[i].value));\n            }\n        }\n        if (heatMap.paletteSettings.type === 'Gradient' || (heatMap.paletteSettings.type === 'Fixed' &&\n            heatMap.legendSettings.enableSmartLegend === true)) {\n            if (heatMap.paletteSettings.type === 'Gradient') {\n                var fill = void 0;\n                if (heatMap.enableCanvasRendering) {\n                    var grd = void 0;\n                    var ctx = heatMap.canvasRenderer.ctx;\n                    if (heatMap.horizontalGradient) {\n                        grd = ctx.createLinearGradient(legendBound.x, 0, legendBound.x + legendBound.width, 0);\n                    }\n                    else {\n                        grd = ctx.createLinearGradient(0, legendBound.y, 0, legendBound.y + legendBound.height);\n                    }\n                    for (var i = 0; i < heatMap.legendColorCollection.length; i++) {\n                        var value = ((heatMap.legendColorCollection[i].value - this.legendMinValue) /\n                            (this.legendMaxValue - this.legendMinValue));\n                        value = isNaN(value) ? 0 : value;\n                        grd.addColorStop(value, heatMap.legendColorCollection[i].color);\n                    }\n                    ctx.fillStyle = grd;\n                    fill = grd.toString();\n                }\n                else {\n                    var gradientOptions = void 0;\n                    var gradientColor = void 0;\n                    var cgradientColors = [];\n                    for (var i = 0; i < heatMap.legendColorCollection.length; i++) {\n                        var gradientPercentage = ((heatMap.legendColorCollection[i].value - this.legendMinValue) /\n                            (this.legendMaxValue - this.legendMinValue)) * 100;\n                        gradientPercentage = isNaN(gradientPercentage) ? 0 : gradientPercentage;\n                        gradientColor = new GradientColor(heatMap.legendColorCollection[i].color, gradientPercentage + '%');\n                        cgradientColors.push(gradientColor);\n                        if (this.legendMaxValue === this.legendMinValue) {\n                            break;\n                        }\n                    }\n                    if (heatMap.horizontalGradient) {\n                        gradientOptions = new Gradient(heatMap.element.id + '_lineargradient', '0%', '100%', '0%', '0%');\n                    }\n                    else {\n                        gradientOptions = new Gradient(heatMap.element.id + '_lineargradient', '0%', '0%', '0%', '100%');\n                    }\n                    var linearGradient = heatMap.renderer.drawGradient('linearGradient', gradientOptions, cgradientColors);\n                    this.legend.appendChild(linearGradient);\n                    fill = 'url(#' + heatMap.element.id + '_lineargradient)';\n                }\n                var rectItem = new RectOption(heatMap.element.id + '_Gradient_Legend', fill, tempBorder, 1, rectItemsSvg);\n                this.drawSvgCanvas.drawRectangle(rectItem, this.legend);\n                this.renderColorAxisGrid(rectItemsSvg);\n            }\n            else {\n                this.renderSmartLegend();\n            }\n            if (!heatMap.enableCanvasRendering) {\n                heatMap.svgObject.appendChild(this.legend);\n            }\n            this.renderLegendLabel(rectItemsSvg);\n        }\n        else {\n            this.legendScale = heatMap.renderer.createGroup({ id: heatMap.element.id + 'Heatmap_GradientScale' });\n            var listRect = new RectOption(heatMap.element.id + '_Gradient_Scale', 'none', tempBorder, 1, this.legendRectScale);\n            this.drawSvgCanvas.drawRectangle(listRect, this.legendScale);\n            if (!heatMap.enableCanvasRendering) {\n                this.legend.appendChild(this.legendScale);\n            }\n            this.translategroup = heatMap.renderer.createGroup({ id: heatMap.element.id + '_translate' });\n            this.calculateListPerPage(rectItemsSvg);\n            if (this.numberOfPages > 1) {\n                this.paginggroup = heatMap.renderer.createGroup({ id: heatMap.element.id + '_navigation' });\n            }\n            this.renderListLegendMode(rectItemsSvg, true);\n        }\n    };\n    Legend.prototype.renderSmartLegend = function () {\n        var heatMap = this.heatMap;\n        var colorCollection = heatMap.colorCollection;\n        var smartLegendRect;\n        var tempBorder = {\n            color: 'transparent',\n            width: 0,\n        };\n        var legendBound = this.legendRectScale;\n        var legendX;\n        var legendY;\n        var legendWidth;\n        var legendHeight;\n        var width = legendBound.width / colorCollection.length;\n        var height = legendBound.height / colorCollection.length;\n        this.legendRectPositionCollection = [];\n        this.legendRange = [];\n        for (var i = 0; i < heatMap.legendColorCollection.length; i++) {\n            var rectPosition = new CurrentLegendRect(0, 0, 0, 0, '', '');\n            if (heatMap.horizontalGradient) {\n                legendX = legendBound.x + (i * width);\n                legendY = legendBound.y;\n                legendWidth = width;\n                legendHeight = legendBound.height;\n                this.segmentCollections.push((heatMap.legendSettings.labelDisplayType === 'Edge' &&\n                    i === heatMap.legendColorCollection.length - 1 && !heatMap.legendColorCollection[i].isHidden) ?\n                    legendX + width : legendX);\n            }\n            else {\n                legendX = legendBound.x;\n                legendY = legendBound.y + (i * height);\n                legendWidth = legendBound.width;\n                legendHeight = height;\n                this.segmentCollections.push((heatMap.legendSettings.labelDisplayType === 'Edge' &&\n                    i === heatMap.legendColorCollection.length - 1 && !heatMap.legendColorCollection[i].isHidden) ?\n                    legendY + height : legendY);\n            }\n            smartLegendRect = new Rect(legendX, legendY, legendWidth, legendHeight);\n            var legendRange = new LegendRange(0, 0, 0, 0, 0, true, 0);\n            legendRange.x = legendX;\n            legendRange.y = legendY;\n            legendRange.width = legendWidth;\n            legendRange.height = legendHeight;\n            legendRange.value = heatMap.legendColorCollection[i].value;\n            legendRange.currentPage = this.currentPage;\n            if (colorCollection.length !== heatMap.legendColorCollection.length && i === heatMap.legendColorCollection.length - 1) {\n                heatMap.horizontalGradient ? legendRange.width = 0 : legendRange.height = 0;\n                this.visibilityCollections[i] = this.visibilityCollections[i - 1];\n            }\n            legendRange.visible = !isNullOrUndefined(this.visibilityCollections[i]) ? this.visibilityCollections[i] : true;\n            this.legendRange.push(legendRange);\n            if (!heatMap.legendColorCollection[i].isHidden) {\n                var color = heatMap.legendOnLoad ? colorCollection[i].color :\n                    this.legendRange[i].visible ? colorCollection[i].color : '#D3D3D3';\n                var rectItem = new RectOption(heatMap.element.id + '_Smart_Legend' + i, color, tempBorder, 1, smartLegendRect);\n                this.drawSvgCanvas.drawRectangle(rectItem, this.legend);\n                rectPosition.x = legendX;\n                rectPosition.y = legendY;\n                rectPosition.width = legendWidth;\n                rectPosition.height = legendHeight;\n                rectPosition.label = this.labelCollections[i];\n                rectPosition.id = heatMap.element.id + '_Smart_Legend' + i;\n                this.legendRectPositionCollection.push(rectPosition);\n                var text = getTitle(this.labelCollections[i], heatMap.legendSettings.textStyle, this.textWrapCollections[i]);\n                if (text.length !== 0 && heatMap.enableCanvasRendering) {\n                    var elementSize = measureText(this.labelCollections[i], heatMap.legendSettings.textStyle);\n                    this.legendLabelTooltip.push(new CanvasTooltip(this.labelCollections[i], new Rect(rectPosition.x, rectPosition.y, elementSize.width, elementSize.height)));\n                }\n            }\n        }\n    };\n    Legend.prototype.renderLegendLabel = function (rect) {\n        var heatMap = this.heatMap;\n        this.legendTextRange = [];\n        if (heatMap.legendSettings.showLabel && (heatMap.paletteSettings.type === 'Gradient' ||\n            (heatMap.paletteSettings.type === 'Fixed' && heatMap.legendSettings.labelDisplayType !== 'None'))) {\n            var anchor = void 0;\n            var dominantBaseline = void 0;\n            var legendLabel = void 0;\n            var textWrapWidth = 0;\n            var text = void 0;\n            this.legendLabelTooltip = [];\n            var elementSize = void 0;\n            var colorCollection = heatMap.legendColorCollection;\n            if (heatMap.enableCanvasRendering) {\n                var ctx = heatMap.canvasRenderer.ctx;\n                ctx.rect(this.legendGroup.x, this.legendGroup.y, this.legendGroup.width, this.legendGroup.height);\n                ctx.save();\n                ctx.clip();\n                ctx.restore();\n            }\n            else {\n                legendLabel = heatMap.renderer.createGroup({ id: heatMap.element.id + '_Heatmap_LegendLabel' });\n            }\n            var labelX = void 0;\n            var labelY = void 0;\n            for (var i = 0; i < colorCollection.length; i++) {\n                var value = ((colorCollection[i].value - (Math.round(this.legendMinValue * 100) / 100)) /\n                    ((Math.round(this.legendMaxValue * 100) / 100) - (Math.round(this.legendMinValue * 100) / 100))) * 100;\n                if (heatMap.horizontalGradient) {\n                    labelX = this.segmentCollections[i];\n                    labelY = rect.y + rect.height + this.labelPadding;\n                    anchor = ((Math.round(value * 100) / 100) === 0 || (i === 0 && heatMap.paletteSettings.type === 'Fixed')) ? 'start' :\n                        (((Math.round(value * 100) / 100) === 100 && heatMap.paletteSettings.type === 'Gradient') ||\n                            (Math.round(heatMap.dataSourceMaxValue * 100) / 100) === colorCollection[i].value &&\n                                heatMap.legendSettings.enableSmartLegend) || (heatMap.legendSettings.enableSmartLegend &&\n                            heatMap.paletteSettings.type === 'Fixed' &&\n                            heatMap.legendSettings.labelDisplayType === 'Edge') ? 'end' : 'middle';\n                    dominantBaseline = 'hanging';\n                }\n                else {\n                    labelX = rect.x + rect.width + this.labelPadding;\n                    labelY = this.segmentCollections[i];\n                    dominantBaseline = ((Math.round(value * 100) / 100) === 0 || (i === 0 && heatMap.paletteSettings.type === 'Fixed')) ?\n                        'hanging' : (((Math.round(value * 100) / 100) === 100 && heatMap.paletteSettings.type === 'Gradient') ||\n                        (Math.round(heatMap.dataSourceMaxValue * 100) / 100) === colorCollection[i].value &&\n                            heatMap.legendSettings.enableSmartLegend) || (heatMap.legendSettings.enableSmartLegend &&\n                        heatMap.legendSettings.labelDisplayType === 'Edge' &&\n                        heatMap.paletteSettings.type === 'Fixed') ? 'baseline' : 'middle';\n                }\n                textWrapWidth = heatMap.horizontalGradient ? this.textWrapCollections[i] : this.width - (this.legendRectScale.width +\n                    this.labelPadding + this.legendRectPadding);\n                text = getTitle(this.labelCollections[i], heatMap.legendSettings.textStyle, textWrapWidth);\n                elementSize = measureText(text[0], heatMap.legendSettings.textStyle);\n                if (heatMap.paletteSettings.type === 'Fixed') {\n                    var rectY = dominantBaseline === 'hanging' ? labelY : dominantBaseline === 'middle' ?\n                        labelY - elementSize.height / 2 : labelY - elementSize.height;\n                    var rectX = anchor === 'end' ? labelX - elementSize.width : anchor === 'middle' ?\n                        labelX - elementSize.width / 2 : labelX;\n                    var textPosition = new LegendRange(rectX, rectY, elementSize.width, elementSize.height, colorCollection[i].value, true, this.currentPage);\n                    textPosition.visible = !isNullOrUndefined(this.visibilityCollections[i]) ? this.visibilityCollections[i] : true;\n                    this.legendTextRange.push(textPosition);\n                }\n                if (this.labelCollections[i] !== '') {\n                    if (text.length !== 0 && text[0].indexOf('...') !== -1 && heatMap.enableCanvasRendering) {\n                        this.legendLabelTooltip.push(new CanvasTooltip(this.labelCollections[i], new Rect(labelX, labelY, elementSize.width, elementSize.height)));\n                    }\n                    var textBasic = new TextBasic(labelX, labelY, anchor, text, 0, 'translate(0,0)', dominantBaseline);\n                    var options = new TextOption(heatMap.element.id + '_Legend_Label' + i, textBasic, heatMap.legendSettings.textStyle, heatMap.legendSettings.textStyle.color || heatMap.themeStyle.legendLabel);\n                    options.fill = heatMap.legendOnLoad ? options.fill :\n                        (heatMap.paletteSettings.type === 'Fixed' && !this.legendRange[i].visible) ? '#D3D3D3' : options.fill;\n                    if (text.length > 1) {\n                        this.drawSvgCanvas.createWrapText(options, heatMap.legendSettings.textStyle, legendLabel);\n                    }\n                    else {\n                        this.drawSvgCanvas.createText(options, legendLabel, text[0]);\n                    }\n                    if (Browser.isIE && !heatMap.enableCanvasRendering) {\n                        if (dominantBaseline === 'middle') {\n                            legendLabel.lastChild.setAttribute('dy', '0.6ex');\n                        }\n                        else if (dominantBaseline === 'hanging') {\n                            legendLabel.lastChild.setAttribute('dy', '1.5ex');\n                        }\n                    }\n                }\n                if (this.legendMaxValue === this.legendMinValue && heatMap.paletteSettings.type === 'Gradient') {\n                    break;\n                }\n            }\n            if (!heatMap.enableCanvasRendering) {\n                this.legendGroup.height = this.legendGroup.height > 0 ? this.legendGroup.height : 0;\n                this.legendGroup.width = this.legendGroup.width > 0 ? this.legendGroup.width : 0;\n                this.legend.appendChild(legendLabel);\n                var clippath = heatMap.renderer.createClipPath({ id: heatMap.element.id + '_clipPath' });\n                var clipRect = heatMap.renderer.drawRectangle(this.legendGroup);\n                clippath.appendChild(clipRect);\n                heatMap.svgObject.appendChild(clippath);\n                this.legend.setAttribute('style', 'clip-path:url(#' + clippath.id + ')');\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Legend.prototype.renderGradientPointer = function (e, pageX, pageY) {\n        var heatMap = this.heatMap;\n        var currentRect = heatMap.heatMapSeries.getCurrentRect(pageX, pageY);\n        var cellValue = heatMap.bubbleSizeWithColor ? currentRect.value[0].bubbleData.toString() !== '' ?\n            !this.heatMap.isColorValueExist ? currentRect.value[0].bubbleData.toString() :\n                currentRect.value[1].bubbleData.toString() : '' : currentRect.value.toString();\n        var rect = this.legendRectScale;\n        var legendPart;\n        var direction;\n        var options;\n        var legendPath;\n        var pathX1;\n        var pathY1;\n        var pathX2;\n        var pathY2;\n        var pathX3;\n        var pathY3;\n        if (cellValue.toString() !== '') {\n            if (!heatMap.horizontalGradient) {\n                legendPart = rect.height / 100;\n                legendPath = legendPart * ((Number(cellValue) - this.legendMinValue) /\n                    (this.legendMaxValue - this.legendMinValue)) * 100;\n                legendPath = isNaN(legendPath) ? 0 : legendPath;\n                pathX1 = rect.x - 1;\n                pathY1 = rect.y + legendPath;\n                pathX2 = pathX3 = rect.x - 8;\n                pathY2 = rect.y - 5 + legendPath;\n                pathY3 = rect.y + 5 + legendPath;\n            }\n            else {\n                legendPart = rect.width / 100;\n                legendPath = legendPart * ((Number(cellValue) - this.legendMinValue) /\n                    (this.legendMaxValue - this.legendMinValue)) * 100;\n                legendPath = isNaN(legendPath) ? 0 : legendPath;\n                pathX1 = rect.x + legendPath;\n                pathY1 = rect.y + rect.height;\n                pathX2 = rect.x - 5 + legendPath;\n                pathY2 = pathY3 = rect.y + rect.height + 8;\n                pathX3 = rect.x + 5 + legendPath;\n            }\n            direction = 'M' + ' ' + pathX1 + ' ' + pathY1 + ' ' +\n                'L' + ' ' + pathX2 + ' ' + pathY2 + ' ' + 'L' + ' ' + pathX3 + ' ' + pathY3 + ' ' + 'Z';\n            options = new PathOption(heatMap.element.id + '_Gradient_Pointer', 'gray', 0.01, '#A0A0A0', 1, '0,0', direction);\n            if (!heatMap.enableCanvasRendering) {\n                this.gradientPointer = heatMap.renderer.drawPath(options);\n                this.gradientPointer.style.visibility = 'visible';\n                this.legend.appendChild(this.gradientPointer);\n            }\n            else {\n                this.removeGradientPointer();\n                var canvasTranslate = void 0;\n                heatMap.canvasRenderer.drawPath(options, canvasTranslate);\n                this.previousOptions.pathX1 = pathX1;\n                this.previousOptions.pathY1 = pathY1;\n                this.previousOptions.pathX2 = pathX2;\n                this.previousOptions.pathY2 = pathY2;\n                this.previousOptions.pathX3 = pathX3;\n                this.previousOptions.pathY3 = pathY3;\n            }\n        }\n        else {\n            this.removeGradientPointer();\n        }\n    };\n    /**\n     * @private\n     */\n    Legend.prototype.removeGradientPointer = function () {\n        var heatMap = this.heatMap;\n        if (this.gradientPointer && !heatMap.enableCanvasRendering) {\n            this.gradientPointer.style.visibility = 'hidden';\n        }\n        else if (heatMap.enableCanvasRendering) {\n            if (Object.keys(this.previousOptions).length !== 0) {\n                if (heatMap.horizontalGradient) {\n                    this.fillRect.x = this.previousOptions.pathX2 - 1;\n                    this.fillRect.y = this.previousOptions.pathY1;\n                    this.fillRect.width = this.previousOptions.pathX3 - this.previousOptions.pathX2 + 2;\n                    this.fillRect.height = this.previousOptions.pathY2 + 1 - this.previousOptions.pathY1;\n                }\n                else {\n                    this.fillRect.x = this.previousOptions.pathX2 - 1;\n                    this.fillRect.y = this.previousOptions.pathY2 - 1;\n                    this.fillRect.width = this.previousOptions.pathX1 - this.previousOptions.pathX2 + 1;\n                    this.fillRect.height = this.previousOptions.pathY3 - this.previousOptions.pathY2 + 2;\n                }\n            }\n            heatMap.canvasRenderer.ctx.fillStyle = heatMap.themeStyle.background;\n            heatMap.canvasRenderer.ctx.fillRect(this.fillRect.x, this.fillRect.y, this.fillRect.width, this.fillRect.height);\n        }\n    };\n    /**\n     * @private\n     */\n    Legend.prototype.calculateLegendBounds = function (rect) {\n        var heatMap = this.heatMap;\n        var legendSettings = heatMap.legendSettings;\n        var colorCollection = heatMap.legendColorCollection;\n        this.labelCollections = [];\n        this.labelCollection = [];\n        if (legendSettings.position !== 'Bottom' && legendSettings.position !== 'Top' &&\n            legendSettings.position !== 'Right' && legendSettings.position !== 'Left') {\n            legendSettings.position = 'Right';\n        }\n        heatMap.horizontalGradient = legendSettings.position === 'Bottom' || legendSettings.position === 'Top';\n        this.legendRectPadding = heatMap.horizontalGradient ? 16 : 10; // padding between rect and legend\n        this.labelPadding = legendSettings.showLabel ? this.heatMap.horizontalGradient ? 10 : 6 : 0; // padding between list and label\n        this.legendHeight = legendSettings.height;\n        this.legendWidth = legendSettings.width;\n        var format = heatMap.legendSettings.labelFormat;\n        var isCustom = format.match('{value}') !== null;\n        this.format = heatMap.intl.getNumberFormat({\n            format: isCustom ? '' : format\n        });\n        if (heatMap.paletteSettings.type === 'Fixed') {\n            for (var i = 0; i < colorCollection.length; i++) {\n                var label = colorCollection[i].label ? colorCollection[i].label :\n                    formatValue(isCustom, format, colorCollection[i].value, this.format).toString();\n                var legendEventArg = {\n                    cancel: false, text: label, name: 'legendRender',\n                };\n                this.labelCollection.push(label);\n                this.heatMap.trigger('legendRender', legendEventArg);\n                if (heatMap.legendRender) {\n                    if (heatMap.legendSettings.enableSmartLegend && heatMap.legendSettings.labelDisplayType === 'Edge'\n                        && i > 0 && i < colorCollection.length - 1) {\n                        this.labelCollections.push('');\n                    }\n                    else {\n                        if (!legendEventArg.cancel) {\n                            this.labelCollections.push(legendEventArg.text);\n                        }\n                        else {\n                            this.labelCollections.push('');\n                        }\n                    }\n                }\n                else {\n                    this.labelCollections.push(label);\n                }\n            }\n        }\n        else {\n            for (var i = 0; i < colorCollection.length; i++) {\n                var label = colorCollection[i].isHidden ? '' : colorCollection[i].label ?\n                    colorCollection[i].label : formatValue(isCustom, format, colorCollection[i].value, this.format).toString();\n                var legendEventArg = {\n                    cancel: false,\n                    text: label,\n                    name: 'legendRender',\n                };\n                if (!colorCollection[i].isHidden) {\n                    this.heatMap.trigger('legendRender', legendEventArg);\n                }\n                if (heatMap.legendRender) {\n                    if (!legendEventArg.cancel) {\n                        this.labelCollections.push(legendEventArg.text);\n                    }\n                    else {\n                        this.labelCollections.push('');\n                    }\n                }\n                else {\n                    this.labelCollections.push(label);\n                }\n            }\n        }\n        if (heatMap.paletteSettings.type === 'Gradient' || (heatMap.paletteSettings.type === 'Fixed' &&\n            heatMap.legendSettings.enableSmartLegend)) {\n            this.maxLegendLabelSize = this.getMaxLabelSize();\n            if (heatMap.horizontalGradient && legendSettings.height === '') {\n                this.legendHeight = ((2 * this.legendRectPadding) + this.legendSize + this.maxLegendLabelSize.height).toString();\n            }\n            else if (!heatMap.horizontalGradient && legendSettings.width === '' && (legendSettings.textStyle.textOverflow === 'None' ||\n                (heatMap.paletteSettings.type === 'Fixed' && heatMap.legendSettings.enableSmartLegend &&\n                    heatMap.legendSettings.labelDisplayType === 'None'))) {\n                this.legendWidth = ((2 * this.legendRectPadding) + this.legendSize + this.maxLegendLabelSize.width).toString();\n            }\n        }\n        else {\n            this.calculateListLegendBounds(rect);\n        }\n        this.legendHeight = this.legendHeight ? this.legendHeight : heatMap.horizontalGradient ? '50' : '100%';\n        this.legendWidth = this.legendWidth ? this.legendWidth : heatMap.horizontalGradient ?\n            '100%' : heatMap.paletteSettings.type === 'Fixed' && !heatMap.legendSettings.enableSmartLegend ? '70' : '50';\n        this.height = stringToNumber(this.legendHeight, rect.height);\n        this.width = stringToNumber(this.legendWidth, rect.width);\n        if (heatMap.horizontalGradient) {\n            this.height = heatMap.paletteSettings.type === 'Gradient' || heatMap.legendSettings.enableSmartLegend ?\n                this.height < 50 ? 50 : this.height : this.height;\n            if (legendSettings.position === 'Top') {\n                rect.y += this.height;\n            }\n            rect.height -= this.height;\n        }\n        else {\n            this.width = heatMap.paletteSettings.type === 'Gradient' || heatMap.legendSettings.enableSmartLegend ?\n                this.width < 50 ? 50 : this.width : this.width;\n            if (legendSettings.position === 'Left') {\n                rect.x += this.width;\n            }\n            rect.width -= this.width;\n        }\n    };\n    Legend.prototype.calculateListLegendBounds = function (rect) {\n        var heatMap = this.heatMap;\n        this.listWidth = 0;\n        this.listHeight = 0;\n        this.currentPage = 1;\n        var padding = 10; // padding of paging elements\n        if (heatMap.horizontalGradient) {\n            for (var i = 0; i < heatMap.colorCollection.length; i++) {\n                var size = 0;\n                if (heatMap.legendSettings.showLabel) {\n                    var text = this.labelCollections[i];\n                    size = measureText(text, heatMap.legendSettings.textStyle).width;\n                }\n                var perListWidth = this.legendSize + this.labelPadding + size + this.listInterval;\n                this.listWidth += perListWidth;\n            }\n            this.listWidth += this.listInterval + padding;\n            if (this.legendWidth === '') {\n                this.legendWidth = this.listWidth > rect.width ? rect.width.toString() : this.listWidth.toString();\n            }\n            if (this.legendHeight === '') {\n                this.numberOfRows = Math.ceil(this.listWidth / stringToNumber(this.legendWidth, rect.width));\n                this.numberOfRows = this.numberOfRows > 3 ? 3 : this.numberOfRows;\n                this.legendHeight = (this.listWidth > rect.width || this.listWidth > stringToNumber(this.legendWidth, rect.width)) &&\n                    this.numberOfRows > 3 ? (((this.legendSize + this.listInterval) * this.numberOfRows) + this.legendRectPadding +\n                    parseInt(heatMap.legendSettings.textStyle.size, 10) + padding).toString() :\n                    (((this.legendSize + this.listInterval) * this.numberOfRows) + this.legendRectPadding).toString();\n            }\n        }\n        else {\n            this.listHeight = ((this.legendSize + this.listInterval) * heatMap.colorCollection.length) + this.listInterval;\n            if (this.legendHeight === '') {\n                this.legendHeight = this.listHeight > rect.height ? rect.height.toString() : this.listHeight.toString();\n            }\n            if (this.legendWidth === '' && heatMap.legendSettings.textStyle.textOverflow !== 'Trim') {\n                this.maxLegendLabelSize = this.getMaxLabelSize();\n                this.legendWidth = ((2 * this.legendRectPadding) + this.legendSize + this.labelPadding +\n                    this.maxLegendLabelSize.width).toString();\n            }\n        }\n        if (stringToNumber(this.legendHeight, rect.height) < 50) {\n            this.legendHeight = '50';\n        }\n        if (stringToNumber(this.legendWidth, rect.width) < 70) {\n            this.legendWidth = '70';\n        }\n    };\n    Legend.prototype.getMaxLabelSize = function () {\n        var heatMap = this.heatMap;\n        this.maxLegendLabelSize = new Size(0, 0);\n        if (!heatMap.legendSettings.showLabel || (heatMap.horizontalGradient && heatMap.paletteSettings.type === 'Fixed' &&\n            !heatMap.legendSettings.enableSmartLegend) || (heatMap.paletteSettings.type === 'Fixed' &&\n            heatMap.legendSettings.labelDisplayType === 'None')) {\n            return this.maxLegendLabelSize;\n        }\n        else {\n            var labelSize = this.maxLegendLabelSize;\n            for (var i = 0; i < heatMap.legendColorCollection.length; i++) {\n                var size = measureText(this.labelCollections[i], heatMap.legendSettings.textStyle);\n                labelSize.width = (labelSize.width > size.width) ? labelSize.width : size.width;\n                labelSize.height = (labelSize.height > size.height) ? labelSize.height : size.height;\n            }\n            return labelSize;\n        }\n    };\n    /**\n     * @private\n     */\n    Legend.prototype.calculateLegendSize = function (rect, legendTop) {\n        var heatMap = this.heatMap;\n        var legendSettings = heatMap.legendSettings;\n        var left;\n        var top;\n        var padding = 10; // inner padding for axis title and axil labels\n        var alignment = legendSettings.alignment;\n        var height = stringToNumber(this.legendHeight, rect.height);\n        var width = stringToNumber(this.legendWidth, rect.width);\n        var axis = heatMap.axisCollections;\n        var axisTitlePadding = 0;\n        if (heatMap.horizontalGradient) {\n            width = width > rect.width ? rect.width : width;\n            height = heatMap.paletteSettings.type === 'Gradient' || heatMap.legendSettings.enableSmartLegend ?\n                height > 50 ? height : 50 : this.height;\n            left = alignment === 'Near' ? rect.x : alignment === 'Far' ? rect.x + rect.width - width :\n                rect.x + (rect.width / 2) - (width / 2);\n            if (heatMap.xAxis.title.text !== '') {\n                axisTitlePadding = measureText(heatMap.xAxis.title.text, heatMap.xAxis.textStyle).height + padding;\n            }\n            var axisHeight = axis[0].opposedPosition ? 0 : sum(axis[0].xAxisMultiLabelHeight) + axis[0].maxLabelSize.height +\n                axisTitlePadding + padding;\n            top = legendSettings.position === 'Top' ? heatMap.titleSettings.text ? legendTop :\n                heatMap.margin.top : rect.y + rect.height + axisHeight;\n        }\n        else {\n            height = height > rect.height ? rect.height : height;\n            width = heatMap.paletteSettings.type === 'Gradient' || heatMap.legendSettings.enableSmartLegend ?\n                width > 50 ? width : 50 : width;\n            top = alignment === 'Near' ? rect.y : alignment === 'Far' ? rect.y + rect.height - height :\n                rect.y + (rect.height / 2) - (height / 2);\n            if (heatMap.yAxis.title.text !== '') {\n                axisTitlePadding = measureText(heatMap.yAxis.title.text, heatMap.yAxis.textStyle).height + padding;\n            }\n            var axisWidth = axis[1].opposedPosition ? sum(axis[1].yAxisMultiLabelHeight) +\n                axis[1].maxLabelSize.width + axisTitlePadding + 2 * padding : 0;\n            left = legendSettings.position === 'Right' ? rect.x + rect.width + axisWidth : heatMap.margin.left;\n        }\n        this.legendGroup = new Rect(left, top, width, height);\n        this.calculateGradientScale(this.legendGroup);\n    };\n    // calculating number of lists per page\n    Legend.prototype.measureListLegendBound = function (rect) {\n        var heatMap = this.heatMap;\n        var padding = 15; // padding of paging element\n        this.numberOfPages = 1;\n        if (heatMap.horizontalGradient) {\n            if (this.listWidth > this.width) {\n                this.numberOfRows = Math.ceil(this.listWidth / this.width);\n                this.listHeight = ((this.legendSize + this.listInterval) * this.numberOfRows);\n                this.listPerPage = this.numberOfRows <= 3 ? this.numberOfRows : Math.ceil((this.height - padding -\n                    parseInt(heatMap.legendSettings.textStyle.size, 10) -\n                    this.legendRectPadding) / (this.legendSize + this.listInterval));\n                this.numberOfPages = Math.ceil(this.numberOfRows / this.listPerPage);\n            }\n            else {\n                this.listPerPage = 1;\n            }\n        }\n        else {\n            if (this.listHeight > rect.height || this.listHeight > this.height) {\n                var maxHeight = stringToNumber(this.legendHeight, rect.height);\n                maxHeight = maxHeight > rect.height ? rect.height : maxHeight;\n                this.listPerPage = Math.floor(maxHeight / (this.legendSize + this.listInterval) - 1);\n                this.numberOfPages = Math.max(1, Math.ceil(heatMap.colorCollection.length / this.listPerPage));\n            }\n            else {\n                this.listPerPage = heatMap.colorCollection.length;\n                this.legendHeight = this.listHeight.toString();\n            }\n        }\n    };\n    Legend.prototype.renderPagingElements = function () {\n        var heatMap = this.heatMap;\n        if (this.numberOfPages > 1) {\n            this.navigationCollections = [];\n            this.legend.appendChild(this.paginggroup);\n            var iconSize = 10;\n            var rightArrowX = this.legendGroup.x + this.legendGroup.width - iconSize;\n            var rightArrowY = this.legendGroup.y + this.legendGroup.height - iconSize;\n            var text = this.currentPage + '/' + this.numberOfPages;\n            var textSize = measureText(text, heatMap.legendSettings.textStyle);\n            var textX = rightArrowX - textSize.width - 15;\n            var textBasic = new TextBasic(textX, rightArrowY, 'start', text, 0, 'translate(0,0)', 'middle');\n            var options = new TextOption(heatMap.element.id + '_paging', textBasic, heatMap.legendSettings.textStyle, heatMap.legendSettings.textStyle.color || heatMap.themeStyle.legendLabel);\n            this.drawSvgCanvas.createText(options, this.paginggroup, text);\n            if (Browser.isIE && !heatMap.enableCanvasRendering) {\n                this.paginggroup.lastChild.setAttribute('dy', '0.6ex');\n            }\n            this.pagingRect = new Rect(textX, rightArrowY - textSize.height / 2, textSize.width, textSize.height);\n            var pagingTextRect = new RectOption(heatMap.element.id + '_pagingText', 'none', { color: 'transparent', width: 0 }, 1, this.pagingRect);\n            this.drawSvgCanvas.drawRectangle(pagingTextRect, this.paginggroup);\n            var rightArrowRect = new RectOption(heatMap.element.id + '_rightArrow', 'none', { color: 'transparent', width: 0 }, 1, new Rect(rightArrowX - iconSize, rightArrowY - iconSize / 2, iconSize, iconSize));\n            this.drawSvgCanvas.drawRectangle(rightArrowRect, this.paginggroup);\n            var rightArrow = 'M' + ' ' + (rightArrowX) + ' ' + rightArrowY + ' ' +\n                'L' + ' ' + (rightArrowX - iconSize) + ' ' + (rightArrowY - iconSize / 2) + ' ' + 'L' + ' ' +\n                (rightArrowX - iconSize) + ' ' + (rightArrowY + (iconSize / 2)) + 'Z';\n            var leftX = textX - 15;\n            var leftArrow = 'M' + ' ' + leftX + ' ' + rightArrowY + ' ' +\n                'L' + ' ' + (leftX + iconSize) + ' ' + (rightArrowY - iconSize / 2) + ' ' + 'L' + ' ' +\n                (leftX + iconSize) + ' ' + (rightArrowY + (iconSize / 2)) + 'Z';\n            var leftArrowRect = new RectOption(heatMap.element.id + '_leftArrow', 'none', { color: 'transparent', width: 0 }, 1, new Rect(leftX, rightArrowY - iconSize / 2, iconSize, iconSize));\n            this.drawSvgCanvas.drawRectangle(leftArrowRect, this.paginggroup);\n            var leftOption = new PathOption(heatMap.element.id + '_Legend_leftarrow', 'gray', 0.01, '#A0A0A0', 1, '0,0', leftArrow);\n            var rightOption = new PathOption(heatMap.element.id + '_Legend_rightarrow', 'gray', 0.01, '#A0A0A0', 1, '0,0', rightArrow);\n            this.navigationCollections.push(rightArrowRect);\n            this.navigationCollections.push(leftArrowRect);\n            if (!heatMap.enableCanvasRendering) {\n                var arrow = heatMap.renderer.drawPath(leftOption);\n                var rightarrow = heatMap.renderer.drawPath(rightOption);\n                this.paginggroup.appendChild(arrow);\n                this.paginggroup.appendChild(rightarrow);\n            }\n            else {\n                var canvasTranslate = void 0;\n                heatMap.canvasRenderer.drawPath(leftOption, canvasTranslate);\n                heatMap.canvasRenderer.drawPath(rightOption, canvasTranslate);\n            }\n        }\n    };\n    Legend.prototype.calculateGradientScale = function (scale) {\n        var heatMap = this.heatMap;\n        var padding = 10; // padding between legend bounds and gradient scale\n        var left;\n        var top;\n        var height;\n        var width;\n        if (heatMap.paletteSettings.type === 'Fixed' && !heatMap.legendSettings.enableSmartLegend) {\n            this.measureListLegendBound(heatMap.initialClipRect);\n        }\n        if (heatMap.horizontalGradient) {\n            left = scale.x + padding;\n            top = scale.y + this.legendRectPadding;\n            width = heatMap.paletteSettings.type === 'Fixed' && !heatMap.legendSettings.enableSmartLegend ?\n                scale.width - (2 * this.listInterval) : scale.width - 2 * padding;\n            height = heatMap.paletteSettings.type === 'Fixed' && !heatMap.legendSettings.enableSmartLegend ?\n                (this.legendSize + this.listInterval) * this.listPerPage - this.listInterval : this.gradientScaleSize;\n        }\n        else {\n            left = scale.x + this.legendRectPadding;\n            top = scale.y + padding;\n            width = (heatMap.paletteSettings.type === 'Fixed' && !heatMap.legendSettings.enableSmartLegend) ?\n                scale.width - padding : this.gradientScaleSize;\n            height = heatMap.paletteSettings.type === 'Fixed' && !heatMap.legendSettings.enableSmartLegend ?\n                (this.legendSize + this.listInterval) * this.listPerPage - this.listInterval : scale.height - 2 * padding;\n        }\n        this.legendRectScale = new Rect(left, top, width, height);\n        if (heatMap.paletteSettings.type === 'Gradient' || heatMap.paletteSettings.type === 'Fixed' &&\n            heatMap.legendSettings.enableSmartLegend) {\n            this.calculateColorAxisGrid(this.legendRectScale);\n        }\n    };\n    Legend.prototype.calculateColorAxisGrid = function (legendRect) {\n        var heatMap = this.heatMap;\n        var rect = this.legendRectScale;\n        var legendPart;\n        var text;\n        var maxTextWrapLength = 0;\n        this.segmentCollections = [];\n        this.textWrapCollections = [];\n        var pathX1;\n        var pathY1;\n        var colorCollection = heatMap.paletteSettings.type === 'Gradient' ?\n            heatMap.legendColorCollection : heatMap.colorCollection;\n        var minValue = heatMap.bubbleSizeWithColor ? heatMap.minColorValue : heatMap.dataSourceMinValue;\n        var maxValue = heatMap.bubbleSizeWithColor ? heatMap.maxColorValue : heatMap.dataSourceMaxValue;\n        this.legendMinValue = colorCollection[0].value > minValue ? minValue : colorCollection[0].value;\n        this.legendMaxValue = colorCollection[colorCollection.length - 1].value < maxValue ? maxValue :\n            colorCollection[colorCollection.length - 1].value;\n        if (heatMap.paletteSettings.type === 'Gradient') {\n            for (var index = 0; index < colorCollection.length; index++) {\n                var value = ((colorCollection[index].value - this.legendMinValue) /\n                    (this.legendMaxValue - this.legendMinValue)) * 100;\n                value = isNaN(value) ? 0 : value;\n                if (!heatMap.horizontalGradient) {\n                    legendPart = rect.height / 100;\n                    pathY1 = legendRect.y + (legendPart * value);\n                    this.segmentCollections.push(pathY1);\n                }\n                else {\n                    legendPart = rect.width / 100;\n                    pathX1 = legendRect.x + (legendPart * value);\n                    this.segmentCollections.push(pathX1);\n                }\n            }\n        }\n        var textWrapWidth;\n        if (heatMap.horizontalGradient) {\n            for (var i = 0; i < colorCollection.length; i++) {\n                if (heatMap.paletteSettings.type === 'Gradient') {\n                    var previousSegmentWidth = (this.segmentCollections[i] - this.segmentCollections[i - 1]) / 2;\n                    var nextSegmentWidth = (this.segmentCollections[i + 1] - this.segmentCollections[i]) / 2;\n                    if (i === colorCollection.length - 1) {\n                        textWrapWidth = previousSegmentWidth;\n                    }\n                    else if (i === 0) {\n                        textWrapWidth = nextSegmentWidth;\n                    }\n                    else {\n                        textWrapWidth = previousSegmentWidth < nextSegmentWidth ? previousSegmentWidth : nextSegmentWidth;\n                    }\n                }\n                else {\n                    var width = this.legendRectScale.width / heatMap.colorCollection.length;\n                    textWrapWidth = heatMap.legendSettings.labelDisplayType === 'Edge' ? width : width / 2;\n                }\n                this.textWrapCollections.push(textWrapWidth);\n                text = getTitle(this.labelCollections[i], heatMap.legendSettings.textStyle, textWrapWidth);\n                maxTextWrapLength = text.length > maxTextWrapLength ? text.length : maxTextWrapLength;\n            }\n            if (heatMap.legendSettings.position === 'Bottom') {\n                heatMap.initialClipRect.height -= (this.maxLegendLabelSize.height * (maxTextWrapLength - 1));\n                this.legendGroup.y -= (this.maxLegendLabelSize.height * (maxTextWrapLength - 1));\n                this.legendRectScale.y = this.legendGroup.y + this.legendRectPadding;\n                this.legendGroup.height = parseInt(this.legendHeight, 10) + (this.maxLegendLabelSize.height * (maxTextWrapLength - 1));\n            }\n            else {\n                heatMap.initialClipRect.y += (this.maxLegendLabelSize.height * (maxTextWrapLength - 1));\n                heatMap.initialClipRect.height -= (this.maxLegendLabelSize.height * (maxTextWrapLength - 1));\n                this.legendRectScale.y = this.legendGroup.y + this.legendRectPadding;\n                this.legendGroup.height = parseInt(this.legendHeight, 10) + (this.maxLegendLabelSize.height * (maxTextWrapLength - 1));\n            }\n        }\n    };\n    Legend.prototype.renderColorAxisGrid = function (legendRect) {\n        var heatMap = this.heatMap;\n        var legendElement;\n        var pathX1;\n        var pathY1;\n        var pathX2;\n        var pathY2;\n        if (!heatMap.enableCanvasRendering) {\n            legendElement = this.heatMap.renderer.createGroup({ id: heatMap.element.id + '_ColorAxis_Grid' });\n        }\n        for (var i = 0; i < heatMap.legendColorCollection.length; i++) {\n            if (!heatMap.horizontalGradient) {\n                pathX1 = legendRect.x;\n                pathY1 = pathY2 = this.segmentCollections[i];\n                pathX2 = legendRect.x + legendRect.width;\n            }\n            else {\n                pathX1 = pathX2 = this.segmentCollections[i];\n                pathY1 = legendRect.y;\n                pathY2 = legendRect.y + legendRect.height;\n            }\n            var direction = new Line(pathX1, pathY1, pathX2, pathY2);\n            var line = new LineOption(this.heatMap.element.id + '_ColorAxis_Grid' + i, direction, '#EEEEEE', 1);\n            this.drawSvgCanvas.drawLine(line, legendElement);\n            if (!heatMap.enableCanvasRendering) {\n                this.legend.appendChild(legendElement);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Legend.prototype.renderLegendLabelTooltip = function (e, pageX, pageY) {\n        if (e.target.id.indexOf('_Legend_Label') !== -1 && e.target.textContent.indexOf('...') > -1) {\n            var targetId = e.target.id.split(this.heatMap.element.id + '_Legend_Label');\n            if (targetId.length === 2) {\n                var index = void 0;\n                if (targetId[1].length === 1 || this.heatMap.legendSettings.textStyle.textOverflow === 'Trim') {\n                    index = parseInt(targetId[1], 10);\n                }\n                else {\n                    index = parseInt(targetId[1].substring(0, targetId[1].length - 1), 10);\n                }\n                showTooltip(this.labelCollections[index], pageX, pageY, this.heatMap.element.offsetWidth, this.heatMap.element.id + '_LegendLabel_Tooltip', getElement(this.heatMap.element.id + '_Secondary_Element'), null, this.heatMap);\n                document.getElementById(this.heatMap.element.id + '_LegendLabel_Tooltip').style.visibility = 'visible';\n            }\n        }\n        else {\n            var element = document.getElementById(this.heatMap.element.id + '_LegendLabel_Tooltip');\n            if (element) {\n                element.style.visibility = 'hidden';\n            }\n        }\n    };\n    Legend.prototype.calculateListPerPage = function (rect) {\n        var heatMap = this.heatMap;\n        if (heatMap.horizontalGradient) {\n            this.lastList = [];\n            var legendX = rect.x;\n            var legendY = rect.y;\n            var size = 0;\n            var division = 0;\n            var labelX = 0;\n            var labelY = 0;\n            var interval = 20;\n            var i = void 0;\n            var legendSize = 10;\n            var padding = 5;\n            this.labelXCollections = [];\n            this.labelYCollections = [];\n            this.legendXCollections = [];\n            this.legendYCollections = [];\n            for (i = 0; i < heatMap.colorCollection.length; i++) {\n                if (heatMap.legendSettings.showLabel) {\n                    var text = this.labelCollections[i];\n                    size = measureText(text, heatMap.legendSettings.textStyle).width;\n                }\n                labelX = legendX + legendSize + padding;\n                labelY = legendY + padding;\n                var maxWidth = heatMap.legendSettings.showLabel ? labelX + size : legendX + this.legendSize + this.listInterval;\n                if (i !== 0 && maxWidth > this.legendGroup.width + this.legendGroup.x - this.listInterval) {\n                    division += 1;\n                    legendX = rect.x;\n                    legendY = rect.y + (division * interval);\n                    labelX = legendX + legendSize + padding;\n                    labelY = legendY + padding;\n                    if (division % (this.listPerPage) === 0) {\n                        this.lastList.push(i);\n                        legendY = rect.y;\n                        labelY = legendY + padding;\n                        division = 0;\n                    }\n                }\n                this.labelXCollections.push(labelX);\n                this.labelYCollections.push(labelY);\n                this.legendXCollections.push(legendX);\n                this.legendYCollections.push(legendY);\n                legendX = legendX + this.legendSize + this.labelPadding + size + this.listInterval;\n            }\n            this.lastList.push(i);\n            this.numberOfPages = this.lastList.length;\n        }\n    };\n    Legend.prototype.renderListLegendMode = function (rect, translate) {\n        var heatMap = this.heatMap;\n        var legendSize = 10;\n        var tempBorder = {\n            color: 'transparent', width: 0,\n        };\n        var padding = 5; // padding for legend label from top\n        this.legendLabelTooltip = [];\n        var listRect;\n        var size = new Size(0, 0);\n        var division = 0;\n        var labelX = 0;\n        var labelY = 0;\n        var legendX = rect.x;\n        var legendY = rect.y;\n        if (translate) {\n            this.renderPagingElements();\n        }\n        var x;\n        var y;\n        var textWrapWidth = this.legendGroup.width - (this.legendSize +\n            this.legendRectPadding + this.labelPadding);\n        if (!heatMap.horizontalGradient) {\n            x = (this.currentPage * (this.listPerPage)) - (this.listPerPage);\n            y = x + this.listPerPage;\n            y = y < heatMap.colorCollection.length ? y : heatMap.colorCollection.length;\n        }\n        else {\n            x = this.currentPage === 1 ? 0 : this.lastList[this.currentPage - 2];\n            y = this.lastList[this.currentPage - 1];\n        }\n        for (var i = x; i < y; i++) {\n            if (heatMap.legendSettings.showLabel) {\n                var text = this.labelCollections[i];\n                size = measureText(text, heatMap.legendSettings.textStyle);\n            }\n            var legendEventArgs = {\n                cancel: false, text: this.labelCollection[i], name: 'legendRender',\n            };\n            if (heatMap.horizontalGradient) {\n                legendX = this.legendXCollections[i];\n                legendY = this.legendYCollections[i];\n                labelX = this.labelXCollections[i];\n                labelY = this.labelYCollections[i];\n            }\n            labelX = legendX + this.legendSize + this.labelPadding;\n            labelY = legendY + padding;\n            this.heatMap.trigger('legendRender', legendEventArgs);\n            if (translate && heatMap.rendering && this.legendRange.length <= heatMap.colorCollection.length) {\n                var rectPosition = new LegendRange(legendX, legendY, legendSize, legendSize, heatMap.colorCollection[i].value, true, this.currentPage);\n                rectPosition.visible = !isNullOrUndefined(this.visibilityCollections[i]) ? this.visibilityCollections[i] : true;\n                if (!legendEventArgs.cancel) {\n                    this.legendRange.push(rectPosition);\n                }\n                else {\n                    var rectPosition_1 = new LegendRange(legendX, legendY, 0, 0, heatMap.colorCollection[i].value, true, this.currentPage);\n                    this.legendRange.push(rectPosition_1);\n                }\n                if (heatMap.legendSettings.showLabel) {\n                    var textPosition = new LegendRange(labelX, (labelY - size.height / 2), size.width, size.height, heatMap.colorCollection[i].value, true, this.currentPage);\n                    textPosition.visible = !isNullOrUndefined(this.visibilityCollections[i]) ? this.visibilityCollections[i] : true;\n                    this.legendTextRange.push(textPosition);\n                }\n            }\n            if (!legendEventArgs.cancel) {\n                if (heatMap.legendSettings.showLabel) {\n                    var text = getTitle(this.labelCollections[i], heatMap.legendSettings.textStyle, textWrapWidth);\n                    if (text[0].indexOf('...') !== -1 && heatMap.enableCanvasRendering) {\n                        this.legendLabelTooltip.push(new CanvasTooltip(this.labelCollections[i], new Rect(labelX, labelY, size.width, size.height)));\n                    }\n                    var textBasic = new TextBasic(labelX, labelY, 'start', text, 0, 'translate(0,0)', 'middle');\n                    var options = new TextOption(heatMap.element.id + '_Legend_Label' + i, textBasic, heatMap.legendSettings.textStyle, heatMap.legendSettings.textStyle.color || heatMap.themeStyle.legendLabel);\n                    options.fill = heatMap.legendOnLoad ? options.fill : this.legendRange[i].visible ? options.fill : '#D3D3D3';\n                    this.drawSvgCanvas.createText(options, this.translategroup, text[0]);\n                    if (Browser.isIE && !heatMap.enableCanvasRendering) {\n                        this.translategroup.lastChild.setAttribute('dy', '0.6ex');\n                    }\n                }\n                listRect = new Rect(legendX, legendY, legendSize, legendSize);\n                var listColor = heatMap.legendOnLoad ? heatMap.colorCollection[i].color :\n                    this.legendRange[i].visible ? heatMap.colorCollection[i].color : '#D3D3D3';\n                var rectItems = new RectOption(heatMap.element.id + '_legend_list' + i, listColor, tempBorder, 1, listRect);\n                this.drawSvgCanvas.drawRectangle(rectItems, this.translategroup);\n                heatMap.horizontalGradient ? legendX = legendX + this.legendSize + this.labelPadding + size.width + this.listInterval :\n                    legendY += this.legendSize + this.listInterval;\n            }\n        }\n        if (!heatMap.enableCanvasRendering) {\n            this.legendGroup.height = this.legendGroup.height > 0 ? this.legendGroup.height : 0;\n            this.legendGroup.width = this.legendGroup.width > 0 ? this.legendGroup.width : 0;\n            var clippath = heatMap.renderer.createClipPath({ id: heatMap.element.id + '_LegendScale_ClipPath' });\n            var clipRect = heatMap.renderer.drawRectangle(this.legendGroup);\n            clippath.appendChild(clipRect);\n            this.translategroup.appendChild(clippath);\n            this.translategroup.setAttribute('style', 'clip-path:url(#' + clippath.id + ')');\n            this.legendScale.appendChild(this.translategroup);\n            heatMap.svgObject.appendChild(this.legend);\n        }\n    };\n    /**\n     * @private\n     */\n    Legend.prototype.translatePage = function (heatMap, page, isNext) {\n        var padding = 5;\n        if ((isNext && page >= 1 && page < this.numberOfPages) || (!isNext && page > 1 && page <= this.numberOfPages)) {\n            if (isNext) {\n                this.currentPage += 1;\n                this.legendRect.y += this.legendRect.height;\n            }\n            else {\n                this.currentPage -= 1;\n                this.legendRect.y -= this.legendRect.height;\n            }\n            if (!heatMap.enableCanvasRendering) {\n                this.paginggroup.removeChild(this.paginggroup.firstChild);\n                while (this.translategroup.childNodes.length) {\n                    this.translategroup.removeChild(this.translategroup.firstChild);\n                }\n            }\n            else {\n                var ctx = heatMap.canvasRenderer.ctx;\n                ctx.fillRect(this.legendRectScale.x - padding, this.legendRectScale.y - padding, this.legendRectScale.width +\n                    padding, this.legendRectScale.height + (2 * padding));\n                ctx.fillRect(this.pagingRect.x, this.pagingRect.y, this.pagingRect.width, this.pagingRect.height);\n            }\n            this.renderListLegendMode(this.legendRectScale, true);\n        }\n        if (heatMap.enableCanvasRendering && heatMap.allowSelection && heatMap.rectSelected) {\n            var ctx = heatMap.secondaryCanvasRenderer.ctx;\n            var position = heatMap.legendSettings.position;\n            var initialRect = heatMap.initialClipRect;\n            var rectX = position === 'Right' ? initialRect.x + initialRect.width : 0;\n            var rectY = position === 'Bottom' ? initialRect.y + initialRect.height : 0;\n            var rectWidth = position === 'Right' ? heatMap.availableSize.width - (initialRect.x +\n                initialRect.width) : position === 'Left' ? initialRect.x : heatMap.availableSize.width;\n            var rectHeight = position === 'Top' ? initialRect.y : position === 'Bottom' ?\n                heatMap.availableSize.height - (initialRect.y + initialRect.height) : heatMap.availableSize.height;\n            ctx.save();\n            ctx.clearRect(rectX, rectY, rectWidth, rectHeight);\n            ctx.restore();\n            var oldCanvas = document.getElementById(heatMap.element.id + '_canvas');\n            var newCanvas = document.getElementById(heatMap.element.id + '_secondary_canvas');\n            var rectImage = oldCanvas.getContext('2d').getImageData(rectX, rectY, rectWidth, rectHeight);\n            newCanvas.getContext('2d').putImageData(rectImage, rectX, rectY);\n            oldCanvas.style.opacity = '0.3';\n        }\n    };\n    /**\n     * To create div container for tooltip which appears on hovering the smart legend.\n     * @param heatmap\n     * @private\n     */\n    Legend.prototype.createTooltipDiv = function (heatMap) {\n        var element = createElement('div', {\n            id: this.heatMap.element.id + 'legendLabelTooltipContainer',\n            styles: 'position:absolute'\n        });\n        this.heatMap.element.appendChild(element);\n    };\n    /**\n     * To render tooltip for smart legend.\n     * @private\n     */\n    Legend.prototype.renderTooltip = function (currentLegendRect) {\n        var heatMap = this.heatMap;\n        var tempTooltipText = [currentLegendRect.label];\n        var offset = null;\n        offset = parseInt(heatMap.legendSettings.textStyle.size, 10) / 2;\n        this.tooltipObject = new tool({\n            offset: offset,\n            theme: heatMap.theme,\n            content: tempTooltipText,\n            location: {\n                x: currentLegendRect.x + (currentLegendRect.width / 2),\n                y: currentLegendRect.y + (currentLegendRect.height / 2)\n            },\n            inverted: heatMap.horizontalGradient ? false : true,\n            areaBounds: {\n                height: this.legendGroup.height + this.legendGroup.y,\n                width: this.legendGroup.width + this.legendGroup.x,\n                x: heatMap.legendSettings.position === 'Right' ? 0 : this.legendGroup.x,\n                y: heatMap.legendSettings.position === 'Top' ? heatMap.titleSettings.text === '' ? this.legendGroup.height -\n                    this.legendGroup.y : this.legendGroup.y : 0\n            }\n        }, '#' + this.heatMap.element.id + 'legendLabelTooltipContainer');\n        this.tooltipObject.element.style.visibility = 'visible';\n    };\n    /**\n     * To create tooltip for smart legend.\n     * @private\n     */\n    Legend.prototype.createTooltip = function (pageX, pageY) {\n        var currentLegendRect;\n        for (var i = 0; i < this.heatMap.colorCollection.length; i++) {\n            var position = this.legendRectPositionCollection[i];\n            if (pageX > position.x && pageX < position.width + position.x &&\n                pageY > position.y && pageY < position.height + position.y) {\n                currentLegendRect = this.legendRectPositionCollection[i];\n                break;\n            }\n        }\n        var ele = document.getElementById(this.heatMap.element.id + 'legendLabelTooltipContainer');\n        if (ele && ele.style.visibility === 'visible' && this.tooltipObject && !this.heatMap.isTouch) {\n            this.tooltipObject.fadeOut();\n            ele.style.visibility = 'hidden';\n        }\n        if (currentLegendRect) {\n            this.renderTooltip(currentLegendRect);\n        }\n    };\n    /**\n     * Toggle the visibility of cells based on legend selection\n     * @private\n     */\n    Legend.prototype.legendRangeSelection = function (index) {\n        var heatMap = this.heatMap;\n        var legendRange = this.legendRange;\n        var padding = 5;\n        var legendBound = this.legendRectScale;\n        heatMap.rangeSelection = true;\n        if (heatMap.enableCanvasRendering) {\n            var ctx = heatMap.canvasRenderer.ctx;\n            if (heatMap.legendSettings.enableSmartLegend) {\n                ctx.fillRect(legendBound.x - padding, legendBound.y - padding, (legendBound.width + this.labelPadding + this.maxLegendLabelSize.width) + padding, legendBound.height + (2 * padding));\n            }\n            else {\n                ctx.fillRect(legendBound.x - padding, legendBound.y - padding, legendBound.width +\n                    padding, legendBound.height + (2 * padding));\n            }\n        }\n        else {\n            if (heatMap.legendSettings.enableSmartLegend) {\n                while (this.legend && this.legend.childNodes.length) {\n                    this.legend.removeChild(this.legend.firstChild);\n                }\n            }\n            else {\n                while (this.translategroup && this.translategroup.childNodes.length) {\n                    this.translategroup.removeChild(this.translategroup.firstChild);\n                }\n            }\n            removeElement(heatMap.heatMapSeries.containerRectObject.id);\n            if (heatMap.cellSettings.showLabel) {\n                removeElement(heatMap.heatMapSeries.containerTextObject.id);\n            }\n        }\n        if (heatMap.legendSettings.enableSmartLegend) {\n            if (heatMap.colorCollection.length !== heatMap.legendColorCollection.length) {\n                if (index === heatMap.legendColorCollection.length - 1) {\n                    heatMap.toggleValue[index - 1].visible = this.visibilityCollections[index - 1] =\n                        legendRange[index - 1].visible = !legendRange[index].visible;\n                }\n                else {\n                    if (index === heatMap.colorCollection.length - 1) {\n                        heatMap.toggleValue[index + 1].visible = this.visibilityCollections[index + 1] =\n                            legendRange[index + 1].visible = !legendRange[index].visible;\n                    }\n                }\n            }\n        }\n        heatMap.toggleValue[index].visible = this.visibilityCollections[index] = legendRange[index].visible = !legendRange[index].visible;\n        heatMap.legendOnLoad = false;\n        if (heatMap.legendSettings.enableSmartLegend) {\n            this.renderSmartLegend();\n            var rectItemsSvg = new Rect(legendBound.x, legendBound.y, legendBound.width, legendBound.height);\n            this.renderLegendLabel(rectItemsSvg);\n        }\n        else {\n            this.renderListLegendMode(this.legendRectScale, false);\n        }\n        heatMap.heatMapSeries.renderRectSeries();\n        heatMap.clearSelection();\n        if (heatMap.enableCanvasRendering && heatMap.allowSelection) {\n            // heatMap.createSvg();\n            // heatMap.refreshBound();\n            // heatMap.createMultiCellDiv(false);\n        }\n    };\n    /**\n     * update visibility collections of legend and series\n     * @private\n     */\n    Legend.prototype.updateLegendRangeCollections = function () {\n        var heatMap = this.heatMap;\n        heatMap.rangeSelection = !heatMap.legendOnLoad ? true : false;\n        this.visibilityCollections = !heatMap.legendOnLoad ? this.visibilityCollections : [];\n        heatMap.toggleValue = !heatMap.legendOnLoad ? heatMap.toggleValue : [];\n        this.legendRange = !heatMap.legendOnLoad ? this.legendRange : [];\n        this.legendTextRange = !heatMap.legendOnLoad ? this.legendTextRange : [];\n    };\n    return Legend;\n}());\nexport { Legend };\n","/**\n * Heat Map Component\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, NotifyPropertyChanges, Internationalization, Complex, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { remove, Event, EventHandler, Touch } from '@syncfusion/ej2-base';\nimport { Browser, isBlazor } from '@syncfusion/ej2-base';\nimport { SvgRenderer, CanvasRenderer } from '@syncfusion/ej2-svg-base';\nimport { Size, stringToNumber, RectOption, Rect, TextBasic, measureText } from './utils/helper';\nimport { DrawSvgCanvas, TextOption, titlePositionX, getTitle, showTooltip, getElement, SelectedCellDetails } from './utils/helper';\nimport { removeElement, CanvasTooltip, getTooltipText } from './utils/helper';\nimport { Margin, Title } from './model/base';\nimport { Theme, getThemeColor } from './model/theme';\nimport { Axis } from './axis/axis';\nimport { AxisHelper } from './axis/axis-helpers';\nimport { Series, CellSettings } from './series/series';\nimport { PaletteSettings, CellColor } from './utils/colorMapping';\nimport { TooltipSettings } from './utils/tooltip';\nimport { TwoDimensional } from './datasource/twodimensional';\nimport { LegendSettings } from '../heatmap/legend/legend';\nvar HeatMap = /** @class */ (function (_super) {\n    __extends(HeatMap, _super);\n    function HeatMap() {\n        /**\n         * The width of the heatmap as a string accepts input as both like '100px' or '100%'.\n         * If specified as '100%, heatmap renders to the full width of its parent element.\n         * @default null\n         */\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** @private */\n        _this.enableCanvasRendering = false;\n        /** @private */\n        _this.isCellTapHold = false;\n        /** @private */\n        _this.selectedCellCount = 0;\n        /** @private */\n        _this.toggleValue = [];\n        /** @private */\n        _this.legendOnLoad = true;\n        /** @private */\n        _this.resizing = false;\n        /** @private */\n        _this.rendering = true;\n        /** @private */\n        _this.horizontalGradient = _this.legendSettings.position === 'Bottom' || _this.legendSettings.position === 'Top';\n        /** @private */\n        _this.multiSelection = false;\n        /** @private */\n        _this.rectSelected = false;\n        /** @private */\n        _this.previousSelectedCellsRect = [];\n        /** @private */\n        _this.multiCellCollection = [];\n        /** @private */\n        _this.selectedMultiCellCollection = [];\n        /** @private */\n        _this.tempMultiCellCollection = [];\n        /**\n         * @private\n         */\n        _this.tooltipCollection = [];\n        /**\n         * @private\n         */\n        _this.isCellData = false;\n        /** @private */\n        _this.isBlazor = false;\n        return _this;\n    }\n    HeatMap.prototype.preRender = function () {\n        this.initPrivateVariable();\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    HeatMap.prototype.initPrivateVariable = function () {\n        this.renderer = new SvgRenderer(this.element.id);\n        this.canvasRenderer = new CanvasRenderer(this.element.id);\n        this.secondaryCanvasRenderer = new CanvasRenderer(this.element.id + '_secondary');\n        this.heatMapAxis = new AxisHelper(this);\n        this.heatMapSeries = new Series(this);\n        this.drawSvgCanvas = new DrawSvgCanvas(this);\n        this.twoDimensional = new TwoDimensional(this);\n        this.cellColor = new CellColor(this);\n        this.tempRectHoverClass = '';\n        this.tempTooltipRectId = '';\n        this.setCulture();\n        this.isBlazor = isBlazor();\n    };\n    /**\n     * Method to set culture for heatmap\n     */\n    HeatMap.prototype.setCulture = function () {\n        this.intl = new Internationalization();\n    };\n    HeatMap.prototype.render = function () {\n        this.updateBubbleHelperProperty();\n        this.trigger('load', { heatmap: (this.isBlazor ? null : this) });\n        this.initAxis();\n        this.processInitData();\n        this.setTheme();\n        this.calculateMaxLength();\n        this.heatMapAxis.calculateVisibleLabels();\n        this.twoDimensional.processDataSource(this.completeAdaptDataSource);\n        this.createSvg();\n        this.cellColor.getColorCollection();\n        this.calculateBounds();\n        this.renderElements();\n        this.appendSvgObject();\n        if (this.tooltipModule) {\n            this.tooltipModule.showHideTooltip(false);\n        }\n    };\n    /**\n     * To re-calculate the datasource while changing datasource property dynamically.\n     * @private\n     */\n    HeatMap.prototype.reRenderDatasource = function () {\n        this.dataSourceMinValue = null;\n        this.dataSourceMaxValue = null;\n        this.processInitData();\n        this.calculateMaxLength();\n        this.heatMapAxis.calculateVisibleLabels();\n        this.twoDimensional.processDataSource(this.completeAdaptDataSource);\n        this.cellColor.getColorCollection();\n        this.calculateBounds();\n    };\n    /**\n     * To process datasource property.\n     * @private\n     */\n    HeatMap.prototype.processInitData = function () {\n        if (this.adaptorModule) {\n            this.adaptorModule.constructDatasource(this.dataSource);\n        }\n        else {\n            this.completeAdaptDataSource = this.dataSource;\n        }\n    };\n    /**\n     * To set render mode of heatmap as SVG or Canvas.\n     * @private\n     */\n    HeatMap.prototype.setRenderMode = function () {\n        if (this.renderingMode === 'Canvas') {\n            this.enableCanvasRendering = true;\n        }\n        else if (this.renderingMode === 'Auto' &&\n            (this.axisCollections[0].axisLabelSize * this.axisCollections[1].axisLabelSize) >= 10000) {\n            this.enableCanvasRendering = true;\n        }\n        else {\n            this.enableCanvasRendering = false;\n        }\n    };\n    /**\n     * To set bubble helper private property.\n     * @private\n     */\n    HeatMap.prototype.updateBubbleHelperProperty = function () {\n        if (this.cellSettings.tileType === 'Bubble' &&\n            (this.cellSettings.bubbleType === 'Size' || this.cellSettings.bubbleType === 'Sector')) {\n            this.legendVisibilityByCellType = false;\n        }\n        else if (this.legendModule && this.legendSettings.visible) {\n            this.legendVisibilityByCellType = true;\n        }\n        if (this.cellSettings.tileType === 'Bubble' && this.cellSettings.bubbleType === 'SizeAndColor') {\n            this.bubbleSizeWithColor = true;\n        }\n        else {\n            this.bubbleSizeWithColor = false;\n        }\n    };\n    HeatMap.prototype.renderElements = function () {\n        this.tooltipCollection = [];\n        this.renderSecondaryElement();\n        this.renderBorder();\n        this.renderTitle();\n        this.heatMapAxis.renderAxes();\n        if (this.tooltipModule && this.showTooltip) {\n            this.tooltipModule.tooltipObject = null;\n            this.tooltipModule.createTooltipDiv(this);\n        }\n        this.heatMapSeries.renderRectSeries();\n        if (this.legendModule && this.legendSettings.visible\n            && this.legendVisibilityByCellType) {\n            this.legendModule.renderLegendItems();\n            if (this.paletteSettings.type === 'Fixed' && this.legendSettings.enableSmartLegend &&\n                this.legendSettings.labelDisplayType === 'None') {\n                this.legendModule.createTooltipDiv(this);\n            }\n        }\n    };\n    /**\n     * Get component name\n     */\n    HeatMap.prototype.getModuleName = function () {\n        return 'heatmap';\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @private\n     */\n    HeatMap.prototype.getPersistData = function () {\n        return '';\n    };\n    HeatMap.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var renderer = false;\n        var refreshBounds = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'renderingMode':\n                    this.rendering = false;\n                    renderer = true;\n                    break;\n                case 'cellSettings':\n                    this.updateBubbleHelperProperty();\n                    if (this.legendModule && ((newProp.cellSettings.tileType !==\n                        oldProp.cellSettings.tileType) || (newProp.cellSettings.bubbleType !== oldProp.cellSettings.bubbleType))) {\n                        this.legendOnLoad = true;\n                        this.legendModule.updateLegendRangeCollections();\n                    }\n                    this.reRenderDatasource();\n                    refreshBounds = true;\n                    break;\n                case 'showTooltip':\n                    refreshBounds = true;\n                    break;\n                case 'dataSource':\n                    this.isCellData = false;\n                    this.updateBubbleHelperProperty();\n                    if (this.legendVisibilityByCellType) {\n                        this.legendOnLoad = true;\n                        this.legendModule.updateLegendRangeCollections();\n                    }\n                    this.reRenderDatasource();\n                    renderer = true;\n                    break;\n                case 'titleSettings':\n                case 'width':\n                case 'height':\n                case 'margin':\n                    refreshBounds = true;\n                    break;\n                case 'legendSettings':\n                    this.updateBubbleHelperProperty();\n                    if (this.legendVisibilityByCellType && (((newProp.legendSettings.visible !== oldProp.legendSettings.visible) ||\n                        (newProp.legendSettings.enableSmartLegend !== oldProp.legendSettings.enableSmartLegend)))) {\n                        this.legendOnLoad = true;\n                        this.legendModule.updateLegendRangeCollections();\n                    }\n                    else {\n                        this.legendOnLoad = false;\n                    }\n                    refreshBounds = true;\n                    break;\n                case 'yAxis':\n                case 'xAxis':\n                    this.updateBubbleHelperProperty();\n                    if (this.legendVisibilityByCellType) {\n                        this.legendOnLoad = true;\n                        this.legendModule.updateLegendRangeCollections();\n                    }\n                    this.reRenderDatasource();\n                    refreshBounds = true;\n                    break;\n                case 'paletteSettings':\n                    this.updateBubbleHelperProperty();\n                    if (this.legendVisibilityByCellType) {\n                        this.legendOnLoad = true;\n                        this.legendModule.updateLegendRangeCollections();\n                    }\n                    this.cellColor.getColorCollection();\n                    this.calculateBounds();\n                    renderer = true;\n                    break;\n                case 'theme':\n                    this.setTheme();\n                    renderer = true;\n                    break;\n                case 'tooltipSettings':\n                    if (this.tooltipModule) {\n                        this.tooltipModule.tooltipObject.fill = this.tooltipSettings.fill;\n                        this.tooltipModule.tooltipObject.border = this.tooltipSettings.border;\n                        this.tooltipModule.tooltipObject.textStyle = this.tooltipSettings.textStyle;\n                        this.tooltipModule.tooltipObject.template = this.tooltipSettings.template;\n                        this.tooltipModule.tooltipObject.refresh();\n                    }\n                    break;\n            }\n        }\n        if (!refreshBounds && renderer) {\n            this.createSvg();\n            this.renderElements();\n            this.appendSvgObject();\n            this.trigger('created');\n            this.clearSelection();\n        }\n        else if (refreshBounds) {\n            this.createSvg();\n            this.refreshBound();\n            this.appendSvgObject();\n            this.trigger('created');\n        }\n        if (this.allowSelection && this.rectSelected) {\n            this.clearSelection();\n        }\n        this.rendering = true;\n    };\n    /**\n     * create svg or canvas element\n     * @private\n     */\n    HeatMap.prototype.createSvg = function () {\n        this.removeSvg();\n        this.setRenderMode();\n        this.calculateSize();\n        if (!this.enableCanvasRendering) {\n            this.svgObject = this.renderer.createSvg({\n                id: this.element.id + '_svg',\n                width: this.availableSize.width,\n                height: this.availableSize.height\n            });\n            if (this.cellSettings.border.width.toString() === '0' && this.cellSettings.tileType === 'Rect') {\n                this.svgObject.setAttribute('shape-rendering', 'crispEdges');\n            }\n        }\n        else {\n            this.svgObject = this.canvasRenderer.createCanvas({\n                id: this.element.id + '_canvas',\n                width: this.availableSize.width,\n                height: this.availableSize.height\n            });\n            if (this.allowSelection) {\n                this.createMultiCellDiv(true);\n            }\n        }\n    };\n    /**\n     *  To Remove the SVG.\n     * @private\n     */\n    HeatMap.prototype.removeSvg = function () {\n        if (document.getElementById(this.element.id + '_Secondary_Element')) {\n            remove(document.getElementById(this.element.id + '_Secondary_Element'));\n        }\n        if (document.getElementById(this.element.id + 'Celltooltipcontainer')) {\n            remove(document.getElementById(this.element.id + 'Celltooltipcontainer'));\n        }\n        if (document.getElementById(this.element.id + 'legendLabelTooltipContainer')) {\n            remove(document.getElementById(this.element.id + 'legendLabelTooltipContainer'));\n        }\n        if (document.getElementById(this.element.id + '_Multi_CellSelection_Canvas')) {\n            remove(document.getElementById(this.element.id + '_Multi_CellSelection_Canvas'));\n        }\n        if (document.getElementById(this.element.id + '_CellSelection_Container')) {\n            remove(document.getElementById(this.element.id + '_CellSelection_Container'));\n        }\n        if (this.svgObject) {\n            var svgElement = document.getElementById(this.svgObject.id);\n            if (svgElement) {\n                while (this.svgObject.childNodes.length) {\n                    this.svgObject.removeChild(this.svgObject.firstChild);\n                }\n                remove(this.svgObject);\n            }\n        }\n    };\n    HeatMap.prototype.renderSecondaryElement = function () {\n        var tooltipDiv = this.createElement('div');\n        tooltipDiv.id = this.element.id + '_Secondary_Element';\n        this.element.appendChild(tooltipDiv);\n        var divElement = this.createElement('div', {\n            id: this.element.id + '_CellSelection_Container',\n            styles: 'position:absolute; z-index: 2 ; top:' + this.initialClipRect.y + 'px' + '; left:' + this.initialClipRect.x + 'px',\n        });\n        this.element.appendChild(divElement);\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return{ModuleDeclaration[]}\n     * @private\n     */\n    HeatMap.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.showTooltip) {\n            modules.push({\n                member: 'Tooltip',\n                args: [this]\n            });\n        }\n        if (this.legendSettings) {\n            modules.push({\n                member: 'Legend',\n                args: [this]\n            });\n        }\n        if (this.dataSource) {\n            modules.push({\n                member: 'Adaptor',\n                args: [this]\n            });\n        }\n        return modules;\n    };\n    /**\n     * To destroy the widget\n     * @method destroy\n     * @return {void}.\n     * @member of Heatmap\n     */\n    HeatMap.prototype.destroy = function () {\n        this.unWireEvents();\n        _super.prototype.destroy.call(this);\n        this.element.innerHTML = '';\n        this.element.classList.remove('e-heatmap');\n    };\n    /**\n     * Applies all the pending property changes and render the component again.\n     * @method destroy\n     * @return {void}.\n     */\n    HeatMap.prototype.refresh = function () {\n        _super.prototype.refresh.call(this);\n        this.element.classList.add('e-heatmap');\n    };\n    /**\n     * Appending svg object to the element\n     * @private\n     */\n    HeatMap.prototype.appendSvgObject = function () {\n        if (this.enableCanvasRendering && this.allowSelection) {\n            this.createMultiCellDiv(false);\n        }\n        else {\n            this.element.appendChild(this.svgObject);\n        }\n    };\n    HeatMap.prototype.renderBorder = function () {\n        this.border = {\n            width: 0\n        };\n        var width = 0;\n        var rect = new RectOption(this.element.id + '_HeatmapBorder', this.themeStyle.background, this.border, 1, new Rect(width / 2, width / 2, this.availableSize.width - width, this.availableSize.height - width));\n        this.drawSvgCanvas.drawRectangle(rect, this.svgObject);\n    };\n    HeatMap.prototype.calculateSize = function () {\n        var width = stringToNumber(this.width, this.element.offsetWidth) || this.element.offsetWidth || 600;\n        var height = stringToNumber(this.height, this.element.offsetHeight) || this.element.offsetHeight || 450;\n        this.availableSize = new Size(width, height);\n    };\n    HeatMap.prototype.renderTitle = function () {\n        if (this.titleSettings.text) {\n            var titleStyle = this.titleSettings.textStyle;\n            var anchor = titleStyle.textAlignment === 'Near' ? 'start' :\n                titleStyle.textAlignment === 'Far' ? 'end' : 'middle';\n            this.elementSize = measureText(this.titleCollection[0], titleStyle);\n            var options = new TextOption(this.element.id + '_HeatmapTitle', new TextBasic(titlePositionX(this.availableSize.width - this.margin.left - this.margin.right, this.margin.left, this.margin.right, titleStyle), this.margin.top + ((this.elementSize.height) * 3 / 4), anchor, this.titleCollection), titleStyle, titleStyle.color || this.themeStyle.heatMapTitle);\n            if (this.titleCollection.length > 1) {\n                this.drawSvgCanvas.createWrapText(options, titleStyle, this.svgObject);\n            }\n            else {\n                this.drawSvgCanvas.createText(options, this.svgObject, this.titleCollection[0]);\n                if (this.titleCollection[0].indexOf('...') !== -1 && this.enableCanvasRendering) {\n                    this.tooltipCollection.push(new CanvasTooltip(this.titleSettings.text, new Rect(this.margin.left, this.margin.top, this.elementSize.width, this.elementSize.height)));\n                }\n            }\n        }\n    };\n    HeatMap.prototype.titleTooltip = function (event, x, y, isTouch) {\n        var targetId = event.target.id;\n        if ((targetId === (this.element.id + '_HeatmapTitle')) && (event.target.textContent.indexOf('...') > -1)) {\n            showTooltip(this.titleSettings.text, x, y, this.element.offsetWidth, this.element.id + '_Title_Tooltip', getElement(this.element.id + '_Secondary_Element'), isTouch, this);\n        }\n        else {\n            removeElement(this.element.id + '_Title_Tooltip');\n        }\n    };\n    HeatMap.prototype.axisTooltip = function (event, x, y, isTouch) {\n        var targetId = event.target.id;\n        if ((targetId.indexOf(this.element.id + '_XAxis_Label') !== -1) ||\n            (targetId.indexOf(this.element.id + '_XAxis_MultiLevel') !== -1) ||\n            (targetId.indexOf(this.element.id + '_YAxis_MultiLevel') !== -1)) {\n            var tooltipText = getTooltipText(this.tooltipCollection, x, y);\n            if (tooltipText) {\n                showTooltip(tooltipText, x, y, this.element.offsetWidth, this.element.id + '_axis_Tooltip', getElement(this.element.id + '_Secondary_Element'), this.isTouch, this);\n            }\n            else {\n                removeElement(this.element.id + '_axis_Tooltip');\n            }\n        }\n        else {\n            removeElement(this.element.id + '_axis_Tooltip');\n        }\n    };\n    HeatMap.prototype.isHeatmapRect = function (x, y) {\n        var firstRectDetails = [];\n        var lastRectDetails = [];\n        var isRect;\n        firstRectDetails.push(this.heatMapSeries.rectPositionCollection[0][0]);\n        lastRectDetails.push(this.heatMapSeries.rectPositionCollection[this.yLength - 1][this.xLength - 1]);\n        isRect = (x >= firstRectDetails[0].x && y >= firstRectDetails[0].y &&\n            x <= (lastRectDetails[0].x + lastRectDetails[0].width) &&\n            y <= (lastRectDetails[0].y + lastRectDetails[0].height)) ? true : false;\n        return isRect;\n    };\n    HeatMap.prototype.setTheme = function () {\n        /*! Set theme */\n        this.themeStyle = getThemeColor(this.theme);\n    };\n    HeatMap.prototype.calculateBounds = function () {\n        var margin = this.margin;\n        // Title Height;\n        var titleHeight = 0;\n        var padding = (this.legendModule && this.legendSettings.position === 'Top'\n            && this.legendVisibilityByCellType) || this.titleSettings.textStyle.size === '0px' ? 0 : 16; // title padding\n        var left = margin.left;\n        var width = this.availableSize.width - left - margin.right;\n        if (this.titleSettings.text) {\n            this.titleCollection = getTitle(this.titleSettings.text, this.titleSettings.textStyle, width);\n            titleHeight = (measureText(this.titleSettings.text, this.titleSettings.textStyle).height * this.titleCollection.length) +\n                padding;\n        }\n        var top = margin.top + titleHeight;\n        this.titleRect = new Rect(margin.left, margin.top, this.availableSize.width - margin.left - margin.right, titleHeight);\n        var height = this.availableSize.height - top - margin.bottom;\n        this.initialClipRect = new Rect(left, top, width, height);\n        var legendTop = this.initialClipRect.y;\n        if (this.legendModule && this.legendSettings.visible && this.legendVisibilityByCellType) {\n            this.legendModule.calculateLegendBounds(this.initialClipRect);\n        }\n        this.heatMapAxis.measureAxis(this.initialClipRect);\n        if (this.legendModule && this.legendSettings.visible && this.legendVisibilityByCellType) {\n            this.legendModule.calculateLegendSize(this.initialClipRect, legendTop);\n        }\n        this.heatMapAxis.calculateAxisSize(this.initialClipRect);\n    };\n    HeatMap.prototype.refreshBound = function () {\n        this.updateBubbleHelperProperty();\n        this.calculateBounds();\n        this.renderElements();\n    };\n    HeatMap.prototype.initAxis = function () {\n        var axis;\n        var axes = [this.xAxis, this.yAxis];\n        this.axisCollections = [];\n        for (var i = 0, len = axes.length; i < len; i++) {\n            axis = axes[i];\n            axis.orientation = (i === 0) ? 'Horizontal' : 'Vertical';\n            axis.jsonCellLabel = [];\n            this.axisCollections.push(axis);\n        }\n    };\n    /**\n     * Method to bind events for HeatMap\n     */\n    HeatMap.prototype.wireEvents = function () {\n        var _this = this;\n        /*! Find the Events type */\n        var isIE11Pointer = Browser.isPointer;\n        var start = Browser.touchStartEvent;\n        var stop = Browser.touchEndEvent;\n        var move = Browser.touchMoveEvent;\n        var cancel = isIE11Pointer ? 'pointerleave' : 'mouseleave';\n        EventHandler.add(this.element, Browser.isDevice ? start : 'click', this.heatMapMouseClick, this);\n        EventHandler.add(this.element, start, this.heatMapMouseMove, this);\n        EventHandler.add(this.element, stop, this.heatMapMouseLeave, this);\n        EventHandler.add(this.element, move, this.heatMapMouseMove, this);\n        EventHandler.add(this.element, cancel, this.heatMapMouseLeave, this);\n        window.addEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.heatMapResize.bind(this));\n        var heatmap = this;\n        /**\n         * Support for touch tapHold and tap for HeatMap\n         */\n        var touchObj = new Touch(this.element, {\n            tapHold: function () {\n                heatmap.isCellTapHold = true;\n                heatmap.getDataCollection();\n                heatmap.currentRect.allowCollection = false;\n                heatmap.setCellOpacity();\n                var argData = {\n                    heatmap: (_this.isBlazor ? null : heatmap),\n                    cancel: false,\n                    name: 'cellSelected',\n                    data: heatmap.multiCellCollection\n                };\n                heatmap.trigger('cellSelected', argData);\n            },\n            tap: function () {\n                var isCellTap = false;\n                if (!heatmap.isCellTapHold) {\n                    isCellTap = true;\n                }\n                heatmap.tooltipOnMouseMove(null, heatmap.currentRect, isCellTap);\n            }\n        });\n        this.setStyle(this.element);\n    };\n    /**\n     * Applying styles for heatmap element\n     */\n    HeatMap.prototype.setStyle = function (element) {\n        element.style.touchAction = 'element';\n        element.style.msTouchAction = 'element';\n        element.style.msContentZooming = 'none';\n        element.style.msUserSelect = 'none';\n        element.style.webkitUserSelect = 'none';\n        element.style.position = 'relative';\n        element.style.display = 'block';\n    };\n    /**\n     * Method to unbind events for HeatMap\n     */\n    HeatMap.prototype.unWireEvents = function () {\n        /*! Find the Events type */\n        var isIE11Pointer = Browser.isPointer;\n        var start = Browser.touchStartEvent;\n        var stop = Browser.touchEndEvent;\n        var move = Browser.touchMoveEvent;\n        var cancel = isIE11Pointer ? 'pointerleave' : 'mouseleave';\n        EventHandler.remove(this.element, Browser.isDevice ? start : 'click', this.heatMapMouseClick);\n        EventHandler.remove(this.element, start, this.heatMapMouseMove);\n        EventHandler.remove(this.element, move, this.heatMapMouseLeave);\n        EventHandler.remove(this.element, move, this.heatMapMouseMove);\n        EventHandler.remove(this.element, cancel, this.heatMapMouseLeave);\n        window.removeEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.heatMapResize);\n    };\n    /**\n     * Handles the heatmap resize.\n     * @return {boolean}\n     * @private\n     */\n    HeatMap.prototype.heatMapResize = function (e) {\n        var _this = this;\n        this.resizing = true;\n        var argData = {\n            heatmap: (this.isBlazor ? null : this),\n            cancel: false,\n            name: 'resized',\n            currentSize: new Size(0, 0),\n            previousSize: new Size(this.availableSize.width, this.availableSize.height),\n        };\n        if (this.resizeTimer) {\n            clearTimeout(this.resizeTimer);\n        }\n        this.resizeTimer = setTimeout(function () {\n            if (_this.isDestroyed) {\n                clearTimeout(_this.resizeTimer);\n                return;\n            }\n            _this.createSvg();\n            argData.currentSize = _this.availableSize;\n            _this.trigger('resized', argData);\n            _this.refreshBound();\n            _this.appendSvgObject();\n            if (_this.allowSelection) {\n                _this.updateCellSelection();\n            }\n            _this.trigger('loaded', (_this.isBlazor ? null : { heatmap: _this }));\n            _this.resizing = false;\n        }, 500);\n        return false;\n    };\n    /**\n     * Method to bind selection after window resize for HeatMap\n     */\n    HeatMap.prototype.updateCellSelection = function () {\n        var wSize = this.initialClipRect.width / this.axisCollections[0].axisLabelSize;\n        var hSize = this.initialClipRect.height / this.axisCollections[1].axisLabelSize;\n        var x = this.initialClipRect.x;\n        var y = this.initialClipRect.y;\n        if (!this.enableCanvasRendering) {\n            if (this.multiCellCollection.length !== 0) {\n                var containersRect = document.getElementById(this.element.id + '_Container_RectGroup');\n                var containerText = document.getElementById(this.element.id + '_Container_TextGroup');\n                for (var i = 0; i < containersRect.childNodes.length; i++) {\n                    containersRect.childNodes[i].setAttribute('opacity', '0.3');\n                    if (this.cellSettings.showLabel && containerText.childNodes[i]) {\n                        containerText.childNodes[i].setAttribute('opacity', '0.3');\n                    }\n                }\n                for (var i = 0; i < this.multiCellCollection.length; i++) {\n                    var collectionClass = this.multiCellCollection[i].cellElement;\n                    var cellIndex = collectionClass.id.replace(this.element.id + '_HeatMapRect_', '');\n                    var index = parseInt(cellIndex, 10);\n                    containersRect.childNodes[index].setAttribute('opacity', '1');\n                    if (this.cellSettings.showLabel && containerText.childNodes[i]) {\n                        var getText = document.getElementById(this.element.id + '_HeatMapRectLabels_' + index);\n                        if (getText) {\n                            getText.setAttribute('opacity', '1');\n                        }\n                        this.addSvgClass(containersRect.childNodes[index]);\n                    }\n                }\n            }\n        }\n        else if (this.enableCanvasRendering) {\n            var rect = this.multiCellCollection;\n            var oldCanvas = document.getElementById(this.element.id + '_canvas');\n            var newCanvas = document.getElementById(this.element.id + '_secondary_canvas');\n            var initialRect = this.initialClipRect;\n            var rectHeight = initialRect.y + initialRect.height;\n            var rectWidth = initialRect.x + initialRect.width;\n            for (var i = 0; i < this.multiCellCollection.length; i++) {\n                this.multiCellCollection[i].width = rect[i].width = wSize;\n                this.multiCellCollection[i].height = rect[i].height = hSize;\n                this.multiCellCollection[i].x = rect[i].x = x + wSize * this.multiCellCollection[i].xPosition;\n                this.multiCellCollection[i].y = rect[i].y = y + hSize * this.multiCellCollection[i].yPosition;\n                var rectImage = oldCanvas.getContext('2d').getImageData(rect[i].x, rect[i].y, rect[i].width, rect[i].height);\n                newCanvas.getContext('2d').putImageData(rectImage, rect[i].x, rect[i].y);\n                oldCanvas.style.opacity = '0.3';\n            }\n            var topPositions = oldCanvas.getContext('2d').getImageData(0, 0, this.availableSize.width, initialRect.y);\n            newCanvas.getContext('2d').putImageData(topPositions, 0, 0);\n            var bottomPositions = oldCanvas.getContext('2d').getImageData(0, rectHeight, this.availableSize.width, this.availableSize.height - rectHeight);\n            newCanvas.getContext('2d').putImageData(bottomPositions, 0, initialRect.y + initialRect.height);\n            var rightPosition = oldCanvas.getContext('2d').\n                getImageData(rectWidth, 0, this.availableSize.width - rectWidth, this.availableSize.height);\n            newCanvas.getContext('2d').putImageData(rightPosition, rectWidth, 0);\n            var leftPosition = oldCanvas.getContext('2d').getImageData(0, 0, initialRect.x, this.availableSize.height);\n            newCanvas.getContext('2d').putImageData(leftPosition, 0, 0);\n            removeElement(this.element.id + '_selectedCells');\n        }\n    };\n    HeatMap.prototype.clearSVGSelection = function () {\n        var rect = document.getElementById(this.element.id + '_Container_RectGroup');\n        var text = document.getElementById(this.element.id + '_Container_TextGroup');\n        for (var i = 0; i < rect.childNodes.length; i++) {\n            var elementClassName = rect.childNodes[i].getAttribute('class');\n            if (elementClassName === this.element.id + '_selected') {\n                this.removeSvgClass(rect.childNodes[i], elementClassName);\n            }\n            rect.childNodes[i].setAttribute('opacity', '1');\n            if (this.cellSettings.showLabel && text.childNodes[i]) {\n                text.childNodes[i].setAttribute('opacity', '1');\n            }\n        }\n    };\n    /**\n     * Get the maximum length of data source for both horizontal and vertical\n     * @private\n     */\n    HeatMap.prototype.calculateMaxLength = function () {\n        var dataSource = this.completeAdaptDataSource;\n        if (dataSource && dataSource.length > 0) {\n            var xAxisMax = dataSource.length - 1;\n            var yAxisMax = 0;\n            for (var i = 0; i <= xAxisMax; i++) {\n                var length_1 = dataSource[i].length;\n                yAxisMax = yAxisMax > length_1 ? yAxisMax : length_1;\n            }\n            this.axisCollections[0].maxLength = xAxisMax;\n            this.axisCollections[1].maxLength = yAxisMax - 1;\n        }\n        else {\n            this.axisCollections[0].maxLength = 0;\n            this.axisCollections[1].maxLength = 0;\n        }\n    };\n    /**\n     * To find mouse x, y for aligned heatmap element svg position\n     */\n    HeatMap.prototype.setMouseXY = function (pageX, pageY) {\n        var rect = this.element.getBoundingClientRect();\n        var svgCanvasRect;\n        if (this.enableCanvasRendering) {\n            svgCanvasRect = document.getElementById(this.element.id + '_canvas').getBoundingClientRect();\n        }\n        else {\n            svgCanvasRect = document.getElementById(this.element.id + '_svg').getBoundingClientRect();\n        }\n        this.mouseX = (pageX - rect.left) - Math.max(svgCanvasRect.left - rect.left, 0);\n        this.mouseY = (pageY - rect.top) - Math.max(svgCanvasRect.top - rect.top, 0);\n    };\n    HeatMap.prototype.heatMapMouseClick = function (e) {\n        var pageX;\n        var pageY;\n        var tooltipText;\n        var touchArg;\n        var elementRect = this.element.getBoundingClientRect();\n        if (e.type === 'touchstart') {\n            this.isTouch = true;\n            touchArg = e;\n            pageY = touchArg.changedTouches[0].clientY;\n            pageX = touchArg.changedTouches[0].clientX;\n        }\n        else {\n            this.isTouch = false;\n            pageY = e.clientY;\n            pageX = e.clientX;\n        }\n        pageX -= elementRect.left;\n        pageY -= elementRect.top;\n        var isheatmapRect = this.isHeatmapRect(pageX, pageY);\n        if (isheatmapRect) {\n            var currentRect = this.heatMapSeries.getCurrentRect(pageX, pageY);\n            this.trigger('cellClick', {\n                heatmap: (this.isBlazor ? null : this),\n                value: currentRect.value,\n                x: currentRect.x,\n                y: currentRect.y,\n                xLabel: this.heatMapSeries.hoverXAxisLabel,\n                yLabel: this.heatMapSeries.hoverYAxisLabel,\n                xValue: this.heatMapSeries.hoverXAxisValue,\n                yValue: this.heatMapSeries.hoverYAxisValue,\n                cellElement: this.enableCanvasRendering ? null : document.getElementById(currentRect.id)\n            });\n        }\n        this.notify('click', e);\n        if (this.paletteSettings.type !== 'Gradient' && this.legendModule\n            && this.legendSettings.visible && this.legendVisibilityByCellType) {\n            var page = this.legendModule.navigationCollections;\n            if (page.length && pageX > page[0].x && pageX < page[0].x + page[0].width &&\n                pageY > page[0].y && pageY < page[0].y + page[0].height) {\n                this.legendModule.translatePage(this, this.legendModule.currentPage, true);\n            }\n            else if (page.length && pageX > page[1].x && pageX < page[1].x + page[1].width &&\n                pageY > page[1].y && pageY < page[1].y + page[1].height) {\n                this.legendModule.translatePage(this, this.legendModule.currentPage, false);\n            }\n            var legendRange = this.legendModule.legendRange;\n            var legendTextRange = this.legendModule.legendTextRange;\n            var loop = true;\n            for (var i = 0; i < legendRange.length; i++) {\n                if (this.legendModule && this.legendSettings.toggleVisibility &&\n                    this.legendModule.currentPage === legendRange[i].currentPage) {\n                    if ((loop && (pageX >= legendRange[i].x && pageX <= legendRange[i].width + legendRange[i].x) &&\n                        (pageY >= legendRange[i].y && pageY <= legendRange[i].y + legendRange[i].height) ||\n                        ((this.legendSettings.showLabel && this.legendSettings.labelDisplayType !== 'None' &&\n                            pageX >= legendTextRange[i].x && pageX <= legendTextRange[i].width + legendTextRange[i].x) &&\n                            (pageY >= legendTextRange[i].y && pageY <= legendTextRange[i].y + legendTextRange[i].height)))) {\n                        this.legendModule.legendRangeSelection(i);\n                        loop = false;\n                    }\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * Handles the mouse Move.\n     * @return {boolean}\n     * @private\n     */\n    HeatMap.prototype.heatMapMouseMove = function (e) {\n        var pageX;\n        var pageY;\n        var tooltipText;\n        var touchArg;\n        var elementRect = this.element.getBoundingClientRect();\n        if (e.type === 'touchmove' || e.type === 'touchstart') {\n            this.isTouch = true;\n            touchArg = e;\n            pageX = touchArg.changedTouches[0].clientX;\n            pageY = touchArg.changedTouches[0].clientY;\n        }\n        else {\n            this.isTouch = false;\n            pageX = e.clientX;\n            pageY = e.clientY;\n        }\n        pageX -= elementRect.left;\n        pageY -= elementRect.top;\n        this.setMouseXY(pageX, pageY);\n        if (e.target && e.target.id) {\n            var isheatmapRect = this.isHeatmapRect(pageX, pageY);\n            if (this.legendModule) {\n                if (isheatmapRect) {\n                    if (this.paletteSettings.type === 'Gradient' &&\n                        this.legendSettings.showGradientPointer && this.legendSettings.visible && this.legendVisibilityByCellType) {\n                        this.legendModule.renderGradientPointer(e, pageX, pageY);\n                    }\n                }\n                else {\n                    this.legendModule.removeGradientPointer();\n                }\n                this.renderMousePointer(pageX, pageY);\n            }\n            var isshowTooltip = void 0;\n            var currentRect = void 0;\n            isshowTooltip = this.showTooltip && this.tooltipModule ? isheatmapRect : false;\n            if (isheatmapRect) {\n                currentRect = this.heatMapSeries.getCurrentRect(pageX, pageY);\n                if (e.which !== 2 && e.which !== 3) {\n                    isshowTooltip = this.cellSelectionOnMouseMove(e, currentRect, pageX, pageY, isshowTooltip);\n                }\n            }\n            this.tooltipOnMouseMove(e, currentRect, isshowTooltip, isheatmapRect);\n            if (this.legendModule && this.legendSettings.visible && this.paletteSettings.type === 'Fixed' &&\n                this.legendSettings.enableSmartLegend && this.legendSettings.labelDisplayType === 'None') {\n                this.legendModule.createTooltip(pageX, pageY);\n            }\n            if (!this.enableCanvasRendering) {\n                if (this.titleSettings.text && this.titleSettings.textStyle.textOverflow === 'Trim') {\n                    this.titleTooltip(e, pageX, pageY, this.isTouch);\n                }\n                this.axisTooltip(e, pageX, pageY, this.isTouch);\n                if (this.legendModule && this.legendSettings.visible && this.legendSettings.showLabel && this.legendVisibilityByCellType) {\n                    this.legendModule.renderLegendLabelTooltip(e, pageX, pageY);\n                }\n            }\n            else {\n                elementRect = this.element.getBoundingClientRect();\n                var tooltipRect = (this.paletteSettings.type === 'Fixed' && this.legendSettings.enableSmartLegend &&\n                    this.legendSettings.labelDisplayType === 'None') ? false : true;\n                tooltipText = getTooltipText(this.tooltipCollection, pageX, pageY) ||\n                    (this.legendModule && tooltipRect && getTooltipText(this.legendModule.legendLabelTooltip, pageX, pageY));\n                if (tooltipText) {\n                    showTooltip(tooltipText, pageX, pageY, this.element.offsetWidth, this.element.id + '_canvas_Tooltip', getElement(this.element.id + '_Secondary_Element'), this.isTouch, this);\n                }\n                else {\n                    removeElement(this.element.id + '_canvas_Tooltip');\n                }\n            }\n        }\n        return true;\n    };\n    /**\n     * Triggering cell selection\n     */\n    HeatMap.prototype.cellSelectionOnMouseMove = function (e, currentRect, pageX, pageY, isshowTooltip) {\n        if ((this.cellSettings.tileType === 'Rect' && e.type === 'mousedown' || e.type === 'touchstart'\n            || e.type === 'pointerdown') && this.allowSelection) {\n            this.previousRect = currentRect;\n            this.multiSelection = true;\n            this.rectSelected = true;\n            this.initialCellX = pageX;\n            this.initialCellY = pageY;\n            e.preventDefault();\n        }\n        if (this.cellSettings.tileType === 'Rect' && this.multiSelection && currentRect) {\n            isshowTooltip = false;\n            this.highlightSelectedCells(this.previousRect, currentRect, pageX, pageY, e);\n        }\n        return isshowTooltip;\n    };\n    /**\n     * Rendering tooltip on mouse move\n     */\n    HeatMap.prototype.tooltipOnMouseMove = function (e, currentRect, isshowTooltip, isheatmapRect) {\n        var _this = this;\n        if (isshowTooltip && currentRect) {\n            if (this.tempTooltipRectId !== currentRect.id) {\n                if (this.showTooltip) {\n                    if ((this.cellSettings.enableCellHighlighting || (this.tooltipModule && this.showTooltip))\n                        && !this.enableCanvasRendering) {\n                        this.heatMapSeries.highlightSvgRect(currentRect.id);\n                    }\n                    this.tooltipModule.renderTooltip(currentRect);\n                    if (this.isTouch) {\n                        if (this.tooltipTimer) {\n                            window.clearTimeout(this.tooltipTimer);\n                        }\n                        this.tooltipTimer = setTimeout(function () {\n                            _this.tooltipModule.tooltipObject.fadeOut();\n                            _this.tooltipModule.isFadeout = true;\n                        }, 1500);\n                        if (e) {\n                            if (e.type === 'touchmove') {\n                                e.preventDefault();\n                            }\n                        }\n                    }\n                }\n                this.tempTooltipRectId = currentRect.id;\n            }\n        }\n        else {\n            if (e !== null) {\n                if (!isheatmapRect) {\n                    if ((this.cellSettings.enableCellHighlighting || this.showTooltip) && !this.enableCanvasRendering) {\n                        this.heatMapSeries.highlightSvgRect(e.target.id);\n                    }\n                    if (this.tooltipModule && this.showTooltip) {\n                        this.tooltipModule.showHideTooltip(false, true);\n                    }\n                }\n            }\n            this.tempTooltipRectId = '';\n        }\n    };\n    /**\n     * To select the multiple cells on mouse move action\n     */\n    HeatMap.prototype.highlightSelectedCells = function (previousRect, currentRect, pageX, pageY, e) {\n        var pXIndex = previousRect.xIndex;\n        var pYIndex = previousRect.yIndex;\n        var cXIndex = currentRect.xIndex;\n        var cYIndex = currentRect.yIndex;\n        this.currentRect = currentRect;\n        this.selectedCellsRect = new Rect(0, 0, 0, 0);\n        this.selectedCellsRect.x = previousRect.x > currentRect.x ? currentRect.x : previousRect.x;\n        this.selectedCellsRect.y = previousRect.y > currentRect.y ? currentRect.y : previousRect.y;\n        this.selectedCellsRect.width = ((previousRect.x > currentRect.x ? (pXIndex - cXIndex) :\n            (cXIndex - pXIndex)) + 1) * currentRect.width;\n        this.selectedCellsRect.height = ((previousRect.y > currentRect.y ? (pYIndex - cYIndex) :\n            (cYIndex - pYIndex)) + 1) * currentRect.height;\n        if (e.type === 'touchstart') {\n            this.isCellTapHold = true;\n        }\n        else {\n            this.isCellTapHold = false;\n        }\n        e.preventDefault();\n        if (e.ctrlKey === false && e.type !== 'touchstart' && e.type !== 'touchmove') {\n            this.removeSelectedCellsBorder();\n        }\n        var x = this.initialCellX > pageX ? pageX : this.initialCellX;\n        var y = this.initialCellY > pageY ? pageY : this.initialCellY;\n        var parentDiv = document.getElementById(this.element.id + '_CellSelection_Container');\n        var svgObject = this.renderer.createSvg({\n            id: this.element.id + '_CellSelection_Container_svg',\n            width: this.initialClipRect.width,\n            height: this.initialClipRect.height,\n        });\n        parentDiv.appendChild(svgObject);\n        var parent = document.getElementById(this.element.id + '_CellSelection_Container_svg');\n        var rect = new Rect(x - this.initialClipRect.x, y - this.initialClipRect.y, Math.abs(pageX - this.initialCellX), Math.abs(pageY - this.initialCellY));\n        var rectItems = new RectOption(this.element.id + '_selectedCells', '#87ceeb', { color: 'transparent', width: 1 }, 1, rect, '#0000ff');\n        parent.appendChild(this.renderer.drawRectangle(rectItems));\n        document.getElementById(this.element.id + '_selectedCells').style.opacity = '0.5';\n    };\n    /**\n     * Method to get selected cell data collection for HeatMap\n     */\n    HeatMap.prototype.getDataCollection = function () {\n        var pXIndex = this.previousRect.xIndex;\n        var pYIndex = this.previousRect.yIndex;\n        var cXIndex = this.currentRect.xIndex;\n        var cYIndex = this.currentRect.yIndex;\n        var minX = cXIndex > pXIndex ? pXIndex : cXIndex;\n        var maxX = cXIndex > pXIndex ? cXIndex : pXIndex;\n        var minY = cYIndex > pYIndex ? pYIndex : cYIndex;\n        var maxY = cYIndex > pYIndex ? cYIndex : pYIndex;\n        var tempX = minX;\n        var tempY = minY;\n        var cellX = this.previousRect.x;\n        var cellY = this.previousRect.y;\n        this.getCellCollection(this.currentRect, this.previousRect, true, tempX, tempY, maxX, maxY, minX, cellX, cellY);\n        tempX = minX;\n        tempY = minY;\n        cellX = this.previousRect.x;\n        cellY = this.previousRect.y;\n        this.checkSelectedCells();\n        this.getCellCollection(this.currentRect, this.previousRect, false, tempX, tempY, maxX, maxY, minX, cellX, cellY);\n        this.selectedMultiCellCollection = [];\n        this.canvasSelectedCells = new Rect(0, 0, 0, 0);\n        this.selectedCellCount = 0;\n    };\n    /**\n     * To get the selected datas.\n     */\n    HeatMap.prototype.getCellCollection = function (currentRect, previousRect, singleCellData, tempX, tempY, maxX, maxY, minX, cellX, cellY) {\n        var xIndex = Math.abs((currentRect.xIndex === previousRect.xIndex ?\n            0 : currentRect.xIndex - previousRect.xIndex)) + 1;\n        var yIndex = Math.abs((currentRect.yIndex === previousRect.yIndex ?\n            0 : currentRect.yIndex - previousRect.yIndex)) + 1;\n        for (var i = 0; i < (xIndex * yIndex); i++) {\n            if (singleCellData) {\n                this.getSelectedCellData(cellX, cellY, true);\n            }\n            else {\n                this.getSelectedCellData(cellX, cellY, false);\n            }\n            if (tempX < maxX) {\n                cellX += currentRect.xIndex > previousRect.xIndex ? currentRect.width : -currentRect.width;\n                tempX++;\n            }\n            else if (tempY < maxY) {\n                cellY += currentRect.yIndex > previousRect.yIndex ? currentRect.height : -currentRect.height;\n                cellX = previousRect.x;\n                tempX = minX;\n            }\n        }\n    };\n    /**\n     * To remove the selection on mouse click without ctrl key.\n     */\n    HeatMap.prototype.removeSelectedCellsBorder = function () {\n        if (!this.enableCanvasRendering) {\n            var containerRect = document.getElementById(this.element.id + '_Container_RectGroup');\n            var containerText = document.getElementById(this.element.id + '_Container_TextGroup');\n            for (var i = 0; i < containerRect.childNodes.length; i++) {\n                var elementClassName = containerRect.childNodes[i].getAttribute('class');\n                containerRect.childNodes[i].setAttribute('opacity', '0.3');\n                if (this.cellSettings.showLabel && containerText.childNodes[i]) {\n                    containerText.childNodes[i].setAttribute('opacity', '0.3');\n                    this.removeSvgClass(containerRect.childNodes[i], elementClassName);\n                }\n            }\n        }\n        else {\n            var ctx = this.secondaryCanvasRenderer.ctx;\n            for (var i = 0; i < this.previousSelectedCellsRect.length; i++) {\n                var rect = this.previousSelectedCellsRect[i];\n                ctx.save();\n                ctx.clearRect(rect.x - 1, rect.y - 1, rect.width + 2, rect.height + 2);\n                ctx.restore();\n            }\n            for (var i = 0; i < this.multiCellCollection.length; i++) {\n                var rects = this.multiCellCollection[i];\n                if (this.multiCellCollection.length > 0) {\n                    ctx.save();\n                    ctx.clearRect(rects.x - 1, rects.y - 1, rects.width + 2, rects.height + 2);\n                }\n            }\n        }\n        this.multiCellCollection = [];\n    };\n    /**\n     * To highlight the selected multiple cells on mouse move action in canvas mode.\n     */\n    HeatMap.prototype.highlightSelectedAreaInCanvas = function (rect) {\n        if (rect.x) {\n            var oldCanvas = document.getElementById(this.element.id + '_canvas');\n            var newCanvas = document.getElementById(this.element.id + '_secondary_canvas');\n            var initialRect = this.initialClipRect;\n            var rectImage = oldCanvas.getContext('2d').getImageData(rect.x, rect.y, rect.width, rect.height);\n            newCanvas.getContext('2d').putImageData(rectImage, rect.x, rect.y);\n            oldCanvas.style.opacity = '0.3';\n            var topPosition = oldCanvas.getContext('2d').getImageData(0, 0, this.availableSize.width, initialRect.y);\n            newCanvas.getContext('2d').putImageData(topPosition, 0, 0);\n            var bottomPosition = oldCanvas.getContext('2d').getImageData(0, initialRect.y + initialRect.height, this.availableSize.width, this.availableSize.height - (initialRect.y + initialRect.height));\n            newCanvas.getContext('2d').putImageData(bottomPosition, 0, initialRect.y + initialRect.height);\n            var rightPosition = oldCanvas.getContext('2d').getImageData(initialRect.x + initialRect.width, 0, this.availableSize.width - (initialRect.x + initialRect.width), this.availableSize.height);\n            newCanvas.getContext('2d').putImageData(rightPosition, initialRect.x + initialRect.width, 0);\n            var leftPosition = oldCanvas.getContext('2d').getImageData(0, 0, initialRect.x, this.availableSize.height);\n            newCanvas.getContext('2d').putImageData(leftPosition, 0, 0);\n        }\n    };\n    /**\n     * To get the collection of selected cells.\n     */\n    HeatMap.prototype.getSelectedCellData = function (cellX, cellY, cellCollection) {\n        var xAxis = this.axisCollections[0];\n        var yAxis = this.axisCollections[1];\n        var xLabels = xAxis.tooltipLabels;\n        var yLabels = yAxis.tooltipLabels.slice().reverse();\n        var rectPosition = this.heatMapSeries.getCurrentRect(cellX + 1, cellY + 1);\n        var currentRect = document.getElementById(rectPosition.id);\n        var cellDetails = new SelectedCellDetails(null, '', '', 0, 0, null, 0, 0, 0, 0, 0, 0);\n        cellDetails.value = rectPosition.value;\n        cellDetails.xLabel = xLabels[rectPosition.xIndex].toString();\n        cellDetails.yLabel = yLabels[rectPosition.yIndex].toString();\n        cellDetails.xValue = xAxis.labelValue[rectPosition.xIndex];\n        cellDetails.yValue = yAxis.labelValue.slice().reverse()[rectPosition.yIndex];\n        cellDetails.cellElement = this.enableCanvasRendering ? null : currentRect;\n        cellDetails.xPosition = rectPosition.xIndex;\n        cellDetails.yPosition = rectPosition.yIndex;\n        cellDetails.width = this.currentRect.width;\n        cellDetails.height = this.currentRect.height;\n        cellDetails.x = this.currentRect.x;\n        cellDetails.y = this.currentRect.y;\n        this.currentRect.allowCollection = true;\n        this.addSvgClass(currentRect);\n        if (cellCollection) {\n            this.selectedMultiCellCollection.push(cellDetails);\n            this.currentRect.allowCollection = false;\n        }\n        else {\n            for (var i = 0; i < this.multiCellCollection.length; i++) {\n                if (this.multiCellCollection[i].xPosition === cellDetails.xPosition &&\n                    this.multiCellCollection[i].yPosition === cellDetails.yPosition) {\n                    this.currentRect.allowCollection = false;\n                    if (this.selectedCellCount === this.selectedMultiCellCollection.length) {\n                        this.currentRect.allowCollection = false;\n                        if (!this.enableCanvasRendering) {\n                            for (var j = 0; j < this.selectedMultiCellCollection.length; j++) {\n                                var rectElement = this.selectedMultiCellCollection[j].cellElement;\n                                if (rectElement) {\n                                    var index = rectElement.id.replace(this.element.id + '_HeatMapRect_', '');\n                                    var containerText = document.getElementById(this.element.id + '_Container_TextGroup');\n                                    var elementClassName = rectElement.getAttribute('class');\n                                    rectElement.setAttribute('opacity', '0.3');\n                                    var getText = document.getElementById(this.element.id + '_HeatMapRectLabels_' + index);\n                                    if (getText) {\n                                        getText.setAttribute('opacity', '0.3');\n                                    }\n                                    this.removeSvgClass(rectElement, elementClassName);\n                                }\n                            }\n                        }\n                        else {\n                            var ctx = this.secondaryCanvasRenderer.ctx;\n                            var rect = this.canvasSelectedCells;\n                            ctx.save();\n                            ctx.clearRect(rect.x - 1, rect.y - 1, rect.width + 2, rect.height + 2);\n                            ctx.restore();\n                            this.selectedCellsRect = new Rect(0, 0, 0, 0);\n                        }\n                        this.multiCellCollection.splice(i, 1);\n                    }\n                }\n            }\n        }\n        if (rectPosition.visible && !isNullOrUndefined(rectPosition.value) && this.currentRect.allowCollection === true) {\n            this.multiCellCollection.push(cellDetails);\n        }\n    };\n    /**\n     * To add class for selected cells\n     * @private\n     */\n    HeatMap.prototype.addSvgClass = function (element) {\n        if (!this.enableCanvasRendering) {\n            var className = this.element.id + '_selected';\n            element.setAttribute('class', className);\n        }\n    };\n    /**\n     * To remove class for unselected cells\n     * @private\n     */\n    HeatMap.prototype.removeSvgClass = function (rectElement, className) {\n        if (className) {\n            rectElement.setAttribute('class', className.replace(className, ''));\n        }\n    };\n    /**\n     * To clear the multi cell selection\n     */\n    HeatMap.prototype.clearSelection = function () {\n        if (!this.enableCanvasRendering && this.allowSelection) {\n            this.clearSVGSelection();\n        }\n        if (this.enableCanvasRendering) {\n            var ctx = this.secondaryCanvasRenderer.ctx;\n            for (var i = 0; i < this.previousSelectedCellsRect.length; i++) {\n                ctx.save();\n                ctx.clearRect(this.previousSelectedCellsRect[i].x - 1, this.previousSelectedCellsRect[i].y - 1, this.previousSelectedCellsRect[i].width + 2, this.previousSelectedCellsRect[i].height + 2);\n                ctx.restore();\n            }\n            for (var i = 0; i < this.multiCellCollection.length; i++) {\n                var rects = this.multiCellCollection[i];\n                if (this.multiCellCollection.length > 0) {\n                    ctx.save();\n                    ctx.clearRect(rects.x - 1, rects.y - 1, rects.width + 2, rects.height + 2);\n                }\n            }\n            var canvas = document.getElementById(this.element.id + '_canvas');\n            canvas.style.opacity = '1';\n        }\n        this.tempMultiCellCollection = [];\n        this.multiCellCollection = [];\n        this.rectSelected = false;\n    };\n    HeatMap.prototype.renderMousePointer = function (pageX, pageY) {\n        var legendRange = this.legendModule.legendRange;\n        var legendTextRange = this.legendModule.legendTextRange;\n        var loop = true;\n        for (var i = 0; i < legendRange.length; i++) {\n            if (this.legendSettings.toggleVisibility && this.legendModule.currentPage === legendRange[i].currentPage) {\n                if ((loop && (pageX >= legendRange[i].x && pageX <= legendRange[i].width + legendRange[i].x) &&\n                    (pageY >= legendRange[i].y && pageY <= legendRange[i].y + legendRange[i].height) ||\n                    ((this.legendSettings.showLabel && this.legendSettings.labelDisplayType !== 'None' &&\n                        pageX >= legendTextRange[i].x && pageX <= legendTextRange[i].width + legendTextRange[i].x) &&\n                        (pageY >= legendTextRange[i].y && pageY <= legendTextRange[i].y + legendTextRange[i].height)))) {\n                    if (this.enableCanvasRendering) {\n                        document.getElementById(this.element.id + '_canvas').style.cursor = 'Pointer';\n                    }\n                    else {\n                        document.getElementById(this.element.id + '_svg').style.cursor = 'Pointer';\n                    }\n                    loop = false;\n                }\n                else if (loop) {\n                    if (this.enableCanvasRendering) {\n                        document.getElementById(this.element.id + '_canvas').style.cursor = '';\n                    }\n                    else {\n                        document.getElementById(this.element.id + '_svg').style.cursor = '';\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Handles the mouse end.\n     * @return {boolean}\n     * @private\n     */\n    HeatMap.prototype.heatMapMouseLeave = function (e) {\n        var _this = this;\n        if (e.target && e.target.id &&\n            (this.cellSettings.enableCellHighlighting || (this.tooltipModule && this.showTooltip))\n            && !this.enableCanvasRendering) {\n            this.heatMapSeries.highlightSvgRect(this.tempTooltipRectId);\n        }\n        if (this.allowSelection && this.multiSelection) {\n            this.multiSelection = false;\n            if (e.type === 'mouseup' || e.type === 'touchend' || e.type === 'pointerup') {\n                if (e.which !== 2 && e.which !== 3) {\n                    if (this.isCellTapHold === false) {\n                        this.getDataCollection();\n                        this.currentRect.allowCollection = false;\n                        this.setCellOpacity();\n                        var argData = {\n                            heatmap: (this.isBlazor ? null : this),\n                            cancel: false,\n                            name: 'cellSelected',\n                            data: this.multiCellCollection\n                        };\n                        this.trigger('cellSelected', argData);\n                    }\n                    else {\n                        this.isCellTapHold = false;\n                    }\n                }\n            }\n            else if (e.type === 'mouseleave' && (this.element.id + '_selectedCells')) {\n                removeElement(this.element.id + '_selectedCells');\n            }\n        }\n        if (this.tooltipModule && this.showTooltip && e.type === 'mouseleave') {\n            this.tooltipModule.showHideTooltip(false);\n        }\n        this.tempTooltipRectId = '';\n        if (this.legendModule && this.legendSettings.visible && this.legendModule.tooltipObject &&\n            this.legendModule.tooltipObject.element) {\n            var tooltipElement_1 = this.legendModule.tooltipObject.element.firstChild;\n            if (e.type === 'mouseleave') {\n                tooltipElement_1.setAttribute('opacity', '0');\n            }\n            else {\n                if (this.legendTooltipTimer) {\n                    window.clearTimeout(this.legendTooltipTimer);\n                }\n                this.legendTooltipTimer = setTimeout(function () {\n                    tooltipElement_1.setAttribute('opacity', '0');\n                }, 1500);\n            }\n        }\n        if (this.paletteSettings.type === 'Gradient' && this.legendModule && this.legendSettings.showGradientPointer &&\n            this.legendSettings.visible && this.legendVisibilityByCellType) {\n            if (e.type === 'mouseleave') {\n                this.legendModule.removeGradientPointer();\n            }\n            else {\n                if (this.gradientTimer) {\n                    window.clearTimeout(this.gradientTimer);\n                }\n                this.gradientTimer = setTimeout(function () { _this.legendModule.removeGradientPointer(); }, 1500);\n            }\n        }\n        if (this.enableCanvasRendering) {\n            var main = document.getElementById(this.element.id + '_hoverRect_canvas');\n            if (main) {\n                main.style.visibility = 'hidden';\n                this.tempRectHoverClass = '';\n            }\n        }\n        if (this.titleSettings.text && this.titleCollection[0].indexOf('...') !== -1) {\n            if (!this.enableCanvasRendering) {\n                removeElement(this.element.id + '_Title_Tooltip');\n            }\n            else {\n                removeElement(this.element.id + '_canvas_Tooltip');\n            }\n        }\n        return true;\n    };\n    /**\n     * Method to Check for deselection of cell.\n     */\n    HeatMap.prototype.checkSelectedCells = function () {\n        if (!this.enableCanvasRendering) {\n            for (var i = 0; i < this.multiCellCollection.length; i++) {\n                for (var j = 0; j < this.selectedMultiCellCollection.length; j++) {\n                    if (this.selectedMultiCellCollection[j].cellElement.getAttribute('id')\n                        === this.multiCellCollection[i].cellElement.getAttribute('id')) {\n                        this.selectedCellCount++;\n                    }\n                }\n            }\n        }\n        else {\n            this.canvasSelectedCells = new Rect(0, 0, 0, 0);\n            this.canvasSelectedCells.x = this.selectedCellsRect.x;\n            this.canvasSelectedCells.y = this.selectedCellsRect.y;\n            this.canvasSelectedCells.width = this.selectedCellsRect.width;\n            this.canvasSelectedCells.height = this.selectedCellsRect.height;\n            for (var i = 0; i < this.multiCellCollection.length; i++) {\n                for (var j = 0; j < this.selectedMultiCellCollection.length; j++) {\n                    if (this.selectedMultiCellCollection[j].xPosition === this.multiCellCollection[i].xPosition &&\n                        this.selectedMultiCellCollection[j].yPosition === this.multiCellCollection[i].yPosition) {\n                        this.selectedCellCount++;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Method to remove opacity for text of selected cell for HeatMap\n     */\n    HeatMap.prototype.removeOpacity = function (containersRect, containerText) {\n        for (var i = 0; i < containersRect.childNodes.length; i++) {\n            containersRect.childNodes[i].setAttribute('opacity', '0.3');\n            if (this.cellSettings.showLabel && containerText.childNodes[i]) {\n                containerText.childNodes[i].setAttribute('opacity', '0.3');\n            }\n        }\n    };\n    /**\n     * Method to set opacity for selected cell for HeatMap\n     */\n    HeatMap.prototype.setCellOpacity = function () {\n        if (!this.enableCanvasRendering) {\n            if (this.multiCellCollection.length !== 0) {\n                this.tempMultiCellCollection.push(this.multiCellCollection);\n                var containersRect = document.getElementById(this.element.id + '_Container_RectGroup');\n                var containerText = document.getElementById(this.element.id + '_Container_TextGroup');\n                this.removeOpacity(containersRect, containerText);\n                for (var i = 0; i < this.multiCellCollection.length; i++) {\n                    var collectionClasss = this.multiCellCollection[i].cellElement;\n                    var index = parseInt(collectionClasss.id.replace(this.element.id + '_HeatMapRect_', ''), 10);\n                    containersRect.childNodes[index].setAttribute('opacity', '1');\n                    if (this.cellSettings.showLabel) {\n                        var getText = document.getElementById(this.element.id + '_HeatMapRectLabels_' + index);\n                        if (getText) {\n                            getText.setAttribute('opacity', '1');\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            this.previousSelectedCellsRect.push(this.selectedCellsRect);\n            this.highlightSelectedAreaInCanvas(this.selectedCellsRect);\n        }\n        removeElement(this.element.id + '_selectedCells');\n    };\n    /**\n     * To create div container for rendering two layers of canvas.\n     * @return {void}\n     * @private\n     */\n    HeatMap.prototype.createMultiCellDiv = function (onLoad) {\n        if (onLoad) {\n            var divElement = this.createElement('div', {\n                id: this.element.id + '_Multi_CellSelection_Canvas',\n                styles: 'position:relative'\n            });\n            this.element.appendChild(divElement);\n            divElement.appendChild(this.svgObject);\n            this.svgObject.style.position = 'absolute';\n            this.svgObject.style.left = '0px';\n            this.svgObject.style.top = '0px';\n            this.svgObject.style.zIndex = '0';\n        }\n        else {\n            var element = document.getElementById(this.element.id + '_Multi_CellSelection_Canvas');\n            var secondaryCanvas = this.secondaryCanvasRenderer.createCanvas({\n                width: this.availableSize.width,\n                height: this.availableSize.height, x: 0, y: 0,\n                style: 'position: absolute; z-index: 1'\n            });\n            element.appendChild(secondaryCanvas);\n        }\n    };\n    __decorate([\n        Property(null)\n    ], HeatMap.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], HeatMap.prototype, \"height\", void 0);\n    __decorate([\n        Property(true)\n    ], HeatMap.prototype, \"showTooltip\", void 0);\n    __decorate([\n        Event()\n    ], HeatMap.prototype, \"tooltipRender\", void 0);\n    __decorate([\n        Event()\n    ], HeatMap.prototype, \"resized\", void 0);\n    __decorate([\n        Event()\n    ], HeatMap.prototype, \"loaded\", void 0);\n    __decorate([\n        Event()\n    ], HeatMap.prototype, \"cellRender\", void 0);\n    __decorate([\n        Event()\n    ], HeatMap.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Property('SVG')\n    ], HeatMap.prototype, \"renderingMode\", void 0);\n    __decorate([\n        Property(null)\n    ], HeatMap.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property('Material')\n    ], HeatMap.prototype, \"theme\", void 0);\n    __decorate([\n        Property(false)\n    ], HeatMap.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], HeatMap.prototype, \"margin\", void 0);\n    __decorate([\n        Complex({ text: '', textStyle: Theme.heatMapTitleFont }, Title)\n    ], HeatMap.prototype, \"titleSettings\", void 0);\n    __decorate([\n        Complex({}, Axis)\n    ], HeatMap.prototype, \"xAxis\", void 0);\n    __decorate([\n        Complex({}, LegendSettings)\n    ], HeatMap.prototype, \"legendSettings\", void 0);\n    __decorate([\n        Complex({}, PaletteSettings)\n    ], HeatMap.prototype, \"paletteSettings\", void 0);\n    __decorate([\n        Complex({}, TooltipSettings)\n    ], HeatMap.prototype, \"tooltipSettings\", void 0);\n    __decorate([\n        Complex({}, Axis)\n    ], HeatMap.prototype, \"yAxis\", void 0);\n    __decorate([\n        Complex({}, CellSettings)\n    ], HeatMap.prototype, \"cellSettings\", void 0);\n    __decorate([\n        Event()\n    ], HeatMap.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], HeatMap.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], HeatMap.prototype, \"cellClick\", void 0);\n    __decorate([\n        Event()\n    ], HeatMap.prototype, \"legendRender\", void 0);\n    HeatMap = __decorate([\n        NotifyPropertyChanges\n    ], HeatMap);\n    return HeatMap;\n}(Component));\nexport { HeatMap };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { isNullOrUndefined, Complex } from '@syncfusion/ej2-base';\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\nimport { DataUtil } from '@syncfusion/ej2-data';\nimport { increaseDateTimeInterval } from '../utils/helper';\nimport { BubbleData } from '../model/base';\n/**\n * Configures the Adaptor Property in the Heatmap.\n */\nvar Data = /** @class */ (function (_super) {\n    __extends(Data, _super);\n    function Data() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Data.prototype, \"data\", void 0);\n    __decorate([\n        Property(false)\n    ], Data.prototype, \"isJsonData\", void 0);\n    __decorate([\n        Property('cell')\n    ], Data.prototype, \"adaptorType\", void 0);\n    __decorate([\n        Property('')\n    ], Data.prototype, \"xDataMapping\", void 0);\n    __decorate([\n        Property('')\n    ], Data.prototype, \"yDataMapping\", void 0);\n    __decorate([\n        Property('')\n    ], Data.prototype, \"valueMapping\", void 0);\n    __decorate([\n        Complex({}, BubbleData)\n    ], Data.prototype, \"bubbleDataMapping\", void 0);\n    return Data;\n}(ChildProperty));\nexport { Data };\nvar AdaptiveMinMax = /** @class */ (function () {\n    function AdaptiveMinMax() {\n    }\n    return AdaptiveMinMax;\n}());\nexport { AdaptiveMinMax };\n/**\n *\n * The `Adaptor` module is used to handle JSON and Table data.\n */\nvar Adaptor = /** @class */ (function () {\n    function Adaptor(heatMap) {\n        this.reconstructedXAxis = [];\n        this.reconstructedYAxis = [];\n        this.adaptiveXMinMax = new AdaptiveMinMax();\n        this.adaptiveYMinMax = new AdaptiveMinMax();\n        this.heatMap = heatMap;\n    }\n    /**\n     * Method to construct Two Dimentional Datasource.\n     * @return {void}\n     * @private\n     */\n    Adaptor.prototype.constructDatasource = function (adaptData) {\n        if (adaptData.adaptorType === 'Cell') {\n            var xAxis = this.heatMap.xAxis;\n            var yAxis = this.heatMap.yAxis;\n            this.adaptiveXMinMax.min = xAxis.minimum;\n            this.adaptiveXMinMax.max = xAxis.maximum;\n            this.adaptiveYMinMax.min = yAxis.minimum;\n            this.adaptiveYMinMax.max = yAxis.maximum;\n            if (((xAxis.valueType === 'Numeric' || xAxis.valueType === 'DateTime') &&\n                (isNullOrUndefined(xAxis.minimum) || isNullOrUndefined(xAxis.maximum))) ||\n                ((yAxis.valueType === 'Numeric' || yAxis.valueType === 'DateTime') &&\n                    (isNullOrUndefined(yAxis.minimum) || isNullOrUndefined(yAxis.maximum)))) {\n                this.getMinMaxValue(adaptData, xAxis, yAxis);\n            }\n            this.heatMap.isCellData = true;\n        }\n        if (adaptData && adaptData.data === undefined) {\n            this.heatMap.completeAdaptDataSource = adaptData;\n        }\n        else if (!adaptData.isJsonData && adaptData.adaptorType === 'Table' || adaptData.data === null) {\n            this.heatMap.completeAdaptDataSource = adaptData.data;\n        }\n        else if (adaptData.isJsonData && adaptData.adaptorType === 'Table') {\n            this.heatMap.completeAdaptDataSource = this.processJsonTableData(adaptData);\n        }\n        else if (adaptData.isJsonData && adaptData.adaptorType === 'Cell') {\n            this.heatMap.completeAdaptDataSource = this.processJsonCellData(adaptData);\n        }\n        else if (!adaptData.isJsonData && adaptData.adaptorType === 'Cell') {\n            this.constructAdaptiveAxis();\n            this.heatMap.completeAdaptDataSource = this.processCellData(adaptData);\n            this.heatMap.isCellData = true;\n        }\n    };\n    /**\n     * Method to construct Axis Collection.\n     * @return {void}\n     * @private\n     */\n    Adaptor.prototype.constructAdaptiveAxis = function () {\n        var xAxis = this.heatMap.xAxis;\n        var yAxis = this.heatMap.yAxis;\n        var intervalType;\n        if (xAxis.valueType === 'Numeric') {\n            this.reconstructedXAxis = this.getNumericAxisCollection(this.adaptiveXMinMax.min, this.adaptiveXMinMax.max, xAxis.increment);\n        }\n        if (yAxis.valueType === 'Numeric') {\n            this.reconstructedYAxis = this.getNumericAxisCollection(this.adaptiveYMinMax.min, this.adaptiveYMinMax.max, yAxis.increment);\n        }\n        if (xAxis.valueType === 'DateTime') {\n            this.reconstructedXAxis = this.getDateAxisCollection(this.adaptiveXMinMax.min, this.adaptiveXMinMax.max, xAxis.intervalType, xAxis.increment);\n        }\n        if (yAxis.valueType === 'DateTime') {\n            this.reconstructedYAxis = this.getDateAxisCollection(this.adaptiveYMinMax.min, this.adaptiveYMinMax.max, yAxis.intervalType, yAxis.increment);\n        }\n    };\n    /**\n     * Method to calculate Numeric Axis Collection.\n     * @return {string[]}\n     * @private\n     */\n    Adaptor.prototype.getNumericAxisCollection = function (min, max, increment) {\n        var loopIndex = min;\n        var tempAxisColl = [];\n        while (loopIndex <= max) {\n            tempAxisColl.push(loopIndex.toString());\n            loopIndex = loopIndex + increment;\n        }\n        return tempAxisColl;\n    };\n    /**\n     * Method to calculate DateTime Axis Collection.\n     * @return {string[]}\n     * @private\n     */\n    Adaptor.prototype.getDateAxisCollection = function (min, max, intervalType, increment) {\n        var option = {\n            skeleton: 'full',\n            type: 'dateTime'\n        };\n        var dateParser = this.heatMap.intl.getDateParser(option);\n        var dateFormatter = this.heatMap.intl.getDateFormat(option);\n        min = Date.parse(dateParser(dateFormatter(new Date(DataUtil.parse.parseJson({ val: min }).val))));\n        var tempInterval = min;\n        var tempAxisColl = [];\n        while (tempInterval <= max) {\n            tempAxisColl.push(new Date(tempInterval).toString());\n            tempInterval = increaseDateTimeInterval(tempInterval, 1, intervalType, increment).getTime();\n        }\n        return tempAxisColl;\n    };\n    /**\n     * Method to calculate Maximum and Minimum Value from datasource.\n     * @return {void}\n     * @private\n     */\n    Adaptor.prototype.getMinMaxValue = function (adapData, xAxis, yAxis) {\n        var data = adapData.data;\n        var label = Object.keys(data[0]);\n        if (data.length > 0) {\n            this.adaptiveXMinMax.min = !isNullOrUndefined(xAxis.minimum) ? xAxis.minimum : adapData.isJsonData ?\n                // tslint:disable-next-line:no-any\n                data[0][label[0]] : data[0][0];\n            this.adaptiveYMinMax.min = !isNullOrUndefined(yAxis.minimum) ? yAxis.minimum : adapData.isJsonData ?\n                // tslint:disable-next-line:no-any\n                data[0][label[1]] : data[0][1];\n            this.adaptiveXMinMax.max = !isNullOrUndefined(xAxis.maximum) ? xAxis.maximum : adapData.isJsonData ?\n                // tslint:disable-next-line:no-any\n                data[0][label[0]] : data[0][0];\n            this.adaptiveYMinMax.max = !isNullOrUndefined(yAxis.maximum) ? yAxis.maximum : adapData.isJsonData ?\n                // tslint:disable-next-line:no-any\n                data[0][label[1]] : data[0][1];\n        }\n        for (var dataIndex = 0; dataIndex < data.length; dataIndex++) {\n            // tslint:disable-next-line:no-any\n            var xDataIndex = adapData.isJsonData ? data[dataIndex][label[0]] : data[dataIndex][0];\n            // tslint:disable-next-line:no-any\n            var yDataIndex = adapData.isJsonData ? data[dataIndex][label[1]] : data[dataIndex][1];\n            if (xDataIndex < this.adaptiveXMinMax.min && isNullOrUndefined(xAxis.minimum)) {\n                this.adaptiveXMinMax.min = xDataIndex;\n            }\n            if (xDataIndex > this.adaptiveXMinMax.max && isNullOrUndefined(xAxis.maximum)) {\n                this.adaptiveXMinMax.max = xDataIndex;\n            }\n            if (yDataIndex < this.adaptiveYMinMax.min && isNullOrUndefined(yAxis.minimum)) {\n                this.adaptiveYMinMax.min = yDataIndex;\n            }\n            if (yDataIndex > this.adaptiveYMinMax.max && isNullOrUndefined(yAxis.maximum)) {\n                this.adaptiveYMinMax.max = yDataIndex;\n            }\n        }\n    };\n    /**\n     * Method to process Cell datasource.\n     * @return {Object}\n     * @private\n     */\n    Adaptor.prototype.processCellData = function (adaptordata) {\n        // tslint:disable-next-line:no-any \n        var tempDataCollection = adaptordata.data;\n        var xLabels = this.reconstructedXAxis;\n        var yLabels = this.reconstructedYAxis;\n        var currentDataXIndex = 0;\n        var currentDataYIndex = 0;\n        if (tempDataCollection.length) {\n            this.reconstructData = [];\n            for (var xindex = 0; xindex < tempDataCollection.length; xindex++) {\n                if (this.heatMap.xAxis.valueType === 'Category') {\n                    currentDataXIndex = tempDataCollection[xindex][0];\n                }\n                else {\n                    currentDataXIndex = xLabels.indexOf(tempDataCollection[xindex][0].toString());\n                }\n                if (currentDataXIndex > -1) {\n                    while (!this.reconstructData[currentDataXIndex]) {\n                        this.reconstructData.push([]);\n                    }\n                    if (this.heatMap.yAxis.valueType === 'Category') {\n                        currentDataYIndex = tempDataCollection[xindex][1];\n                    }\n                    else {\n                        currentDataYIndex = yLabels.indexOf(tempDataCollection[xindex][1].toString());\n                    }\n                    if (currentDataYIndex !== -1) {\n                        while (this.reconstructData[currentDataXIndex][currentDataYIndex] !== '') {\n                            this.reconstructData[currentDataXIndex].push('');\n                        }\n                        this.reconstructData[currentDataXIndex][currentDataYIndex] = isNullOrUndefined(tempDataCollection[xindex][2]) ?\n                            '' : tempDataCollection[xindex][2];\n                    }\n                }\n            }\n        }\n        return this.reconstructData;\n    };\n    /**\n     * Method to process JSON Cell datasource.\n     * @return {Object}\n     * @private\n     */\n    Adaptor.prototype.processJsonCellData = function (adaptordata) {\n        // tslint:disable-next-line:no-any \n        var tempDataCollection = adaptordata.data;\n        var xAxisLabels = this.heatMap.xAxis.labels ? this.heatMap.xAxis.labels : [];\n        var yAxisLabels = this.heatMap.yAxis.labels ? this.heatMap.yAxis.labels : [];\n        var axisCollections = this.heatMap.axisCollections;\n        if (xAxisLabels.length === 0 || yAxisLabels.length === 0) {\n            this.generateAxisLabels(adaptordata);\n        }\n        var xLabels = (this.heatMap.xAxis.valueType === 'Category') ? (xAxisLabels.length > 0 ?\n            this.heatMap.xAxis.labels : axisCollections[0].jsonCellLabel) : axisCollections[0].labelValue;\n        var yLabels = (this.heatMap.yAxis.valueType === 'Category') ? (yAxisLabels.length > 0 ?\n            this.heatMap.yAxis.labels : axisCollections[1].jsonCellLabel) : axisCollections[1].labelValue;\n        var currentDataXIndex = 0;\n        var currentDataYIndex = 0;\n        if (tempDataCollection.length) {\n            this.reconstructData = [];\n            for (var index = 0; index < tempDataCollection.length; index++) {\n                currentDataXIndex = this.getSplitDataValue(tempDataCollection[index], adaptordata, xLabels, adaptordata.xDataMapping.split('.'), this.heatMap.xAxis.valueType);\n                if (currentDataXIndex !== -1) {\n                    while (!this.reconstructData[currentDataXIndex]) {\n                        this.reconstructData.push([]);\n                    }\n                    currentDataYIndex = this.getSplitDataValue(tempDataCollection[index], adaptordata, yLabels, adaptordata.yDataMapping.split('.'), this.heatMap.yAxis.valueType);\n                    if (currentDataYIndex !== -1) {\n                        while (isNullOrUndefined(this.reconstructData[currentDataXIndex][currentDataYIndex])) {\n                            this.reconstructData[currentDataXIndex].push('');\n                        }\n                        if (this.heatMap.bubbleSizeWithColor) {\n                            this.reconstructData[currentDataXIndex][currentDataYIndex] = [\n                                this.getSplitDataValue(tempDataCollection[index], adaptordata, null, adaptordata.bubbleDataMapping.size.split('.'), ''),\n                                this.getSplitDataValue(tempDataCollection[index], adaptordata, null, adaptordata.bubbleDataMapping.color.split('.'), '')\n                            ];\n                        }\n                        else {\n                            this.reconstructData[currentDataXIndex][currentDataYIndex] = this.getSplitDataValue(tempDataCollection[index], adaptordata, null, adaptordata.valueMapping.split('.'), '');\n                        }\n                    }\n                }\n            }\n        }\n        return this.reconstructData;\n    };\n    /**\n     * Method to generate axis labels when labels are not given.\n     * @return {string}\n     * @private\n     */\n    Adaptor.prototype.generateAxisLabels = function (adaptordata) {\n        // tslint:disable-next-line:no-any \n        var tempDataCollection = adaptordata.data;\n        var xLabels = this.heatMap.xAxis.labels ? this.heatMap.xAxis.labels : [];\n        var yLabels = this.heatMap.yAxis.labels ? this.heatMap.yAxis.labels : [];\n        var hasXLabels = xLabels.length > 0 ? true : false;\n        var hasYLabels = yLabels.length > 0 ? true : false;\n        var axisCollection = this.heatMap.axisCollections;\n        for (var index = 0; index < axisCollection.length; index++) {\n            var valueType = axisCollection[index].valueType;\n            var axis = axisCollection[index];\n            if (valueType === 'Category') {\n                var hasLabels = void 0;\n                var dataMapping = void 0;\n                var labels = void 0;\n                if (axis.orientation === 'Horizontal') {\n                    hasLabels = hasXLabels;\n                    dataMapping = adaptordata.xDataMapping;\n                    axis.jsonCellLabel = labels = [];\n                }\n                else {\n                    hasLabels = hasYLabels;\n                    dataMapping = adaptordata.yDataMapping;\n                    axis.jsonCellLabel = labels = [];\n                }\n                if (!hasLabels) {\n                    for (var i = 0; i < tempDataCollection.length; i++) {\n                        if (dataMapping in tempDataCollection[i]) {\n                            var xValue = tempDataCollection[i][dataMapping].toString();\n                            if (labels.indexOf(xValue.toString()) === -1) {\n                                labels.push(xValue);\n                            }\n                        }\n                    }\n                }\n            }\n            else if (valueType === 'DateTime') {\n                axis.clearAxisLabel();\n                axis.calculateDateTimeAxisLabel(this.heatMap);\n            }\n            else {\n                axis.clearAxisLabel();\n                axis.calculateNumericAxisLabels(this.heatMap);\n            }\n        }\n    };\n    /**\n     * Method to get data from complex mapping.\n     * @return {number|string}\n     * @private\n     */\n    Adaptor.prototype.getSplitDataValue = function (\n    // tslint:disable-next-line:no-any \n    tempSplitDataCollection, adaptordata, labels, tempSplitData, valueType) {\n        var value = -1;\n        this.tempSplitDataCollection = tempSplitDataCollection;\n        for (var splitIndex = 0; splitIndex < tempSplitData.length; splitIndex++) {\n            value = !isNullOrUndefined(labels) ? (!(valueType === 'DateTime') ?\n                labels.indexOf(this.tempSplitDataCollection[tempSplitData[splitIndex]]) :\n                labels.map(Number).indexOf(+this.tempSplitDataCollection[tempSplitData[splitIndex]])) : null;\n            if (!isNullOrUndefined(this.tempSplitDataCollection)) {\n                this.tempSplitDataCollection = value !== -1 && !isNullOrUndefined(labels) ?\n                    this.tempSplitDataCollection : this.tempSplitDataCollection[tempSplitData[splitIndex]];\n            }\n            if (isNullOrUndefined(this.tempSplitDataCollection)) {\n                break;\n            }\n        }\n        value = !isNullOrUndefined(labels) ? value : isNullOrUndefined(this.tempSplitDataCollection) ||\n            this.tempSplitDataCollection.toString() === '' ? '' : parseFloat(this.tempSplitDataCollection.toString());\n        return value;\n    };\n    /**\n     * Method to process JSON Table datasource.\n     * @return {Object}\n     * @private\n     */\n    Adaptor.prototype.processJsonTableData = function (adaptordata) {\n        // tslint:disable-next-line:no-any \n        var tempDataCollection = adaptordata.data;\n        var currentDataXIndex = 0;\n        var currentDataYIndex = 0;\n        var xLabels = this.heatMap.xAxis.labels ? this.heatMap.xAxis.labels : [];\n        var yLabels = this.heatMap.yAxis.labels ? this.heatMap.yAxis.labels : [];\n        var key;\n        if (tempDataCollection.length) {\n            this.reconstructData = [];\n            for (var xindex = 0; xindex < tempDataCollection.length; xindex++) {\n                currentDataXIndex = this.getSplitDataValue(tempDataCollection[xindex], adaptordata, xLabels, adaptordata.xDataMapping.split('.'), this.heatMap.xAxis.valueType);\n                if (currentDataXIndex !== -1) {\n                    while (!this.reconstructData[currentDataXIndex]) {\n                        this.reconstructData.push([]);\n                    }\n                    for (var index = 0; index < Object.keys(this.tempSplitDataCollection).length; index++) {\n                        key = Object.keys(this.tempSplitDataCollection)[index];\n                        currentDataYIndex = key !== adaptordata.xDataMapping ? yLabels.indexOf(key) : -1;\n                        if (currentDataYIndex !== -1) {\n                            while (isNullOrUndefined(this.reconstructData[currentDataXIndex][currentDataYIndex])) {\n                                this.reconstructData[currentDataXIndex].push('');\n                            }\n                            this.reconstructData[currentDataXIndex][currentDataYIndex] =\n                                isNullOrUndefined(this.tempSplitDataCollection[key]) ?\n                                    '' : this.tempSplitDataCollection[key];\n                        }\n                    }\n                }\n            }\n        }\n        return this.reconstructData;\n    };\n    /**\n     * To destroy the Adaptor.\n     * @return {void}\n     * @private\n     */\n    Adaptor.prototype.destroy = function (heatMap) {\n        /**\n         * No Lines\n         */\n    };\n    ;\n    /**\n     * To get Module name\n     */\n    Adaptor.prototype.getModuleName = function () {\n        return 'Adaptor';\n    };\n    return Adaptor;\n}());\nexport { Adaptor };\n"],"names":["stringToNumber","value","containerSize","undefined","indexOf","parseInt","measureText","text","font","htmlObject","document","getElementById","createElement","id","body","appendChild","innerText","style","position","visibility","fontSize","size","fontWeight","fontStyle","fontFamily","top","left","whiteSpace","lineHeight","Size","clientWidth","clientHeight","titlePositionX","width","leftPadding","rightPadding","titleStyle","textAlignment","sum","values","_i","values_1","length","titlePositionY","heatmapSize","topPadding","bottomPadding","height","rotateTextSize","angle","box","options","renderer","SvgRenderer","svgObject","createSvg","font-size","font-style","font-family","font-weight","transform","text-anchor","createText","getBoundingClientRect","remove","right","bottom","getTitle","title","titleCollection","textOverflow","textWrap","push","textTrim","textNone","currentLabel","maximumWidth","textCollection","split","label","labelCollection","i","len","concat","maxWidth","index","substring","showTooltip","x","y","areaWidth","element","isTouch","heatmap","tooltip","initialClipRect","toString","styles","titleSettings","availableSize","setTimeout","removeElement","getElement","increaseDateTimeInterval","interval","intervalType","increment","result","Date","Math","ceil","setFullYear","getFullYear","setMonth","getMonth","setDate","getDate","setHours","getHours","setMinutes","getMinutes","getTooltipText","tooltipCollection","xPosition","yPosition","region","colorNameToHex","color","window","getComputedStyle","isRGBValue","exec","convertToHexCode","RgbColor","componentToHex","R","G","B","hex","convertHexToColor","formatValue","isCustom","format","tempInterval","formatFun","replace","Theme","heatMapTitleFont","axisTitleFont","axisLabelFont","legendLabelFont","rectLabelFont","tooltipFont","__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Font","_super","apply","Property","ChildProperty","Margin","Border","TooltipBorder","BubbleData","Title","Complex","PaletteCollection","AxisLabelBorder","BubbleSize","MultiLevelCategories","MultiLevelLabels","type","Collection","ColorCollection","BubbleTooltipData","mappingName","bubbleData","valueType","LegendColorCollection","isHidden","PaletteSettings","g","CellColor","heatMap","convertToRGB","colorMapping","previousOffset","nextOffset","offset","Number","percent","isNaN","previousColor","getEqualColor","nextColor","getPercentageColor","rgbToHex","list","convertToHex","itemColor","substr","colorSplit","previous","next","prevColor","getPercentage","full","round","getColorCollection","colorCollection","legendColorCollection","range","minValue","bubbleSizeWithColor","minColorValue","dataSourceMinValue","maxValue","maxColorValue","dataSourceMaxValue","emptyPointColor","paletteSettings","themeStyle","emptyCellColor","tempcolorMapping","orderbyOffset","palette","isCompact","offsets","extend","updateLegendColorCollection","isLabel","unshift","returnCollection","PaletterColor","sort","a","isNullOrUndefined","getColorByValue","rbg","compareValue","cellSettings","tileType","bubbleType","singleValue","legendRange","legendVisibilityByCellType","legendModule","visible","toggledColor","TextElement","fontModel","fontColor","fill","CustomizeOption","PathOption","opacity","dashArray","_this","call","stroke","parseFloat","CurrentRect","xIndex","yIndex","xValue","yValue","displayText","textId","allowCollection","SelectedCellDetails","xLabel","yLabel","cellElement","RectOption","border","rect","borderColor","rx","ry","CircleOption","cx","cy","Rect","TextOption","basic","labelRotation","baseline","dy","TextBasic","anchor","baseLine","Line","x1","y1","x2","y2","LineOption","line","strokewidth","dasharray","PathAttributes","path","borderWidth","Path","innerR","start","end","radius","counterClockWise","DrawSvgCanvas","drawRectangle","properties","parentElement","isFromSeries","enableCanvasRendering","drawCanvasRectangle","canvasRenderer","drawCircle","drawCanvasCircle","drawPath","drawCanvasPath","canvasDrawText","createWrapText","tspanElement","renderOptions","dominant-baseline","createTSpan","drawLine","translateX","translateY","ctx","getOptionValue","toLowerCase","save","fillStyle","textAlign","textBaseline","translate","rotate","PI","fillText","restore","setAttributes","canvas","lineWidth","dashArrayString","setLineDash","strokeStyle","canvasCtx","beginPath","globalAlpha","drawCornerRadius","cornerRadius","moveTo","arcTo","closePath","arc","dataSplit","lineTo","Gradient","GradientColor","colorStop","CanvasTooltip","GradientPointer","pathX1","pathY1","pathX2","pathY2","pathX3","pathY3","CurrentLegendRect","LegendRange","currentPage","ToggleVisibility","MultiLevelPosition","Axis","nearSizes","farSizes","maxLabelSize","titleSize","axisLabels","tooltipLabels","labelValue","axisLabelSize","axisLabelInterval","dateTimeAxisLabelInterval","maxLength","min","max","isIntersect","jsonCellLabel","multiLevelSize","xAxisMultiLabelHeight","yAxisMultiLabelHeight","multiLevelPosition","computeSize","axis","getTitleSize","getMaxLabelSize","getMultilevelLabelsHeight","multiLevelLabels","multiLevelLabelSize","multiPosition","innerPadding","orientation","level0","level1","isInversed","opposedPosition","labelSize","multiLevel","categoryLabel","categories","size_1","textStyle","gap","startPosition","endPosition","multiLevelLabelsHeight","isVertical","padding","map","heatMapAxis","calculateLeftPosition","calculateWidth","maximumTextWidth","abs","overflow","labels","labelIntersectAction","showLabelOn","startX","previousEnd","previousStart","elementSize","axisInterval","startPoint","endPoint","calculateNumericAxisLabels","adaptorMin","adaptorMax","adaptorModule","isCellData","adaptiveXMinMax","adaptiveYMinMax","minimum","maximum","temp","labelFormat","match","intl","getNumberFormat","floor","reverse","calculateCategoryAxisLabels","calculateDateTimeAxisLabel","option","skeleton","dateParser","getDateParser","dateFormatter","getDateFormat","parse","DataUtil","parseJson","val","getTime","getSkeleton","calculateLabelInterval","getTotalLabelLength","numberOfDays","year","month","day","minutes","difference","days","years","months","hours","clearAxisLabel","AxisHelper","drawSvgCanvas","renderAxes","axisElement","createGroup","axes","axisCollections","drawXAxisLine","drawXAxisTitle","drawXAxisLabels","drawYAxisLine","drawYAxisTitle","drawYAxisLabels","drawMultiLevels","parent","titlepadding","axisTitle","calculateVisibleLabels","axisCollection","data","dataSource","processLabels","isJsonData","adaptorType","measureAxis","calculateAxisSize","axis_1","i_1","compactInterval","tempintervel","labelPadding","lableStrtX","labelElement","borderElement","lableRect","drawXAxisBorder","rotateSize","diffHeight","axisLabel","labelInterval","lableStartY","labelRect","Browser","isIE","drawYAxisBorder","lableX","endX","endY","startY","createAxisBorderElement","lableY","labelBorder","pathOptions","canvasTranslate","renderXAxisMultiLevelLabels","renderYAxisMultiLevelLabels","textLength","pathRect","level","alignment","textBasic","i_2","renderXAxisLabelBorder","createBorderElement","labelIndex","renderYAxisLabelBorder","borderIndex","calculateNumberOfDays","date","firstDate","secondDate","givenDate","CellSettings","Series","cellColor","renderRectSeries","createSeriesGroup","isValueInRange","xLength","yLength","tempBorder","circleRadius","tempX","tempY","dataXIndex","dataYIndex","cellSetting","tempWidth","tempHeight","tempVal","tempRectPosition","rectPositionCollection","bubbleColorValue","yAxis","getBubbleRadius","setTextAndColor","rectPosition","renderingMode","updateRectDetails","showLabel","getFormatedText","cellRender","cellRendering","renderTileCell","updateLabelVisibleStatus","renderBubbleCell","renderSectorCell","checkLabelXDisplay","checkLabelYDisplay","tempCircleRadius","getRadiusBypercentage","rangeSelection","isCellValueInRange","themeCellTextStyle","getSaturatedColor","containerTextObject","containerRectObject","toggleValue","clonedDataSource","bubbleText","xAxis","xLabels","yLabels","slice","yLabelValue","argData","isBlazor","cancel","name","trigger","adaptData","isColorValueExist","tempBubbleCollection","bubbleDataMapping","cellBorder","bubblePosition","curve","startAngle","endAngle","cX","cY","X1","Y1","tempcX","tempcY","pathBorderWidth","centerX","centerY","tempColor","sectorContibution","cos","sin","sector","calculateShapes","pathString","merge","circle","bubbleSize","valueInPrecentage","isInversedBubbleSize","saturatedColor","rgbValue","backgroundColor","highlightSvgRect","tempID","tempIndex","tempRectHoverClass","enableCellHighlighting","oldElement","rectSelected","setAttribute","getFormat","getCurrentRect","currentRect","firstRectDetails","heatMapSeries","rectX","rectY","hoverXAxisLabel","hoverXAxisValue","hoverYAxisLabel","hoverYAxisValue","TooltipSettings","Tooltip","isFirst","isFadeout","getModuleName","showHideTooltip","isShow","ele","tooltipObject","fadeOut","firstChild","destroy","createTooltip","tempTooltipText","tool","enableAnimation","location","theme","content","tooltipSettings","template","areaBounds","createTooltipDiv","allowSelection","element2","getTooltipContent","hetmapSeries","value1","value2","renderTooltip","tooltipRender","tooltipCallback","observedArgs","TwoDimensional","processDataSource","tempCloneData","completeDataSource","minVal","maxVal","tempVariable","dataLength","labelLength","cloneDataIndex","minMaxDatasource","tempSizeArray","tempColorArray","z","processDataArray","minMaxVal","getMinMaxValue","internalArray","tempx","minMaxValue","getMinValue","getMaxValue","performSort","filter","checkmin","LegendSettings","Legend","maxLegendLabelSize","gradientScaleSize","segmentCollections","textWrapCollections","labelCollections","legendSize","previousOptions","listPerPage","numberOfPages","listWidth","fillRect","legendRect","lastList","navigationCollections","pagingRect","listInterval","legendLabelTooltip","labelXCollections","labelYCollections","legendXCollections","legendYCollections","legendRectPositionCollection","legendTextRange","visibilityCollections","renderLegendItems","legend","rectItems","legendGroup","legendBound","legendRectScale","rectItemsSvg","legendSettings","enableSmartLegend","resizing","legendOnLoad","rendering","grd","horizontalGradient","createLinearGradient","legendMinValue","legendMaxValue","addColorStop","gradientOptions","gradientColor","cgradientColors","gradientPercentage","linearGradient","drawGradient","rectItem","renderColorAxisGrid","renderSmartLegend","renderLegendLabel","legendScale","listRect","translategroup","calculateListPerPage","paginggroup","renderListLegendMode","smartLegendRect","legendX","legendY","legendWidth","legendHeight","labelDisplayType","dominantBaseline","legendLabel","textWrapWidth","clip","labelX","labelY","legendRectPadding","textPosition","lastChild","clippath","createClipPath","clipRect","renderGradientPointer","e","pageX","pageY","direction","legendPath","cellValue","removeGradientPointer","gradientPointer","keys","background","calculateLegendBounds","legendEventArg","legendRender","calculateListLegendBounds","listHeight","perListWidth","numberOfRows","calculateLegendSize","legendTop","axisTitlePadding","axisHeight","margin","axisWidth","calculateGradientScale","measureListLegendBound","maxHeight","renderPagingElements","rightArrowX","rightArrowY","textSize","textX","pagingTextRect","rightArrowRect","iconSize","rightArrow","leftX","leftArrow","leftArrowRect","leftOption","rightOption","arrow","rightarrow","scale","calculateColorAxisGrid","legendPart","maxTextWrapLength","previousSegmentWidth","nextSegmentWidth","legendElement","renderLegendLabelTooltip","textContent","targetId","offsetWidth","division","legendEventArgs","rectPosition_1","listColor","translatePage","page","isNext","removeChild","childNodes","secondaryCanvasRenderer","initialRect","rectWidth","rectHeight","clearRect","oldCanvas","newCanvas","rectImage","getContext","getImageData","putImageData","currentLegendRect","inverted","legendRangeSelection","clearSelection","updateLegendRangeCollections","HeatMap","isCellTapHold","selectedCellCount","multiSelection","previousSelectedCellsRect","multiCellCollection","selectedMultiCellCollection","tempMultiCellCollection","preRender","initPrivateVariable","unWireEvents","wireEvents","CanvasRenderer","twoDimensional","tempTooltipRectId","setCulture","Internationalization","render","updateBubbleHelperProperty","initAxis","processInitData","setTheme","calculateMaxLength","completeAdaptDataSource","calculateBounds","renderElements","appendSvgObject","tooltipModule","reRenderDatasource","constructDatasource","setRenderMode","renderSecondaryElement","renderBorder","renderTitle","getPersistData","onPropertyChanged","newProp","oldProp","refreshBounds","_a","refresh","refreshBound","removeSvg","calculateSize","createCanvas","createMultiCellDiv","tooltipDiv","divElement","requiredModules","modules","member","args","innerHTML","classList","add","offsetHeight","heatMapTitle","titleTooltip","event","axisTooltip","tooltipText","isHeatmapRect","lastRectDetails","cellTextColor","getThemeColor","titleHeight","titleRect","isIE11Pointer","isPointer","touchStartEvent","stop","touchEndEvent","move","touchMoveEvent","EventHandler","isDevice","heatMapMouseClick","heatMapMouseMove","heatMapMouseLeave","addEventListener","heatMapResize","bind","Touch","tapHold","getDataCollection","setCellOpacity","tap","isCellTap","tooltipOnMouseMove","setStyle","touchAction","msTouchAction","msContentZooming","msUserSelect","webkitUserSelect","display","removeEventListener","currentSize","previousSize","resizeTimer","clearTimeout","isDestroyed","updateCellSelection","wSize","hSize","topPositions","bottomPositions","rightPosition","leftPosition","containersRect","containerText","cellIndex","getText","addSvgClass","clearSVGSelection","elementClassName","getAttribute","removeSvgClass","xAxisMax","yAxisMax","length_1","setMouseXY","svgCanvasRect","mouseX","mouseY","touchArg","elementRect","changedTouches","clientY","clientX","notify","loop","toggleVisibility","isheatmapRect","showGradientPointer","renderMousePointer","isshowTooltip","which","cellSelectionOnMouseMove","tooltipRect","previousRect","initialCellX","initialCellY","preventDefault","highlightSelectedCells","tooltipTimer","pXIndex","pYIndex","cXIndex","cYIndex","selectedCellsRect","ctrlKey","removeSelectedCellsBorder","parentDiv","minX","maxX","minY","maxY","cellX","cellY","getCellCollection","checkSelectedCells","canvasSelectedCells","singleCellData","getSelectedCellData","rects","containerRect","highlightSelectedAreaInCanvas","topPosition","bottomPosition","cellCollection","cellDetails","j","rectElement","splice","className","cursor","tooltipElement_1","legendTooltipTimer","gradientTimer","main","removeOpacity","collectionClasss","onLoad","zIndex","secondaryCanvas","Event","NotifyPropertyChanges","Component","Data","AdaptiveMinMax","Adaptor","reconstructedXAxis","reconstructedYAxis","processJsonTableData","processJsonCellData","constructAdaptiveAxis","processCellData","getNumericAxisCollection","getDateAxisCollection","loopIndex","tempAxisColl","adapData","dataIndex","xDataIndex","yDataIndex","adaptordata","tempDataCollection","currentDataXIndex","currentDataYIndex","reconstructData","xindex","xAxisLabels","yAxisLabels","generateAxisLabels","getSplitDataValue","xDataMapping","yDataMapping","valueMapping","hasXLabels","hasYLabels","hasLabels","dataMapping","tempSplitDataCollection","tempSplitData","splitIndex"],"mappings":"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"}