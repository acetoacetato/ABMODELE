import { IFileManager, ReadArgs, SearchArgs } from '../base/interface';
import { DragEventArgs } from '@syncfusion/ej2-base';
import { MenuEventArgs } from '@syncfusion/ej2-navigations';
/**
 * Utility file for common actions
 * @private
 */
export declare function updatePath(node: HTMLLIElement, data: Object, instance: IFileManager): void;
export declare function getPath(element: Element | Node, text: string, hasId: boolean): string;
export declare function getPathId(node: Element): string[];
export declare function getPathNames(element: Element, text: string): string[];
export declare function getParents(element: Element, text: string, isId: boolean, hasId?: boolean): string[];
export declare function generatePath(parent: IFileManager): void;
export declare function removeActive(parent: IFileManager): void;
export declare function activeElement(action: string, parent: IFileManager): boolean;
export declare function addBlur(nodes: Element): void;
export declare function removeBlur(parent?: IFileManager, hover?: string): void;
export declare function getModule(parent: IFileManager, element: Element): void;
export declare function searchWordHandler(parent: IFileManager, value: string, isLayoutChange: boolean): void;
export declare function updateLayout(parent: IFileManager, view: string): void;
export declare function getTargetModule(parent: IFileManager, element: Element): void;
export declare function refresh(parent: IFileManager): void;
export declare function openAction(parent: IFileManager): void;
export declare function getPathObject(parent: IFileManager): Object;
export declare function copyFiles(parent: IFileManager): void;
export declare function cutFiles(parent: IFileManager): void;
export declare function fileType(file: Object): string;
export declare function getImageUrl(parent: IFileManager, item: Object): string;
export declare function getFullPath(parent: IFileManager, data: Object, path: string): string;
export declare function getFullName(item: Object): string;
export declare function getName(parent: IFileManager, data: Object): string;
export declare function getSortedData(parent: IFileManager, items: Object[]): Object[];
export declare function getObject(parent: IFileManager, key: string, value: string): Object;
export declare function createEmptyElement(parent: IFileManager, element: HTMLElement, args: ReadArgs | SearchArgs): void;
export declare function getDirectories(files: Object[]): Object[];
export declare function setNodeId(result: ReadArgs, rootId: string): void;
export declare function setDateObject(args: Object[]): void;
export declare function getLocaleText(parent: IFileManager, text: string): string;
export declare function getCssClass(parent: IFileManager, css: string): string;
export declare function sortbyClickHandler(parent: IFileManager, args: MenuEventArgs): void;
export declare function getSortField(id: string): string;
export declare function setNextPath(parent: IFileManager, path: string): void;
export declare function openSearchFolder(parent: IFileManager, data: Object): void;
export declare function pasteHandler(parent: IFileManager): void;
export declare function validateSubFolder(parent: IFileManager, data: {
    [key: string]: Object;
}[], dropPath: string, dragPath: string): boolean;
export declare function dropHandler(parent: IFileManager): void;
export declare function getParentPath(oldPath: string): string;
export declare function getDirectoryPath(parent: IFileManager, args: ReadArgs): string;
export declare function doPasteUpdate(parent: IFileManager, operation: string, result: ReadArgs): void;
export declare function readDropPath(parent: IFileManager): void;
export declare function getDuplicateData(parent: IFileManager, name: string): object;
export declare function createVirtualDragElement(parent: IFileManager): void;
export declare function dragStopHandler(parent: IFileManager, args: DragEventArgs): void;
export declare function dragStartHandler(parent: IFileManager, args: DragEventArgs): void;
export declare function dragCancel(parent: IFileManager): void;
export declare function removeDropTarget(parent: IFileManager): void;
export declare function removeItemClass(parent: IFileManager, value: string): void;
export declare function draggingHandler(parent: IFileManager, args: DragEventArgs): void;
export declare function objectToString(data: Object): string;
export declare function doRename(parent: IFileManager): void;
export declare function createDeniedDialog(parent: IFileManager, data: Object): void;
export declare function getAccessClass(data: Object): string;
export declare function hasReadAccess(data: Object): boolean;
export declare function hasEditAccess(data: Object): boolean;
export declare function hasContentAccess(data: Object): boolean;
export declare function hasUploadAccess(data: Object): boolean;
export declare function hasDownloadAccess(data: Object): boolean;
