{"version":3,"file":"ej2-excel-export.min.js","sources":["../../src/cell-style.js","../../src/cell.js","../../src/column.js","../../src/row.js","../../src/worksheets.js","../../src/worksheet.js","../../src/value-formatter.js","../../src/csv-helper.js","../../src/blob-helper.js","../../src/workbook.js"],"sourcesContent":["/**\n * CellStyle class\n * @private\n */\nvar CellStyle = /** @class */ (function () {\n    function CellStyle() {\n        this.numFmtId = 0;\n        this.backColor = 'none';\n        this.fontName = 'Calibri';\n        this.fontSize = 14;\n        this.fontColor = '#000000';\n        this.italic = false;\n        this.bold = false;\n        this.underline = false;\n        this.wrapText = false;\n        this.hAlign = 'general';\n        this.vAlign = 'bottom';\n        this.indent = 0;\n        this.rotation = 0;\n        this.numberFormat = 'GENERAL';\n        this.type = 'datetime';\n        this.borders = new Borders();\n        this.isGlobalStyle = false;\n    }\n    return CellStyle;\n}());\nexport { CellStyle };\n/**\n * Font Class\n * @private\n */\nvar Font = /** @class */ (function () {\n    function Font() {\n        this.sz = 14;\n        this.name = 'Calibri';\n        this.u = false;\n        this.b = false;\n        this.i = false;\n        this.color = 'FF000000';\n    }\n    return Font;\n}());\nexport { Font };\n/**\n * CellXfs class\n * @private\n */\nvar CellXfs = /** @class */ (function () {\n    function CellXfs() {\n    }\n    return CellXfs;\n}());\nexport { CellXfs };\n/**\n * Alignment class\n * @private\n */\nvar Alignment = /** @class */ (function () {\n    function Alignment() {\n    }\n    return Alignment;\n}());\nexport { Alignment };\n/**\n * CellStyleXfs class\n * @private\n */\nvar CellStyleXfs = /** @class */ (function () {\n    function CellStyleXfs() {\n    }\n    return CellStyleXfs;\n}());\nexport { CellStyleXfs };\n/**\n * CellStyles class\n * @private\n */\nvar CellStyles = /** @class */ (function () {\n    function CellStyles() {\n        this.name = 'Normal';\n        this.xfId = 0;\n    }\n    return CellStyles;\n}());\nexport { CellStyles };\n/**\n * NumFmt class\n * @private\n */\nvar NumFmt = /** @class */ (function () {\n    function NumFmt(id, code) {\n        this.numFmtId = id;\n        this.formatCode = code;\n    }\n    return NumFmt;\n}());\nexport { NumFmt };\n/**\n * Border class\n * @private\n */\nvar Border = /** @class */ (function () {\n    function Border(mLine, mColor) {\n        this.lineStyle = mLine;\n        this.color = mColor;\n    }\n    return Border;\n}());\nexport { Border };\n/**\n * Borders class\n * @private\n */\nvar Borders = /** @class */ (function () {\n    function Borders() {\n        this.left = new Border('none', '#FFFFFF');\n        this.right = new Border('none', '#FFFFFF');\n        this.top = new Border('none', '#FFFFFF');\n        this.bottom = new Border('none', '#FFFFFF');\n        this.all = new Border('none', '#FFFFFF');\n    }\n    return Borders;\n}());\nexport { Borders };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * Worksheet class\n * @private\n */\nvar Cell = /** @class */ (function () {\n    function Cell() {\n    }\n    return Cell;\n}());\nexport { Cell };\n/**\n * Cells class\n * @private\n */\nvar Cells = /** @class */ (function (_super) {\n    __extends(Cells, _super);\n    function Cells() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.add = function (cell) {\n            var inserted = false;\n            var count = 0;\n            for (var _i = 0, _a = _this; _i < _a.length; _i++) {\n                var c = _a[_i];\n                if (c.index === cell.index) {\n                    _this[count] = cell;\n                    inserted = true;\n                }\n                count++;\n            }\n            if (!inserted) {\n                _this.push(cell);\n            }\n        };\n        return _this;\n    }\n    return Cells;\n}(Array));\nexport { Cells };\n","/**\n * Column class\n * @private\n */\nvar Column = /** @class */ (function () {\n    function Column() {\n    }\n    return Column;\n}());\nexport { Column };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * Row class\n * @private\n */\nvar Row = /** @class */ (function () {\n    function Row() {\n    }\n    return Row;\n}());\nexport { Row };\n/**\n * Rows class\n * @private\n */\nvar Rows = /** @class */ (function (_super) {\n    __extends(Rows, _super);\n    function Rows() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.add = function (row) {\n            var inserted = false;\n            var count = 0;\n            for (var _i = 0, _a = _this; _i < _a.length; _i++) {\n                var r = _a[_i];\n                if (r.index === row.index) {\n                    _this[count] = row;\n                    inserted = true;\n                }\n                count++;\n            }\n            if (!inserted) {\n                _this.push(row);\n            }\n        };\n        return _this;\n    }\n    return Rows;\n}(Array));\nexport { Rows };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * Worksheets class\n * @private\n */\nvar Worksheets = /** @class */ (function (_super) {\n    __extends(Worksheets, _super);\n    function Worksheets() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return Worksheets;\n}(Array));\nexport { Worksheets };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * Worksheet class\n * @private\n */\nvar Worksheet = /** @class */ (function () {\n    function Worksheet() {\n        this.isSummaryRowBelow = true;\n        this.showGridLines = true;\n    }\n    return Worksheet;\n}());\nexport { Worksheet };\n/**\n * Hyperlink class\n * @private\n */\nvar HyperLink = /** @class */ (function () {\n    function HyperLink() {\n    }\n    return HyperLink;\n}());\nexport { HyperLink };\n/**\n * Grouping class\n * @private\n */\nvar Grouping = /** @class */ (function () {\n    function Grouping() {\n    }\n    return Grouping;\n}());\nexport { Grouping };\n/**\n * FreezePane class\n * @private\n */\nvar FreezePane = /** @class */ (function () {\n    function FreezePane() {\n    }\n    return FreezePane;\n}());\nexport { FreezePane };\n/**\n * MergeCell\n * @private\n */\nvar MergeCell = /** @class */ (function () {\n    function MergeCell() {\n    }\n    return MergeCell;\n}());\nexport { MergeCell };\n/**\n * MergeCells class\n * @private\n */\nvar MergeCells = /** @class */ (function (_super) {\n    __extends(MergeCells, _super);\n    function MergeCells() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.add = function (mergeCell) {\n            var inserted = false;\n            var count = 0;\n            for (var _i = 0, _a = _this; _i < _a.length; _i++) {\n                var mCell = _a[_i];\n                if (MergeCells.isIntersecting(mCell, mergeCell)) {\n                    var intersectingCell = new MergeCell();\n                    intersectingCell.x = Math.min(mCell.x, mergeCell.x);\n                    intersectingCell.y = Math.min(mCell.Y, mergeCell.y);\n                    intersectingCell.width = Math.max(mCell.Width + mCell.X, mergeCell.width + mergeCell.x);\n                    intersectingCell.height = Math.max(mCell.Height + mCell.Y, mergeCell.height + mergeCell.y);\n                    intersectingCell.ref = (_this[count].ref.split(':')[0]) + ':' + (mergeCell.ref.split(':')[1]);\n                    _this[count] = intersectingCell;\n                    mergeCell = intersectingCell;\n                    inserted = true;\n                }\n                count++;\n            }\n            if (!inserted) {\n                _this.push(mergeCell);\n            }\n            return mergeCell;\n        };\n        return _this;\n    }\n    MergeCells.isIntersecting = function (base, compare) {\n        return (base.x <= compare.x + compare.width)\n            && (compare.x <= base.x + base.width)\n            && (base.y <= compare.y + compare.height)\n            && (compare.y <= base.y + base.height);\n    };\n    return MergeCells;\n}(Array));\nexport { MergeCells };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\n// import { IValueFormatter } from '../base/interface';\n/**\n * ValueFormatter class to globalize the value.\n * @private\n */\nvar ValueFormatter = /** @class */ (function () {\n    function ValueFormatter(cultureName) {\n        this.intl = new Internationalization();\n        // if (!isNullOrUndefined(cultureName)) {\n        //     this.intl.culture = cultureName;\n        // }\n    }\n    ValueFormatter.prototype.getFormatFunction = function (format) {\n        if (format.type) {\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    };\n    // public getParserFunction(format: NumberFormatOptions | DateFormatOptions): Function {\n    //     if ((<DateFormatOptions>format).type) {\n    //         return this.intl.getDateParser(<DateFormatOptions>format);\n    //     } else {\n    //         return this.intl.getNumberParser(<DateFormatOptions>format);\n    //     }\n    // }\n    // public fromView(value: string, format: Function, type?: string): string | number | Date {\n    //     if (type === 'date' || type === 'datetime' || type === 'number') {\n    //         return format(value);\n    //     } else {\n    //         return value;\n    //     }\n    // }\n    ValueFormatter.prototype.toView = function (value, format) {\n        var result = value;\n        if (!isNullOrUndefined(format) && !isNullOrUndefined(value)) {\n            result = format(value);\n        }\n        return result;\n    };\n    // public setCulture(cultureName: string): void {\n    //     if (!isNullOrUndefined(cultureName)) {\n    //         setCulture(cultureName);\n    //     }\n    // }\n    /* tslint:disable:no-any */\n    ValueFormatter.prototype.displayText = function (value, format) {\n        return this.toView(value, this.getFormatFunction(format));\n    };\n    return ValueFormatter;\n}());\nexport { ValueFormatter };\n","import { ValueFormatter } from './value-formatter';\n/**\n * CsvHelper class\n * @private\n */\nvar CsvHelper = /** @class */ (function () {\n    /* tslint:disable:no-any */\n    function CsvHelper(json) {\n        this.csvStr = '';\n        this.formatter = new ValueFormatter();\n        this.isMicrosoftBrowser = !(!navigator.msSaveBlob);\n        if (json.styles !== null && json.styles !== undefined) {\n            this.globalStyles = new Map();\n            for (var i = 0; i < json.styles.length; i++) {\n                if (json.styles[i].name !== undefined && json.styles[i].numberFormat !== undefined) {\n                    this.globalStyles.set(json.styles[i].name, json.styles[i].numberFormat);\n                }\n            }\n        }\n        // Parses Worksheets data to DOM.        \n        if (json.worksheets !== null && json.worksheets !== undefined) {\n            this.parseWorksheet(json.worksheets[0]);\n        }\n        //this.csvStr = 'a1,a2,a3\\nb1,b2,b3';\n    }\n    CsvHelper.prototype.parseWorksheet = function (json) {\n        //Rows\n        if (json.rows !== null && json.rows !== undefined) {\n            this.parseRows(json.rows);\n        }\n    };\n    /* tslint:disable:no-any */\n    CsvHelper.prototype.parseRows = function (rows) {\n        var count = 1;\n        for (var _i = 0, rows_1 = rows; _i < rows_1.length; _i++) {\n            var row = rows_1[_i];\n            //Row index\n            if (row.index !== null && row.index !== undefined) {\n                while (count < row.index) {\n                    this.csvStr += '\\n';\n                    count++;\n                }\n                this.parseRow(row);\n            }\n            else {\n                throw Error('Row index is missing.');\n            }\n        }\n    };\n    /* tslint:disable:no-any */\n    CsvHelper.prototype.parseRow = function (row) {\n        if (row.cells !== null && row.cells !== undefined) {\n            var count = 1;\n            for (var _i = 0, _a = row.cells; _i < _a.length; _i++) {\n                var cell = _a[_i];\n                //cell index\n                if (cell.index !== null && cell.index !== undefined) {\n                    while (count < cell.index) {\n                        this.csvStr += ',';\n                        count++;\n                    }\n                    this.parseCell(cell);\n                }\n                else {\n                    throw Error('Cell index is missing.');\n                }\n            }\n        }\n    };\n    /* tslint:disable:no-any */\n    CsvHelper.prototype.parseCell = function (cell) {\n        var csv = this.csvStr;\n        if (cell.value !== undefined) {\n            if (cell.value instanceof Date) {\n                if (cell.style !== undefined && cell.style.numberFormat !== undefined) {\n                    /* tslint:disable-next-line:max-line-length */\n                    try {\n                        csv += this.parseCellValue(this.formatter.displayText(cell.value, { type: 'dateTime', skeleton: cell.style.numberFormat }));\n                    }\n                    catch (error) {\n                        /* tslint:disable-next-line:max-line-length */\n                        csv += this.parseCellValue(this.formatter.displayText(cell.value, { type: 'dateTime', format: cell.style.numberFormat }));\n                    }\n                }\n                else if (cell.style !== undefined && cell.style.name !== undefined && this.globalStyles.has(cell.style.name)) {\n                    /* tslint:disable-next-line:max-line-length */\n                    try {\n                        csv += this.parseCellValue(this.formatter.displayText(cell.value, { type: 'dateTime', skeleton: this.globalStyles.get(cell.style.name) }));\n                    }\n                    catch (error) {\n                        /* tslint:disable-next-line:max-line-length */\n                        csv += this.parseCellValue(this.formatter.displayText(cell.value, { type: 'dateTime', format: this.globalStyles.get(cell.style.name) }));\n                    }\n                }\n                else {\n                    csv += cell.value;\n                }\n            }\n            else if (typeof (cell.value) === 'boolean') {\n                csv += cell.value ? 'TRUE' : 'FALSE';\n            }\n            else if (typeof (cell.value) === 'number') {\n                if (cell.style !== undefined && cell.style.numberFormat !== undefined) {\n                    /* tslint:disable-next-line:max-line-length */\n                    csv += this.parseCellValue(this.formatter.displayText(cell.value, { format: cell.style.numberFormat }));\n                }\n                else if (cell.style !== undefined && cell.style.name !== undefined && this.globalStyles.has(cell.style.name)) {\n                    /* tslint:disable-next-line:max-line-length */\n                    csv += this.parseCellValue(this.formatter.displayText(cell.value, { format: this.globalStyles.get(cell.style.name) }));\n                }\n                else {\n                    csv += cell.value;\n                }\n            }\n            else {\n                csv += this.parseCellValue(cell.value);\n            }\n        }\n        this.csvStr = csv;\n    };\n    CsvHelper.prototype.parseCellValue = function (value) {\n        var val = '';\n        var length = value.length;\n        for (var start = 0; start < length; start++) {\n            if (value[start] === '\\\"') {\n                val += value[start].replace('\\\"', '\\\"\\\"');\n            }\n            else {\n                val += value[start];\n            }\n        }\n        value = val;\n        if (value.indexOf(',') !== -1 || value.indexOf('\\n') !== -1) {\n            return value = '\\\"' + value + '\\\"';\n        }\n        else {\n            return value;\n        }\n    };\n    /**\n     * Saves the file with specified name and sends the file to client browser\n     * @param  {string} fileName- file name to save.\n     * @param  {Blob} buffer- the content to write in file\n     */\n    CsvHelper.prototype.save = function (fileName) {\n        this.buffer = new Blob(['\\ufeff' + this.csvStr], { type: 'text/csv;charset=UTF-8' });\n        if (this.isMicrosoftBrowser) {\n            navigator.msSaveBlob(this.buffer, fileName);\n        }\n        else {\n            var dataUrl_1 = window.URL.createObjectURL(this.buffer);\n            var dwlLink = document.createElementNS('http://www.w3.org/1999/xhtml', 'a');\n            dwlLink.download = fileName;\n            dwlLink.href = dataUrl_1;\n            var event_1 = document.createEvent('MouseEvent');\n            event_1.initEvent('click', true, true);\n            dwlLink.dispatchEvent(event_1);\n            setTimeout(function () {\n                window.URL.revokeObjectURL(dataUrl_1);\n            });\n        }\n    };\n    CsvHelper.prototype.saveAsBlob = function () {\n        return new Blob(['\\ufeff' + this.csvStr], { type: 'text/csv;charset=UTF-8' });\n    };\n    return CsvHelper;\n}());\nexport { CsvHelper };\n","/**\n * BlobHelper class\n * @private\n */\nvar BlobHelper = /** @class */ (function () {\n    function BlobHelper() {\n        /* tslint:disable:no-any */\n        this.parts = [];\n    }\n    /* tslint:disable:no-any */\n    BlobHelper.prototype.append = function (part) {\n        this.parts.push(part);\n        this.blob = undefined; // Invalidate the blob\n    };\n    BlobHelper.prototype.getBlob = function () {\n        return new Blob(this.parts, { type: 'text/plain' });\n    };\n    return BlobHelper;\n}());\nexport { BlobHelper };\n","import { Worksheets } from './worksheets';\nimport { Worksheet, FreezePane, MergeCell, MergeCells, HyperLink, Grouping } from './worksheet';\nimport { CellStyle, Font, Borders, CellXfs, Alignment, NumFmt, CellStyleXfs, CellStyles } from './cell-style';\nimport { Column } from './column';\nimport { Row, Rows } from './row';\nimport { Cell, Cells } from './cell';\nimport { ZipArchive, ZipArchiveItem } from '@syncfusion/ej2-compression';\nimport { CsvHelper } from './csv-helper';\nimport { Internationalization, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { BlobHelper } from './blob-helper';\n/**\n * Workbook class\n */\nvar Workbook = /** @class */ (function () {\n    /* tslint:disable:no-any */\n    function Workbook(json, saveType, culture, currencyString) {\n        this.sharedStringCount = 0;\n        this.unitsProportions = [\n            96 / 75.0,\n            96 / 300.0,\n            96,\n            96 / 25.4,\n            96 / 2.54,\n            1,\n            96 / 72.0,\n            96 / 72.0 / 12700,\n        ];\n        /* tslint:disable:no-any */\n        this.hyperlinkStyle = { fontColor: '#0000FF', underline: true };\n        if (culture !== undefined) {\n            this.culture = culture;\n        }\n        else {\n            this.culture = 'en-US';\n        }\n        if (currencyString !== undefined) {\n            this.currency = currencyString;\n        }\n        else {\n            this.currency = 'USD';\n        }\n        this.intl = new Internationalization(this.culture);\n        this.mSaveType = saveType;\n        if (saveType === 'xlsx') {\n            this.mArchive = new ZipArchive();\n            this.sharedString = [];\n            this.mFonts = [];\n            this.mBorders = [];\n            this.mStyles = [];\n            this.printTitles = new Map();\n            this.cellStyles = new Map();\n            this.mNumFmt = new Map();\n            this.mFills = new Map();\n            this.mStyles.push(new CellStyle());\n            this.mFonts.push(new Font());\n            /* tslint:disable */\n            this.cellStyles.set('Normal', new CellStyles());\n            /* tslint:enable */\n            this.mCellXfs = [];\n            this.mCellStyleXfs = [];\n            if (json.styles !== null && json.styles !== undefined) {\n                /* tslint:disable-next-line:no-any */\n                this.globalStyles = new Map();\n                for (var i = 0; i < json.styles.length; i++) {\n                    if (json.styles[i].name !== undefined) {\n                        if (!this.cellStyles.has(json.styles[i].name)) {\n                            var cellStyle = new CellStyle();\n                            cellStyle.isGlobalStyle = true;\n                            this.parserCellStyle(json.styles[i], cellStyle, 'none');\n                            var cellStylesIn = new CellStyles();\n                            cellStylesIn.name = cellStyle.name;\n                            cellStylesIn.xfId = (cellStyle.index - 1);\n                            this.cellStyles.set(cellStylesIn.name, cellStylesIn);\n                            /* tslint:disable-next-line:no-any */\n                            var tFormat = {};\n                            if (json.styles[i].numberFormat !== undefined) {\n                                tFormat.format = json.styles[i].numberFormat;\n                            }\n                            if (json.styles[i].type !== undefined) {\n                                tFormat.type = json.styles[i].type;\n                            }\n                            else {\n                                tFormat.type = 'datetime';\n                            }\n                            if (tFormat.format !== undefined) {\n                                this.globalStyles.set(json.styles[i].name, tFormat);\n                            }\n                        }\n                        else {\n                            throw Error('Style name ' + json.styles[i].name + ' is already existed');\n                        }\n                    }\n                }\n            }\n            // Parses Worksheets data to DOM.        \n            if (json.worksheets !== null && json.worksheets !== undefined) {\n                this.parserWorksheets(json.worksheets);\n            }\n            else {\n                throw Error('Worksheet is expected.');\n            }\n            // Parses the BuiltInProperties data to DOM.        \n            if (json.builtInProperties !== null && json.builtInProperties !== undefined) {\n                this.builtInProperties = new BuiltInProperties();\n                this.parserBuiltInProperties(json.builtInProperties, this.builtInProperties);\n            }\n        }\n        else {\n            this.csvHelper = new CsvHelper(json);\n        }\n    }\n    /* tslint:disable:no-any */\n    Workbook.prototype.parserBuiltInProperties = function (jsonBuiltInProperties, builtInProperties) {\n        //Author\n        if (jsonBuiltInProperties.author !== null && jsonBuiltInProperties.author !== undefined) {\n            builtInProperties.author = jsonBuiltInProperties.author;\n        }\n        //Comments\n        if (jsonBuiltInProperties.comments !== null && jsonBuiltInProperties.comments !== undefined) {\n            builtInProperties.comments = jsonBuiltInProperties.comments;\n        }\n        //Category\n        if (jsonBuiltInProperties.category !== null && jsonBuiltInProperties.category !== undefined) {\n            builtInProperties.category = jsonBuiltInProperties.category;\n        }\n        //Company\n        if (jsonBuiltInProperties.company !== null && jsonBuiltInProperties.company !== undefined) {\n            builtInProperties.company = jsonBuiltInProperties.company;\n        }\n        //Manager\n        if (jsonBuiltInProperties.manager !== null && jsonBuiltInProperties.manager !== undefined) {\n            builtInProperties.manager = jsonBuiltInProperties.manager;\n        }\n        //Subject\n        if (jsonBuiltInProperties.subject !== null && jsonBuiltInProperties.subject !== undefined) {\n            builtInProperties.subject = jsonBuiltInProperties.subject;\n        }\n        //Title\n        if (jsonBuiltInProperties.title !== null && jsonBuiltInProperties.title !== undefined) {\n            builtInProperties.title = jsonBuiltInProperties.title;\n        }\n        //Creation date\n        if (jsonBuiltInProperties.createdDate !== null && jsonBuiltInProperties.createdDate !== undefined) {\n            builtInProperties.createdDate = jsonBuiltInProperties.createdDate;\n        }\n        //Modified date\n        if (jsonBuiltInProperties.modifiedDate !== null && jsonBuiltInProperties.modifiedDate !== undefined) {\n            builtInProperties.modifiedDate = jsonBuiltInProperties.modifiedDate;\n        }\n        //Tags\n        if (jsonBuiltInProperties.tags !== null && jsonBuiltInProperties.tags !== undefined) {\n            builtInProperties.tags = jsonBuiltInProperties.tags;\n        }\n        //Status\n        if (jsonBuiltInProperties.status !== null && jsonBuiltInProperties.status !== undefined) {\n            builtInProperties.status = jsonBuiltInProperties.status;\n        }\n    };\n    /* tslint:disable:no-any */\n    Workbook.prototype.parserWorksheets = function (json) {\n        this.worksheets = new Worksheets();\n        var length = json.length;\n        for (var i = 0; i < length; i++) {\n            var jsonSheet = json[i];\n            var sheet = new Worksheet();\n            this.mergeCells = new MergeCells();\n            this.mergedCellsStyle = new Map();\n            this.mHyperLinks = [];\n            //Name\n            if (jsonSheet.name !== null && jsonSheet.name !== undefined) {\n                sheet.name = jsonSheet.name;\n            }\n            else {\n                sheet.name = 'Sheet' + (i + 1).toString();\n            }\n            sheet.index = (i + 1);\n            //Columns\n            if (jsonSheet.columns !== null && jsonSheet.columns !== undefined) {\n                this.parserColumns(jsonSheet.columns, sheet);\n            }\n            //Rows\n            if (jsonSheet.rows !== null && jsonSheet.rows !== undefined) {\n                this.parserRows(jsonSheet.rows, sheet);\n            }\n            //showGridLines\n            if (jsonSheet.showGridLines !== null && jsonSheet.showGridLines !== undefined) {\n                sheet.showGridLines = jsonSheet.showGridLines;\n            }\n            //FreezePanes\n            if (jsonSheet.freeze !== null && jsonSheet.freeze !== undefined) {\n                this.parserFreezePanes(jsonSheet.freeze, sheet);\n            }\n            //Print Title\n            if (jsonSheet.printTitle !== null && jsonSheet.printTitle !== undefined) {\n                this.parserPrintTitle(jsonSheet.printTitle, sheet);\n            }\n            if (jsonSheet.pageSetup !== undefined) {\n                if (jsonSheet.pageSetup.isSummaryRowBelow !== undefined) {\n                    sheet.isSummaryRowBelow = jsonSheet.pageSetup.isSummaryRowBelow;\n                }\n            }\n            sheet.index = (i + 1);\n            sheet.mergeCells = this.mergeCells;\n            sheet.hyperLinks = this.mHyperLinks;\n            this.worksheets.push(sheet);\n        }\n    };\n    /* tslint:disable:no-any */\n    Workbook.prototype.mergeOptions = function (fromJson, toJson) {\n        /* tslint:disable:no-any */\n        var result = {};\n        this.applyProperties(fromJson, result);\n        this.applyProperties(toJson, result);\n        return result;\n    };\n    /* tslint:disable:no-any */\n    Workbook.prototype.applyProperties = function (sourceJson, destJson) {\n        var keys = Object.keys(sourceJson);\n        for (var index = 0; index < keys.length; index++) {\n            if (keys[index] !== 'name') {\n                destJson[keys[index]] = sourceJson[keys[index]];\n            }\n        }\n    };\n    Workbook.prototype.getCellName = function (row, column) {\n        return this.getColumnName(column) + row.toString();\n    };\n    Workbook.prototype.getColumnName = function (col) {\n        col--;\n        var strColumnName = '';\n        do {\n            var iCurrentDigit = col % 26;\n            col = col / 26 - 1;\n            strColumnName = String.fromCharCode(65 + iCurrentDigit) + strColumnName;\n        } while (col >= 0);\n        return strColumnName;\n    };\n    /* tslint:disable:no-any */\n    Workbook.prototype.parserPrintTitle = function (json, sheet) {\n        var printTitleName = '';\n        var titleRowName;\n        if (json.fromRow !== null && json.fromRow !== undefined) {\n            var fromRow = json.fromRow;\n            var toRow = void 0;\n            if (json.toRow !== null && json.toRow !== undefined) {\n                toRow = json.toRow;\n            }\n            else {\n                toRow = json.fromRow;\n            }\n            titleRowName = '$' + fromRow + ':$' + toRow;\n        }\n        var titleColName;\n        if (json.fromColumn !== null && json.fromColumn !== undefined) {\n            var fromColumn = json.fromColumn;\n            var toColumn = void 0;\n            if (json.toColumn !== null && json.toColumn !== undefined) {\n                toColumn = json.toColumn;\n            }\n            else {\n                toColumn = json.fromColumn;\n            }\n            titleColName = '$' + this.getColumnName(fromColumn) + ':$' + this.getColumnName(toColumn);\n        }\n        if (titleRowName !== undefined) {\n            printTitleName += (sheet.name + '!' + titleRowName);\n        }\n        if (titleColName !== undefined && titleRowName !== undefined) {\n            printTitleName += ',' + (sheet.name + '!' + titleColName);\n        }\n        else if (titleColName !== undefined) {\n            printTitleName += (sheet.name + '!' + titleColName);\n        }\n        if (printTitleName !== '') {\n            this.printTitles.set(sheet.index - 1, printTitleName);\n        }\n    };\n    /* tslint:disable:no-any */\n    Workbook.prototype.parserFreezePanes = function (json, sheet) {\n        sheet.freezePanes = new FreezePane();\n        if (json.row !== null && json.row !== undefined) {\n            sheet.freezePanes.row = json.row;\n        }\n        else {\n            sheet.freezePanes.row = 0;\n        }\n        if (json.column !== null && json.column !== undefined) {\n            sheet.freezePanes.column = json.column;\n        }\n        else {\n            sheet.freezePanes.column = 0;\n        }\n        sheet.freezePanes.leftCell = this.getCellName(sheet.freezePanes.row + 1, sheet.freezePanes.column + 1);\n    };\n    /* tslint:disable:no-any */\n    Workbook.prototype.parserColumns = function (json, sheet) {\n        var columnsLength = json.length;\n        sheet.columns = [];\n        for (var column = 0; column < columnsLength; column++) {\n            var col = new Column();\n            if (json[column].index !== null && json[column].index !== undefined) {\n                col.index = json[column].index;\n            }\n            else {\n                throw Error('Column index is missing.');\n            }\n            if (json[column].width !== null && json[column].width !== undefined) {\n                col.width = json[column].width;\n            }\n            sheet.columns.push(col);\n        }\n    };\n    /* tslint:disable:no-any */\n    Workbook.prototype.parserRows = function (json, sheet) {\n        var rowsLength = json.length;\n        sheet.rows = new Rows();\n        var rowId = 0;\n        for (var r = 0; r < rowsLength; r++) {\n            var row = this.parserRow(json[r], rowId);\n            rowId = row.index;\n            sheet.rows.add(row);\n        }\n        this.insertMergedCellsStyle(sheet);\n    };\n    Workbook.prototype.insertMergedCellsStyle = function (sheet) {\n        var _this = this;\n        if (this.mergeCells.length > 0) {\n            this.mergedCellsStyle.forEach(function (value, key) {\n                var row = sheet.rows.filter(function (item) {\n                    return item.index === value.y;\n                })[0];\n                if (!isNullOrUndefined(row)) {\n                    var cell = row.cells.filter(function (item) {\n                        return item.index === value.x;\n                    })[0];\n                    if (!isNullOrUndefined(cell)) {\n                        cell.styleIndex = value.styleIndex;\n                    }\n                    else {\n                        var cells = row.cells.filter(function (item) {\n                            return item.index <= value.x;\n                        });\n                        var insertIndex = 0;\n                        if (cells.length > 0) {\n                            insertIndex = row.cells.indexOf(cells[cells.length - 1]) + 1;\n                        }\n                        row.cells.splice(insertIndex, 0, _this.createCell(value, key));\n                    }\n                }\n                else {\n                    var rows = sheet.rows.filter(function (item) {\n                        return item.index <= value.y;\n                    });\n                    var rowToInsert = new Row();\n                    rowToInsert.index = value.y;\n                    rowToInsert.cells = new Cells();\n                    rowToInsert.cells.add(_this.createCell(value, key));\n                    var insertIndex = 0;\n                    if (rows.length > 0) {\n                        insertIndex = sheet.rows.indexOf(rows[rows.length - 1]) + 1;\n                    }\n                    sheet.rows.splice(insertIndex, 0, rowToInsert);\n                }\n            });\n        }\n    };\n    Workbook.prototype.createCell = function (value, key) {\n        var cellToInsert = new Cell();\n        cellToInsert.refName = key;\n        cellToInsert.index = value.x;\n        cellToInsert.cellStyle = new CellStyle();\n        cellToInsert.styleIndex = value.styleIndex;\n        return cellToInsert;\n    };\n    /* tslint:disable:no-any */\n    Workbook.prototype.parserRow = function (json, rowIndex) {\n        var row = new Row();\n        //Row Height\n        if (json.height !== null && json.height !== undefined) {\n            row.height = json.height;\n        }\n        //Row index\n        if (json.index !== null && json.index !== undefined) {\n            row.index = json.index;\n        }\n        else {\n            throw Error('Row index is missing.');\n        }\n        if (json.grouping !== null && json.grouping !== undefined) {\n            this.parseGrouping(json.grouping, row);\n        }\n        this.parseCells(json.cells, row);\n        return row;\n    };\n    /* tslint:disable:no-any */\n    Workbook.prototype.parseGrouping = function (json, row) {\n        row.grouping = new Grouping();\n        if (json.outlineLevel !== undefined) {\n            row.grouping.outlineLevel = json.outlineLevel;\n        }\n        if (json.isCollapsed !== undefined) {\n            row.grouping.isCollapsed = json.isCollapsed;\n        }\n        if (json.isHidden !== undefined) {\n            row.grouping.isHidden = json.isHidden;\n        }\n    };\n    /* tslint:disable:no-any */\n    Workbook.prototype.parseCells = function (json, row) {\n        row.cells = new Cells();\n        var cellsLength = json !== undefined ? json.length : 0;\n        var spanMin = 1;\n        var spanMax = 1;\n        var curCellIndex = 0;\n        for (var cellId = 0; cellId < cellsLength; cellId++) {\n            /* tslint:disable:no-any */\n            var jsonCell = json[cellId];\n            var cell = new Cell();\n            //cell index\n            if (jsonCell.index !== null && jsonCell.index !== undefined) {\n                cell.index = jsonCell.index;\n            }\n            else {\n                throw Error('Cell index is missing.');\n            }\n            if (cell.index < spanMin) {\n                spanMin = cell.index;\n            }\n            else if (cell.index > spanMax) {\n                spanMax = cell.index;\n            }\n            //Update the Cell name\n            cell.refName = this.getCellName(row.index, cell.index);\n            //Row span\n            if (jsonCell.rowSpan !== null && jsonCell.rowSpan !== undefined) {\n                cell.rowSpan = jsonCell.rowSpan - 1;\n            }\n            else {\n                cell.rowSpan = 0;\n            }\n            //Column span\n            if (jsonCell.colSpan !== null && jsonCell.colSpan !== undefined) {\n                cell.colSpan = jsonCell.colSpan - 1;\n            }\n            else {\n                cell.colSpan = 0;\n            }\n            //Hyperlink\n            if (jsonCell.hyperlink !== null && jsonCell.hyperlink !== undefined) {\n                var hyperLink = new HyperLink();\n                if (jsonCell.hyperlink.target !== undefined) {\n                    hyperLink.target = jsonCell.hyperlink.target;\n                    if (jsonCell.hyperlink.displayText !== undefined) {\n                        cell.value = jsonCell.hyperlink.displayText;\n                    }\n                    else {\n                        cell.value = jsonCell.hyperlink.target;\n                    }\n                    cell.type = this.getCellValueType(cell.value);\n                    hyperLink.ref = cell.refName;\n                    hyperLink.rId = (this.mHyperLinks.length + 1);\n                    this.mHyperLinks.push(hyperLink);\n                    cell.cellStyle = new CellStyle();\n                    /* tslint:disable-next-line:max-line-length */\n                    this.parserCellStyle((jsonCell.style !== undefined ? this.mergeOptions(jsonCell.style, this.hyperlinkStyle) : this.hyperlinkStyle), cell.cellStyle, 'string');\n                    cell.styleIndex = cell.cellStyle.index;\n                }\n            }\n            // formulas\n            if (jsonCell.formula !== null && jsonCell.formula !== undefined) {\n                cell.formula = jsonCell.formula;\n                cell.type = 'formula';\n            }\n            //Cell value\n            if (jsonCell.value !== null && jsonCell.value !== undefined) {\n                if (cell.formula !== undefined) {\n                    cell.value = 0;\n                }\n                else {\n                    cell.value = jsonCell.value;\n                    cell.type = this.getCellValueType(cell.value);\n                }\n            }\n            if (jsonCell.style !== null && jsonCell.style !== undefined && cell.styleIndex === undefined) {\n                cell.cellStyle = new CellStyle();\n                if (cell.value instanceof Date) {\n                    this.parserCellStyle(jsonCell.style, cell.cellStyle, cell.type, 14);\n                }\n                else {\n                    this.parserCellStyle(jsonCell.style, cell.cellStyle, cell.type);\n                }\n                cell.styleIndex = cell.cellStyle.index;\n            }\n            else if (cell.value instanceof Date) {\n                cell.cellStyle = new CellStyle();\n                this.parserCellStyle({}, cell.cellStyle, cell.type, 14);\n                cell.styleIndex = cell.cellStyle.index;\n            }\n            this.parseCellType(cell);\n            this.mergeCells = this.processMergeCells(cell, row.index, this.mergeCells);\n            row.cells.add(cell);\n            curCellIndex = (cell.index + 1);\n        }\n        row.spans = (spanMin) + ':' + (spanMax);\n    };\n    Workbook.prototype.GetColors = function () {\n        var colors;\n        colors = new Map();\n        /* tslint:disable */\n        colors.set('WHITE', 'FFFFFFFF');\n        /* tslint:disable */\n        colors.set('SILVER', 'FFC0C0C0');\n        /* tslint:disable */\n        colors.set('GRAY', 'FF808080');\n        /* tslint:disable */\n        colors.set('BLACK', 'FF000000');\n        /* tslint:disable */\n        colors.set('RED', 'FFFF0000');\n        /* tslint:disable */\n        colors.set('MAROON', 'FF800000');\n        /* tslint:disable */\n        colors.set('YELLOW', 'FFFFFF00');\n        /* tslint:disable */\n        colors.set('OLIVE', 'FF808000');\n        /* tslint:disable */\n        colors.set('LIME', 'FF00FF00');\n        /* tslint:disable */\n        colors.set('GREEN', 'FF008000');\n        /* tslint:disable */\n        colors.set('AQUA', 'FF00FFFF');\n        /* tslint:disable */\n        colors.set('TEAL', 'FF008080');\n        /* tslint:disable */\n        colors.set('BLUE', 'FF0000FF');\n        /* tslint:disable */\n        colors.set('NAVY', 'FF000080');\n        /* tslint:disable */\n        colors.set('FUCHSIA', 'FFFF00FF');\n        /* tslint:disable */\n        colors.set('PURPLE', 'FF800080');\n        return colors;\n    };\n    Workbook.prototype.processColor = function (colorVal) {\n        if (colorVal.startsWith('#')) {\n            return colorVal.replace('#', 'FF');\n        }\n        colorVal = colorVal.toUpperCase();\n        this.rgbColors = this.GetColors();\n        if (this.rgbColors.has(colorVal)) {\n            colorVal = this.rgbColors.get(colorVal);\n        }\n        else {\n            colorVal = 'FF000000';\n        }\n        return colorVal;\n    };\n    Workbook.prototype.processCellValue = function (value, cell) {\n        var cellValue = value;\n        var processedVal = '';\n        var startindex = value.indexOf('<', 0);\n        if (startindex >= 0) {\n            if (startindex !== 0) {\n                processedVal += '<r><t xml:space=\"preserve\">' + value.substring(0, startindex) + '</t></r>';\n            }\n            var endIndex = value.indexOf('>', startindex + 1);\n            while (startindex >= 0 && endIndex >= 0) {\n                endIndex = value.indexOf('>', startindex + 1);\n                if (endIndex >= 0) {\n                    var subString = value.substring(startindex + 1, endIndex);\n                    startindex = value.indexOf('<', endIndex + 1);\n                    if (startindex < 0) {\n                        startindex = cellValue.length;\n                    }\n                    var text = cellValue.substring(endIndex + 1, startindex);\n                    if (text.length !== 0) {\n                        var subSplit = subString.split(' ');\n                        if (subSplit.length > 0) {\n                            processedVal += '<r><rPr>';\n                        }\n                        if (subSplit.length > 1) {\n                            for (var _i = 0, subSplit_1 = subSplit; _i < subSplit_1.length; _i++) {\n                                var element = subSplit_1[_i];\n                                var start = element.trim().substring(0, 5);\n                                switch (start) {\n                                    case 'size=':\n                                        processedVal += '<sz val=\"' + element.substring(6, element.length - 1) + '\"/>';\n                                        break;\n                                    case 'face=':\n                                        processedVal += '<rFont val=\"' + element.substring(6, element.length - 1) + '\"/>';\n                                        break;\n                                    case 'color':\n                                        processedVal += '<color rgb=\"' + this.processColor(element.substring(7, element.length - 1)) + '\"/>';\n                                        break;\n                                    case 'href=':\n                                        var hyperLink = new HyperLink();\n                                        hyperLink.target = element.substring(6, element.length - 1).trim();\n                                        hyperLink.ref = cell.refName;\n                                        hyperLink.rId = (this.mHyperLinks.length + 1);\n                                        this.mHyperLinks.push(hyperLink);\n                                        processedVal += '<color rgb=\"FF0000FF\"/><u/><b/>';\n                                        break;\n                                }\n                            }\n                        }\n                        else if (subSplit.length === 1) {\n                            var style = subSplit[0].trim();\n                            switch (style) {\n                                case 'b':\n                                    processedVal += '<b/>';\n                                    break;\n                                case 'i':\n                                    processedVal += '<i/>';\n                                    break;\n                                case 'u':\n                                    processedVal += '<u/>';\n                                    break;\n                            }\n                        }\n                        processedVal += '</rPr><t xml:space=\"preserve\">' + text + '</t></r>';\n                    }\n                }\n            }\n            if (processedVal === '') {\n                return cellValue;\n            }\n            return processedVal;\n        }\n        else {\n            return cellValue;\n        }\n    };\n    Workbook.prototype.applyGlobalStyle = function (json, cellStyle) {\n        var index = 0;\n        if (this.cellStyles.has(json.name)) {\n            cellStyle.index = this.mStyles.filter(function (a) { return (a.name === json.name); })[0].index;\n            cellStyle.name = json.name;\n        }\n    };\n    /* tslint:disable:no-any */\n    Workbook.prototype.parserCellStyle = function (json, cellStyle, cellType, defStyleIndex) {\n        //name\n        if (json.name !== null && json.name !== undefined) {\n            if (cellStyle.isGlobalStyle) {\n                cellStyle.name = json.name;\n            }\n            else {\n                this.applyGlobalStyle(json, cellStyle);\n                return;\n            }\n        }\n        //background color\n        if (json.backColor !== null && json.backColor !== undefined) {\n            cellStyle.backColor = json.backColor;\n        }\n        //borders\n        //leftBorder\n        cellStyle.borders = new Borders();\n        //AllBorder\n        if (json.borders !== null && json.borders !== undefined) {\n            this.parserBorder(json.borders, cellStyle.borders.all);\n        }\n        //leftborder\n        if (json.leftBorder !== null && json.leftBorder !== undefined) {\n            this.parserBorder(json.leftBorder, cellStyle.borders.left);\n        }\n        //rightBorder\n        if (json.rightBorder !== null && json.rightBorder !== undefined) {\n            this.parserBorder(json.rightBorder, cellStyle.borders.right);\n        }\n        //topBorder\n        if (json.topBorder !== null && json.topBorder !== undefined) {\n            this.parserBorder(json.topBorder, cellStyle.borders.top);\n        }\n        //bottomBorder\n        if (json.bottomBorder !== null && json.bottomBorder !== undefined) {\n            this.parserBorder(json.bottomBorder, cellStyle.borders.bottom);\n        }\n        //fontName\n        if (json.fontName !== null && json.fontName !== undefined) {\n            cellStyle.fontName = json.fontName;\n        }\n        //fontSize\n        if (json.fontSize !== null && json.fontSize !== undefined) {\n            cellStyle.fontSize = json.fontSize;\n        }\n        //fontColor\n        if (json.fontColor !== null && json.fontColor !== undefined) {\n            cellStyle.fontColor = json.fontColor;\n        }\n        //italic\n        if (json.italic !== null && json.italic !== undefined) {\n            cellStyle.italic = json.italic;\n        }\n        //bold\n        if (json.bold !== null && json.bold !== undefined) {\n            cellStyle.bold = json.bold;\n        }\n        //hAlign\n        if (json.hAlign !== null && json.hAlign !== undefined) {\n            cellStyle.hAlign = json.hAlign.toLowerCase();\n        }\n        //indent\n        if (json.indent !== null && json.indent !== undefined) {\n            cellStyle.indent = json.indent;\n            if (!(cellStyle.hAlign === 'left' || cellStyle.hAlign === 'right')) {\n                cellStyle.hAlign = 'left';\n            }\n        }\n        if (json.rotation !== null && json.rotation !== undefined) {\n            cellStyle.rotation = json.rotation;\n        }\n        //vAlign\n        if (json.vAlign !== null && json.vAlign !== undefined) {\n            cellStyle.vAlign = json.vAlign.toLowerCase();\n        }\n        //underline\n        if (json.underline !== null && json.underline !== undefined) {\n            cellStyle.underline = json.underline;\n        }\n        //wrapText\n        if (json.wrapText !== null && json.wrapText !== undefined) {\n            cellStyle.wrapText = json.wrapText;\n        }\n        //numberFormat\n        if (json.numberFormat !== null && json.numberFormat !== undefined) {\n            if (json.type !== null && json.type !== undefined) {\n                cellStyle.numberFormat = this.getNumberFormat(json.numberFormat, json.type);\n            }\n            else {\n                cellStyle.numberFormat = this.getNumberFormat(json.numberFormat, cellType);\n            }\n        }\n        else if (defStyleIndex !== undefined) {\n            cellStyle.numFmtId = 14;\n            cellStyle.numberFormat = 'GENERAL';\n        }\n        else {\n            cellStyle.numberFormat = 'GENERAL';\n        }\n        cellStyle.index = this.processCellStyle(cellStyle);\n    };\n    Workbook.prototype.switchNumberFormat = function (numberFormat, type) {\n        var format = this.getNumberFormat(numberFormat, type);\n        if (format !== numberFormat) {\n            var numFmt = this.mNumFmt.get(numberFormat);\n            if (numFmt !== undefined) {\n                numFmt.formatCode = format;\n                if (this.mNumFmt.has(format)) {\n                    for (var _i = 0, _a = this.mCellStyleXfs; _i < _a.length; _i++) {\n                        var cellStyleXfs = _a[_i];\n                        if (cellStyleXfs.numFmtId === numFmt.numFmtId) {\n                            cellStyleXfs.numFmtId = this.mNumFmt.get(format).numFmtId;\n                        }\n                    }\n                    for (var _b = 0, _c = this.mCellXfs; _b < _c.length; _b++) {\n                        var cellXfs = _c[_b];\n                        if (cellXfs.numFmtId === numFmt.numFmtId) {\n                            cellXfs.numFmtId = this.mNumFmt.get(format).numFmtId;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    Workbook.prototype.getNumberFormat = function (numberFormat, type) {\n        var returnFormat;\n        switch (type) {\n            case 'number':\n                try {\n                    returnFormat = this.intl.getNumberPattern({ format: numberFormat, currency: this.currency });\n                }\n                catch (error) {\n                    returnFormat = numberFormat;\n                }\n                break;\n            case 'datetime':\n                try {\n                    returnFormat = this.intl.getDatePattern({ skeleton: numberFormat, type: 'dateTime' }, true);\n                }\n                catch (error) {\n                    try {\n                        returnFormat = this.intl.getDatePattern({ format: numberFormat, type: 'dateTime' }, true);\n                    }\n                    catch (error) {\n                        returnFormat = numberFormat;\n                    }\n                }\n                break;\n            case 'date':\n                try {\n                    returnFormat = this.intl.getDatePattern({ skeleton: numberFormat, type: 'date' }, true);\n                }\n                catch (error) {\n                    try {\n                        returnFormat = this.intl.getDatePattern({ format: numberFormat, type: 'date' }, true);\n                    }\n                    catch (error) {\n                        returnFormat = numberFormat;\n                    }\n                }\n                break;\n            case 'time':\n                try {\n                    returnFormat = this.intl.getDatePattern({ skeleton: numberFormat, type: 'time' }, true);\n                }\n                catch (error) {\n                    try {\n                        returnFormat = this.intl.getDatePattern({ format: numberFormat, type: 'time' }, true);\n                    }\n                    catch (error) {\n                        returnFormat = numberFormat;\n                    }\n                }\n                break;\n            default:\n                returnFormat = numberFormat;\n                break;\n        }\n        return returnFormat;\n    };\n    /* tslint:disable:no-any */\n    Workbook.prototype.parserBorder = function (json, border) {\n        if (json.color !== null && json.color !== undefined) {\n            border.color = json.color;\n        }\n        else {\n            border.color = '#000000';\n        }\n        if (json.lineStyle !== null && json.lineStyle !== undefined) {\n            border.lineStyle = json.lineStyle;\n        }\n        else {\n            border.lineStyle = 'thin';\n        }\n    };\n    Workbook.prototype.processCellStyle = function (style) {\n        if (style.isGlobalStyle) {\n            this.processNumFormatId(style);\n            this.mStyles.push(style);\n            return this.mStyles.length;\n        }\n        else {\n            var compareResult = this.compareStyle(style);\n            if (!compareResult.result) {\n                this.processNumFormatId(style);\n                this.mStyles.push(style);\n                return this.mStyles.length;\n            }\n            else {\n                //Return the index of the already existing style.\n                return compareResult.index;\n            }\n        }\n    };\n    Workbook.prototype.processNumFormatId = function (style) {\n        if (style.numberFormat !== 'GENERAL' && !this.mNumFmt.has(style.numberFormat)) {\n            var id = this.mNumFmt.size + 164;\n            this.mNumFmt.set(style.numberFormat, new NumFmt(id, style.numberFormat));\n        }\n    };\n    Workbook.prototype.isNewFont = function (toCompareStyle) {\n        var result = false;\n        var index = 0;\n        for (var _i = 0, _a = this.mFonts; _i < _a.length; _i++) {\n            var font = _a[_i];\n            index++;\n            var fontColor = undefined;\n            if (toCompareStyle.fontColor !== undefined) {\n                fontColor = ('FF' + toCompareStyle.fontColor.replace('#', ''));\n            }\n            result = font.color === fontColor &&\n                font.b === toCompareStyle.bold &&\n                font.i === toCompareStyle.italic &&\n                font.u === toCompareStyle.underline &&\n                font.name === toCompareStyle.fontName &&\n                font.sz === toCompareStyle.fontSize;\n            if (result) {\n                break;\n            }\n        }\n        index = index - 1;\n        return { index: index, result: result };\n    };\n    Workbook.prototype.isNewBorder = function (toCompareStyle) {\n        var bStyle = new CellStyle();\n        if (this.isAllBorder(toCompareStyle.borders)) {\n            return (bStyle.borders.all.color === toCompareStyle.borders.all.color &&\n                bStyle.borders.all.lineStyle === toCompareStyle.borders.all.lineStyle);\n        }\n        else {\n            return (bStyle.borders.left.color === toCompareStyle.borders.left.color &&\n                bStyle.borders.left.lineStyle === toCompareStyle.borders.left.lineStyle &&\n                bStyle.borders.right.color === toCompareStyle.borders.right.color &&\n                bStyle.borders.right.lineStyle === toCompareStyle.borders.right.lineStyle &&\n                bStyle.borders.top.color === toCompareStyle.borders.top.color &&\n                bStyle.borders.top.lineStyle === toCompareStyle.borders.top.lineStyle &&\n                bStyle.borders.bottom.color === toCompareStyle.borders.bottom.color &&\n                bStyle.borders.bottom.lineStyle === toCompareStyle.borders.bottom.lineStyle);\n        }\n    };\n    Workbook.prototype.isAllBorder = function (toCompareBorder) {\n        var allBorderStyle = new CellStyle();\n        return allBorderStyle.borders.all.color !== toCompareBorder.all.color &&\n            allBorderStyle.borders.all.lineStyle !== toCompareBorder.all.lineStyle;\n    };\n    Workbook.prototype.compareStyle = function (toCompareStyle) {\n        var result = true;\n        var index = 0;\n        var globalStyleIndex = 0;\n        for (var _i = 0, _a = this.mStyles; _i < _a.length; _i++) {\n            var baseStyle = _a[_i];\n            result = baseStyle.isGlobalStyle ? false : (baseStyle.backColor === toCompareStyle.backColor &&\n                baseStyle.bold === toCompareStyle.bold &&\n                baseStyle.numFmtId === toCompareStyle.numFmtId &&\n                baseStyle.numberFormat === toCompareStyle.numberFormat &&\n                baseStyle.type === toCompareStyle.type &&\n                baseStyle.fontColor === toCompareStyle.fontColor &&\n                baseStyle.fontName === toCompareStyle.fontName &&\n                baseStyle.fontSize === toCompareStyle.fontSize &&\n                baseStyle.hAlign === toCompareStyle.hAlign &&\n                baseStyle.italic === toCompareStyle.italic &&\n                baseStyle.underline === toCompareStyle.underline &&\n                baseStyle.vAlign === toCompareStyle.vAlign &&\n                baseStyle.indent === toCompareStyle.indent &&\n                baseStyle.rotation === toCompareStyle.rotation &&\n                baseStyle.wrapText === toCompareStyle.wrapText &&\n                (baseStyle.borders.all.color === toCompareStyle.borders.all.color &&\n                    baseStyle.borders.all.lineStyle === toCompareStyle.borders.all.lineStyle) &&\n                (baseStyle.borders.left.color === toCompareStyle.borders.left.color &&\n                    baseStyle.borders.left.lineStyle === toCompareStyle.borders.left.lineStyle &&\n                    baseStyle.borders.right.color === toCompareStyle.borders.right.color &&\n                    baseStyle.borders.right.lineStyle === toCompareStyle.borders.right.lineStyle &&\n                    baseStyle.borders.top.color === toCompareStyle.borders.top.color &&\n                    baseStyle.borders.top.lineStyle === toCompareStyle.borders.top.lineStyle &&\n                    baseStyle.borders.bottom.color === toCompareStyle.borders.bottom.color &&\n                    baseStyle.borders.bottom.lineStyle === toCompareStyle.borders.bottom.lineStyle));\n            if (result) {\n                index = baseStyle.index;\n                break;\n            }\n        }\n        return { index: index, result: result };\n    };\n    Workbook.prototype.contains = function (array, item) {\n        var index = array.indexOf(item);\n        return index > -1 && index < array.length;\n    };\n    Workbook.prototype.getCellValueType = function (value) {\n        if (value instanceof Date) {\n            return 'datetime';\n        }\n        else if (typeof (value) === 'boolean') {\n            return 'boolean';\n        }\n        else if (typeof (value) === 'number') {\n            return 'number';\n        }\n        else {\n            return 'string';\n        }\n    };\n    Workbook.prototype.parseCellType = function (cell) {\n        var type = cell.type;\n        var saveType;\n        var value = cell.value;\n        switch (type) {\n            case 'datetime':\n                value = this.toOADate(value);\n                if (cell.cellStyle !== undefined && cell.cellStyle.name !== undefined) {\n                    if (this.globalStyles.has(cell.cellStyle.name)) {\n                        var value_1 = this.globalStyles.get(cell.cellStyle.name);\n                        this.switchNumberFormat(value_1.format, value_1.type);\n                    }\n                }\n                saveType = 'n';\n                break;\n            //TODO: Update the number format index and style\n            case 'boolean':\n                value = value ? 1 : 0;\n                saveType = 'b';\n                break;\n            case 'number':\n                saveType = 'n';\n                if (cell.cellStyle !== undefined && cell.cellStyle.name !== undefined) {\n                    if (this.globalStyles.has(cell.cellStyle.name)) {\n                        this.switchNumberFormat(this.globalStyles.get(cell.cellStyle.name).format, 'number');\n                    }\n                }\n                break;\n            case 'string':\n                this.sharedStringCount++;\n                saveType = 's';\n                var sstvalue = this.processCellValue(value, cell);\n                if (!this.contains(this.sharedString, sstvalue)) {\n                    this.sharedString.push(sstvalue);\n                }\n                value = this.sharedString.indexOf(sstvalue);\n                break;\n            default:\n                break;\n        }\n        cell.saveType = saveType;\n        cell.value = value;\n    };\n    Workbook.prototype.saveAsBlob = function (blobSaveType) {\n        var _this = this;\n        switch (blobSaveType) {\n            case 'text/csv':\n                return new Promise(function (resolve, reject) {\n                    var obj = {};\n                    obj.blobData = _this.csvHelper.saveAsBlob();\n                    resolve(obj);\n                });\n            default:\n                return new Promise(function (resolve, reject) {\n                    _this.saveInternal();\n                    _this.mArchive.saveAsBlob().then(function (blob) {\n                        var obj = {};\n                        obj.blobData = new Blob([blob], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\n                        resolve(obj);\n                    });\n                });\n        }\n    };\n    Workbook.prototype.save = function (fileName, proxyUrl) {\n        var _this = this;\n        if (fileName === null || fileName === undefined || fileName === '') {\n            throw new Error('Argument Null Exception: fileName cannot be null or empty');\n        }\n        var xlsxMatch = fileName.match('.xlsx$');\n        var csvMatch = fileName.match('.csv$');\n        if (xlsxMatch !== null && xlsxMatch[0] === ('.' + this.mSaveType)) {\n            this.saveInternal();\n            this.mArchive.save(fileName).then(function () {\n                _this.mArchive.destroy();\n            });\n        }\n        else if (csvMatch !== null && csvMatch[0] === ('.' + this.mSaveType)) {\n            this.csvHelper.save(fileName);\n        }\n        else {\n            throw Error('Save type and file extension is different.');\n        }\n    };\n    Workbook.prototype.saveInternal = function () {\n        this.saveWorkbook();\n        this.saveWorksheets();\n        this.saveSharedString();\n        this.saveStyles();\n        this.saveApp(this.builtInProperties);\n        this.saveCore(this.builtInProperties);\n        this.saveContentType();\n        this.saveTopLevelRelation();\n        this.saveWorkbookRelation();\n    };\n    Workbook.prototype.saveWorkbook = function () {\n        /* tslint:disable-next-line:max-line-length */\n        var workbookTemp = '<?xml version=\"1.0\" encoding=\"utf-8\"?><workbook xmlns:r = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships\" xmlns= \"http://schemas.openxmlformats.org/spreadsheetml/2006/main\"><workbookPr codeName=\"ThisWorkbook\" defaultThemeVersion= \"153222\"/><bookViews><workbookView activeTab=\"0\"/></bookViews>';\n        var sheets = '<sheets>';\n        var length = this.worksheets.length;\n        for (var i = 0; i < length; i++) {\n            /* tslint:disable-next-line:max-line-length */\n            sheets += '<sheet name=\"' + this.worksheets[i].name + '\" sheetId=\"' + (i + 1).toString() + '\" r:id =\"rId' + (i + 1).toString() + '\" />';\n        }\n        sheets += '</sheets>';\n        workbookTemp += sheets;\n        if (this.printTitles.size > 0) {\n            var printTitle_1 = '<definedNames>';\n            this.printTitles.forEach(function (value, key) {\n                printTitle_1 += '<definedName name=\"_xlnm.Print_Titles\" localSheetId=\"' + key + '\">' + value + '</definedName>';\n            });\n            printTitle_1 += '</definedNames>';\n            workbookTemp += printTitle_1;\n        }\n        this.addToArchive(workbookTemp + '</workbook>', 'xl/workbook.xml');\n    };\n    Workbook.prototype.saveWorksheets = function () {\n        var length = this.worksheets.length;\n        for (var i = 0; i < length; i++) {\n            this.saveWorksheet(this.worksheets[i], i);\n        }\n    };\n    Workbook.prototype.saveWorksheet = function (sheet, index) {\n        var sheetBlob = new BlobHelper();\n        /* tslint:disable-next-line:max-line-length */\n        var sheetString = '<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?><worksheet xmlns:r=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships\" xmlns:x14=\"http://schemas.microsoft.com/office/spreadsheetml/2009/9/main\" xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\" xmlns=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\">';\n        if (!sheet.isSummaryRowBelow) {\n            sheetString += ('<sheetPr>' + '<outlinePr ' + 'summaryBelow=\"0\" >' + '</outlinePr>' + '</sheetPr>');\n        }\n        else {\n            sheetString += ('<sheetPr />');\n        }\n        sheetString += this.saveSheetView(sheet);\n        if (sheet.columns !== undefined) {\n            var colString = '<cols>';\n            for (var _i = 0, _a = sheet.columns; _i < _a.length; _i++) {\n                var column = _a[_i];\n                /* tslint:disable-next-line:max-line-length */\n                if (column.width !== undefined) {\n                    colString += '<col min=\"' + (column.index) + '\" max=\"' + (column.index) + '\" width=\"' + this.pixelsToColumnWidth(column.width) + '\" customWidth=\"1\" />';\n                }\n                else {\n                    colString += '<col min=\"' + (column.index) + '\" max=\"' + (column.index) + '\" width=\"' + '8.43' + '\" customWidth=\"1\" />';\n                }\n            }\n            sheetString += (colString + '</cols>');\n        }\n        sheetString += ('<sheetData>');\n        sheetBlob.append(sheetString);\n        sheetString = '';\n        if (sheet.rows !== undefined) {\n            for (var _b = 0, _c = sheet.rows; _b < _c.length; _b++) {\n                var row = _c[_b];\n                var rowString = '<row r=\"' + (row.index) + '\" ';\n                if (!isNullOrUndefined(row.spans)) {\n                    rowString += 'spans=\"' + row.spans + '\" ';\n                }\n                if (row.height !== undefined) {\n                    rowString += ('ht=\"' + this.pixelsToRowHeight(row.height) + '\" customHeight=\"1\" ');\n                }\n                if (row.grouping !== undefined) {\n                    if (row.grouping.isHidden) {\n                        rowString += ('hidden=\"1\" ');\n                    }\n                    if (row.grouping.outlineLevel !== undefined) {\n                        rowString += ('outlineLevel=\"' + row.grouping.outlineLevel + '\" ');\n                    }\n                    if (row.grouping.isCollapsed) {\n                        rowString += ('collapsed=\"1\" ');\n                    }\n                }\n                rowString += ('>');\n                for (var _d = 0, _e = row.cells; _d < _e.length; _d++) {\n                    var cell = _e[_d];\n                    if (cell !== undefined && (cell.value !== undefined || cell.cellStyle !== undefined)) {\n                        rowString += ('<c r=\"' + cell.refName + '\" ');\n                        if (cell.saveType !== undefined) {\n                            rowString += ('t=\"' + cell.saveType + '\" ');\n                        }\n                        if (cell.styleIndex !== undefined) {\n                            rowString += ('s=\"' + cell.styleIndex + '\" ');\n                        }\n                        rowString += (' >');\n                        if (cell.formula !== undefined) {\n                            rowString += ('<f>' + cell.formula + '</f>');\n                        }\n                        if (cell.value !== undefined) {\n                            rowString += ('<v>' + cell.value + '</v></c>');\n                        }\n                        else {\n                            rowString += ('</c>');\n                        }\n                    }\n                }\n                rowString += ('</row>');\n                sheetBlob.append(rowString);\n            }\n        }\n        sheetString += ('</sheetData>');\n        if (sheet.mergeCells.length > 0) {\n            sheetString += ('<mergeCells count=\"' + sheet.mergeCells.length + '\">');\n            for (var _f = 0, _g = sheet.mergeCells; _f < _g.length; _f++) {\n                var mCell = _g[_f];\n                sheetString += ('<mergeCell ref=\"' + mCell.ref + '\" />');\n            }\n            sheetString += ('</mergeCells>');\n        }\n        if (sheet.hyperLinks.length > 0) {\n            sheetString += ('<hyperlinks>');\n            for (var _h = 0, _j = sheet.hyperLinks; _h < _j.length; _h++) {\n                var hLink = _j[_h];\n                sheetString += ('<hyperlink ref=\"' + hLink.ref + '\" r:id=\"rId' + hLink.rId + '\" />');\n            }\n            sheetString += ('</hyperlinks>');\n            this.addToArchive(this.saveSheetRelations(sheet), ('xl/worksheets/_rels/sheet' + sheet.index + '.xml.rels'));\n        }\n        /* tslint:disable-next-line:max-line-length */\n        sheetString += ('<pageMargins left=\"0.75\" right=\"0.75\" top=\"1\" bottom=\"1\" header=\"0.5\" footer=\"0.5\" /><headerFooter scaleWithDoc=\"1\" alignWithMargins=\"0\" differentFirst=\"0\" differentOddEven=\"0\" /></worksheet>');\n        sheetBlob.append(sheetString);\n        this.addToArchive(sheetBlob.getBlob(), 'xl/worksheets' + '/sheet' + (index + 1) + '.xml');\n    };\n    Workbook.prototype.pixelsToColumnWidth = function (pixels) {\n        var dDigitWidth = 7;\n        var val = (pixels > dDigitWidth + 5) ?\n            this.trunc((pixels - 5) / dDigitWidth * 100 + 0.5) / 100 :\n            pixels / (dDigitWidth + 5);\n        return (val > 1) ?\n            ((val * dDigitWidth + 5) / dDigitWidth * 256.0) / 256.0 :\n            (val * (dDigitWidth + 5) / dDigitWidth * 256.0) / 256.0;\n    };\n    Workbook.prototype.trunc = function (x) {\n        var n = x - x % 1;\n        return n === 0 && (x < 0 || (x === 0 && (1 / x !== 1 / 0))) ? -0 : n;\n    };\n    Workbook.prototype.pixelsToRowHeight = function (pixels) {\n        return (pixels * this.unitsProportions[5] / this.unitsProportions[6]);\n    };\n    Workbook.prototype.saveSheetRelations = function (sheet) {\n        /* tslint:disable-next-line:max-line-length */\n        var relStr = '<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><Relationships xmlns=\"http://schemas.openxmlformats.org/package/2006/relationships\">';\n        for (var _i = 0, _a = sheet.hyperLinks; _i < _a.length; _i++) {\n            var hLink = _a[_i];\n            /* tslint:disable-next-line:max-line-length */\n            relStr += '<Relationship Id=\"rId' + hLink.rId + '\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/hyperlink\" Target=\"' + hLink.target + '\" TargetMode=\"External\" />';\n        }\n        relStr += '</Relationships>';\n        return relStr;\n    };\n    Workbook.prototype.saveSheetView = function (sheet) {\n        var paneString = '<sheetViews><sheetView workbookViewId=\"0\" ';\n        if (sheet.showGridLines === false) {\n            paneString += 'showGridLines=\"0\" >';\n        }\n        else {\n            paneString += '>';\n        }\n        if (sheet.freezePanes !== undefined) {\n            paneString += '<pane state=\"frozen\"' +\n                ' topLeftCell=\"' + sheet.freezePanes.leftCell + '\" ';\n            if (sheet.freezePanes.row !== 0) {\n                paneString += 'ySplit=\"' + sheet.freezePanes.row + '\" ';\n            }\n            if (sheet.freezePanes.column !== 0) {\n                paneString += 'xSplit=\"' + sheet.freezePanes.column + '\" ';\n            }\n            paneString += '/>';\n        }\n        paneString += '</sheetView></sheetViews > ';\n        return paneString;\n    };\n    Workbook.prototype.saveSharedString = function () {\n        var length = this.sharedString.length;\n        if (length > 0) {\n            /* tslint:disable-next-line:max-line-length */\n            var sstStart = '<?xml version=\"1.0\" encoding=\"utf-8\"?><sst uniqueCount=\"' + length + '\" count=\"' + this.sharedStringCount + '\" xmlns=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\">';\n            var si = '';\n            for (var i = 0; i < length; i++) {\n                if (!this.sharedString[i].startsWith('<r>')) {\n                    si += '<si><t>';\n                    si += this.processString(this.sharedString[i]);\n                    si += '</t></si>';\n                }\n                else {\n                    si += '<si>';\n                    si += this.sharedString[i];\n                    si += '</si>';\n                }\n            }\n            si += '</sst>';\n            this.addToArchive(sstStart + si, 'xl/sharedStrings.xml');\n        }\n    };\n    Workbook.prototype.processString = function (value) {\n        if (value.indexOf('&') !== -1) {\n            value = value.replace(/&/g, '&amp;');\n        }\n        if (value.indexOf('<') !== -1) {\n            value = value.replace(/</g, '&lt;');\n        }\n        if (value.indexOf('>') !== -1) {\n            value = value.replace(/>/g, '&gt;');\n        }\n        return value;\n    };\n    Workbook.prototype.saveStyles = function () {\n        this.updateCellXfsStyleXfs();\n        /* tslint:disable-next-line:max-line-length */\n        var styleTemp = '<?xml version=\"1.0\" encoding=\"utf-8\"?><styleSheet xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\" mc:Ignorable=\"x14ac\" xmlns:x14ac=\"http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac\" xmlns=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\">';\n        styleTemp += this.saveNumberFormats();\n        styleTemp += this.saveFonts();\n        styleTemp += this.saveFills();\n        styleTemp += this.saveBorders();\n        styleTemp += this.saveCellStyleXfs();\n        styleTemp += this.saveCellXfs();\n        styleTemp += this.saveCellStyles();\n        this.addToArchive(styleTemp + '</styleSheet>', 'xl/styles.xml');\n    };\n    Workbook.prototype.updateCellXfsStyleXfs = function () {\n        for (var _i = 0, _a = this.mStyles; _i < _a.length; _i++) {\n            var style = _a[_i];\n            var cellXfs = undefined;\n            if (style.isGlobalStyle) {\n                cellXfs = new CellStyleXfs();\n                cellXfs.xfId = (style.index - 1);\n            }\n            else {\n                cellXfs = new CellXfs();\n                cellXfs.xfId = 0;\n            }\n            //Add font\n            var compareFontResult = this.isNewFont(style);\n            if (!compareFontResult.result) {\n                var font = new Font();\n                font.b = style.bold;\n                font.i = style.italic;\n                font.name = style.fontName;\n                font.sz = style.fontSize;\n                font.u = style.underline;\n                font.color = ('FF' + style.fontColor.replace('#', ''));\n                this.mFonts.push(font);\n                cellXfs.fontId = this.mFonts.length - 1;\n            }\n            else {\n                cellXfs.fontId = compareFontResult.index;\n            }\n            //Add fill\n            if (style.backColor !== 'none') {\n                var backColor = 'FF' + style.backColor.replace('#', '');\n                if (this.mFills.has(backColor)) {\n                    var fillId = this.mFills.get(backColor);\n                    cellXfs.fillId = fillId;\n                }\n                else {\n                    var fillId = this.mFills.size + 2;\n                    this.mFills.set(backColor, fillId);\n                    cellXfs.fillId = (fillId);\n                }\n            }\n            else {\n                cellXfs.fillId = 0;\n            }\n            //Add border            \n            if (!this.isNewBorder(style)) {\n                this.mBorders.push(style.borders);\n                cellXfs.borderId = this.mBorders.length;\n            }\n            else {\n                cellXfs.borderId = 0;\n            }\n            //Add Number Format            \n            if (style.numberFormat !== 'GENERAL') {\n                if (this.mNumFmt.has(style.numberFormat)) {\n                    var numFmt = this.mNumFmt.get(style.numberFormat);\n                    cellXfs.numFmtId = numFmt.numFmtId;\n                }\n                else {\n                    var id = this.mNumFmt.size + 164;\n                    this.mNumFmt.set(style.numberFormat, new NumFmt(id, style.numberFormat));\n                    cellXfs.numFmtId = id;\n                }\n            }\n            else {\n                if (style.numberFormat === 'GENERAL' && style.numFmtId === 14) {\n                    cellXfs.numFmtId = 14;\n                }\n                else {\n                    cellXfs.numFmtId = 0;\n                }\n            }\n            //Add alignment            \n            if (!style.isGlobalStyle) {\n                cellXfs.applyAlignment = 1;\n            }\n            cellXfs.alignment = new Alignment();\n            cellXfs.alignment.indent = style.indent;\n            cellXfs.alignment.horizontal = style.hAlign;\n            cellXfs.alignment.vertical = style.vAlign;\n            cellXfs.alignment.wrapText = style.wrapText ? 1 : 0;\n            cellXfs.alignment.rotation = style.rotation;\n            if (style.isGlobalStyle) {\n                this.mCellStyleXfs.push(cellXfs);\n                this.mCellXfs.push(cellXfs);\n            }\n            else {\n                //Add cellxfs\n                this.mCellXfs.push(cellXfs);\n            }\n        }\n    };\n    Workbook.prototype.saveNumberFormats = function () {\n        if (this.mNumFmt.size >= 1) {\n            var numFmtStyle_1 = '<numFmts count=\"' + (this.mNumFmt.size) + '\">';\n            this.mNumFmt.forEach(function (value, key) {\n                numFmtStyle_1 += '<numFmt numFmtId=\"' + value.numFmtId + '\" formatCode=\"' + value.formatCode.replace(/\"/g, '&quot;') + '\" />';\n            });\n            return (numFmtStyle_1 += '</numFmts>');\n        }\n        else {\n            return '';\n        }\n    };\n    Workbook.prototype.saveFonts = function () {\n        /* tslint:disable-next-line:max-line-length */\n        var fontStyle = '<fonts count=\"' + (this.mFonts.length) + '\">';\n        if (this.mFonts.length >= 1) {\n            for (var _i = 0, _a = this.mFonts; _i < _a.length; _i++) {\n                var font = _a[_i];\n                fontStyle += '<font>';\n                if (font.b) {\n                    fontStyle += '<b />';\n                }\n                if (font.i) {\n                    fontStyle += '<i />';\n                }\n                if (font.u) {\n                    fontStyle += '<u />';\n                }\n                fontStyle += '<sz val=\"' + this.pixelsToRowHeight(font.sz) + '\" />';\n                fontStyle += '<color rgb=\"' + font.color + '\" />';\n                fontStyle += '<name val=\"' + font.name + '\" /></font>';\n            }\n        }\n        return fontStyle + '</fonts>';\n    };\n    Workbook.prototype.saveFills = function () {\n        /* tslint:disable-next-line:max-line-length */\n        var fillsStyle = '<fills count=\"' + (this.mFills.size + 2) + '\"><fill><patternFill patternType=\"none\"></patternFill></fill><fill><patternFill patternType=\"gray125\"></patternFill></fill>';\n        if (this.mFills.size >= 1) {\n            this.mFills.forEach(function (value, key) {\n                /* tslint:disable-next-line:max-line-length */\n                fillsStyle += '<fill><patternFill patternType=\"solid\"><fgColor rgb=\"' + key + '\" /><bgColor rgb=\"FFFFFFFF\" /></patternFill></fill>';\n            });\n        }\n        return fillsStyle + '</fills>';\n    };\n    Workbook.prototype.saveBorders = function () {\n        /* tslint:disable-next-line:max-line-length */\n        var bordersStyle = '<borders count=\"' + (this.mBorders.length + 1) + '\"><border><left /><right /><top /><bottom /><diagonal /></border>';\n        if (this.mBorders.length >= 1) {\n            for (var _i = 0, _a = this.mBorders; _i < _a.length; _i++) {\n                var borders = _a[_i];\n                if (this.isAllBorder(borders)) {\n                    var color = borders.all.color.replace('#', '');\n                    var lineStyle = borders.all.lineStyle;\n                    /* tslint:disable-next-line:max-line-length */\n                    bordersStyle += '<border><left style=\"' + lineStyle + '\"><color rgb=\"FF' + color + '\" /></left><right style=\"' + lineStyle + '\"><color rgb=\"FF' + color + '\" /></right><top style=\"' + lineStyle + '\"><color rgb=\"FF' + color + '\" /></top><bottom style=\"' + lineStyle + '\"><color rgb=\"FF' + color + '\" /></bottom></border>';\n                }\n                else {\n                    /* tslint:disable-next-line:max-line-length */\n                    bordersStyle += '<border><left style=\"' + borders.left.lineStyle + '\"><color rgb=\"FF' + borders.left.color.replace('#', '') + '\" /></left><right style=\"' + borders.right.lineStyle + '\"><color rgb=\"FF' + borders.right.color.replace('#', '') + '\" /></right><top style=\"' + borders.top.lineStyle + '\"><color rgb=\"FF' + borders.top.color.replace('#', '') + '\" /></top><bottom style=\"' + borders.bottom.lineStyle + '\"><color rgb=\"FF' + borders.bottom.color.replace('#', '') + '\" /></bottom></border>';\n                }\n            }\n        }\n        return bordersStyle + '</borders>';\n    };\n    Workbook.prototype.saveCellStyles = function () {\n        var _this = this;\n        var cellStyleString = '<cellStyles  count=\"' + (this.cellStyles.size) + '\">';\n        this.cellStyles.forEach(function (value, key) {\n            cellStyleString += '<cellStyle name=\"' + key + '\" xfId=\"' + _this.cellStyles.get(key).xfId + '\"';\n            if (key === 'Normal') {\n                cellStyleString += ' builtinId=\"0\"';\n            }\n            cellStyleString += ' />';\n        });\n        return cellStyleString += '</cellStyles>';\n    };\n    Workbook.prototype.saveCellStyleXfs = function () {\n        /* tslint:disable-next-line:max-line-length */\n        var cellXfsStyle = '<cellStyleXfs count=\"' + (this.mCellStyleXfs.length + 1) + '\"><xf numFmtId=\"0\" fontId=\"0\" fillId=\"0\" borderId=\"0\" />';\n        if (this.mCellStyleXfs.length >= 1) {\n            for (var _i = 0, _a = this.mCellStyleXfs; _i < _a.length; _i++) {\n                var cellStyleXf = _a[_i];\n                /* tslint:disable-next-line:max-line-length */\n                cellXfsStyle += '<xf numFmtId=\"' + cellStyleXf.numFmtId + '\" fontId=\"' + cellStyleXf.fontId + '\" fillId=\"' + cellStyleXf.fillId + '\" borderId=\"' + cellStyleXf.borderId + '\" ';\n                if (cellStyleXf.alignment !== undefined) {\n                    cellXfsStyle += '>' + this.saveAlignment(cellStyleXf) + '</xf>';\n                }\n                else {\n                    cellXfsStyle += ' />';\n                }\n            }\n        }\n        return cellXfsStyle + '</cellStyleXfs>';\n    };\n    Workbook.prototype.saveCellXfs = function () {\n        /* tslint:disable-next-line:max-line-length */\n        var cellXfsStyle = '<cellXfs count=\"' + (this.mCellXfs.length + 1) + '\"><xf numFmtId=\"0\" fontId=\"0\" fillId=\"0\" borderId=\"0\" xfId=\"0\" />';\n        if (this.mCellXfs.length >= 1) {\n            for (var _i = 0, _a = this.mCellXfs; _i < _a.length; _i++) {\n                var cellXf = _a[_i];\n                /* tslint:disable-next-line:max-line-length */\n                cellXfsStyle += '<xf numFmtId=\"' + cellXf.numFmtId + '\" fontId=\"' + cellXf.fontId + '\" fillId=\"' + cellXf.fillId + '\" borderId=\"' + cellXf.borderId + '\" xfId=\"' + cellXf.xfId + '\" ';\n                if (cellXf.applyAlignment === 1) {\n                    cellXfsStyle += 'applyAlignment=\"1\"';\n                }\n                cellXfsStyle += '>' + this.saveAlignment(cellXf) + '</xf>';\n            }\n        }\n        return cellXfsStyle + '</cellXfs>';\n    };\n    Workbook.prototype.saveAlignment = function (cellXf) {\n        var alignString = '<alignment ';\n        if (cellXf.alignment.horizontal !== undefined) {\n            alignString += 'horizontal=\"' + cellXf.alignment.horizontal + '\" ';\n        }\n        if (cellXf.alignment.indent !== undefined && cellXf.alignment.indent !== 0) {\n            alignString += 'indent=\"' + cellXf.alignment.indent + '\" ';\n        }\n        else if (cellXf.alignment.rotation !== undefined && cellXf.alignment.rotation !== 0) {\n            alignString += 'textRotation=\"' + cellXf.alignment.rotation + '\" ';\n        }\n        if (cellXf.alignment.vertical !== undefined) {\n            alignString += 'vertical=\"' + cellXf.alignment.vertical + '\" ';\n        }\n        alignString += 'wrapText=\"' + cellXf.alignment.wrapText + '\" />';\n        return alignString;\n    };\n    Workbook.prototype.saveApp = function (builtInProperties) {\n        /* tslint:disable-next-line:max-line-length */\n        var appString = '<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?><Properties xmlns=\"http://schemas.openxmlformats.org/officeDocument/2006/extended-properties\"><Application>Essential XlsIO</Application>';\n        if (builtInProperties !== undefined) {\n            if (builtInProperties.manager !== undefined) {\n                appString += '<Manager>' + builtInProperties.manager + '</Manager>';\n            }\n            if (builtInProperties.company !== undefined) {\n                appString += '<Company>' + builtInProperties.company + '</Company>';\n            }\n        }\n        this.addToArchive((appString + '</Properties>'), 'docProps/app.xml');\n    };\n    Workbook.prototype.saveCore = function (builtInProperties) {\n        var createdDate = new Date();\n        /* tslint:disable-next-line:max-line-length */\n        var coreString = '<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?><cp:coreProperties xmlns:dc=\"http://purl.org/dc/elements/1.1/\" xmlns:dcterms=\"http://purl.org/dc/terms/\" xmlns:dcmitype=\"http://purl.org/dc/dcmitype/\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:cp=\"http://schemas.openxmlformats.org/package/2006/metadata/core-properties\">';\n        if (this.builtInProperties !== undefined) {\n            if (builtInProperties.author !== undefined) {\n                coreString += '<dc:creator>' + builtInProperties.author + '</dc:creator>';\n            }\n            if (builtInProperties.subject !== undefined) {\n                coreString += '<dc:subject>' + builtInProperties.subject + '</dc:subject>';\n            }\n            if (builtInProperties.category !== undefined) {\n                coreString += '<cp:category>' + builtInProperties.category + '</cp:category>';\n            }\n            if (builtInProperties.comments !== undefined) {\n                coreString += '<dc:description>' + builtInProperties.comments + '</dc:description>';\n            }\n            if (builtInProperties.title !== undefined) {\n                coreString += '<dc:title>' + builtInProperties.title + '</dc:title>';\n            }\n            if (builtInProperties.tags !== undefined) {\n                coreString += '<cp:keywords>' + builtInProperties.tags + '</cp:keywords>';\n            }\n            if (builtInProperties.status !== undefined) {\n                coreString += '<cp:contentStatus>' + builtInProperties.status + '</cp:contentStatus>';\n            }\n            if (builtInProperties.createdDate !== undefined) {\n                /* tslint:disable-next-line:max-line-length */\n                coreString += '<dcterms:created xsi:type=\"dcterms:W3CDTF\">' + builtInProperties.createdDate.toISOString() + '</dcterms:created>';\n            }\n            else {\n                coreString += '<dcterms:created xsi:type=\"dcterms:W3CDTF\">' + createdDate.toISOString() + '</dcterms:created>';\n            }\n            if (builtInProperties.modifiedDate !== undefined) {\n                /* tslint:disable-next-line:max-line-length */\n                coreString += '<dcterms:modified xsi:type=\"dcterms:W3CDTF\">' + builtInProperties.modifiedDate.toISOString() + '</dcterms:modified>';\n            }\n            else {\n                coreString += '<dcterms:modified xsi:type=\"dcterms:W3CDTF\">' + createdDate.toISOString() + '</dcterms:modified>';\n            }\n        }\n        else {\n            coreString += '<dcterms:created xsi:type=\"dcterms:W3CDTF\">' + createdDate.toISOString() + '</dcterms:created>';\n            coreString += '<dcterms:modified xsi:type=\"dcterms:W3CDTF\">' + createdDate.toISOString() + '</dcterms:modified>';\n        }\n        /* tslint:disable-next-line:max-line-length */\n        coreString += '</cp:coreProperties>';\n        this.addToArchive(coreString, 'docProps/core.xml');\n    };\n    Workbook.prototype.saveTopLevelRelation = function () {\n        /* tslint:disable-next-line:max-line-length */\n        var topRelation = '<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?><Relationships xmlns=\"http://schemas.openxmlformats.org/package/2006/relationships\"><Relationship Id=\"rId1\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument\" Target=\"xl/workbook.xml\" /><Relationship Id=\"rId2\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/extended-properties\" Target=\"docProps/app.xml\" /><Relationship Id=\"rId3\" Type=\"http://schemas.openxmlformats.org/package/2006/relationships/metadata/core-properties\" Target=\"docProps/core.xml\" /></Relationships>';\n        this.addToArchive(topRelation, '_rels/.rels');\n    };\n    Workbook.prototype.saveWorkbookRelation = function () {\n        /* tslint:disable-next-line:max-line-length */\n        var wbRelation = '<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?><Relationships xmlns=\"http://schemas.openxmlformats.org/package/2006/relationships\">';\n        var length = this.worksheets.length;\n        var count = 0;\n        for (var i = 0; i < length; i++, count++) {\n            /* tslint:disable-next-line:max-line-length */\n            wbRelation += '<Relationship Id=\"rId' + (i + 1).toString() + '\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/worksheet\" Target=\"worksheets/sheet' + (i + 1).toString() + '.xml\" />';\n        }\n        /* tslint:disable-next-line:max-line-length */\n        wbRelation += '<Relationship Id=\"rId' + (++count).toString() + '\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles\" Target=\"styles.xml\" />';\n        if (this.sharedStringCount > 0) {\n            /* tslint:disable-next-line:max-line-length */\n            wbRelation += '<Relationship Id=\"rId' + (++count).toString() + '\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/sharedStrings\" Target=\"sharedStrings.xml\" />';\n        }\n        this.addToArchive((wbRelation + '</Relationships>'), 'xl/_rels/workbook.xml.rels');\n    };\n    Workbook.prototype.saveContentType = function () {\n        /* tslint:disable-next-line:max-line-length */\n        var contentTypeString = '<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?><Types xmlns=\"http://schemas.openxmlformats.org/package/2006/content-types\"><Default Extension=\"xml\" ContentType=\"application/xml\" /><Default Extension=\"rels\" ContentType=\"application/vnd.openxmlformats-package.relationships+xml\" /><Override PartName=\"/xl/styles.xml\" ContentType=\"application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml\" /><Override PartName=\"/xl/workbook.xml\" ContentType=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml\" /><Override PartName=\"/docProps/app.xml\" ContentType=\"application/vnd.openxmlformats-officedocument.extended-properties+xml\" /><Override PartName=\"/docProps/core.xml\" ContentType=\"application/vnd.openxmlformats-package.core-properties+xml\" />';\n        var sheetsOverride = '';\n        var length = this.worksheets.length;\n        for (var i = 0; i < length; i++) {\n            /* tslint:disable-next-line:max-line-length */\n            sheetsOverride += '<Override PartName=\"/xl/worksheets/sheet' + (i + 1).toString() + '.xml\" ContentType=\"application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml\" />';\n        }\n        if (this.sharedStringCount > 0) {\n            /* tslint:disable-next-line:max-line-length */\n            contentTypeString += '<Override PartName=\"/xl/sharedStrings.xml\" ContentType=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sharedStrings+xml\" />';\n        }\n        this.addToArchive((contentTypeString + sheetsOverride + '</Types>'), '[Content_Types].xml');\n    };\n    Workbook.prototype.addToArchive = function (xmlString, itemName) {\n        if (typeof (xmlString) === 'string') {\n            var blob = new Blob([xmlString], { type: 'text/plain' });\n            var archiveItem = new ZipArchiveItem(blob, itemName);\n            this.mArchive.addItem(archiveItem);\n        }\n        else {\n            var archiveItem = new ZipArchiveItem(xmlString, itemName);\n            this.mArchive.addItem(archiveItem);\n        }\n    };\n    Workbook.prototype.processMergeCells = function (cell, rowIndex, mergeCells) {\n        if (cell.rowSpan !== 0 || cell.colSpan !== 0) {\n            var mCell = new MergeCell();\n            mCell.x = cell.index;\n            mCell.width = cell.colSpan;\n            mCell.y = rowIndex;\n            mCell.height = cell.rowSpan;\n            var startCell = this.getCellName(mCell.y, mCell.x);\n            var endCell = this.getCellName(rowIndex + mCell.height, cell.index + mCell.width);\n            mCell.ref = startCell + ':' + endCell;\n            var mergedCell = mergeCells.add(mCell);\n            var start = { x: mCell.x, y: mCell.y };\n            var end = {\n                x: (cell.index + mCell.width), y: (rowIndex + mCell.height)\n            };\n            this.updatedMergedCellStyles(start, end, cell);\n        }\n        return mergeCells;\n    };\n    Workbook.prototype.updatedMergedCellStyles = function (sCell, eCell, cell) {\n        for (var x = sCell.x; x <= eCell.x; x++) {\n            for (var y = sCell.y; y <= eCell.y; y++) {\n                this.mergedCellsStyle.set(this.getCellName(y, x), { x: x, y: y, styleIndex: cell.styleIndex });\n            }\n        }\n    };\n    /**\n     * Returns the tick count corresponding to the given year, month, and day.\n     * @param year number value of year\n     * @param month number value of month\n     * @param day number value of day\n     */\n    Workbook.prototype.dateToTicks = function (year, month, day) {\n        var ticksPerDay = 10000 * 1000 * 60 * 60 * 24;\n        var daysToMonth365 = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334, 365];\n        var daysToMonth366 = [0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335, 366];\n        if (year >= 1 && year <= 9999 && month >= 1 && month <= 12) {\n            var days = this.isLeapYear(year) ? daysToMonth366 : daysToMonth365;\n            var y = year - 1;\n            var n = y * 365 + ((y / 4) | 0) - ((y / 100) | 0) + ((y / 400) | 0) + days[month - 1] + day - 1;\n            return n * ticksPerDay;\n        }\n        throw new Error('Not a valid date');\n    };\n    /**\n     * Return the tick count corresponding to the given hour, minute, second.\n     * @param hour number value of hour\n     * @param minute number value if minute\n     * @param second number value of second\n     */\n    Workbook.prototype.timeToTicks = function (hour, minute, second) {\n        if (hour >= 0 && hour < 24 && minute >= 0 && minute < 60 && second >= 0 && second < 60) {\n            var totalSeconds = hour * 3600 + minute * 60 + second;\n            return totalSeconds * 10000 * 1000;\n        }\n        throw new Error('Not valid time');\n    };\n    /**\n     * Checks if given year is a leap year.\n     * @param year Year value.\n     */\n    Workbook.prototype.isLeapYear = function (year) {\n        return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n    };\n    /**\n     * Converts `DateTime` to the equivalent OLE Automation date.\n     */\n    Workbook.prototype.toOADate = function (date) {\n        var ticks = 0;\n        /* tslint:disable-next-line:max-line-length */\n        ticks = this.dateToTicks(date.getFullYear(), (date.getMonth() + 1), date.getDate()) + this.timeToTicks(date.getHours(), date.getMinutes(), date.getSeconds());\n        if (ticks === 0) {\n            return 0.0;\n        }\n        var ticksPerDay = 10000 * 1000 * 60 * 60 * 24;\n        var daysTo1899 = (((365 * 4 + 1) * 25 - 1) * 4 + 1) * 4 + ((365 * 4 + 1) * 25 - 1) * 3 - 367;\n        var doubleDateOffset = daysTo1899 * ticksPerDay;\n        var oaDateMinAsTicks = (((365 * 4 + 1) * 25 - 1) - 365) * ticksPerDay;\n        if (ticks < oaDateMinAsTicks) {\n            throw new Error('Arg_OleAutDateInvalid');\n        }\n        var millisPerDay = 1000 * 60 * 60 * 24;\n        return ((ticks - doubleDateOffset) / 10000) / millisPerDay;\n    };\n    return Workbook;\n}());\nexport { Workbook };\n/**\n * BuiltInProperties Class\n * @private\n */\nvar BuiltInProperties = /** @class */ (function () {\n    function BuiltInProperties() {\n    }\n    return BuiltInProperties;\n}());\nexport { BuiltInProperties };\n"],"names":["CellStyle","this","numFmtId","backColor","fontName","fontSize","fontColor","italic","bold","underline","wrapText","hAlign","vAlign","indent","rotation","numberFormat","type","borders","Borders","isGlobalStyle","Font","sz","name","u","b","i","color","CellXfs","Alignment","CellStyleXfs","CellStyles","xfId","NumFmt","id","code","formatCode","Border","mLine","mColor","lineStyle","left","right","top","bottom","all","__extends","extendStatics","d","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","Cell","Cells","_super","_this","apply","arguments","add","cell","inserted","count","_i","_a","length","index","push","Column","Row","Rows","row","Worksheets","Worksheet","isSummaryRowBelow","showGridLines","HyperLink","Grouping","FreezePane","MergeCell","MergeCells","mergeCell","mCell","isIntersecting","intersectingCell","x","Math","min","y","Y","width","max","Width","X","height","Height","ref","split","base","compare","ValueFormatter","cultureName","intl","Internationalization","getFormatFunction","format","getDateFormat","getNumberFormat","toView","value","result","isNullOrUndefined","displayText","CsvHelper","json","csvStr","formatter","isMicrosoftBrowser","navigator","msSaveBlob","styles","undefined","globalStyles","Map","set","worksheets","parseWorksheet","rows","parseRows","rows_1","Error","parseRow","cells","parseCell","csv","Date","style","parseCellValue","skeleton","error","has","get","val","start","replace","indexOf","save","fileName","buffer","Blob","dataUrl_1","window","URL","createObjectURL","dwlLink","document","createElementNS","download","href","event_1","createEvent","initEvent","dispatchEvent","setTimeout","revokeObjectURL","saveAsBlob","BlobHelper","parts","append","part","blob","getBlob","Workbook","saveType","culture","currencyString","sharedStringCount","unitsProportions","hyperlinkStyle","currency","mSaveType","mArchive","ZipArchive","sharedString","mFonts","mBorders","mStyles","printTitles","cellStyles","mNumFmt","mFills","mCellXfs","mCellStyleXfs","cellStyle","parserCellStyle","cellStylesIn","tFormat","parserWorksheets","builtInProperties","BuiltInProperties","parserBuiltInProperties","csvHelper","jsonBuiltInProperties","author","comments","category","company","manager","subject","title","createdDate","modifiedDate","tags","status","jsonSheet","sheet","mergeCells","mergedCellsStyle","mHyperLinks","toString","columns","parserColumns","parserRows","freeze","parserFreezePanes","printTitle","parserPrintTitle","pageSetup","hyperLinks","mergeOptions","fromJson","toJson","applyProperties","sourceJson","destJson","keys","getCellName","column","getColumnName","col","strColumnName","iCurrentDigit","String","fromCharCode","titleRowName","printTitleName","fromRow","toRow","titleColName","fromColumn","toColumn","freezePanes","leftCell","columnsLength","rowsLength","rowId","r","parserRow","insertMergedCellsStyle","forEach","key","filter","item","rowToInsert","createCell","insertIndex","splice","styleIndex","cellToInsert","refName","rowIndex","grouping","parseGrouping","parseCells","outlineLevel","isCollapsed","isHidden","cellsLength","spanMin","spanMax","cellId","jsonCell","rowSpan","colSpan","hyperlink","hyperLink","target","getCellValueType","rId","formula","parseCellType","processMergeCells","spans","GetColors","colors","processColor","colorVal","startsWith","toUpperCase","rgbColors","processCellValue","cellValue","processedVal","startindex","substring","endIndex","subString","text","subSplit","subSplit_1","element","trim","applyGlobalStyle","a","cellType","defStyleIndex","parserBorder","leftBorder","rightBorder","topBorder","bottomBorder","toLowerCase","processCellStyle","switchNumberFormat","numFmt","cellStyleXfs","_b","_c","cellXfs","returnFormat","getNumberPattern","getDatePattern","border","processNumFormatId","compareResult","compareStyle","size","isNewFont","toCompareStyle","font","isNewBorder","bStyle","isAllBorder","toCompareBorder","allBorderStyle","baseStyle","contains","array","toOADate","value_1","sstvalue","blobSaveType","Promise","resolve","reject","obj","blobData","saveInternal","then","proxyUrl","xlsxMatch","match","csvMatch","destroy","saveWorkbook","saveWorksheets","saveSharedString","saveStyles","saveApp","saveCore","saveContentType","saveTopLevelRelation","saveWorkbookRelation","workbookTemp","sheets","printTitle_1","addToArchive","saveWorksheet","sheetBlob","sheetString","saveSheetView","colString","pixelsToColumnWidth","rowString","pixelsToRowHeight","_d","_e","_f","_g","_h","_j","hLink","saveSheetRelations","pixels","dDigitWidth","trunc","n","relStr","paneString","sstStart","si","processString","updateCellXfsStyleXfs","styleTemp","saveNumberFormats","saveFonts","saveFills","saveBorders","saveCellStyleXfs","saveCellXfs","saveCellStyles","compareFontResult","fontId","fillId","borderId","applyAlignment","alignment","horizontal","vertical","numFmtStyle_1","fontStyle","fillsStyle","bordersStyle","cellStyleString","cellXfsStyle","cellStyleXf","saveAlignment","cellXf","alignString","appString","coreString","toISOString","wbRelation","contentTypeString","sheetsOverride","xmlString","itemName","archiveItem","ZipArchiveItem","addItem","startCell","endCell","end","updatedMergedCellStyles","sCell","eCell","dateToTicks","year","month","day","daysToMonth365","daysToMonth366","isLeapYear","timeToTicks","hour","minute","second","date","ticks","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","daysTo1899"],"mappings":"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"}