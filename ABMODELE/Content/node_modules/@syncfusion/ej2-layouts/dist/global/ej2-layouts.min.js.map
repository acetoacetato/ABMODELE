{"version":3,"file":"ej2-layouts.min.js","sources":["../../src/splitter/splitter.js","../../src/dashboard-layout/dashboard-layout.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, setStyleAttribute, ChildProperty, compile } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, addClass, Collection, isNullOrUndefined, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, selectAll, removeClass, select, Browser, detach, formatUnit } from '@syncfusion/ej2-base';\nvar ROOT = 'e-splitter';\nvar HORIZONTAL_PANE = 'e-splitter-horizontal';\nvar VERTICAL_PANE = 'e-splitter-vertical';\nvar PANE = 'e-pane';\nvar SPLIT_H_PANE = 'e-pane-horizontal';\nvar SPLIT_V_PANE = 'e-pane-vertical';\nvar SPLIT_BAR = 'e-split-bar';\nvar SPLIT_H_BAR = 'e-split-bar-horizontal';\nvar SPLIT_V_BAR = 'e-split-bar-vertical';\nvar STATIC_PANE = 'e-static-pane';\nvar SCROLL_PANE = 'e-scrollable';\nvar RESIZE_BAR = 'e-resize-handler';\nvar RESIZABLE_BAR = 'e-resizable-split-bar';\nvar SPLIT_BAR_HOVER = 'e-split-bar-hover';\nvar SPLIT_BAR_ACTIVE = 'e-split-bar-active';\nvar HIDE_HANDLER = 'e-hide-handler';\nvar SPLIT_TOUCH = 'e-splitter-touch';\nvar DISABLED = 'e-disabled';\nvar RTL = 'e-rtl';\nvar E_ICONS = 'e-icons';\nvar COLLAPSIBLE = 'e-collapsible';\nvar NAVIGATE_ARROW = 'e-navigate-arrow';\nvar ARROW_RIGHT = 'e-arrow-right';\nvar ARROW_LEFT = 'e-arrow-left';\nvar ARROW_UP = 'e-arrow-up';\nvar ARROW_DOWN = 'e-arrow-down';\nvar HIDE_ICON = 'e-icon-hidden';\nvar EXPAND_PANE = 'e-expanded';\nvar COLLAPSE_PANE = 'e-collapsed';\nvar PANE_HIDDEN = 'e-pane-hidden';\nvar RESIZABLE_PANE = 'e-resizable';\nvar LAST_BAR = 'e-last-bar';\n/**\n * Interface to configure pane properties such as its content, size, min, max, resizable, collapsed and collapsible.\n */\nvar PaneProperties = /** @class */ (function (_super) {\n    __extends(PaneProperties, _super);\n    function PaneProperties() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"size\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsible\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsed\", void 0);\n    __decorate([\n        Property(true)\n    ], PaneProperties.prototype, \"resizable\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"min\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"max\", void 0);\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"content\", void 0);\n    return PaneProperties;\n}(ChildProperty));\nexport { PaneProperties };\n/**\n * Splitter is a layout user interface (UI) control that has resizable and collapsible split panes.\n * The container can be split into multiple panes, which are oriented horizontally or vertically.\n * The separator (divider) splits the panes and resizes and expands/collapses the panes.\n * The splitter is placed inside the split pane to make a nested layout user interface.\n *\n * ```html\n * <div id=\"splitter\">\n *  <div> Left Pane </div>\n *  <div> Center Pane </div>\n *  <div> Right Pane </div>\n * </div>\n * ```\n * ```typescript\n * <script>\n *   var splitterObj = new Splitter({ width: '300px', height: '200px'});\n *   splitterObj.appendTo('#splitter');\n * </script>\n * ```\n */\nvar Splitter = /** @class */ (function (_super) {\n    __extends(Splitter, _super);\n    /**\n     * Initializes a new instance of the Splitter class.\n     * @param options  - Specifies Splitter model properties as options.\n     * @param element  - Specifies the element that is rendered as an Splitter.\n     */\n    function Splitter(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.allPanes = [];\n        _this.paneOrder = [];\n        _this.separatorOrder = [];\n        _this.allBars = [];\n        _this.previousCoordinates = {};\n        _this.currentCoordinates = {};\n        _this.updatePrePaneInPercentage = false;\n        _this.updateNextPaneInPercentage = false;\n        _this.panesDimensions = [];\n        _this.border = 0;\n        _this.validDataAttributes = ['data-size', 'data-min', 'data-max', 'data-collapsible', 'data-resizable', 'data-content', 'data-collapsed'];\n        _this.validElementAttributes = ['data-orientation', 'data-width', 'data-height'];\n        _this.iconsDelay = 300;\n        return _this;\n    }\n    /**\n     * Gets called when the model property changes.The data that describes the old and new values of the property that changed.\n     * @param  {SplitterModel} newProp\n     * @param  {SplitterModel} oldProp\n     * @returns void\n     * @private\n     */\n    Splitter.prototype.onPropertyChanged = function (newProp, oldProp) {\n        if (!this.element.classList.contains(ROOT)) {\n            return;\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                    this.setSplitterSize(this.element, newProp.height, 'height');\n                    break;\n                case 'width':\n                    this.setSplitterSize(this.element, newProp.width, 'width');\n                    break;\n                case 'cssClass':\n                    this.setCssClass(newProp.cssClass);\n                    break;\n                case 'enabled':\n                    this.isEnabled(this.enabled);\n                    break;\n                case 'separatorSize':\n                    this.setSeparatorSize(newProp.separatorSize);\n                    break;\n                case 'orientation':\n                    this.changeOrientation(newProp.orientation);\n                    break;\n                case 'paneSettings':\n                    if (!(newProp.paneSettings instanceof Array && oldProp.paneSettings instanceof Array)) {\n                        var paneCounts = Object.keys(newProp.paneSettings);\n                        for (var i = 0; i < paneCounts.length; i++) {\n                            var index = parseInt(Object.keys(newProp.paneSettings)[i], 10);\n                            var changedPropsCount = Object.keys(newProp.paneSettings[index]).length;\n                            for (var j = 0; j < changedPropsCount; j++) {\n                                var property = Object.keys(newProp.paneSettings[index])[j];\n                                switch (property) {\n                                    case 'content':\n                                        var newValue = Object(newProp.paneSettings[index])[property];\n                                        if (!isNullOrUndefined(newValue)) {\n                                            this.allPanes[index].innerHTML = '';\n                                            this.setTemplate(newValue, this.allPanes[index]);\n                                        }\n                                        break;\n                                    case 'resizable':\n                                        var newVal = Object(newProp.paneSettings[index])[property];\n                                        this.resizableModel(index, newVal);\n                                        break;\n                                    case 'collapsible':\n                                        this.collapsibleModelUpdate(index);\n                                        break;\n                                    case 'collapsed':\n                                        newProp.paneSettings[index].collapsed ? this.isCollapsed() : this.collapsedOnchange(index);\n                                        break;\n                                    case 'size':\n                                        var newValSize = Object(newProp.paneSettings[index])[property];\n                                        if (newValSize !== '' && !isNullOrUndefined(newValSize)) {\n                                            this.allPanes[index].style.flexBasis = newValSize;\n                                            this.allPanes[index].classList.add(STATIC_PANE);\n                                        }\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        this.destroyPaneSettings();\n                        this.allBars = [];\n                        this.allPanes = [];\n                        this.createSplitPane(this.element);\n                        this.addSeparator(this.element);\n                        this.getPanesDimensions();\n                        this.setRTL(this.enableRtl);\n                        this.isCollapsed();\n                    }\n                    break;\n                case 'enableRtl':\n                    this.setRTL(newProp.enableRtl);\n                    break;\n            }\n        }\n    };\n    Splitter.prototype.preRender = function () {\n        this.wrapper = this.element.cloneNode(true);\n        this.wrapperParent = this.element.parentElement;\n        removeClass([this.wrapper], ['e-control', 'e-lib', ROOT]);\n        var orientation = this.orientation === 'Horizontal' ? HORIZONTAL_PANE : VERTICAL_PANE;\n        addClass([this.element], orientation);\n        if (Browser.isDevice) {\n            addClass([this.element], SPLIT_TOUCH);\n        }\n    };\n    Splitter.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    Splitter.prototype.getModuleName = function () {\n        return 'splitter';\n    };\n    /**\n     * To Initialize the control rendering\n     * @private\n     */\n    Splitter.prototype.render = function () {\n        this.checkDataAttributes();\n        this.setCssClass(this.cssClass);\n        this.isEnabled(this.enabled);\n        this.setDimension(this.getHeight(this.element), this.getWidth(this.element));\n        this.createSplitPane(this.element);\n        this.addSeparator(this.element);\n        this.getPanesDimensions();\n        this.setPaneSettings();\n        this.setRTL(this.enableRtl);\n        this.isCollapsed();\n        EventHandler.add(document, 'touchstart click', this.onDocumentClick, this);\n    };\n    Splitter.prototype.onDocumentClick = function (e) {\n        if (!e.target.classList.contains(SPLIT_BAR) && !isNullOrUndefined(this.currentSeparator)) {\n            this.currentSeparator.classList.remove(SPLIT_BAR_HOVER);\n            this.currentSeparator.classList.remove(SPLIT_BAR_ACTIVE);\n        }\n    };\n    Splitter.prototype.checkDataAttributes = function () {\n        var api;\n        var value;\n        // Element values\n        for (var dataIndex = 0; dataIndex < this.validElementAttributes.length; dataIndex++) {\n            value = this.element.getAttribute(this.validElementAttributes[dataIndex]);\n            if (!isNullOrUndefined(value)) {\n                api = this.removeDataPrefix(this.validElementAttributes[dataIndex]);\n                // tslint:disable-next-line\n                this[api] = value;\n            }\n        }\n        // Pane values\n        for (var paneIndex = 0; paneIndex < this.element.children.length; paneIndex++) {\n            for (var dataAttr = 0; dataAttr < this.validDataAttributes.length; dataAttr++) {\n                value = this.element.children[paneIndex].getAttribute(this.validDataAttributes[dataAttr]);\n                if (!isNullOrUndefined(value)) {\n                    api = this.removeDataPrefix(this.validDataAttributes[dataAttr]);\n                    value = (api === 'collapsible' || api === 'resizable') ? (value === 'true') : value;\n                    if (isNullOrUndefined(this.paneSettings[paneIndex])) {\n                        this.paneSettings[paneIndex] = {\n                            size: '',\n                            min: null,\n                            max: null,\n                            content: '',\n                            resizable: true,\n                            collapsible: false,\n                            collapsed: false\n                        };\n                    }\n                    // tslint:disable-next-line\n                    var paneAPI = this.paneSettings[paneIndex][api];\n                    if (api === 'resizable' || api === 'collapsible' || api === 'collapsed') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                    if (isNullOrUndefined(paneAPI) || paneAPI === '') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.destroyPaneSettings = function () {\n        [].slice.call(this.element.children).forEach(function (el) { detach(el); });\n    };\n    Splitter.prototype.setPaneSettings = function () {\n        var childCount = this.allPanes.length;\n        var paneCollection = [];\n        var paneValue = {\n            size: '',\n            min: null,\n            max: null,\n            content: '',\n            resizable: true,\n            collapsed: false,\n            collapsible: false\n        };\n        for (var i = 0; i < childCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i])) {\n                paneCollection[i] = paneValue;\n            }\n            else {\n                paneCollection[i] = this.paneSettings[i];\n            }\n        }\n        this.setProperties({ 'paneSettings': paneCollection }, true);\n    };\n    Splitter.prototype.checkArrow = function (paneIndex, targetArrow) {\n        return (this.allBars[paneIndex].querySelector('.' + NAVIGATE_ARROW + '.' + targetArrow));\n    };\n    Splitter.prototype.removeDataPrefix = function (attribute) {\n        return attribute.slice(attribute.lastIndexOf('-') + 1);\n    };\n    Splitter.prototype.setRTL = function (rtl) {\n        rtl ? addClass([this.element], RTL) : removeClass([this.element], RTL);\n    };\n    Splitter.prototype.setSplitterSize = function (element, size, property) {\n        var style = property === 'width' ? { 'width': formatUnit(size) } : { 'height': formatUnit(size) };\n        setStyleAttribute(element, style);\n    };\n    Splitter.prototype.getPanesDimensions = function () {\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.orientation === 'Horizontal' ? this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().width) :\n                this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().height);\n        }\n    };\n    Splitter.prototype.setCssClass = function (className) {\n        if (className) {\n            addClass([this.element], className.split(className.indexOf(',') > -1 ? ',' : ' '));\n        }\n    };\n    Splitter.prototype.hideResizer = function (target) {\n        addClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n    };\n    Splitter.prototype.showResizer = function (target) {\n        if (!isNullOrUndefined(this.previousPane) && this.previousPane.classList.contains(RESIZABLE_PANE) &&\n            !isNullOrUndefined(this.nextPane) && this.nextPane.classList.contains(RESIZABLE_PANE)) {\n            removeClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n        }\n    };\n    Splitter.prototype.resizableModel = function (index, newVal) {\n        var paneIndex;\n        var i = index;\n        paneIndex = (index === (this.allBars.length)) ? (index - 1) : index;\n        EventHandler.remove(this.allBars[paneIndex], 'mousedown', this.onMouseDown);\n        if (newVal) {\n            EventHandler.add(this.allBars[paneIndex], 'mousedown', this.onMouseDown, this);\n            if (this.isResizable()) {\n                this.showResizer(this.allBars[paneIndex]);\n                removeClass([select('.' + RESIZE_BAR, this.allBars[paneIndex])], HIDE_HANDLER);\n                this.allBars[paneIndex].classList.add(RESIZABLE_BAR);\n                (index === (this.allBars.length)) ? this.allPanes[index].classList.add(RESIZABLE_PANE) :\n                    this.allPanes[paneIndex].classList.add(RESIZABLE_PANE);\n                this.updateResizablePanes(i);\n            }\n        }\n        else {\n            this.updateResizablePanes(i);\n            this.hideResizer(this.allBars[paneIndex]);\n            this.allBars[paneIndex].classList.remove(RESIZABLE_BAR);\n            (index === (this.allBars.length)) ? this.allPanes[index].classList.remove(RESIZABLE_PANE) :\n                this.allPanes[paneIndex].classList.remove(RESIZABLE_PANE);\n        }\n    };\n    Splitter.prototype.collapsibleModelUpdate = function (index) {\n        var arrow2;\n        var arrow1;\n        var paneIndex;\n        paneIndex = index === (this.allBars.length) ? (index - 1) : index;\n        arrow2 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_LEFT) : this.checkArrow(paneIndex, ARROW_UP);\n        arrow1 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_RIGHT) : this.checkArrow(paneIndex, ARROW_DOWN);\n        this.paneCollapsible(this.allPanes[index], index);\n        this.updateCollapseIcons(paneIndex, arrow1, arrow2);\n    };\n    Splitter.prototype.collapseArrow = function (barIndex, arrow) {\n        return selectAll('.' + arrow, this.allBars[barIndex])[0];\n    };\n    Splitter.prototype.updateIsCollapsed = function (index, collapseArrow, lastBarArrow) {\n        if (!isNullOrUndefined(index)) {\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, lastBarArrow) : this.collapseArrow(barIndex, collapseArrow);\n            targetEle.click();\n        }\n    };\n    Splitter.prototype.isCollapsed = function (index) {\n        if (!isNullOrUndefined(index)) {\n            this.updateIsCollapsed(index, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n        }\n        else {\n            for (var m = 0; m < this.allPanes.length; m++) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed) {\n                    this.updateIsCollapsed(m, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n                }\n            }\n        }\n    };\n    Splitter.prototype.targetArrows = function () {\n        this.splitterProperty();\n        return { collapseArrow: (this.orientation === 'Horizontal') ? ARROW_LEFT : ARROW_UP,\n            lastBarArrow: (this.orientation === 'Vertical') ? ARROW_DOWN : ARROW_RIGHT\n        };\n    };\n    Splitter.prototype.collapsedOnchange = function (index) {\n        if (!isNullOrUndefined(this.paneSettings[index]) && !isNullOrUndefined(this.paneSettings[index].collapsed)\n            && !this.paneSettings[index].collapsed) {\n            this.updateIsCollapsed(index, this.targetArrows().lastBarArrow, this.targetArrows().collapseArrow);\n        }\n    };\n    Splitter.prototype.isEnabled = function (enabled) {\n        enabled ? removeClass([this.element], DISABLED) : addClass([this.element], DISABLED);\n    };\n    Splitter.prototype.setSeparatorSize = function (size) {\n        var sizeValue = isNullOrUndefined(size) ? 'auto' : size + 'px';\n        var seaprator = this.orientation === 'Horizontal' ? SPLIT_H_BAR : SPLIT_V_BAR;\n        for (var index = 0; index < this.allBars.length; index++) {\n            var splitBar = selectAll('.' + seaprator, this.element)[index];\n            var resizeBar = selectAll('.' + RESIZE_BAR, splitBar)[0];\n            if (this.orientation === 'Horizontal') {\n                splitBar.style.width = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.width = sizeValue;\n                }\n            }\n            else {\n                splitBar.style.height = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.height = sizeValue;\n                }\n            }\n        }\n    };\n    Splitter.prototype.changeOrientation = function (orientation) {\n        var isVertical = orientation === 'Vertical';\n        this.element.classList.remove(isVertical ? HORIZONTAL_PANE : VERTICAL_PANE);\n        this.element.classList.add(isVertical ? VERTICAL_PANE : HORIZONTAL_PANE);\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.allPanes[index].classList.remove(isVertical ? SPLIT_H_PANE : SPLIT_V_PANE);\n            this.allPanes[index].classList.add(isVertical ? SPLIT_V_PANE : SPLIT_H_PANE);\n        }\n        for (var index = 0; index < this.allBars.length; index++) {\n            detach(this.allBars[index]);\n        }\n        this.allBars = [];\n        this.addSeparator(this.element);\n    };\n    Splitter.prototype.checkSplitPane = function (currentBar, elementIndex) {\n        var paneEle = currentBar.parentElement.getElementsByClassName('e-pane')[elementIndex];\n        return paneEle ? paneEle : null;\n    };\n    Splitter.prototype.getPrevPane = function (currentBar, order) {\n        return this.checkSplitPane(currentBar, ((order - 1) / (2)));\n    };\n    Splitter.prototype.getNextPane = function (currentBar, order) {\n        return this.checkSplitPane(currentBar, (((order - 1) / 2) + 1));\n    };\n    Splitter.prototype.addResizeHandler = function (currentBar) {\n        var resizeHanlder = this.createElement('div');\n        addClass([resizeHanlder], [RESIZE_BAR, E_ICONS]);\n        var sizeValue = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        this.orientation === 'Horizontal' ? (resizeHanlder.style.width = sizeValue) : resizeHanlder.style.height = sizeValue;\n        currentBar.appendChild(resizeHanlder);\n    };\n    Splitter.prototype.getHeight = function (target) {\n        var height = this.height;\n        height = target.style.height !== '' && this.height === '100%' ? target.style.height : this.height;\n        return height;\n    };\n    Splitter.prototype.getWidth = function (target) {\n        var width = this.width;\n        width = target.style.width !== '' && this.width === '100%' ? target.style.width : this.width;\n        return width;\n    };\n    Splitter.prototype.setDimension = function (height, width) {\n        setStyleAttribute(this.element, { 'height': height, 'width': width });\n    };\n    Splitter.prototype.updateCollapseIcons = function (index, arrow1, arrow2) {\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].collapsible)) {\n                this.paneSettings[index].collapsible ? removeClass([arrow2], [HIDE_ICON]) : addClass([arrow2], [HIDE_ICON]);\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                }\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    if ((this.paneSettings[index + 1].collapsible)) {\n                        this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.createSeparator = function (i) {\n        var separator = this.createElement('div');\n        this.allBars.push(separator);\n        var arrow1 = this.createElement('button');\n        var arrow2 = this.createElement('button');\n        var size;\n        size = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        if (this.orientation === 'Horizontal') {\n            this.leftArrow = ARROW_LEFT;\n            this.rightArrow = ARROW_RIGHT;\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_LEFT, HIDE_ICON]);\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_RIGHT, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_H_BAR]);\n            separator.style.width = size;\n        }\n        else {\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_DOWN, HIDE_ICON]);\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_UP, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_V_BAR]);\n            this.leftArrow = ARROW_UP;\n            this.rightArrow = ARROW_DOWN;\n            separator.style.height = size;\n        }\n        this.addMouseActions(separator);\n        separator.appendChild(arrow2);\n        this.addResizeHandler(separator);\n        separator.appendChild(arrow1);\n        this.updateCollapseIcons(i, arrow1, arrow2);\n        return separator;\n    };\n    Splitter.prototype.updateResizablePanes = function (index) {\n        this.getPaneDetails();\n        this.isResizable() ? this.allPanes[index].classList.add(RESIZABLE_PANE) : this.allPanes[index].classList.remove(RESIZABLE_PANE);\n    };\n    Splitter.prototype.addSeparator = function (target) {\n        var childCount = this.allPanes.length;\n        var clonedEle = target.children;\n        var separator;\n        for (var i = 0; i < childCount; i++) {\n            if (i < childCount - 1) {\n                separator = this.createSeparator(i);\n                setStyleAttribute(separator, { 'order': (i * 2) + 1 });\n                this.separatorOrder.push((i * 2) + 1);\n                clonedEle[i].parentNode.appendChild(separator);\n                this.currentSeparator = separator;\n                separator.setAttribute('role', 'separator');\n                separator.setAttribute('aria-orientation', this.orientation.toLowerCase());\n                this.wireClickEvents();\n                if (this.isResizable()) {\n                    EventHandler.add(separator, 'mousedown', this.onMouseDown, this);\n                    var eventName = (Browser.info.name === 'msie') ? 'pointerdown' : 'touchstart';\n                    EventHandler.add(separator, eventName, this.onMouseDown, this);\n                    separator.classList.add(RESIZABLE_BAR);\n                    this.updateResizablePanes(i);\n                }\n                else {\n                    addClass([select('.' + RESIZE_BAR, separator)], HIDE_HANDLER);\n                }\n            }\n            else {\n                this.updateResizablePanes(i);\n                addClass([separator], LAST_BAR);\n            }\n        }\n    };\n    Splitter.prototype.isResizable = function () {\n        var resizable = false;\n        if ((!isNullOrUndefined(this.paneSettings[this.getPreviousPaneIndex()]) &&\n            this.paneSettings[this.getPreviousPaneIndex()].resizable &&\n            !isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()]) &&\n            this.paneSettings[this.getNextPaneIndex()].resizable) ||\n            isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()])) {\n            resizable = true;\n        }\n        return resizable;\n    };\n    Splitter.prototype.addMouseActions = function (separator) {\n        var _this = this;\n        var sTout;\n        var hoverTimeOut;\n        separator.addEventListener('mouseenter', function () {\n            /* istanbul ignore next */\n            sTout = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n        separator.addEventListener('mouseleave', function () {\n            clearTimeout(sTout);\n            removeClass([separator], [SPLIT_BAR_HOVER]);\n        });\n        separator.addEventListener('mouseout', function () {\n            clearTimeout(hoverTimeOut);\n        });\n        separator.addEventListener('mouseover', function () {\n            /* istanbul ignore next */\n            hoverTimeOut = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n    };\n    Splitter.prototype.getEventType = function (e) {\n        return (e.indexOf('mouse') > -1) ? 'mouse' : 'touch';\n    };\n    Splitter.prototype.updateCurrentSeparator = function (target) {\n        this.currentSeparator = this.isSeparator(target) ? target.parentElement : target;\n    };\n    Splitter.prototype.isSeparator = function (target) {\n        return ((target.classList.contains(RESIZE_BAR) || target.classList.contains(SPLIT_BAR)) ? false : true);\n    };\n    Splitter.prototype.isMouseEvent = function (e) {\n        var isMouse = false;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType) &&\n            this.getEventType(e.pointerType) === 'mouse')) {\n            isMouse = true;\n        }\n        return isMouse;\n    };\n    Splitter.prototype.updateCursorPosition = function (e, type) {\n        if (this.isMouseEvent(e)) {\n            this.changeCoordinates({ x: e.pageX, y: e.pageY }, type);\n        }\n        else {\n            var eventType = Browser.info.name !== 'msie' ? e.touches[0] : e;\n            this.changeCoordinates({ x: eventType.pageX, y: eventType.pageY }, type);\n        }\n    };\n    Splitter.prototype.changeCoordinates = function (coordinates, type) {\n        if (type === 'previous') {\n            this.previousCoordinates = coordinates;\n        }\n        else {\n            this.currentCoordinates = coordinates;\n        }\n    };\n    Splitter.prototype.wireResizeEvents = function () {\n        EventHandler.add(document, 'mousemove', this.onMouseMove, this);\n        EventHandler.add(document, 'mouseup', this.onMouseUp, this);\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.add(document, touchMoveEvent, this.onMouseMove, this);\n        EventHandler.add(document, touchEndEvent, this.onMouseUp, this);\n    };\n    Splitter.prototype.unwireResizeEvents = function () {\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.remove(document, 'mousemove', this.onMouseMove);\n        EventHandler.remove(document, 'mouseup', this.onMouseUp);\n        EventHandler.remove(document, touchMoveEvent, this.onMouseMove);\n        EventHandler.remove(document, touchEndEvent, this.onMouseUp);\n    };\n    Splitter.prototype.wireClickEvents = function () {\n        EventHandler.add(this.currentSeparator, 'touchstart click', this.clickHandler, this);\n    };\n    Splitter.prototype.clickHandler = function (e) {\n        if (!e.target.classList.contains(NAVIGATE_ARROW)) {\n            var hoverBars = selectAll('.' + ROOT + ' > .' + SPLIT_BAR + '.' + SPLIT_BAR_HOVER);\n            if (hoverBars.length > 0) {\n                removeClass(hoverBars, SPLIT_BAR_HOVER);\n            }\n            e.target.classList.add(SPLIT_BAR_HOVER);\n        }\n        var icon = e.target;\n        if (icon.classList.contains(ARROW_LEFT) || icon.classList.contains(ARROW_UP)) {\n            this.collapseAction(e);\n        }\n        if (icon.classList.contains(ARROW_RIGHT) || icon.classList.contains(ARROW_DOWN)) {\n            this.expandAction(e);\n        }\n    };\n    Splitter.prototype.expandAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        var eventArgs = this.beforeAction(e);\n        this.trigger('beforeExpand', eventArgs, function (beforeExpandArgs) {\n            if (!beforeExpandArgs.cancel) {\n                _this.previousPane.style.flexGrow = '1';\n                _this.nextPane.style.flexGrow = '0';\n                if (!_this.previousPane.classList.contains(COLLAPSE_PANE)) {\n                    removeClass([_this.nextPane], EXPAND_PANE);\n                    removeClass([_this.previousPane], collapseClass);\n                    addClass([_this.previousPane], EXPAND_PANE);\n                    addClass([_this.nextPane], collapseClass);\n                }\n                else {\n                    (_this.currentBarIndex !== 0) ?\n                        _this.previousPane.previousElementSibling.style.flexGrow = '' : _this.nextPane.style.flexGrow = '';\n                    removeClass([_this.previousPane], collapseClass);\n                    removeClass([_this.nextPane], EXPAND_PANE);\n                }\n                _this.updateIconsOnExpand(e);\n                _this.previousPane.setAttribute('aria-expanded', 'true');\n                _this.nextPane.setAttribute('aria-expanded', 'false');\n                var expandEventArgs = _this.afterAction(e);\n                _this.trigger('expanded', expandEventArgs);\n            }\n        });\n    };\n    Splitter.prototype.hideTargetBarIcon = function (targetBar, targetArrow) {\n        addClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.showTargetBarIcon = function (targetBar, targetArrow) {\n        removeClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnCollapse = function (e) {\n        this.splitterProperty();\n        if (this.splitInstance.prevPaneCollapsed && this.splitInstance.nextPaneExpanded) {\n            addClass([e.target], HIDE_ICON);\n            this.showCurrentBarIcon();\n            this.resizableModel(this.currentBarIndex, false);\n            if (!isNullOrUndefined(this.prevBar)) {\n                this.resizableModel(this.currentBarIndex - 1, false);\n                this.hideTargetBarIcon(this.prevBar, this.arrow);\n                // first pane collapsible false\n                this.showTargetBarIcon(this.prevBar, this.leftArrow);\n            }\n        }\n        else if (!this.splitInstance.prevPaneCollapsed && !this.splitInstance.nextPaneExpanded) {\n            this.resizableModel(this.currentBarIndex, true);\n            if (!this.splitInstance.nextPaneNextEle.classList.contains('e-collapsed')) {\n                this.resizableModel(this.currentBarIndex + 1, true);\n            }\n            this.showCurrentBarIcon();\n            if (!this.paneSettings[this.currentBarIndex].collapsible) {\n                addClass([e.target], HIDE_ICON);\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                this.showTargetBarIcon(this.nextBar, this.leftArrow);\n                if (!this.paneSettings[this.currentBarIndex].collapsible && this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.nextBar, this.arrow);\n                }\n                else if (!this.paneSettings[this.splitInstance.nextPaneIndex + 1].collapsible &&\n                    this.paneSettings[this.currentBarIndex]) {\n                    this.hideTargetBarIcon(this.nextBar, this.arrow);\n                }\n            }\n        }\n    };\n    Splitter.prototype.collapseAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        this.previousPane.style.flexGrow = '0';\n        this.nextPane.style.flexGrow = '1';\n        var eventArgs = this.beforeAction(e);\n        this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n            if (!beforeCollapseArgs.cancel) {\n                if (_this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                    removeClass([_this.previousPane], EXPAND_PANE);\n                    removeClass([_this.nextPane], collapseClass);\n                }\n                else {\n                    removeClass([_this.previousPane], EXPAND_PANE);\n                    removeClass([_this.nextPane], collapseClass);\n                    addClass([_this.nextPane], EXPAND_PANE);\n                    addClass([_this.previousPane], collapseClass);\n                }\n                _this.updateIconsOnCollapse(e);\n                _this.previousPane.setAttribute('aria-expanded', 'false');\n                _this.nextPane.setAttribute('aria-expanded', 'true');\n                var collapseEventArgs = _this.afterAction(e);\n                _this.trigger('collapsed', collapseEventArgs);\n            }\n        });\n    };\n    Splitter.prototype.beforeAction = function (e) {\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.splitterProperty = function () {\n        this.splitInstance = {\n            currentBarIndex: this.currentBarIndex,\n            nextPaneCollapsible: this.nextPane.classList.contains(COLLAPSIBLE),\n            prevPaneCollapsible: this.previousPane.classList.contains(COLLAPSIBLE),\n            prevPaneExpanded: this.previousPane.classList.contains(EXPAND_PANE),\n            nextPaneExpanded: this.nextPane.classList.contains(EXPAND_PANE),\n            nextPaneCollapsed: this.nextPane.classList.contains(COLLAPSE_PANE),\n            prevPaneCollapsed: this.previousPane.classList.contains(COLLAPSE_PANE),\n            nextPaneIndex: this.getNextPaneIndex(),\n            prevPaneIndex: this.getPreviousPaneIndex(),\n            nextPaneNextEle: this.nextPane.nextElementSibling,\n            prevPanePreEle: this.previousPane.previousElementSibling,\n        };\n    };\n    Splitter.prototype.showCurrentBarIcon = function () {\n        removeClass([select('.' + this.arrow, this.currentSeparator)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnExpand = function (e) {\n        this.splitterProperty();\n        addClass([e.target], HIDE_ICON);\n        if (!this.splitInstance.prevPaneExpanded && !this.splitInstance.nextPaneCollapsed) {\n            this.showCurrentBarIcon();\n            removeClass([e.target], HIDE_ICON);\n            this.resizableModel(this.currentBarIndex, true);\n            if (!isNullOrUndefined(this.prevBar) && !this.splitInstance.prevPanePreEle.classList.contains(COLLAPSE_PANE)) {\n                this.resizableModel(this.currentBarIndex - 1, true);\n                this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                if (!this.paneSettings[this.currentBarIndex - 1].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.arrow);\n                    if (this.paneSettings[this.currentBarIndex].collapsible &&\n                        !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                        this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                    }\n                }\n                else if (this.paneSettings[this.currentBarIndex].collapsible &&\n                    !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n            else {\n                if (this.paneSettings[this.currentBarIndex].collapsible && !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                else {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n            }\n        }\n        else if (this.splitInstance.prevPaneExpanded && this.splitInstance.nextPaneCollapsed) {\n            this.resizableModel(this.currentBarIndex, false);\n            this.resizableModel(this.currentBarIndex + 1, false);\n            this.showCurrentBarIcon();\n            if (!isNullOrUndefined(this.nextBar)) {\n                this.hideTargetBarIcon(this.nextBar, this.arrow);\n                // only when middle pane collapsible to true\n                this.showTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.afterAction = function (e) {\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.currentIndex = function (e) {\n        this.currentBarIndex = this.getSeparatorIndex(e.target.parentElement);\n    };\n    Splitter.prototype.getSeparatorIndex = function (target) {\n        var array = [].slice.call(this.allBars);\n        return array.indexOf(target);\n    };\n    Splitter.prototype.getPrevBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar - 1)];\n        return prevbar;\n    };\n    Splitter.prototype.getNextBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar + 1)];\n        return prevbar;\n    };\n    Splitter.prototype.updateBars = function (index) {\n        this.prevBar = this.getPrevBar(index);\n        this.nextBar = this.getNextBar(index);\n    };\n    Splitter.prototype.splitterDetails = function (e) {\n        if (this.orientation === 'Horizontal') {\n            this.arrow = e.target.classList.contains(ARROW_LEFT) ? ARROW_RIGHT : ARROW_LEFT;\n        }\n        else {\n            this.arrow = e.target.classList.contains(ARROW_UP) ? ARROW_DOWN : ARROW_UP;\n        }\n        this.updateCurrentSeparator(e.target);\n        this.currentIndex(e);\n        this.updateBars(this.currentBarIndex);\n        this.getPaneDetails();\n    };\n    Splitter.prototype.onMouseDown = function (e) {\n        var _this = this;\n        e.preventDefault();\n        var target = e.target;\n        if (target.classList.contains(NAVIGATE_ARROW)) {\n            return;\n        }\n        this.updateCurrentSeparator(target);\n        addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.updateCursorPosition(e, 'previous');\n        this.getPaneDetails();\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        this.trigger('resizeStart', eventArgs, function (resizeStartArgs) {\n            if (!resizeStartArgs.cancel) {\n                _this.wireResizeEvents();\n                if (_this.previousPane.style.flexBasis.indexOf('%') > 0 || _this.nextPane.style.flexBasis.indexOf('%') > 0) {\n                    var previousFlexBasis = _this.updatePaneFlexBasis(_this.previousPane);\n                    var nextFlexBasis = _this.updatePaneFlexBasis(_this.nextPane);\n                    _this.totalPercent = previousFlexBasis + nextFlexBasis;\n                    _this.totalWidth = _this.convertPercentageToPixel(_this.totalPercent + '%');\n                }\n                else {\n                    _this.totalWidth = (_this.orientation === 'Horizontal') ? _this.previousPane.offsetWidth + _this.nextPane.offsetWidth :\n                        _this.previousPane.offsetHeight + _this.nextPane.offsetHeight;\n                }\n            }\n        });\n    };\n    Splitter.prototype.updatePaneFlexBasis = function (pane) {\n        var previous;\n        if (pane.style.flexBasis.indexOf('%') > 0) {\n            previous = this.removePercentageUnit(pane.style.flexBasis);\n        }\n        else {\n            if (pane.style.flexBasis !== '') {\n                previous = this.convertPixelToPercentage(this.convertPixelToNumber(pane.style.flexBasis));\n            }\n            else {\n                var offset = (this.orientation === 'Horizontal') ? (pane.offsetWidth + this.currentSeparator.offsetWidth) :\n                    (pane.offsetHeight + this.currentSeparator.offsetHeight);\n                previous = this.convertPixelToPercentage(offset);\n            }\n        }\n        return previous;\n    };\n    Splitter.prototype.removePercentageUnit = function (value) {\n        return parseFloat(value.slice(0, value.indexOf('%')));\n    };\n    Splitter.prototype.convertPercentageToPixel = function (value, targetElement) {\n        var percentage = value.toString();\n        var convertedValue;\n        if (percentage.indexOf('%') > -1) {\n            convertedValue = parseFloat(percentage.slice(0, percentage.indexOf('%')));\n            var offsetValue = void 0;\n            if (!isNullOrUndefined(targetElement)) {\n                offsetValue = this.panesDimensions[this.allPanes.indexOf(targetElement)];\n            }\n            else {\n                offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n            }\n            convertedValue = Math.ceil(offsetValue * (convertedValue / 100));\n        }\n        else {\n            convertedValue = parseInt(percentage, 10);\n        }\n        return convertedValue;\n    };\n    Splitter.prototype.convertPixelToPercentage = function (value) {\n        var offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return (value / offsetValue) * 100;\n    };\n    Splitter.prototype.convertPixelToNumber = function (value) {\n        if (value.indexOf('p') > -1) {\n            return parseFloat(value.slice(0, value.indexOf('p')));\n        }\n        else {\n            return parseFloat(value);\n        }\n    };\n    Splitter.prototype.calcDragPosition = function (rectValue, offsetValue) {\n        var separatorPosition;\n        var separator;\n        separatorPosition = this.orientation === 'Horizontal' ? (this.currentCoordinates.x - rectValue) :\n            (this.currentCoordinates.y - rectValue);\n        separator = separatorPosition / offsetValue;\n        separator = (separator > 1) ? 1 : (separator < 0) ? 0 : separator;\n        return separator * offsetValue;\n    };\n    Splitter.prototype.getSeparatorPosition = function (e) {\n        this.updateCursorPosition(e, 'current');\n        var rectBound = (this.orientation === 'Horizontal') ? this.element.getBoundingClientRect().left :\n            this.element.getBoundingClientRect().top;\n        var offSet = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return this.calcDragPosition(rectBound, offSet);\n    };\n    Splitter.prototype.getMinMax = function (paneIndex, target, selection) {\n        var defaultVal = selection === 'min' ? 0 : null;\n        // tslint:disable-next-line\n        var paneValue = null;\n        if (selection === 'min') {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n                paneValue = this.paneSettings[paneIndex].min;\n            }\n        }\n        else {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n                paneValue = this.paneSettings[paneIndex].max;\n            }\n        }\n        if (this.paneSettings.length > 0 && !isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(paneValue)) {\n            if (paneValue.indexOf('%') > 0) {\n                paneValue = this.convertPercentageToPixel(paneValue).toString();\n            }\n            return this.convertPixelToNumber(paneValue);\n        }\n        else {\n            return defaultVal;\n        }\n    };\n    Splitter.prototype.getPreviousPaneIndex = function () {\n        var prePaneIndex = ((parseInt(this.currentSeparator.style.order, 10) - 1) / 2);\n        return prePaneIndex;\n    };\n    Splitter.prototype.getNextPaneIndex = function () {\n        var nextPaneIndex = (parseInt(this.currentSeparator.style.order, 10) - 1) / (2);\n        return nextPaneIndex + 1;\n    };\n    Splitter.prototype.getPaneDetails = function () {\n        this.order = parseInt(this.currentSeparator.style.order, 10);\n        var prevPane = this.getPrevPane(this.currentSeparator, this.order);\n        var nextPane = this.getNextPane(this.currentSeparator, this.order);\n        if (prevPane && nextPane) {\n            this.previousPane = prevPane;\n            this.nextPane = nextPane;\n            this.prevPaneIndex = this.getPreviousPaneIndex();\n            this.nextPaneIndex = this.getNextPaneIndex();\n        }\n        else {\n            return;\n        }\n    };\n    Splitter.prototype.getPaneHeight = function (pane) {\n        return ((this.orientation === 'Horizontal') ? pane.offsetWidth.toString() :\n            pane.offsetHeight.toString());\n    };\n    Splitter.prototype.isValidSize = function (paneIndex) {\n        var isValid = false;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(this.paneSettings[paneIndex].size) &&\n            this.paneSettings[paneIndex].size.indexOf('%') > -1) {\n            isValid = true;\n        }\n        return isValid;\n    };\n    Splitter.prototype.getPaneDimensions = function () {\n        this.previousPaneHeightWidth = (this.previousPane.style.flexBasis === '') ? this.getPaneHeight(this.previousPane) :\n            this.previousPane.style.flexBasis;\n        this.nextPaneHeightWidth = (this.nextPane.style.flexBasis === '') ? this.getPaneHeight(this.nextPane) :\n            this.nextPane.style.flexBasis;\n        if (this.isValidSize(this.prevPaneIndex)) {\n            this.previousPaneHeightWidth = this.convertPercentageToPixel(this.previousPaneHeightWidth).toString();\n            this.updatePrePaneInPercentage = true;\n        }\n        if (this.isValidSize(this.nextPaneIndex)) {\n            this.nextPaneHeightWidth = this.convertPercentageToPixel(this.nextPaneHeightWidth).toString();\n            this.updateNextPaneInPercentage = true;\n        }\n        this.prePaneDimenson = this.convertPixelToNumber(this.previousPaneHeightWidth.toString());\n        this.nextPaneDimension = this.convertPixelToNumber(this.nextPaneHeightWidth.toString());\n    };\n    Splitter.prototype.checkCoordinates = function (pageX, pageY) {\n        var coordinatesChanged = true;\n        if ((pageX === this.previousCoordinates.x || pageY === this.previousCoordinates.y)) {\n            coordinatesChanged = false;\n        }\n        return coordinatesChanged;\n    };\n    Splitter.prototype.isCursorMoved = function (e) {\n        var cursorMoved = true;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType)) &&\n            this.getEventType(e.pointerType) === 'mouse') {\n            cursorMoved = this.checkCoordinates(e.pageX, e.pageY);\n        }\n        else {\n            cursorMoved = (Browser.info.name !== 'msie') ?\n                this.checkCoordinates(e.touches[0].pageX, e.touches[0].pageY) :\n                this.checkCoordinates(e.pageX, e.pageY);\n        }\n        return cursorMoved;\n    };\n    Splitter.prototype.getBorder = function () {\n        this.border = 0;\n        var border = this.orientation === 'Horizontal' ? ((this.element.offsetWidth - this.element.clientWidth) / 2) :\n            (this.element.offsetHeight - this.element.clientHeight) / 2;\n        this.border = Browser.info.name !== 'chrome' ? this.border : border;\n    };\n    Splitter.prototype.onMouseMove = function (e) {\n        if (!this.isCursorMoved(e)) {\n            return;\n        }\n        this.getPaneDetails();\n        this.getPaneDimensions();\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        };\n        this.trigger('resizing', eventArgs);\n        var left = this.validateDraggedPosition(this.getSeparatorPosition(e), this.prePaneDimenson, this.nextPaneDimension);\n        var separatorNewPosition;\n        this.getBorder();\n        if (this.orientation === 'Horizontal') {\n            separatorNewPosition = (this.element.getBoundingClientRect().left + left) -\n                this.currentSeparator.getBoundingClientRect().left + this.border;\n        }\n        else {\n            separatorNewPosition = (this.element.getBoundingClientRect().top + left) -\n                this.currentSeparator.getBoundingClientRect().top + this.border;\n        }\n        this.nextPaneHeightWidth =\n            (typeof (this.nextPaneHeightWidth) === 'string' && this.nextPaneHeightWidth.indexOf('p') > -1) ?\n                this.convertPixelToNumber(this.nextPaneHeightWidth) : parseInt(this.nextPaneHeightWidth, 10);\n        this.prevPaneCurrentWidth = separatorNewPosition + this.convertPixelToNumber(this.previousPaneHeightWidth);\n        this.nextPaneCurrentWidth = this.nextPaneHeightWidth - separatorNewPosition;\n        this.validateMinMaxValues();\n        if (this.nextPaneCurrentWidth < 0) {\n            this.nextPaneCurrentWidth = 0;\n        }\n        /* istanbul ignore next */\n        if (this.prevPaneCurrentWidth < 0) {\n            this.prevPaneCurrentWidth = 0;\n        }\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) > this.totalWidth) {\n            if (this.nextPaneCurrentWidth < this.prevPaneCurrentWidth) {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n            else {\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n        }\n        /* istanbul ignore next */\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) < this.totalWidth) {\n            var difference = this.totalWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth));\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + difference;\n        }\n        this.calculateCurrentDimensions();\n        this.addStaticPaneClass();\n        this.previousPane.style.flexBasis = this.prevPaneCurrentWidth;\n        this.nextPane.style.flexBasis = this.nextPaneCurrentWidth;\n    };\n    Splitter.prototype.validateMinRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMinRange = null;\n        var paneMinDimensions;\n        var difference = 0;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n            paneMinRange = this.paneSettings[paneIndex].min.toString();\n        }\n        if (!isNullOrUndefined(paneMinRange)) {\n            if (paneMinRange.indexOf('%') > 0) {\n                paneMinRange = this.convertPercentageToPixel(paneMinRange).toString();\n            }\n            paneMinDimensions = this.convertPixelToNumber(paneMinRange);\n            if (paneCurrentWidth < paneMinDimensions) {\n                difference = (paneCurrentWidth - paneMinDimensions) <= 0 ? 0 :\n                    (paneCurrentWidth - paneMinDimensions);\n                this.totalWidth = this.totalWidth - difference;\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMinDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMaxRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMaxRange = null;\n        var paneMaxDimensions;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n            paneMaxRange = this.paneSettings[paneIndex].max.toString();\n        }\n        if (!isNullOrUndefined(paneMaxRange)) {\n            if (paneMaxRange.indexOf('%') > 0) {\n                paneMaxRange = this.convertPercentageToPixel(paneMaxRange).toString();\n            }\n            paneMaxDimensions = this.convertPixelToNumber(paneMaxRange);\n            if (paneCurrentWidth > paneMaxDimensions) {\n                this.totalWidth = this.totalWidth - (paneCurrentWidth - paneMaxDimensions);\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMaxDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMinMaxValues = function () {\n        //validate previous pane minimum range\n        this.prevPaneCurrentWidth = this.validateMinRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // Validate next pane minimum range\n        this.nextPaneCurrentWidth = this.validateMinRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n        // validate previous pane maximum range\n        this.prevPaneCurrentWidth = this.validateMaxRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // validate next pane maximum range\n        this.nextPaneCurrentWidth = this.validateMaxRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n    };\n    Splitter.prototype.equatePaneWidths = function () {\n        var difference;\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) > this.totalPercent) {\n            difference = (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) - this.totalPercent;\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - (difference / 2) + '%';\n        }\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) < this.totalPercent) {\n            difference = this.totalPercent - (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth);\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + (difference / 2) + '%';\n        }\n    };\n    Splitter.prototype.calculateCurrentDimensions = function () {\n        if (this.updatePrePaneInPercentage || this.updateNextPaneInPercentage) {\n            this.prevPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.prevPaneCurrentWidth)\n                * 10) / 10));\n            this.nextPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.nextPaneCurrentWidth)\n                * 10) / 10));\n            if (this.prevPaneCurrentWidth === 0) {\n                this.nextPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.nextPaneCurrentWidth === 0) {\n                this.prevPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth !== this.totalPercent) {\n                this.equatePaneWidths();\n            }\n            else {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + '%';\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + '%';\n            }\n            this.prevPaneCurrentWidth = (this.updatePrePaneInPercentage) ? this.prevPaneCurrentWidth :\n                this.convertPercentageToPixel(this.prevPaneCurrentWidth) + 'px';\n            this.nextPaneCurrentWidth = (this.updateNextPaneInPercentage) ? this.nextPaneCurrentWidth :\n                this.convertPercentageToPixel(this.nextPaneCurrentWidth) + 'px';\n            this.updatePrePaneInPercentage = false;\n            this.updateNextPaneInPercentage = false;\n        }\n        else {\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + 'px';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + 'px';\n        }\n    };\n    Splitter.prototype.addStaticPaneClass = function () {\n        if (!this.previousPane.classList.contains(STATIC_PANE)) {\n            this.previousPane.classList.add(STATIC_PANE);\n        }\n        if (!this.nextPane.classList.contains(STATIC_PANE)) {\n            this.nextPane.classList.add(STATIC_PANE);\n        }\n    };\n    Splitter.prototype.validateDraggedPosition = function (draggedPos, prevPaneHeightWidth, nextPaneHeightWidth) {\n        var separatorTopLeft = (this.orientation === 'Horizontal') ? this.currentSeparator.offsetLeft :\n            this.currentSeparator.offsetTop;\n        var prePaneRange = separatorTopLeft - prevPaneHeightWidth;\n        var nextPaneRange = nextPaneHeightWidth + separatorTopLeft;\n        var pane1MinSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'min');\n        var pane2MinSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'min');\n        var pane1MaxSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'max');\n        var pane2MaxSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'max');\n        var validatedSize = draggedPos;\n        if (draggedPos > nextPaneRange - pane2MinSize) {\n            validatedSize = nextPaneRange - pane2MinSize;\n        }\n        else if (draggedPos < prePaneRange + pane1MinSize) {\n            validatedSize = prePaneRange + pane1MinSize;\n        }\n        if (!isNullOrUndefined(pane1MaxSize)) {\n            if (draggedPos > prePaneRange + pane1MaxSize) {\n                validatedSize = prePaneRange + pane1MaxSize;\n            }\n        }\n        else if (!isNullOrUndefined(pane2MaxSize)) {\n            if (draggedPos < nextPaneRange - pane2MaxSize) {\n                validatedSize = nextPaneRange - pane2MaxSize;\n            }\n        }\n        return validatedSize;\n    };\n    Splitter.prototype.onMouseUp = function (e) {\n        removeClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.unwireResizeEvents();\n        var eventArgs = {\n            event: e,\n            element: this.element,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        };\n        this.trigger('resizeStop', eventArgs);\n    };\n    Splitter.prototype.panesDimension = function (index, child) {\n        var childCount = child.length;\n        var size;\n        parseInt(this.getHeight(this.element), 10);\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].size)) {\n                size = this.paneSettings[index].size;\n                if (index < childCount) {\n                    setStyleAttribute(child[index], { 'flex-basis': size, 'order': index * 2 });\n                    if (index < childCount - 1 && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                    else if (!this.sizeFlag) {\n                        child[index].style.flexBasis = null;\n                    }\n                    if ((index === childCount - 1) && this.sizeFlag && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                }\n            }\n            else {\n                this.sizeFlag = true;\n                setStyleAttribute(child[index], { 'order': index * 2 });\n            }\n        }\n        else {\n            setStyleAttribute(child[index], { 'order': index * 2 });\n        }\n        this.paneOrder.push(index * 2);\n    };\n    Splitter.prototype.setTemplate = function (template, toElement) {\n        toElement.innerHTML = '';\n        this.templateCompile(toElement, template);\n    };\n    // tslint:disable-next-line\n    Splitter.prototype.templateCompile = function (ele, cnt) {\n        var blazorContain = Object.keys(window);\n        var tempEle = this.createElement('div');\n        this.compileElement(tempEle, cnt, 'content');\n        if (tempEle.childNodes.length !== 0) {\n            [].slice.call(tempEle.childNodes).forEach(function (childEle) {\n                ele.appendChild(childEle);\n            });\n            if (blazorContain.indexOf('ejsInterop') !== -1 && !this.isStringTemplate && cnt.indexOf('<div>Blazor') === 0) {\n                updateBlazorTemplate(this.element.id + 'content' + this.allPanes.length.toString(), 'ContentTemplate', this.paneSettings[this.allPanes.length - 1]);\n            }\n        }\n    };\n    Splitter.prototype.compileElement = function (ele, val, prop) {\n        var blazorContain = Object.keys(window);\n        if (typeof (val) === 'string') {\n            val = (val).trim();\n        }\n        var templateFn;\n        if (!isNullOrUndefined(val.outerHTML)) {\n            templateFn = compile(val.outerHTML);\n        }\n        else {\n            templateFn = compile(val);\n        }\n        var templateFUN;\n        if (!isNullOrUndefined(templateFn)) {\n            if (blazorContain.indexOf('ejsInterop') !== -1 && !this.isStringTemplate && val.indexOf('<div>Blazor') === 0) {\n                templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), this.isStringTemplate);\n            }\n            else {\n                templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), true);\n            }\n        }\n        if (!isNullOrUndefined(templateFn) && templateFUN.length > 0) {\n            [].slice.call(templateFUN).forEach(function (el) {\n                ele.appendChild(el);\n            });\n        }\n    };\n    Splitter.prototype.paneCollapsible = function (pane, index) {\n        this.paneSettings[index].collapsible ? addClass([pane], COLLAPSIBLE) : removeClass([pane], COLLAPSIBLE);\n    };\n    Splitter.prototype.createSplitPane = function (target) {\n        var childCount = target.children.length;\n        for (var i = 0; i < this.paneSettings.length; i++) {\n            if (childCount < this.paneSettings.length) {\n                var childElement = this.createElement('div');\n                this.element.appendChild(childElement);\n                childCount = childCount + 1;\n            }\n        }\n        childCount = target.children.length;\n        var child = [].slice.call(target.children);\n        this.sizeFlag = false;\n        if (childCount > 1) {\n            for (var i = 0; i < childCount; i++) {\n                // To accept only div and span element as pane\n                if (child[i].nodeName === 'DIV' || child[i].nodeName === 'SPAN') {\n                    this.allPanes.push(child[i]);\n                    if (this.orientation === 'Horizontal') {\n                        addClass([child[i]], [PANE, SPLIT_H_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    else {\n                        addClass([child[i]], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i]) && !isNullOrUndefined(this.paneSettings[i].content)) {\n                        this.setTemplate(this.paneSettings[i].content, child[i]);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i])) {\n                        this.paneCollapsible(child[i], i);\n                    }\n                }\n            }\n        }\n    };\n    ;\n    /**\n     * expands corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be expanded at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.expand = function (index) {\n        this.collapsedOnchange(index);\n    };\n    /**\n     * collapses corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be collapsed at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.collapse = function (index) {\n        this.isCollapsed(index);\n    };\n    /**\n     * Removes the control from the DOM and also removes all its related events.\n     * @returns void\n     */\n    Splitter.prototype.destroy = function () {\n        if (!this.isDestroyed) {\n            _super.prototype.destroy.call(this);\n            EventHandler.remove(document, 'touchstart click', this.onDocumentClick);\n            detach(this.element);\n            this.element = this.wrapper;\n            this.wrapperParent.appendChild(this.wrapper);\n        }\n    };\n    Splitter.prototype.addPaneClass = function (pane) {\n        this.orientation === 'Horizontal' ? addClass([pane], [PANE, SPLIT_H_PANE, SCROLL_PANE]) :\n            addClass([pane], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n        return pane;\n    };\n    Splitter.prototype.removePaneOrders = function (paneClass) {\n        var panes = document.querySelectorAll('.' + paneClass);\n        for (var i = 0; i < panes.length; i++) {\n            panes[i].style.removeProperty('order');\n        }\n    };\n    Splitter.prototype.setPaneOrder = function () {\n        for (var i = 0; i < this.allPanes.length; i++) {\n            this.panesDimension(i, this.allPanes);\n        }\n    };\n    Splitter.prototype.removeSeparator = function () {\n        for (var i = 0; i < this.allBars.length; i++) {\n            detach(this.allBars[i]);\n        }\n        this.allBars = [];\n    };\n    Splitter.prototype.updatePanes = function () {\n        this.setPaneOrder();\n        this.removeSeparator();\n        this.addSeparator(this.element);\n    };\n    /**\n     * Allows you to add a pane dynamically to the specified index position by passing the pane properties.\n     * @param { PanePropertiesModel } paneProperties - Specifies the pane’s properties that apply to new pane.\n     * @param { number } index - Specifies the index where the pane will be inserted.\n     * @returns void\n     */\n    Splitter.prototype.addPane = function (paneProperties, index) {\n        var newPane = this.createElement('div');\n        newPane = this.addPaneClass(newPane);\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var paneDetails = {\n            size: isNullOrUndefined(paneProperties.size) ? '' : paneProperties.size,\n            min: isNullOrUndefined(paneProperties.min) ? null : paneProperties.min,\n            max: isNullOrUndefined(paneProperties.max) ? null : paneProperties.max,\n            content: isNullOrUndefined(paneProperties.content) ? '' : paneProperties.content,\n            resizable: isNullOrUndefined(paneProperties.resizable) ? true : paneProperties.resizable,\n            collapsible: isNullOrUndefined(paneProperties.collapsible) ? false : paneProperties.collapsible,\n            collapsed: isNullOrUndefined(paneProperties.collapsed) ? false : paneProperties.collapsed\n        };\n        this.paneSettings.splice(index, 0, paneDetails);\n        if (this.orientation === 'Horizontal') {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_H_PANE)[index]);\n            this.removePaneOrders(SPLIT_H_PANE);\n        }\n        else {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_V_PANE)[index]);\n            this.removePaneOrders(SPLIT_V_PANE);\n        }\n        this.allPanes.splice(index, 0, newPane);\n        this.updatePanes();\n        this.setTemplate(this.paneSettings[index].content, newPane);\n        this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    };\n    /**\n     * Allows you to remove the specified pane dynamically by passing its index value.\n     * @param { number } index - Specifies the index value to remove the corresponding pane.\n     * @returns void\n     */\n    Splitter.prototype.removePane = function (index) {\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var elementClass = (this.orientation === 'Horizontal') ? SPLIT_H_PANE : SPLIT_V_PANE;\n        if (isNullOrUndefined(this.element.querySelectorAll('.' + elementClass)[index])) {\n            return;\n        }\n        detach(this.element.querySelectorAll('.' + elementClass)[index]);\n        this.allPanes.splice(index, 1);\n        this.removePaneOrders(elementClass);\n        this.updatePanes();\n        this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    };\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"height\", void 0);\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"width\", void 0);\n    __decorate([\n        Collection([], PaneProperties)\n    ], Splitter.prototype, \"paneSettings\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Splitter.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('')\n    ], Splitter.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(null)\n    ], Splitter.prototype, \"separatorSize\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeCollapse\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeExpand\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"expanded\", void 0);\n    Splitter = __decorate([\n        NotifyPropertyChanges\n    ], Splitter);\n    return Splitter;\n}(Component));\nexport { Splitter };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, NotifyPropertyChanges, isUndefined } from '@syncfusion/ej2-base';\nimport { Collection, Draggable, isNullOrUndefined, append, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, formatUnit, ChildProperty, compile, closest } from '@syncfusion/ej2-base';\nimport { setStyleAttribute as setStyle, addClass, detach, removeClass, EventHandler, Browser } from '@syncfusion/ej2-base';\n// constant class definitions\nvar preventSelect = 'e-prevent';\nvar dragging = 'e-dragging';\nvar draggable = 'e-draggable';\nvar resize = 'e-resize';\nvar responsive = 'e-responsive';\nvar east = 'e-east';\nvar west = 'e-west';\nvar north = 'e-north';\nvar south = 'e-south';\nvar single = 'e-single';\nvar double = 'e-double';\nvar northEast = 'e-north-east';\nvar southEast = 'e-south-east';\nvar northWest = 'e-north-west';\nvar southWest = 'e-south-west';\nvar panel = 'e-panel';\nvar panelContent = 'e-panel-content';\nvar panelContainer = 'e-panel-container';\nvar disable = 'e-disabled';\nvar header = 'e-panel-header';\nvar panelTransition = 'e-panel-transition';\n/**\n * Defines the panel of the DashboardLayout component.\n */\nvar Panel = /** @class */ (function (_super) {\n    __extends(Panel, _super);\n    function Panel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"header\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"content\", void 0);\n    __decorate([\n        Property(true)\n    ], Panel.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"row\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"col\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeX\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeX\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeY\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeX\", void 0);\n    __decorate([\n        Property(1000)\n    ], Panel.prototype, \"zIndex\", void 0);\n    return Panel;\n}(ChildProperty));\nexport { Panel };\n/**\n * The DashboardLayout is a grid structured layout control, that helps to create a dashboard with panels.\n * Panels hold the UI components or data to be visualized with flexible options like resize, reorder, drag-n-drop, remove and add,\n * that allows users to easily place the panels at a desired position within the grid layout.\n * ```html\n * <div id=\"default-layout\">\n * ```\n * ```typescript\n * <script>\n *   let dashBoardObject : DashboardLayout = new DashboardLayout();\n *   dashBoardObject.appendTo('#default-layout');\n * </script>\n * ```\n */\nvar DashboardLayout = /** @class */ (function (_super) {\n    __extends(DashboardLayout, _super);\n    function DashboardLayout(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.rows = 1;\n        _this.panelID = 0;\n        _this.movePanelCalled = false;\n        _this.resizeCalled = false;\n        _this.mOffX = 0;\n        _this.mOffY = 0;\n        _this.maxTop = 9999;\n        _this.maxRows = 100;\n        _this.mouseX = 0;\n        _this.mouseY = 0;\n        _this.minTop = 0;\n        _this.minLeft = 0;\n        return _this;\n    }\n    /**\n     * Initialize the event handler\n     * @private\n     */\n    DashboardLayout.prototype.preRender = function () {\n        this.panelCollection = [];\n        this.sortedArray = [];\n        this.gridPanelCollection = [];\n        this.overlapElement = [];\n        this.overlapElementClone = [];\n        this.overlapSubElementClone = [];\n        this.collisionChecker = {};\n        this.dragCollection = [];\n        this.elementRef = { top: '', left: '', height: '', width: '' };\n        this.dimensions = [];\n        this.allItems = [];\n        this.oldRowCol = {};\n        this.isDynamicallyUpdated = false;\n        this.availableClasses = [];\n        this.setOldRowCol();\n        this.calculateCellSize();\n    };\n    DashboardLayout.prototype.setOldRowCol = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (!this.panels[i].id) {\n                this.panelPropertyChange(this.panels[i], { id: 'layout_' + this.panelID.toString() });\n                this.panelID = this.panelID + 1;\n            }\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n    };\n    DashboardLayout.prototype.createPanelElement = function (cssClass, idValue) {\n        var ele = this.createElement('div');\n        if (cssClass) {\n            addClass([ele], [cssClass]);\n        }\n        if (idValue) {\n            ele.setAttribute('id', idValue);\n        }\n        return ele;\n    };\n    /**\n     * To Initialize the control rendering.\n     * @returns void\n     * @private\n     */\n    DashboardLayout.prototype.render = function () {\n        this.initialize();\n        this.isRenderComplete = true;\n        if (this.showGridLines && !this.checkMediaQuery()) {\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.initGridLines = function () {\n        this.table = document.createElement('table');\n        var tbody = document.createElement('tbody');\n        this.table.classList.add('e-dashboard-gridline-table');\n        for (var i = 0; i < this.maxRow(); i++) {\n            var tr = document.createElement('tr');\n            for (var j = 0; j < this.columns; j++) {\n                var td = document.createElement('td');\n                td.classList.add('e-dashboard-gridline');\n                this.setAttributes({ value: { row: i.toString(), col: j.toString(), sizeX: '1', sizeY: '1' } }, td);\n                td.setAttribute('id', '' + j);\n                this.setPanelPosition(td, i, j);\n                this.setHeightAndWidth(td, { row: i, col: j, sizeX: 1, sizeY: 1 });\n                tr.appendChild(td);\n            }\n            tbody.appendChild(tr);\n        }\n        this.table.appendChild(tbody);\n        this.element.appendChild(this.table);\n    };\n    DashboardLayout.prototype.initialize = function () {\n        this.updateRowHeight();\n        if (this.element.childElementCount > 0) {\n            var panelElements = [];\n            this.setProperties({ panels: [] }, true);\n            for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                panelElements.push((this.element.querySelectorAll('.e-panel')[i]));\n            }\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                if (this.enableRtl) {\n                    addClass([panelElement], 'e-rtl');\n                }\n                this.getInlinePanels(panelElement);\n                this.maxCol();\n                this.maxRow();\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                var panelElement = this.element.querySelector('#' + this.panels[i].id);\n                this.setMinMaxValues(this.panels[i]);\n                if (this.maxColumnValue < this.panels[i].col || this.maxColumnValue < (this.panels[i].col + this.panels[i].sizeX)) {\n                    var colValue = this.maxColumnValue - this.panels[i].sizeX;\n                    this.panelPropertyChange(this.panels[i], { col: colValue < 0 ? 0 : colValue });\n                }\n                this.setXYAttributes(panelElement, this.panels[i]);\n                var panel_1 = this.renderPanels(panelElement, this.panels[i], this.panels[i].id, false);\n                this.panelCollection.push(panel_1);\n                this.setHeightAndWidth(panelElement, this.panels[i]);\n                this.tempObject = this;\n                if (this.mediaQuery && !window.matchMedia('(' + this.mediaQuery + ')').matches) {\n                    this.setPanelPosition(panelElement, this.panels[i].row, this.panels[i].col);\n                    this.mainElement = panelElement;\n                    this.updatePanelLayout(panelElement, this.panels[i]);\n                    this.mainElement = null;\n                }\n                this.setClasses([panelElement]);\n            }\n            if (this.checkMediaQuery()) {\n                this.checkMediaQuerySizing();\n            }\n        }\n        else {\n            this.renderDashBoardCells(this.panels);\n        }\n        if (this.allowDragging && (this.mediaQuery ? !window.matchMedia('(' + this.mediaQuery + ')').matches : true)) {\n            this.enableDraggingContent(this.panelCollection);\n        }\n        this.sortedPanel();\n        this.bindEvents();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkColumnValue = this.maxColumnValue;\n        if (!(this.checkMediaQuery())) {\n            this.panelResponsiveUpdate();\n        }\n        this.setEnableRtl();\n    };\n    DashboardLayout.prototype.checkMediaQuery = function () {\n        return (this.mediaQuery && window.matchMedia('(' + this.mediaQuery + ')').matches);\n    };\n    DashboardLayout.prototype.calculateCellSize = function () {\n        this.cellSize = [];\n        if ((this.checkMediaQuery())) {\n            this.cellSize[1] = this.element.parentElement\n                && Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio;\n        }\n        else {\n            this.cellSize[0] = this.element.parentElement &&\n                Math.floor((this.element.parentElement.offsetWidth));\n            this.cellSize[0] = this.element.parentElement\n                && Math.floor((this.element.parentElement.offsetWidth - ((this.maxCol() - 1) * this.cellSpacing[0]))\n                    / (this.maxCol()));\n            this.cellSize[1] = this.cellSize[0] / this.cellAspectRatio;\n        }\n    };\n    DashboardLayout.prototype.maxRow = function () {\n        var maxRow = 1;\n        if (this.rows > 1) {\n            maxRow = this.rows;\n            return maxRow;\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].sizeY + this.panels[i].row > maxRow) {\n                maxRow = this.panels[i].sizeY + this.panels[i].row;\n            }\n        }\n        if (this.panels.length === 0) {\n            maxRow = this.columns;\n        }\n        return maxRow;\n    };\n    DashboardLayout.prototype.maxCol = function () {\n        var maxCol = 1;\n        maxCol = this.columns;\n        this.maxColumnValue = maxCol;\n        return maxCol;\n    };\n    DashboardLayout.prototype.updateOldRowColumn = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            var id = this.panels[i].id;\n            if (document.getElementById(id)) {\n                var row = parseInt(document.getElementById(id).getAttribute('data-row'), 10);\n                var col = parseInt(document.getElementById(id).getAttribute('data-col'), 10);\n                this.oldRowCol[this.panels[i].id] = { row: row, col: col };\n            }\n            else {\n                continue;\n            }\n        }\n    };\n    DashboardLayout.prototype.createSubElement = function (cssClass, idValue, className) {\n        var element = this.createElement('div');\n        if (className) {\n            addClass([element], [className]);\n        }\n        if (cssClass) {\n            addClass([element], [cssClass]);\n        }\n        if (idValue) {\n            element.setAttribute('id', idValue);\n        }\n        return element;\n    };\n    DashboardLayout.prototype.templateParser = function (template) {\n        if (template) {\n            try {\n                if (document.querySelectorAll(template).length) {\n                    return compile(document.querySelector(template).innerHTML.trim());\n                }\n            }\n            catch (error) {\n                return compile(template);\n            }\n        }\n        return undefined;\n    };\n    DashboardLayout.prototype.renderTemplate = function (content, appendElement, type, isStringTemplate) {\n        var templateFn = this.templateParser(content);\n        var templateElements = [];\n        for (var _i = 0, _a = templateFn({}, null, null, type, isStringTemplate); _i < _a.length; _i++) {\n            var item = _a[_i];\n            templateElements.push(item);\n        }\n        append([].slice.call(templateElements), appendElement);\n    };\n    DashboardLayout.prototype.renderPanels = function (cellElement, panelModel, panelId, isStringTemplate) {\n        addClass([cellElement], [panel, panelTransition]);\n        this.panelContent = cellElement.querySelector('.e-panel-container') ?\n            cellElement.querySelector('.e-panel-container') :\n            this.createSubElement(panelModel.cssClass, cellElement.id + '_content', panelContainer);\n        cellElement.appendChild(this.panelContent);\n        if (!panelModel.enabled) {\n            this.disablePanel(cellElement);\n        }\n        if (panelModel.header) {\n            var headerTemplateElement = cellElement.querySelector('.e-panel-header') ?\n                cellElement.querySelector('.e-panel-header') : this.createSubElement('', cellElement.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            if (!cellElement.querySelector('.e-panel-header')) {\n                var id = this.element.id + 'HeaderTemplate' + panelId;\n                this.renderTemplate(panelModel.header, headerTemplateElement, id, isStringTemplate);\n                this.panelContent.appendChild(headerTemplateElement);\n                updateBlazorTemplate(id, 'HeaderTemplate', panelModel);\n            }\n        }\n        if (panelModel.content) {\n            this.panelBody = cellElement.querySelector('.e-panel-content') ? cellElement.querySelector('.e-panel-content') :\n                this.createSubElement(panelModel.cssClass, cellElement.id + '_body', panelContent);\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            if (!cellElement.querySelector('.e-panel-content')) {\n                var id = this.element.id + 'ContentTemplate' + panelId;\n                this.renderTemplate(panelModel.content, this.panelBody, id, isStringTemplate);\n                this.panelContent.appendChild(this.panelBody);\n                updateBlazorTemplate(id, 'ContentTemplate', panelModel);\n            }\n        }\n        return cellElement;\n    };\n    DashboardLayout.prototype.disablePanel = function (panelElement) {\n        addClass([panelElement], [disable]);\n    };\n    DashboardLayout.prototype.getInlinePanels = function (panelElement) {\n        var model = {\n            sizeX: panelElement.hasAttribute('data-sizex') ? parseInt(panelElement.getAttribute('data-sizex'), 10) : 1,\n            sizeY: panelElement.hasAttribute('data-sizey') ? parseInt(panelElement.getAttribute('data-sizey'), 10) : 1,\n            minSizeX: panelElement.hasAttribute('data-minsizex') ? parseInt(panelElement.getAttribute('data-minsizex'), 10) : 1,\n            minSizeY: panelElement.hasAttribute('data-minsizey') ? parseInt(panelElement.getAttribute('data-minsizey'), 10) : 1,\n            maxSizeX: panelElement.hasAttribute('data-maxsizex') ? parseInt(panelElement.getAttribute('data-maxsizex'), 10) : null,\n            maxSizeY: panelElement.hasAttribute('data-maxsizey') ? parseInt(panelElement.getAttribute('data-maxsizey'), 10) : null,\n            row: panelElement.hasAttribute('data-row') ? parseInt(panelElement.getAttribute('data-row'), 10) : 0,\n            col: panelElement.hasAttribute('data-col') ? parseInt(panelElement.getAttribute('data-col'), 10) : 0,\n            id: panelElement.getAttribute('id'),\n            zIndex: panelElement.hasAttribute('data-zindex') ? parseInt(panelElement.getAttribute('data-zIndex'), 10) : 1000,\n            header: panelElement.querySelector('.e-panel-header') && '.e-panel-header',\n            content: panelElement.querySelector('.e-panel-content') && '.e-panel-content',\n        };\n        if (!model.id) {\n            model.id = 'layout_' + this.panelID.toString();\n            panelElement.setAttribute('id', model.id);\n            this.panelID = this.panelID + 1;\n        }\n        if (isUndefined(model.enabled)) {\n            model.enabled = true;\n        }\n        panelElement.style.zIndex = '' + model.zIndex;\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', model);\n        this.panels.push(panelProp);\n    };\n    DashboardLayout.prototype.resizeEvents = function () {\n        if (this.allowResizing) {\n            for (var i = 0; i < document.querySelectorAll('.e-resize').length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(document.querySelectorAll('.e-resize')[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'mise') {\n                    EventHandler.add(document.querySelectorAll('.e-resize')[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n    };\n    DashboardLayout.prototype.bindEvents = function () {\n        window.addEventListener('resize', this.refresh.bind(this));\n        this.resizeEvents();\n    };\n    DashboardLayout.prototype.downResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.pageX;\n        this.lastMouseY = e.pageY;\n        var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n        var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n        EventHandler.add(document, moveEventName, this.moveResizeHandler, this);\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, upEventName, this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    ;\n    DashboardLayout.prototype.downHandler = function (e) {\n        this.resizeCalled = false;\n        var el = closest((e.currentTarget), '.e-panel');\n        var args = { event: e, element: el };\n        this.trigger('resizeStart', args);\n        this.downTarget = e.currentTarget;\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        addClass([this.element], [preventSelect]);\n        this.element.appendChild(this.shadowEle);\n        this.elementX = parseInt(el.style.left, 10);\n        this.elementY = parseInt(el.style.top, 10);\n        this.elementWidth = el.offsetWidth;\n        this.elementHeight = el.offsetHeight;\n        this.originalWidth = this.getCellInstance(el.id).sizeX;\n        this.originalHeight = this.getCellInstance(el.id).sizeY;\n    };\n    DashboardLayout.prototype.touchDownResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.changedTouches[0].pageX;\n        this.lastMouseY = e.changedTouches[0].pageY;\n        EventHandler.add(document, 'touchmove', this.touchMoveResizeHandler, this);\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, 'touchend', this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    DashboardLayout.prototype.getCellSize = function () {\n        return [parseInt((this.cellSize[0]), 10), parseInt(this.cellSize[1], 10)];\n    };\n    DashboardLayout.prototype.updateMaxTopLeft = function (e) {\n        this.moveTarget = this.downTarget;\n        var el = closest((this.moveTarget), '.e-panel');\n        var args = { event: e, element: el };\n        this.trigger('resize', args);\n    };\n    DashboardLayout.prototype.updateResizeElement = function (el) {\n        this.maxLeft = this.element.offsetWidth - 1;\n        this.maxTop = this.cellSize[1] * this.maxRows - 1;\n        removeClass([el], 'e-panel-transition');\n        addClass([el], [dragging]);\n        var handleArray = [east, west, north, south, southEast, northEast, northWest, southWest];\n        for (var i = 0; i < this.moveTarget.classList.length; i++) {\n            if (handleArray.indexOf(this.moveTarget.classList[i]) !== -1) {\n                this.handleClass = (this.moveTarget.classList[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.moveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.pageX || this.lastMouseY === e.pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.pageX;\n        this.mouseY = e.pageY;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseY = this.mouseY;\n        this.lastMouseX = this.mouseX;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    DashboardLayout.prototype.touchMoveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.changedTouches[0].pageX || this.lastMouseY === e.changedTouches[0].pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.changedTouches[0].pageX;\n        this.mouseY = e.changedTouches[0].pageY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseX = this.mouseX;\n        this.lastMouseY = this.mouseY;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    /* istanbul ignore next */\n    DashboardLayout.prototype.resizingPanel = function (el, panelModel, currentX, currentY) {\n        var oldSizeX = this.getCellInstance(el.id).sizeX;\n        var oldSizeY = this.getCellInstance(el.id).sizeY;\n        var dY = currentY;\n        var dX = currentX;\n        if (this.handleClass.indexOf('north') >= 0) {\n            if (this.elementHeight - dY < this.getMinHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMinHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight - dY > this.getMaxHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMaxHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + dY < this.minTop) {\n                currentY = this.minTop - this.elementY;\n                this.mOffY = dY - currentY;\n            }\n            this.elementY += currentY;\n            this.elementHeight -= currentY;\n        }\n        if (this.handleClass.indexOf('south') >= 0) {\n            if (this.elementHeight + dY < this.getMinHeight(panelModel)) {\n                currentY = this.getMinHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight + dY > this.getMaxHeight(panelModel)) {\n                currentY = this.getMaxHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + this.elementHeight + dY > this.maxTop) {\n                currentY = this.maxTop - this.elementY - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            this.elementHeight += currentY;\n        }\n        if (this.handleClass.indexOf('west') >= 0) {\n            if (this.elementWidth - dX < this.getMinWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMinWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth - dX > this.getMaxWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMaxWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + dX < this.minLeft) {\n                currentX = this.minLeft - this.elementX;\n                this.mOffX = dX - currentX;\n            }\n            this.elementX += currentX;\n            this.elementWidth -= currentX;\n        }\n        if (this.handleClass.indexOf('east') >= 0) {\n            if (this.elementWidth + dX < this.getMinWidth(panelModel)) {\n                currentX = this.getMinWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth + dX > this.getMaxWidth(panelModel)) {\n                currentX = this.getMaxWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + this.elementWidth + dX > this.maxLeft) {\n                currentX = this.maxLeft - this.elementX - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            this.elementWidth += currentX;\n        }\n        el.style.top = this.elementY + 'px';\n        el.style.left = this.elementX + 'px';\n        el.style.width = this.elementWidth + 'px';\n        el.style.height = this.elementHeight + 'px';\n        var item = this.getResizeRowColumn(panelModel, this.moveTarget);\n        if (item.col + item.sizeX > this.columns) {\n            this.panelPropertyChange(item, { sizeX: item.sizeX - 1 });\n        }\n        this.shadowEle.style.top = ((item.row * this.getCellSize()[1] + (item.row * this.cellSpacing[1]))) + 'px';\n        this.shadowEle.style.left = ((item.col * this.getCellSize()[0]) + ((item.col) * this.cellSpacing[0])) + 'px';\n        this.shadowEle.style.height = ((item.sizeY * (this.getCellSize()[1] + (this.cellSpacing[1])))) + 'px';\n        this.shadowEle.style.width = ((item.sizeX * (this.getCellSize()[0] + (this.cellSpacing[0])))) + 'px';\n        if (oldSizeX !== item.sizeX || oldSizeY !== item.sizeY) {\n            oldSizeX = item.sizeX;\n            oldSizeY = item.sizeY;\n            var model = this.getCellInstance(el.id);\n            var value = {\n                attributes: {\n                    row: model.row.toString(),\n                    col: model.col.toString(),\n                    sizeX: model.sizeX.toString(),\n                    sizeY: model.sizeY.toString()\n                }\n            };\n            this.setAttributes(value, el);\n            this.mainElement = el;\n            this.updatePanelLayout(el, this.getCellInstance(el.id));\n            this.updateOldRowColumn();\n            this.sortedPanel();\n        }\n    };\n    DashboardLayout.prototype.upResizeHandler = function (e) {\n        if (isNullOrUndefined(this.downTarget)) {\n            return;\n        }\n        this.upTarget = this.downTarget;\n        var el = closest((this.upTarget), '.e-panel');\n        var args = { event: e, element: el };\n        this.trigger('resizeStop', args);\n        if (el) {\n            addClass([el], 'e-panel-transition');\n            var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n            var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n            EventHandler.remove(document, moveEventName, this.moveResizeHandler);\n            EventHandler.remove(document, upEventName, this.upResizeHandler);\n            if (Browser.info.name !== 'mise') {\n                EventHandler.remove(document, 'touchmove', this.touchMoveResizeHandler);\n                EventHandler.remove(document, 'touchend', this.upResizeHandler);\n            }\n            this.isMouseUpBound = false;\n            if (this.shadowEle) {\n                detach(this.shadowEle);\n            }\n            this.shadowEle = null;\n            var panelModel = this.getCellInstance(el.getAttribute('id'));\n            this.setPanelPosition(el, panelModel.row, panelModel.col);\n            this.setHeightAndWidth(el, panelModel);\n        }\n        this.resizeCalled = false;\n        this.lastMouseX = this.lastMouseY = undefined;\n        this.mOffX = this.mOffY = 0;\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    DashboardLayout.prototype.getResizeRowColumn = function (item, e) {\n        var col = item.col;\n        if (['e-west', 'e-south-west'].indexOf(this.handleClass) !== -1) {\n            col = this.pixelsToColumns(this.elementX, false);\n        }\n        var row = item.row;\n        if (['e-north'].indexOf(this.handleClass) !== -1) {\n            row = this.pixelsToRows(this.elementY, false);\n        }\n        var sizeX = item.sizeX;\n        if (['e-north', 'e-south'].indexOf(this.handleClass) === -1) {\n            sizeX = this.pixelsToColumns(this.elementWidth - (col + 1) * this.cellSpacing[0], true);\n        }\n        var sizeY = item.sizeY;\n        if (['e-east', 'e-west'].indexOf(this.handleClass) === -1) {\n            sizeY = this.pixelsToRows(this.elementHeight - (row + 1) * this.cellSpacing[0], true);\n        }\n        if (item.col + item.sizeX > this.columns) {\n            item.sizeX = item.sizeX - 1;\n        }\n        var canOccupy = row > -1 && col > -1 && sizeX + col <= this.maxCol() && sizeY + row <= this.maxRow();\n        if (canOccupy && (this.collisions(row, col, sizeX, sizeY, this.getPanelBase(item.id)).length === 0)\n            || this.allowPushing !== false) {\n            this.panelPropertyChange(item, { row: row, col: col, sizeX: sizeX, sizeY: sizeY });\n        }\n        return item;\n    };\n    DashboardLayout.prototype.pixelsToColumns = function (pixels, isCeil) {\n        var curColWidth = this.cellSize[0];\n        if (isCeil) {\n            return Math.ceil(pixels / curColWidth);\n        }\n        else {\n            return Math.floor(pixels / curColWidth);\n        }\n    };\n    DashboardLayout.prototype.pixelsToRows = function (pixels, isCeil) {\n        if (isCeil) {\n            return Math.ceil(pixels / this.cellSize[1]);\n        }\n        else {\n            return Math.floor(pixels / this.cellSize[1]);\n        }\n    };\n    DashboardLayout.prototype.getMinWidth = function (item) {\n        return (item.minSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMaxWidth = function (item) {\n        return (item.maxSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMinHeight = function (item) {\n        return (item.minSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.getMaxHeight = function (item) {\n        return (item.maxSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.sortedPanel = function () {\n        this.sortedArray = [];\n        for (var i = 0, l = this.panelCollection.length; i < l; ++i) {\n            this.sortItem(this.panelCollection[i]);\n        }\n    };\n    DashboardLayout.prototype.moveItemsUpwards = function () {\n        if (this.allowFloating === false) {\n            return;\n        }\n        for (var rowIndex = 0, l = this.sortedArray.length; rowIndex < l; ++rowIndex) {\n            var columns = this.sortedArray[rowIndex];\n            if (!columns) {\n                continue;\n            }\n            for (var colIndex = 0, len = columns.length; colIndex < len; ++colIndex) {\n                var item = columns[colIndex];\n                if (item) {\n                    this.moveItemUpwards(item);\n                }\n            }\n        }\n        this.updateGridLines();\n    };\n    ;\n    DashboardLayout.prototype.moveItemUpwards = function (item) {\n        if (this.allowFloating === false || item === this.mainElement) {\n            return;\n        }\n        var colIndex = this.getCellInstance(item.id).col;\n        var sizeY = parseInt(item.getAttribute('data-sizeY'), 10);\n        var sizeX = parseInt(item.getAttribute('data-sizeX'), 10);\n        var availableRow = null;\n        var availableColumn = null;\n        var rowIndex = parseInt(item.getAttribute('data-row'), 10) - 1;\n        while (rowIndex > -1) {\n            var items = this.collisions(rowIndex, colIndex, sizeX, sizeY, item);\n            if (items.length !== 0) {\n                break;\n            }\n            availableRow = rowIndex;\n            availableColumn = colIndex;\n            --rowIndex;\n        }\n        if (availableRow !== null) {\n            this.sortItem(item, availableRow, availableColumn);\n        }\n    };\n    DashboardLayout.prototype.sortItem = function (item, rowValue, columnValue, ignoreItems) {\n        this.overlapElement = [];\n        var column = parseInt(item.getAttribute('data-col'), 10);\n        var row = parseInt(item.getAttribute('data-row'), 10);\n        if (!this.sortedArray[row]) {\n            this.sortedArray[row] = [];\n        }\n        this.sortedArray[row][column] = item;\n        if (item !== undefined && rowValue !== undefined && columnValue !== undefined) {\n            if (this.oldRowCol[item.id] !== undefined && this.oldRowCol[item.id].row !== null &&\n                typeof this.oldRowCol[item.id].col !== 'undefined') {\n                {\n                    var oldRow = this.sortedArray[this.oldRowCol[item.id].row];\n                    if (this.oldRowCol[item.id] && oldRow[this.oldRowCol[item.id].col] === item) {\n                        delete oldRow[this.oldRowCol[item.id].col];\n                        this.updateOldRowColumn();\n                        this.sortedPanel();\n                    }\n                }\n            }\n            this.oldRowCol[item.id].row = rowValue;\n            this.oldRowCol[item.id].row = columnValue;\n            if (!this.sortedArray[row]) {\n                this.sortedArray[row] = [];\n            }\n            this.sortedArray[row][column] = item;\n            if (this.allItems.indexOf(item) === -1) {\n                this.allItems.push(item);\n            }\n            this.panelPropertyChange(this.getCellInstance(item.id), { row: rowValue, col: columnValue });\n            var panelModel = this.getCellInstance(item.id);\n            this.setAttributes({ value: { col: panelModel.col.toString(), row: panelModel.row.toString() } }, item);\n            this.updateLayout(item, this.getCellInstance(item.id));\n        }\n    };\n    DashboardLayout.prototype.updateLayout = function (element, panelModel) {\n        this.setPanelPosition(element, panelModel.row, panelModel.col);\n        this.setHeightAndWidth(element, panelModel);\n        this.updateRowHeight();\n        this.sortedPanel();\n    };\n    ;\n    DashboardLayout.prototype.refresh = function () {\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n        }\n        else {\n            if (this.element.classList.contains(responsive)) {\n                removeClass([this.element], [responsive]);\n                for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                    var ele = this.element.querySelectorAll('.e-panel')[i];\n                    var cellInstance = this.getCellInstance(ele.id);\n                    var row = parseInt(ele.getAttribute('data-row'), 10);\n                    var col = parseInt(ele.getAttribute('data-col'), 10);\n                    this.panelPropertyChange(cellInstance, { row: row, col: col });\n                    this.setHeightAndWidth(ele, this.getCellInstance(ele.id));\n                    this.setPanelPosition(ele, row, col);\n                    this.updateRowHeight();\n                }\n            }\n            this.panelResponsiveUpdate();\n            this.updateGridLines();\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        this.checkDragging(this.dragCollection);\n    };\n    DashboardLayout.prototype.updateGridLines = function () {\n        if (this.element.querySelector('.e-dashboard-gridline-table')) {\n            if (this.table) {\n                detach(this.table);\n            }\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkDragging = function (dragCollection) {\n        if (this.checkMediaQuery() || !this.allowDragging) {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n        }\n        else {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n            this.enableDraggingContent(this.panelCollection);\n        }\n    };\n    DashboardLayout.prototype.sortPanels = function () {\n        var model = [];\n        var _loop_1 = function (row) {\n            var _loop_2 = function (col) {\n                this_1.panels.filter(function (panel) {\n                    if (panel.row === row && panel.col === col) {\n                        model.push(panel);\n                    }\n                });\n            };\n            for (var col = 0; col < this_1.columns; col++) {\n                _loop_2(col);\n            }\n        };\n        var this_1 = this;\n        for (var row = 0; row <= this.rows; row++) {\n            _loop_1(row);\n        }\n        return model;\n    };\n    DashboardLayout.prototype.checkMediaQuerySizing = function () {\n        addClass([this.element], [responsive]);\n        var updatedPanel = this.sortPanels();\n        this.updatedRows = updatedPanel.length;\n        for (var i = 0; i < updatedPanel.length; i++) {\n            var panelElement = document.getElementById(updatedPanel[i].id);\n            if (panelElement) {\n                setStyle(panelElement, { 'width': '100%' });\n                panelElement.style.height = ' ' + (this.element.parentElement\n                    && this.element.parentElement.offsetWidth / this.cellAspectRatio) + 'px';\n                this.cellSize[1] = this.element.parentElement\n                    && (this.element.parentElement.offsetWidth / this.cellAspectRatio);\n                this.panelPropertyChange(updatedPanel[i], { row: i, col: 0 });\n                this.setPanelPosition(panelElement, updatedPanel[i].row, updatedPanel[i].col);\n                this.setClasses(this.panelCollection);\n                this.checkDragging(this.dragCollection);\n                this.removeResizeClasses(this.panelCollection);\n            }\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.panelResponsiveUpdate = function () {\n        this.element.classList.add('e-responsive');\n        this.calculateCellSize();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            this.setPanelPosition(document.getElementById(this.panels[i].id), this.panels[i].row, this.panels[i].col);\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.updateRowHeight = function () {\n        this.getRowColumn();\n        this.setHeightWidth();\n    };\n    DashboardLayout.prototype.setHeightWidth = function () {\n        var heightValue;\n        var widthValue;\n        if (this.checkMediaQuery()) {\n            heightValue = ((this.maxRow()) *\n                (this.element.parentElement && Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio) +\n                (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        else {\n            heightValue = ((this.maxRow()) *\n                (this.cellSize[0] / this.cellAspectRatio) + (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        setStyle(this.element, { 'height': heightValue });\n        widthValue = window.getComputedStyle(this.element).width;\n        setStyle(this.element, { 'width': widthValue });\n    };\n    DashboardLayout.prototype.setHeightAndWidth = function (panelElement, panelModel) {\n        setStyle(panelElement, { 'height': formatUnit(this.setXYDimensions(panelModel)[0]) });\n        setStyle(panelElement, { 'width': formatUnit(this.setXYDimensions(panelModel)[1]) });\n    };\n    DashboardLayout.prototype.renderCell = function (panel, isStringTemplate) {\n        this.dimensions = this.setXYDimensions(panel);\n        if (isUndefined(panel.enabled)) {\n            panel.enabled = true;\n        }\n        var cellElement = this.createPanelElement(panel.cssClass, panel.id);\n        cellElement.style.zIndex = '' + panel.zIndex;\n        this.element.appendChild(cellElement);\n        var dashBoardCell = this.renderPanels(cellElement, panel, panel.id, isStringTemplate);\n        this.panelCollection.push(dashBoardCell);\n        this.setXYAttributes(cellElement, panel);\n        this.setHeightAndWidth(cellElement, panel);\n        return cellElement;\n    };\n    DashboardLayout.prototype.setPanelPosition = function (cellElement, row, col) {\n        if (!cellElement) {\n            return;\n        }\n        var heightValue = this.getCellSize()[1];\n        var widthValue = this.getCellSize()[0];\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        setStyle(cellElement, { 'left': left + 'px', 'top': top + 'px' });\n    };\n    DashboardLayout.prototype.getRowColumn = function () {\n        this.rows = null;\n        if (this.element.querySelectorAll('.e-panel').length > 0 && !this.updatedRows) {\n            var panelElements = this.element.querySelectorAll('.e-panel');\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                var rowValue = parseInt(panelElement.getAttribute('data-row'), 10);\n                var xValue = parseInt(panelElement.getAttribute('data-sizeY'), 10);\n                this.rows = Math.max(this.rows, (rowValue + xValue));\n            }\n        }\n        else {\n            if (this.updatedRows) {\n                this.rows = this.updatedRows;\n                this.updatedRows = null;\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                this.rows = Math.max(this.rows, this.panels[i].row);\n            }\n        }\n    };\n    DashboardLayout.prototype.setMinMaxValues = function (panel) {\n        if (!panel.sizeX || panel.sizeX < panel.minSizeX) {\n            this.panelPropertyChange(panel, { sizeX: panel.minSizeX });\n        }\n        else if ((panel.maxSizeX && panel.sizeX > panel.maxSizeX)) {\n            this.panelPropertyChange(panel, { sizeX: panel.maxSizeX });\n        }\n        else if (panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: this.columns });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX });\n        }\n        if (!panel.sizeY || panel.sizeY < panel.minSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.minSizeY });\n        }\n        else if (panel.maxSizeY && panel.sizeY > panel.maxSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.maxSizeY });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeY: panel.sizeY });\n        }\n    };\n    DashboardLayout.prototype.checkMinMaxValues = function (panel) {\n        if (panel.col + panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX + (this.columns - (panel.col + panel.sizeX)) });\n        }\n    };\n    DashboardLayout.prototype.panelPropertyChange = function (panel, value) {\n        // tslint:disable-next-line\n        panel.setProperties(value, true);\n    };\n    DashboardLayout.prototype.renderDashBoardCells = function (cells) {\n        if (this.element.querySelectorAll('.e-panel').length > 0 || this.panels.length > 0) {\n            for (var j = 0; j < cells.length; j++) {\n                this.gridPanelCollection.push(cells[j]);\n                this.setMinMaxValues(cells[j]);\n                if (this.maxColumnValue < cells[j].col || this.maxColumnValue < (cells[j].col + cells[j].sizeX)) {\n                    this.panelPropertyChange(cells[j], { col: this.maxColumnValue - cells[j].sizeX });\n                }\n                var cell = this.renderCell(cells[j], false);\n                if (this.enableRtl) {\n                    addClass([cell], 'e-rtl');\n                }\n                this.element.appendChild(cell);\n                if (this.checkMediaQuery() && j === cells.length - 1) {\n                    this.checkMediaQuerySizing();\n                }\n                else {\n                    this.setPanelPosition(cell, cells[j].row, cells[j].col);\n                    this.mainElement = cell;\n                    this.updatePanelLayout(cell, cells[j]);\n                    this.mainElement = null;\n                }\n            }\n        }\n        this.setClasses(this.panelCollection);\n    };\n    DashboardLayout.prototype.collisions = function (row, col, sizeX, sizeY, ignore) {\n        var items = [];\n        if (!sizeX || !sizeY) {\n            sizeX = sizeY = 1;\n        }\n        if (ignore && !(ignore instanceof Array)) {\n            ignore = [ignore];\n        }\n        var item;\n        for (var h = 0; h < sizeY; ++h) {\n            for (var w = 0; w < sizeX; ++w) {\n                item = this.getPanel(row + h, col + w, ignore);\n                if (item && (!ignore || ignore.indexOf(document.getElementById(item.id)) === -1) &&\n                    items.indexOf(document.getElementById(item.id)) === -1) {\n                    items.push(document.getElementById(item.id));\n                }\n            }\n        }\n        return items;\n    };\n    ;\n    DashboardLayout.prototype.rightWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var columns = [];\n        var spacedColumns = [];\n        rowElements.forEach(function (element) {\n            var columnValue = parseInt(element.getAttribute('data-col'), 10);\n            var sizeXValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col < _this.columns && columnValue >= col) {\n                if (sizeXValue > 1) {\n                    for (var i = columnValue; i < columnValue + sizeXValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(columnValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = col + 1; i <= this.columns - 1; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'right');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue > col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col > parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, previous) { return next - previous; });\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.getOccupiedColumns = function (element, type) {\n        var occupiedItems = [];\n        var sizeX = parseInt(element.getAttribute('data-sizeX'), 10);\n        var col = parseInt(element.getAttribute('data-col'), 10);\n        for (var i = col; (i < col + sizeX && i <= this.columns); i++) {\n            occupiedItems.push(i);\n        }\n        return occupiedItems;\n    };\n    DashboardLayout.prototype.leftWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var spacedColumns = [];\n        var columns = [];\n        rowElements.forEach(function (element) {\n            var colValue = parseInt(element.getAttribute('data-col'), 10);\n            var xValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col <= _this.columns && colValue <= col) {\n                if (xValue > 1) {\n                    for (var i = colValue; i < colValue + xValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(colValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = 0; i <= col; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'left');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue < col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col < parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, prev) { return next - prev; });\n        spacedColumns = spacedColumns.reverse();\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.adjustmentAvailable = function (row, col, sizeY, sizeX, ele) {\n        this.leftAdjustable = undefined;\n        this.rightAdjustable = undefined;\n        var isAdjustable = false;\n        var leftSpacing;\n        var rightSpacing;\n        var rowElement = [];\n        this.topAdjustable = undefined;\n        var eleSizeX = parseInt(ele.getAttribute('data-sizeX'), 10);\n        var eleCol = parseInt(ele.getAttribute('data-col'), 10);\n        rowElement = this.getRowElements(this.collisions(row, 0, this.columns, sizeY, []));\n        if (rowElement.indexOf(ele) === -1) {\n            rowElement.push(ele);\n        }\n        leftSpacing = this.leftWardsSpaceChecking(rowElement, col, ele);\n        if (leftSpacing.length > 0) {\n            this.leftAdjustable = this.isLeftAdjustable(leftSpacing, ele, row, col, sizeX, sizeY);\n            if (this.spacedColumnValue !== eleCol - this.getCellInstance(this.checkingElement.id).sizeX) {\n                this.leftAdjustable = false;\n            }\n            if (this.leftAdjustable) {\n                this.rightAdjustable = false;\n            }\n            else {\n                this.leftAdjustable = false;\n                rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n                this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n                if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                    this.rightAdjustable = false;\n                }\n                if (!this.rightAdjustable) {\n                    this.rightAdjustable = false;\n                }\n            }\n        }\n        else {\n            rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n            this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n            if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                this.rightAdjustable = false;\n            }\n            if (this.rightAdjustable) {\n                this.leftAdjustable = false;\n            }\n        }\n        if (!this.rightAdjustable && !this.leftAdjustable && row > 0) {\n            var endRow = this.getCellInstance(ele.id).row;\n            var topCheck = false;\n            if (this.startRow !== endRow) {\n                topCheck = true;\n            }\n            for (var rowValue = row; rowValue >= 0; rowValue--) {\n                var element = (this.getCellInstance(ele.id).sizeY > 1 && topCheck) ? this.checkingElement : ele;\n                if ((rowValue !== endRow) && (sizeY > 1 ? rowValue === endRow - sizeY - 1 : rowValue === endRow - sizeY) &&\n                    this.collisions(rowValue, col, sizeX, sizeY, element).length === 0) {\n                    topCheck = false;\n                    this.topAdjustable = true;\n                    this.spacedRowValue = isNullOrUndefined(this.spacedRowValue) ? rowValue : this.spacedRowValue;\n                    this.spacedColumnValue = col;\n                }\n            }\n        }\n        if (this.rightAdjustable || this.leftAdjustable || this.topAdjustable) {\n            isAdjustable = true;\n            if (isNullOrUndefined(this.spacedRowValue)) {\n                this.spacedRowValue = row;\n            }\n        }\n        return isAdjustable;\n    };\n    DashboardLayout.prototype.isXSpacingAvailable = function (spacing, sizeX) {\n        var isSpaceAvailable = false;\n        var subSpacingColumns = [];\n        for (var i = 0; i < spacing.length; i++) {\n            if (spacing[i + 1] - spacing[i] === 1 || spacing[i + 1] - spacing[i] === -1) {\n                subSpacingColumns.push(spacing[i]);\n                if (sizeX === 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                }\n                if (i === spacing.length - 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                    if (subSpacingColumns.length > sizeX) {\n                        subSpacingColumns.splice(-1);\n                    }\n                }\n                if (subSpacingColumns.length === sizeX) {\n                    isSpaceAvailable = true;\n                    this.spacedColumnValue = subSpacingColumns.sort(function (next, previous) { return next - previous; })[0];\n                    if (this.spacedColumnValue < 0) {\n                        this.spacedColumnValue = 1;\n                    }\n                    return isSpaceAvailable;\n                }\n            }\n            else {\n                subSpacingColumns = [];\n                continue;\n            }\n        }\n        return isSpaceAvailable;\n    };\n    DashboardLayout.prototype.getRowElements = function (base) {\n        var rowElements = [];\n        for (var i = 0; i < base.length; i++) {\n            rowElements.push(base[i]);\n        }\n        return rowElements;\n    };\n    DashboardLayout.prototype.isLeftAdjustable = function (spaces, ele, row, col, sizeX, sizeY) {\n        var isLeftAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spaces.length > 0) {\n            this.spacedColumnValue = spaces[0];\n            isLeftAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isLeftAdjudtable = this.isXSpacingAvailable(spaces, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spaces.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spaces.length; i++) {\n                        var collisionValue = this.collisions(row, spaces[i], sizeX, sizeY, this.checkingElement);\n                        if (collisionValue.length === 0) {\n                            this.spacedColumnValue = spaces[i];\n                            isLeftAdjudtable = true;\n                            return isLeftAdjudtable;\n                        }\n                        else {\n                            isLeftAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isLeftAdjudtable = this.replacable(spaces, sizeX, row, sizeY, ele);\n            }\n        }\n        return isLeftAdjudtable;\n    };\n    DashboardLayout.prototype.isRightAdjustable = function (spacing, ele, row, col, sizeX, sizeY) {\n        var isRightAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spacing.length > 0) {\n            this.spacedColumnValue = spacing[0];\n            isRightAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isRightAdjudtable = this.isXSpacingAvailable(spacing, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spacing.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spacing.length; i++) {\n                        var collisionValue = this.collisions(row, spacing[i], sizeX, sizeY, this.checkingElement);\n                        for (var collision = 0; collision < collisionValue.length; collision++) {\n                            if (parseInt(ele.getAttribute('data-col'), 10) !== spacing[i]) {\n                                collisionValue.splice(collisionValue.indexOf(collisionValue[collision]), 1);\n                            }\n                        }\n                        if (collisionValue.length === 0) {\n                            isRightAdjudtable = true;\n                            this.spacedColumnValue = spacing[i];\n                            return isRightAdjudtable;\n                        }\n                        else {\n                            isRightAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isRightAdjudtable = this.replacable(spacing, sizeX, row, sizeY, ele);\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.replacable = function (spacing, sizeX, row, sizeY, ele) {\n        var isRightAdjudtable;\n        var updatedCollision = [];\n        for (var j = 0; j < spacing.length; j++) {\n            var xAdjust = this.isXSpacingAvailable(spacing, sizeX);\n            if (xAdjust) {\n                var exclusions = [];\n                exclusions.push(this.checkingElement);\n                exclusions.push(ele);\n                if (updatedCollision.length === 0) {\n                    isRightAdjudtable = true;\n                    this.spacedColumnValue = this.spacedColumnValue;\n                    return isRightAdjudtable;\n                }\n                else {\n                    isRightAdjudtable = false;\n                }\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.sortCollisionItems = function (collisionItems) {\n        var updatedCollision = [];\n        var rowElements;\n        var _loop_3 = function (row) {\n            rowElements = [];\n            collisionItems.forEach(function (element) {\n                if (element && element.getAttribute('data-row') === row.toString()) {\n                    rowElements.push(element);\n                }\n            });\n            var _loop_4 = function (column) {\n                rowElements.forEach(function (item) {\n                    if (item && item.getAttribute('data-col') === column.toString()) {\n                        updatedCollision.push(item);\n                    }\n                });\n            };\n            for (var column = this_2.columns - 1; column >= 0; column--) {\n                _loop_4(column);\n            }\n        };\n        var this_2 = this;\n        for (var row = this.rows - 1; row >= 0; row--) {\n            _loop_3(row);\n        }\n        return updatedCollision;\n    };\n    DashboardLayout.prototype.updatedModels = function (collisionItems, panelModel, ele) {\n        var _this = this;\n        if (!this.mainElement) {\n            this.sortedPanel();\n        }\n        collisionItems.forEach(function (element) {\n            _this.checkingElement = element;\n            var model = _this.getCellInstance(element.id);\n            var adjust = !_this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, ele);\n            if (model.sizeX > 1 && adjust) {\n                for (var rowValue = model.row; rowValue < panelModel.row + panelModel.sizeY; rowValue++) {\n                    var collisions = _this.collisions(rowValue, model.col, model.sizeX, model.sizeY, element);\n                    collisions.forEach(function (item) {\n                        if (collisionItems.indexOf(item) >= 0) {\n                            collisionItems.splice(collisionItems.indexOf(item), 1);\n                        }\n                    });\n                }\n            }\n        });\n        return collisionItems;\n    };\n    DashboardLayout.prototype.resetLayout = function (model, element) {\n        var collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        if (!this.mainElement || this.addPanelCalled || this.resizeCalled || this.movePanelCalled) {\n            return collisions;\n        }\n        if (this.mainElement && this.oldRowCol !== this.cloneObject) {\n            for (var i = 0; i < this.panels.length; i++) {\n                var element_1 = document.getElementById(this.panels[i].id);\n                if (element_1 === this.mainElement) {\n                    continue;\n                }\n                var rowValue = this.cloneObject[element_1.id].row;\n                var colValue = this.cloneObject[element_1.id].col;\n                this.setPanelPosition(element_1, rowValue, colValue);\n                this.panelPropertyChange(this.getCellInstance(element_1.id), { row: rowValue, col: colValue });\n                this.setAttributes({ value: { col: colValue.toString(), row: rowValue.toString() } }, element_1);\n                this.updateOldRowColumn();\n            }\n        }\n        this.sortedArray = this.cloneArray;\n        collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        this.sortedPanel();\n        this.updateOldRowColumn();\n        if (this.checkCollision && this.checkCollision.length > 0 && collisions.indexOf(this.checkCollision[0]) === -1 &&\n            this.cloneObject[this.checkCollision[0].id].row === model.row) {\n            collisions.push(this.checkCollision[0]);\n        }\n        return collisions;\n    };\n    DashboardLayout.prototype.swapAvailability = function (collisions, element) {\n        var available = true;\n        var eleModel = this.getCellInstance(element.id);\n        for (var count = 0; count < collisions.length; count++) {\n            var collideModel = this.getCellInstance(collisions[count].id);\n            for (var i = 1; i < eleModel.sizeY; i++) {\n                var excludeEle = [];\n                excludeEle.push(element);\n                excludeEle.push(collisions[count]);\n                var collision = void 0;\n                collision = this.collisions(eleModel.row + i, collideModel.col, collideModel.sizeX, collideModel.sizeY, excludeEle);\n                if (collision.length > 0) {\n                    available = false;\n                    return false;\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return available;\n    };\n    DashboardLayout.prototype.checkForSwapping = function (collisions, element, panelModel) {\n        if (!this.mainElement || collisions.length === 0) {\n            return false;\n        }\n        var direction;\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        if (!this.swapAvailability(collisions, element)) {\n            return false;\n        }\n        var isSwappable = false;\n        for (var count1 = 0; count1 < collisions.length; count1++) {\n            if (collisions.length >= 1 && this.cloneObject[this.mainElement.id].row === this.oldRowCol[this.mainElement.id].row) {\n                return false;\n            }\n        }\n        var updatedRow = direction === 0 ?\n            this.getCellInstance(this.mainElement.id).row + this.getCellInstance(this.mainElement.id).sizeY\n            : this.startRow;\n        for (var count = 0; count < collisions.length; count++) {\n            var collideInstance = this.getCellInstance(collisions[count].id);\n            var elementinstance = this.getCellInstance(element.id);\n            var ignore = [];\n            if (collideInstance.sizeY === 1) {\n                ignore.push(collisions[count]);\n            }\n            else if (collideInstance.sizeY > 1) {\n                if (direction === 1 && elementinstance.row === (this.cloneObject[collideInstance.id].row + collideInstance.sizeY - 1)) {\n                    ignore.push(collisions[count]);\n                }\n                else if (direction === 0 && elementinstance.row === (this.cloneObject[collideInstance.id].row)) {\n                    ignore.push(collisions[count]);\n                }\n                else {\n                    return false;\n                }\n            }\n            if (collideInstance.sizeY <= elementinstance.sizeY) {\n                ignore.push(collisions[count]);\n            }\n            var swapCollision = void 0;\n            swapCollision = this.collisions(updatedRow, collideInstance.col, collideInstance.sizeX, collideInstance.sizeY, ignore);\n            if (swapCollision.length > 0) {\n                isSwappable = false;\n                return isSwappable;\n            }\n            else {\n                if (count === collisions.length - 1) {\n                    isSwappable = true;\n                }\n                continue;\n            }\n        }\n        return isSwappable;\n    };\n    DashboardLayout.prototype.swapItems = function (collisions, element, panelModel) {\n        var _this = this;\n        var direction;\n        var swappedElements = [];\n        swappedElements.push(element);\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        var collisionItemsRow = direction === 0 ? eleSwapRow + panelModel.sizeY : this.startRow;\n        this.panelPropertyChange(panelModel, { row: direction === 0 ? eleSwapRow : collisionItemsRow + 1 });\n        for (var count = 0; count < collisions.length; count++) {\n            swappedElements.push(collisions[count]);\n            this.setPanelPosition(collisions[count], collisionItemsRow, (this.getCellInstance(collisions[count].id)).col);\n            this.panelPropertyChange(this.getCellInstance(collisions[count].id), { row: collisionItemsRow });\n            collisions[count].setAttribute('data-row', collisionItemsRow.toString());\n        }\n        element.setAttribute('data-row', panelModel.row.toString());\n        this.setPanelPosition(this.shadowEle, panelModel.row, panelModel.col);\n        for (var i = 0; i < this.panels.length; i++) {\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n        this.startRow = panelModel.row;\n        this.updateOldRowColumn();\n        swappedElements.forEach(function (item) {\n            _this.cloneObject[item.id] = _this.oldRowCol[item.id];\n            var itemModel = _this.getCellInstance(item.id);\n            for (var i = 0; i < _this.sortedArray.length; i++) {\n                if (!_this.sortedArray[i]) {\n                    continue;\n                }\n                for (var j = 0; j < _this.sortedArray[i].length; j++) {\n                    if (_this.sortedArray[i][j] === item) {\n                        _this.sortedArray[i][j] = undefined;\n                    }\n                }\n            }\n            if (!_this.sortedArray[itemModel.row]) {\n                _this.sortedArray[itemModel.row] = [];\n            }\n            _this.sortedArray[itemModel.row][itemModel.col] = item;\n            _this.cloneArray = _this.sortedArray;\n        });\n    };\n    DashboardLayout.prototype.updatePanelLayout = function (element, panelModel) {\n        this.collisionChecker = {};\n        var initialModel = [];\n        var checkForAdjustment;\n        var collisionModels = [];\n        var swappingAvailable;\n        if (this.mainElement && this.isRenderComplete) {\n            initialModel = this.resetLayout(panelModel, element);\n        }\n        else {\n            initialModel = this.collisions(panelModel.row, panelModel.col, panelModel.sizeX, panelModel.sizeY, element);\n        }\n        if (initialModel.length > 0) {\n            initialModel = this.sortCollisionItems(initialModel);\n            initialModel = this.updatedModels(initialModel, panelModel, element);\n            swappingAvailable = !isNullOrUndefined(this.startRow) ? this.checkForSwapping(initialModel, element, panelModel) : false;\n            if (swappingAvailable) {\n                this.swapItems(initialModel, element, panelModel);\n            }\n            else {\n                for (var i = 0; i < initialModel.length; i++) {\n                    var model = this.getCellInstance(initialModel[i].id);\n                    this.checkingElement = initialModel[i];\n                    this.spacedRowValue = null;\n                    this.spacedColumnValue = null;\n                    checkForAdjustment = this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, element);\n                    if (checkForAdjustment && !isNullOrUndefined(this.spacedColumnValue)) {\n                        this.setPanelPosition(initialModel[i], this.spacedRowValue, this.spacedColumnValue);\n                        this.oldRowCol[(initialModel[i].id)] = { row: this.spacedRowValue, col: this.spacedColumnValue };\n                        var value = {\n                            attributes: {\n                                row: this.spacedRowValue.toString(),\n                                col: this.spacedColumnValue.toString(),\n                            }\n                        };\n                        this.setAttributes(value, initialModel[i]);\n                        this.panelPropertyChange(model, { col: this.spacedColumnValue, row: this.spacedRowValue });\n                        this.spacedRowValue = null;\n                        if (i < initialModel.length) {\n                            continue;\n                        }\n                    }\n                    else {\n                        collisionModels.push(initialModel[i]);\n                    }\n                }\n            }\n        }\n        if (collisionModels.length > 0) {\n            var proxy_1 = this;\n            collisionModels.forEach(function (item1) {\n                if (proxy_1.overlapElement.indexOf(item1) === -1) {\n                    proxy_1.overlapElement.push(item1);\n                }\n            });\n            if (this.overlapElement && this.overlapElement.indexOf(element) !== -1) {\n                this.overlapElement.splice(this.overlapElement.indexOf(element), 1);\n            }\n            if (collisionModels.length > 0) {\n                this.updateRowColumn(panelModel.row, this.overlapElement, element);\n                this.checkForCompletePushing();\n            }\n        }\n        if (!this.isSubValue) {\n            this.sortedPanel();\n        }\n        this.updateRowHeight();\n        this.updateGridLines();\n    };\n    DashboardLayout.prototype.checkForCompletePushing = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.collisionChecker[this.panels[i].id] && this.collisionChecker[this.panels[i].id] !== null) {\n                this.overlapElement = [this.collisionChecker[this.panels[i].id].ele];\n                var key = this.panels[i].id;\n                this.updateRowColumn(this.collisionChecker[key].row, this.overlapElement, this.collisionChecker[key].srcEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.updateCollisionChecked = function (item) {\n        for (var count = 0; count < Object.keys(this.collisionChecker).length; count++) {\n            this.collisionChecker[item.id] = null;\n        }\n    };\n    DashboardLayout.prototype.updateRowColumn = function (row, ele, srcEle) {\n        if (!srcEle) {\n            return;\n        }\n        var eleSizeY = parseInt(srcEle.getAttribute('data-sizeY'), 10);\n        var eleRow = parseInt(srcEle.getAttribute('data-row'), 10);\n        this.overlapElementClone = this.overlapElement && !this.shouldRestrict ? this.overlapElement : this.overlapElement;\n        for (var i = 0; i < this.overlapElementClone.length; i++) {\n            if (this.overlapElementClone.length === 0) {\n                return;\n            }\n            for (var i_1 = 0; i_1 < this.overlapElementClone.length; i_1++) {\n                this.collisionChecker[this.overlapElementClone[i_1].id] = {\n                    ele: this.overlapElementClone[i_1],\n                    row: row,\n                    srcEle: srcEle\n                };\n            }\n            var updatedRow = eleRow + eleSizeY;\n            var collisionY = parseInt(this.overlapElementClone[i].getAttribute('data-sizeY'), 10);\n            var collisionCol = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n            var collisionX = parseInt(this.overlapElementClone[i].getAttribute('data-sizeX'), 10);\n            var colValue = void 0;\n            var collisionModels = void 0;\n            if (this.overlapSubElementClone.indexOf(srcEle) === -1) {\n                this.overlapSubElementClone.push(srcEle);\n            }\n            if (this.overlapSubElementClone.indexOf(this.overlapElementClone[i]) === -1) {\n                this.overlapSubElementClone.push(this.overlapElementClone[i]);\n            }\n            if (collisionY > 1 || collisionX > 1) {\n                var overlapElementModel = this.getCellInstance(this.overlapElementClone[i].id);\n                colValue = overlapElementModel.col;\n                var ele_1 = document.getElementById(overlapElementModel.id);\n                for (var k = overlapElementModel.row; k < eleRow + eleSizeY; k++) {\n                    this.isSubValue = true;\n                    this.panelPropertyChange(overlapElementModel, { row: overlapElementModel.row + 1 });\n                    ele_1.setAttribute('data-row', overlapElementModel.row.toString());\n                    this.setPanelPosition(ele_1, overlapElementModel.row, colValue);\n                    this.updateCollisionChecked(ele_1);\n                    this.oldRowCol[(ele_1.id)] = { row: overlapElementModel.row, col: colValue };\n                    var panelModel = this.getCellInstance(ele_1.id);\n                    this.panelPropertyChange(panelModel, { col: colValue, row: overlapElementModel.row });\n                    var eleRow_1 = parseInt(ele_1.getAttribute('data-row'), 10);\n                    var eleCol = parseInt(ele_1.getAttribute('data-col'), 10);\n                    var sizeX = parseInt(ele_1.getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(ele_1.getAttribute('data-sizeY'), 10);\n                    var excludeElements = [];\n                    excludeElements.push(ele_1);\n                    excludeElements.push(srcEle);\n                    collisionModels = this.collisions(eleRow_1, eleCol, sizeX, sizeY, excludeElements);\n                    if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                        collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                    }\n                    this.collisionPanel(collisionModels, eleCol, eleRow_1, ele_1);\n                }\n                this.isSubValue = false;\n            }\n            else {\n                if (this.addPanelCalled) {\n                    this.addPanelCalled = false;\n                }\n                this.overlapElementClone[i].setAttribute('data-row', updatedRow.toString());\n                var excludeEle = [];\n                excludeEle.push(this.overlapElementClone[i]);\n                excludeEle.push(srcEle);\n                collisionModels = this.collisions(updatedRow, collisionCol, collisionX, collisionY, excludeEle);\n                if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                    collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                }\n                colValue = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n                this.setPanelPosition(this.overlapElementClone[i], updatedRow, colValue);\n                this.updateCollisionChecked(this.overlapElementClone[i]);\n                this.oldRowCol[(this.overlapElementClone[i].id)] = { row: updatedRow, col: colValue };\n                var panelModel = this.getCellInstance(this.overlapElementClone[i].id);\n                this.panelPropertyChange(panelModel, { col: colValue, row: updatedRow });\n                this.collisionPanel(collisionModels, colValue, updatedRow, this.overlapElementClone[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.collisionPanel = function (collisionModels, colValue, updatedRow, clone) {\n        var panelModel = this.getCellInstance(clone.id);\n        this.panelPropertyChange(panelModel, { row: updatedRow, col: colValue });\n        if (collisionModels.length > 0) {\n            var proxy_2 = this;\n            this.overlapElement = [];\n            this.shouldRestrict = true;\n            collisionModels.forEach(function (item1) {\n                proxy_2.overlapElement.push(item1);\n            });\n            var overlapElementRow1 = parseInt(clone.getAttribute('data-row'), 10);\n            for (var m = 0; m < this.overlapElement.length; m++) {\n                this.updateRowColumn(overlapElementRow1, this.overlapElement, clone);\n            }\n            this.shouldRestrict = false;\n        }\n        else {\n            if (!this.addPanelCalled) {\n                this.sortedPanel();\n            }\n            if (this.overlapSubElementClone.length > 0) {\n                var _loop_5 = function (p) {\n                    var rowVal = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-row'), 10);\n                    var colValue_1 = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-col'), 10);\n                    var sizeX = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeY'), 10);\n                    var collisionModels1 = void 0;\n                    collisionModels1 = this_3.collisions(rowVal, colValue_1, sizeX, sizeY, this_3.overlapSubElementClone);\n                    if (this_3.mainElement && collisionModels1.indexOf(this_3.mainElement) !== -1) {\n                        collisionModels1.splice(collisionModels1.indexOf(this_3.mainElement), 1);\n                    }\n                    var proxy = this_3;\n                    collisionModels1.forEach(function (item1) {\n                        proxy.overlapElement.push(item1);\n                    });\n                    if (collisionModels1.length > 0) {\n                        this_3.updateRowColumn(rowVal, this_3.overlapElement, this_3.overlapSubElementClone[p]);\n                    }\n                };\n                var this_3 = this;\n                for (var p = 0; p < this.overlapSubElementClone.length; p++) {\n                    _loop_5(p);\n                }\n            }\n            this.overlapSubElementClone = [];\n        }\n    };\n    DashboardLayout.prototype.removeResizeClasses = function (panelElements) {\n        for (var i = 0; i < panelElements.length; i++) {\n            var element = panelElements[i];\n            var resizerElements = element.querySelectorAll('.e-resize');\n            for (var i_2 = 0; i_2 < resizerElements.length; i_2++) {\n                detach(resizerElements[i_2]);\n            }\n        }\n    };\n    DashboardLayout.prototype.setClasses = function (panelCollection) {\n        for (var i = 0; i < panelCollection.length; i++) {\n            var element = panelCollection[i];\n            var containerEle = panelCollection[i].querySelector('.e-panel-container');\n            if (this.allowDragging) {\n                if (this.draggableHandle && element.querySelectorAll(this.draggableHandle)[0]) {\n                    addClass([element.querySelectorAll(this.draggableHandle)[0]], [draggable]);\n                }\n            }\n            if (this.allowResizing &&\n                this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n                this.setResizingClass(element, containerEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.setResizingClass = function (ele, container) {\n        this.availableClasses = this.resizableHandles;\n        for (var j = 0; j < this.availableClasses.length; j++) {\n            var spanEle = this.createElement('span');\n            var addClassValue = void 0;\n            container.appendChild(spanEle);\n            if (this.availableClasses[j] === 'e-east' || this.availableClasses[j] === 'e-west' ||\n                this.availableClasses[j] === 'e-north' || this.availableClasses[j] === 'e-south') {\n                addClassValue = single;\n            }\n            else {\n                addClassValue = double;\n            }\n            addClass([spanEle], [addClassValue, this.availableClasses[j], resize]);\n        }\n    };\n    DashboardLayout.prototype.setXYAttributes = function (element, panelModel) {\n        var value = {\n            value: {\n                sizeX: panelModel.sizeX.toString(),\n                sizeY: panelModel.sizeY.toString(),\n                minSizeX: panelModel.minSizeX.toString(),\n                minSizeY: panelModel.minSizeY.toString(),\n                maxSizeX: !isNullOrUndefined(panelModel.maxSizeX) ? panelModel.maxSizeX.toString() : undefined,\n                maxSizeY: !isNullOrUndefined(panelModel.maxSizeY) ? panelModel.maxSizeY.toString() : undefined,\n                row: panelModel.row.toString(),\n                col: panelModel.col.toString(),\n            }\n        };\n        this.setAttributes(value, element);\n    };\n    DashboardLayout.prototype.setXYDimensions = function (panelModel) {\n        var cellHeight = this.getCellSize()[1];\n        var cellWidth = this.getCellSize()[0];\n        var widthValue;\n        var heigthValue;\n        if (panelModel && typeof (cellWidth) === 'number' && typeof (panelModel.sizeX) === 'number' && panelModel.sizeX > 1) {\n            widthValue = (panelModel.sizeX * cellWidth) + (panelModel.sizeX - 1) * this.cellSpacing[0];\n        }\n        else {\n            widthValue = cellWidth;\n        }\n        if (panelModel && typeof (cellHeight) === 'number' && panelModel.sizeY > 1 && typeof (panelModel.sizeY) === 'number') {\n            heigthValue = (panelModel.sizeY * cellHeight) + (panelModel.sizeY - 1) * this.cellSpacing[1];\n        }\n        else {\n            heigthValue = formatUnit(cellHeight);\n        }\n        return [heigthValue, widthValue];\n    };\n    DashboardLayout.prototype.getRowColumnDragValues = function (args) {\n        var value = [];\n        var elementTop = parseInt(args.element.style.top, 10);\n        var elementLeft = parseInt(args.element.style.left, 10);\n        var row = Math.round(elementTop / (this.getCellSize()[1] + this.cellSpacing[1]));\n        var col = Math.round(elementLeft / (this.getCellSize()[0] + +this.cellSpacing[0]));\n        value = [row, col];\n        return value;\n    };\n    DashboardLayout.prototype.enableDraggingContent = function (collections) {\n        var _this = this;\n        for (var i = 0; i < collections.length; i++) {\n            var cellElement = collections[i];\n            {\n                this.dragobj = new Draggable(cellElement, {\n                    preventDefault: false,\n                    clone: false,\n                    dragArea: this.element,\n                    handle: this.draggableHandle ? this.draggableHandle : '.e-panel',\n                    abort: '.e-resize',\n                    dragStart: this.onDraggingStart.bind(this),\n                    dragStop: function (args) {\n                        var model = _this.getCellInstance(_this.mainElement.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(model.row, model.col, model.sizeX, model.sizeY, _this.mainElement).length > 0) {\n                            _this.setHolderPosition(args);\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                            _this.updatePanelLayout(_this.mainElement, model);\n                        }\n                        else {\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                        }\n                        var changedPanels = [];\n                        _this.mainElement = null;\n                        var item = _this.getPanelBase(args);\n                        if (_this.shadowEle) {\n                            detach(_this.shadowEle);\n                        }\n                        removeClass([_this.element], [preventSelect]);\n                        removeClass([args.element], [dragging]);\n                        _this.shadowEle = null;\n                        args.element.classList.remove('e-dragging');\n                        var row = _this.getRowColumnDragValues(args)[0];\n                        var col = _this.getRowColumnDragValues(args)[1];\n                        var panelModel = _this.getCellInstance(args.element.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(row, col, panelModel.sizeX, panelModel.sizeY, document.getElementById(item.id)).length === 0) {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), { row: row, col: col });\n                            _this.oldRowCol[args.element.id].row = row;\n                            _this.oldRowCol[args.element.id].col = col;\n                            _this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n                            _this.sortedPanel();\n                        }\n                        else {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), {\n                                row: _this.oldRowCol[args.element.id].row,\n                                col: _this.oldRowCol[args.element.id].col\n                            });\n                            args.element.setAttribute('data-col', _this.getCellInstance(args.element.id).col.toString());\n                            args.element.setAttribute('data-row', _this.getCellInstance(args.element.id).row.toString());\n                            _this.sortedPanel();\n                        }\n                        var panelInstance = _this.getCellInstance(args.element.id);\n                        _this.setPanelPosition(args.element, panelInstance.row, panelInstance.col);\n                        _this.updatePanels();\n                        _this.updateCloneArrayObject();\n                        for (var i_3 = 0; i_3 < _this.panels.length; i_3++) {\n                            if (_this.panels[i_3].row !== _this.panelsInitialModel[i_3].row ||\n                                _this.panels[i_3].col !== _this.panelsInitialModel[i_3].col) {\n                                changedPanels.push(_this.panels[i_3]);\n                            }\n                        }\n                        if (changedPanels.length > 0) {\n                            var changedArgs = { changedPanels: changedPanels };\n                            _this.trigger('change', changedArgs);\n                        }\n                        _this.dragStopEventArgs = { event: args.event, element: args.element };\n                        _this.trigger('dragStop', args);\n                        _this.resizeEvents();\n                    },\n                    drag: function (args) {\n                        _this.draggedEventArgs = {\n                            event: args.event,\n                            element: args.element,\n                            target: closest((args.target), '.e-panel')\n                        };\n                        _this.trigger('drag', _this.draggedEventArgs);\n                        _this.onDragStart(args);\n                    }\n                });\n                if (this.dragCollection.indexOf(this.dragobj) === -1) {\n                    this.dragCollection.push(this.dragobj);\n                }\n            }\n        }\n    };\n    ;\n    DashboardLayout.prototype.updatePanels = function () {\n        this.moveItemsUpwards();\n        this.updateOldRowColumn();\n        this.sortedPanel();\n    };\n    DashboardLayout.prototype.onDraggingStart = function (args) {\n        this.dragStartArgs = { event: args.event, element: args.element, cancel: false };\n        this.trigger('dragStart', this.dragStartArgs);\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        this.mainElement = args.element;\n        this.cloneObject = JSON.parse(JSON.stringify(this.cloneObject));\n        var eleRowValue = this.startRow = parseInt(args.element.getAttribute('data-row'), 10);\n        this.startCol = parseInt(args.element.getAttribute('data-col'), 10);\n        var eleSizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        if (eleRowValue + eleSizeY === this.rows) {\n            this.rows = this.rows + eleSizeY;\n            this.setHeightWidth();\n            // tslint:disable-next-line\n            this.dragobj.setDragArea();\n        }\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        this.shadowEle.classList.add('e-holder-transition');\n        setStyle(this.shadowEle, { 'position': 'absolute' });\n        addClass([this.element], [preventSelect]);\n        addClass([args.element], [dragging]);\n        this.element.appendChild(this.shadowEle);\n        this.shadowEle = document.querySelector('.e-holder');\n        this.shadowEle.style.height = (this.getCellInstance(args.element.id).sizeY * this.cellSize[1]) + 'px';\n        this.shadowEle.style.width = (this.getCellInstance(args.element.id).sizeX * this.cellSize[0]) + 'px';\n        var panelInstance = this.getCellInstance(args.element.id);\n        this.setPanelPosition(this.shadowEle, panelInstance.row, panelInstance.col);\n    };\n    ;\n    // tslint:disable-next-line\n    DashboardLayout.prototype.cloneModels = function (source, target) {\n        if (target === undefined) {\n            target = [];\n        }\n        for (var i = 0; i < source.length; i++) {\n            // tslint:disable-next-line\n            if (!target[i]) {\n                target[i] = {};\n            }\n            // tslint:disable-next-line\n            for (var k in source[i]) {\n                target[i][k] = source[i][k];\n            }\n        }\n        return target;\n    };\n    ;\n    DashboardLayout.prototype.onDragStart = function (args) {\n        var endCol;\n        var endRow;\n        var dragCol;\n        var col = dragCol = this.getRowColumnDragValues(args)[1];\n        var row = this.getRowColumnDragValues(args)[0];\n        this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        var panelModel = this.getCellInstance(args.element.id);\n        if (this.allowPushing) {\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            endCol = this.oldRowCol[(args.element.id)].col;\n            endRow = this.oldRowCol[(args.element.id)].row;\n            this.oldRowCol[(args.element.id)] = { row: row, col: col };\n            this.updateOldRowColumn();\n            if (this.startCol !== endCol || this.startRow !== endRow) {\n                this.setHolderPosition(args);\n                if (this.startCol !== endCol) {\n                    this.startRow = endRow;\n                }\n                if (this.startRow !== endRow) {\n                    this.startCol = endCol;\n                }\n                if (this.allowPushing) {\n                    this.mainElement = args.element;\n                    var model = panelModel;\n                    this.checkCollision = this.collisions(model.row, model.col, model.sizeX, model.sizeY, args.element);\n                    if (panelModel.col >= this.checkColumnValue) {\n                        this.checkCollision = [];\n                    }\n                    this.updatePanelLayout(args.element, panelModel);\n                    this.moveItemsUpwards();\n                }\n            }\n        }\n        if (this.allowPushing !== false) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        }\n        if (this.oldRowCol[args.element.id].row !== row || this.oldRowCol[args.element.id].col !== col) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n        }\n        if (this.startCol !== dragCol) {\n            this.startCol = endCol;\n            this.moveItemsUpwards();\n        }\n        if (!this.allowPushing) {\n            this.setHolderPosition(args);\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        if (this.allowPushing === false) {\n            return;\n        }\n    };\n    DashboardLayout.prototype.getPanelBase = function (args) {\n        var item;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === ((args.element\n                && args.element.id) || args)) {\n                item = this.panelCollection[i];\n            }\n        }\n        return item;\n    };\n    DashboardLayout.prototype.getPanel = function (row, column, excludeItems) {\n        if (excludeItems && !(excludeItems instanceof Array)) {\n            excludeItems = [excludeItems];\n        }\n        var sizeY = 1;\n        while (row > -1) {\n            var sizeX = 1;\n            var col = column;\n            while (col > -1) {\n                var items = this.sortedArray[row];\n                if (items) {\n                    var item = items[col];\n                    if (item && (!excludeItems ||\n                        excludeItems.indexOf(item) === -1) && parseInt(item.getAttribute('data-sizeX'), 10) >= sizeX\n                        && parseInt(item.getAttribute('data-sizeY'), 10) >= sizeY) {\n                        return item;\n                    }\n                }\n                ++sizeX;\n                --col;\n            }\n            --row;\n            ++sizeY;\n        }\n        return null;\n    };\n    ;\n    DashboardLayout.prototype.setHolderPosition = function (args) {\n        var cellSizeOne;\n        var cellSizeZero;\n        var sizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        var col = parseInt(args.element.getAttribute('data-col'), 10);\n        var row = parseInt(args.element.getAttribute('data-row'), 10);\n        var sizeX = parseInt(args.element.getAttribute('data-sizeX'), 10);\n        var widthValue = this.getCellSize()[0];\n        var heightValue = this.getCellSize()[1];\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        cellSizeOne = this.getCellSize()[1];\n        cellSizeZero = this.getCellSize()[0];\n        this.elementRef.top = this.shadowEle.style.top = top + 'px';\n        this.elementRef.left = this.shadowEle.style.left = left + 'px';\n        this.elementRef.height = this.shadowEle.style.height = ((sizeY * cellSizeOne) + ((sizeY - 1) * this.cellSpacing[1])) + 'px';\n        this.elementRef.width = this.shadowEle.style.width = ((sizeX * cellSizeZero) + ((sizeX - 1) * this.cellSpacing[0])) + 'px';\n    };\n    ;\n    DashboardLayout.prototype.getCellInstance = function (idValue) {\n        var currentCellInstance;\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].id === idValue) {\n                currentCellInstance = this.panels[i];\n            }\n        }\n        return currentCellInstance;\n    };\n    /**\n     * Allows to add a panel to the Dashboardlayout.\n     */\n    DashboardLayout.prototype.addPanel = function (panel) {\n        this.maxCol();\n        if (!panel.minSizeX) {\n            panel.minSizeX = 1;\n        }\n        if (!panel.minSizeY) {\n            panel.minSizeY = 1;\n        }\n        if (!panel.id) {\n            panel.id = 'layout_' + this.panelID.toString();\n            this.panelID = this.panelID + 1;\n        }\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', panel);\n        this.panels.push(panelProp);\n        this.setMinMaxValues(panelProp);\n        if (this.maxColumnValue < panelProp.col || this.maxColumnValue < (panelProp.col + panelProp.sizeX)) {\n            this.panelPropertyChange(panelProp, { col: this.maxColumnValue - panelProp.sizeX });\n        }\n        var cell = this.renderCell(panelProp, true);\n        this.oldRowCol[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.cloneObject[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.updateOldRowColumn();\n        this.element.insertAdjacentElement('afterbegin', cell);\n        var container = cell.querySelector('.e-panel-container');\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n            this.removeResizeClasses(this.panelCollection);\n        }\n        else {\n            this.addPanelCalled = true;\n            this.mainElement = cell;\n            if (!this.checkCollision) {\n                this.checkCollision = [];\n            }\n            this.setPanelPosition(cell, panelProp.row, panelProp.col);\n            this.updatePanelLayout(cell, panelProp);\n            this.addPanelCalled = false;\n        }\n        if (this.allowResizing &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.setResizingClass(cell, container);\n        }\n        if (this.allowDragging &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.enableDraggingContent([document.getElementById(panelProp.id)]);\n        }\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updateOldRowColumn();\n        this.sortedPanel();\n        this.updateCloneArrayObject();\n        if (this.allowResizing) {\n            for (var i = 0; i < cell.querySelectorAll('.e-resize').length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(cell.querySelectorAll('.e-resize')[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'mise') {\n                    EventHandler.add(cell.querySelectorAll('.e-resize')[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n    };\n    /**\n     * Allows to update a panel in the DashboardLayout.\n     */\n    DashboardLayout.prototype.updatePanel = function (panel) {\n        if (!panel.id) {\n            return;\n        }\n        var panelInstance = this.getCellInstance(panel.id);\n        if (!panelInstance) {\n            return;\n        }\n        this.maxCol();\n        panel.col = (panel.col < 1) ? 0 : ((panel.col > this.columns)) ? this.columns - 1 : panel.col;\n        if (isNullOrUndefined(panel.col)) {\n            panel.col = panelInstance.col;\n        }\n        this.panelPropertyChange(panelInstance, panel);\n        this.setMinMaxValues(panelInstance);\n        var cell = document.getElementById(panel.id);\n        this.mainElement = cell;\n        this.panelContent = cell.querySelector('.e-panel-container') ?\n            cell.querySelector('.e-panel-container') :\n            this.createSubElement(panelInstance.cssClass, cell.id + '_content', panelContainer);\n        cell.appendChild(this.panelContent);\n        if (panelInstance.header) {\n            var headerTemplateElement = cell.querySelector('.e-panel-header') ?\n                cell.querySelector('.e-panel-header') : this.createSubElement('', cell.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            headerTemplateElement.innerHTML = '';\n            var id = this.element.id + 'HeaderTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.header, headerTemplateElement, id, true);\n            this.panelContent.appendChild(headerTemplateElement);\n        }\n        else {\n            if (cell.querySelector('.e-panel-header')) {\n                detach(cell.querySelector('.e-panel-header'));\n            }\n        }\n        if (panelInstance.content) {\n            this.panelBody = cell.querySelector('.e-panel-content') ? cell.querySelector('.e-panel-content') :\n                this.createSubElement(panelInstance.cssClass, cell.id + '_body', panelContent);\n            this.panelBody.innerHTML = '';\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            var id = this.element.id + 'ContentTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.content, this.panelBody, id, true);\n            this.panelContent.appendChild(this.panelBody);\n        }\n        else {\n            if (cell.querySelector('.e-panel-content')) {\n                detach(cell.querySelector('.e-panel-content'));\n            }\n        }\n        this.setXYAttributes(cell, panelInstance);\n        this.setHeightAndWidth(cell, panelInstance);\n        this.setPanelPosition(cell, panelInstance.row, panelInstance.col);\n        this.updatePanelLayout(cell, panelInstance);\n        this.mainElement = null;\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    DashboardLayout.prototype.updateCloneArrayObject = function () {\n        this.cloneArray = this.sortedArray;\n        this.cloneObject = JSON.parse(JSON.stringify(this.oldRowCol));\n    };\n    /**\n     * Returns the panels object of the DashboardLayout.\n     */\n    DashboardLayout.prototype.serialize = function () {\n        var cloneModel = this.cloneModels(this.panels);\n        var customObject = [];\n        for (var i = 0; i < cloneModel.length; i++) {\n            customObject.push({\n                id: cloneModel[i].id, row: cloneModel[i].row, col: cloneModel[i].col, sizeX: cloneModel[i].sizeX,\n                sizeY: cloneModel[i].sizeY, minSizeX: cloneModel[i].minSizeX, minSizeY: cloneModel[i].minSizeY,\n                maxSizeX: cloneModel[i].maxSizeX, maxSizeY: cloneModel[i].maxSizeY\n            });\n        }\n        return (customObject);\n    };\n    /**\n     * Removes all the panels from the DashboardLayout.\n     */\n    DashboardLayout.prototype.removeAll = function () {\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            detach(this.panelCollection[i]);\n        }\n        this.element.innerHTML = '';\n        this.rows = 0;\n        this.gridPanelCollection = [];\n        this.setHeightWidth();\n        this.sortedPanel();\n        this.sortedArray = [];\n        this.overlapElementClone = [];\n        this.overlapElement = [];\n        this.overlapSubElementClone = [];\n        this.panelCollection = [];\n        this.oldRowCol = {};\n        this.cloneObject = {};\n        this.panels = [];\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    /**\n     * Removes the panel from the DashboardLayout.\n     */\n    DashboardLayout.prototype.removePanel = function (id) {\n        var _this = this;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === id) {\n                detach(this.panelCollection[i]);\n                this.panelCollection.splice(i, 1);\n            }\n            if (this.panels[i].id === id) {\n                this.panels.splice(i, 1);\n                this.updateOldRowColumn();\n                this.sortedPanel();\n            }\n        }\n        this.updatePanels();\n        this.gridPanelCollection.forEach(function (item) {\n            if (item.id === id) {\n                _this.gridPanelCollection.splice(_this.gridPanelCollection.indexOf(item), 1);\n            }\n        });\n        this.updateCloneArrayObject();\n    };\n    /**\n     * Moves the panel in the DashboardLayout.\n     */\n    DashboardLayout.prototype.movePanel = function (id, row, col) {\n        this.movePanelCalled = true;\n        var panelInstance = this.getCellInstance(id);\n        if (col < 1) {\n            col = 0;\n        }\n        else if (col > this.columns) {\n            col = this.columns - 1;\n        }\n        this.panelPropertyChange(panelInstance, { row: row, col: col });\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, ele);\n        this.setPanelPosition(ele, row, col);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updateRowHeight();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.movePanelCalled = false;\n    };\n    DashboardLayout.prototype.setAttributes = function (value, ele) {\n        for (var i = 0; i < Object.keys(value).length; i++) {\n            if (Object.keys(value)) {\n                if (value[Object.keys(value)[i]].col) {\n                    ele.setAttribute('data-col', value[Object.keys(value)[i]].col.toString());\n                }\n                if (value[Object.keys(value)[i]].row) {\n                    ele.setAttribute('data-row', value[Object.keys(value)[i]].row.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeX) {\n                    ele.setAttribute('data-sizeX', value[Object.keys(value)[i]].sizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeY) {\n                    ele.setAttribute('data-sizeY', value[Object.keys(value)[i]].sizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeX) {\n                    ele.setAttribute('data-minSizeX', value[Object.keys(value)[i]].minSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeY) {\n                    ele.setAttribute('data-minSizeY', value[Object.keys(value)[i]].minSizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeX) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeY) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeY.toString());\n                }\n            }\n        }\n    };\n    /**\n     * Resize the panel in the DashboardLayout.\n     */\n    DashboardLayout.prototype.resizePanel = function (id, sizeX, sizeY) {\n        var panelInstance = this.getCellInstance(id);\n        this.resizeCalled = true;\n        this.panelPropertyChange(panelInstance, { sizeX: sizeX, sizeY: sizeY });\n        this.setMinMaxValues(panelInstance);\n        this.checkMinMaxValues(panelInstance);\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.setAttributes({ value: { sizeX: panelInstance.sizeX.toString(), sizeY: panelInstance.sizeY.toString() } }, ele);\n        this.setHeightAndWidth(ele, panelInstance);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updatePanels();\n        this.updateRowHeight();\n        this.resizeCalled = false;\n    };\n    /**\n     * Destroys the DashboardLayout component\n     */\n    DashboardLayout.prototype.destroy = function () {\n        removeClass([this.element], ['e-dashboardlayout', 'e-lib', 'e-responsive', 'e-control']);\n        this.element.removeAttribute('style');\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            this.dragCollection[i].destroy();\n        }\n        this.element.innerHTML = '';\n        _super.prototype.destroy.call(this);\n    };\n    DashboardLayout.prototype.setEnableRtl = function () {\n        this.enableRtl ? addClass([this.element], 'e-rtl') : removeClass([this.element], 'e-rtl');\n    };\n    DashboardLayout.prototype.getDragInstance = function (id) {\n        var draggableInstance;\n        var ele = document.getElementById(id);\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            draggableInstance = this.dragCollection[i].element === ele ? this.dragCollection[i] : null;\n            if (draggableInstance) {\n                return draggableInstance;\n            }\n        }\n        return draggableInstance;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.updateCellSizeAndSpacing = function () {\n        this.panelResponsiveUpdate();\n        this.setHeightWidth();\n        this.getRowColumn();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n            this.setPanelPosition(ele, panelModel.row, panelModel.col);\n        }\n    };\n    DashboardLayout.prototype.updatePanelsDynamically = function (panels) {\n        this.removeAll();\n        this.setProperties({ panels: panels }, true);\n        this.setOldRowCol();\n        this.initialize();\n        if (this.showGridLines) {\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkForIDValues = function (panels) {\n        var _this = this;\n        if (!isNullOrUndefined(panels)) {\n            this.panelID = 0;\n            panels.forEach(function (panel) {\n                if (!panel.id) {\n                    _this.panelPropertyChange(panel, { id: 'layout_' + _this.panelID.toString() });\n                    _this.panelID = _this.panelID + 1;\n                }\n            });\n        }\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var _this = this;\n        if (newProp.panels) {\n            this.checkForIDValues(newProp.panels);\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'enableRtl':\n                    this.setProperties({ enableRtl: newProp.enableRtl }, true);\n                    this.setEnableRtl();\n                    break;\n                case 'mediaQuery':\n                    this.setProperties({ mediaQuery: newProp.mediaQuery }, true);\n                    if (this.checkMediaQuery()) {\n                        this.checkMediaQuerySizing();\n                    }\n                    break;\n                case 'allowDragging':\n                    this.setProperties({ allowDragging: newProp.allowDragging }, true);\n                    this.checkDragging(this.dragCollection);\n                    break;\n                case 'allowResizing':\n                    this.setProperties({ allowResizing: newProp.allowResizing }, true);\n                    if (this.allowResizing) {\n                        this.setClasses(this.panelCollection);\n                        this.resizeEvents();\n                    }\n                    else {\n                        for (var i = 0; i < document.querySelectorAll('.e-resize').length; i++) {\n                            var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                            var element = document.querySelectorAll('.e-resize')[i];\n                            EventHandler.remove(element, eventName, this.downResizeHandler);\n                            if (Browser.info.name !== 'mise') {\n                                EventHandler.remove(element, 'touchstart', this.touchDownResizeHandler);\n                            }\n                        }\n                        this.removeResizeClasses(this.panelCollection);\n                    }\n                    break;\n                case 'cellSpacing':\n                    this.setProperties({ cellSpacing: newProp.cellSpacing }, true);\n                    this.updateCellSizeAndSpacing();\n                    this.updateGridLines();\n                    break;\n                case 'draggableHandle':\n                    this.setProperties({ draggableHandle: newProp.draggableHandle }, true);\n                    for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                        var ele = this.element.querySelectorAll('.e-panel')[i];\n                        var draggableInstance = this.getDragInstance(ele.id);\n                        draggableInstance.handle = this.draggableHandle;\n                    }\n                    break;\n                case 'allowFloating':\n                    this.setProperties({ allowFloating: newProp.allowFloating }, true);\n                    this.moveItemsUpwards();\n                    break;\n                case 'showGridLines':\n                    if (this.showGridLines) {\n                        this.setProperties({ showGridLines: newProp.showGridLines }, true);\n                        this.initGridLines();\n                    }\n                    else {\n                        if (this.table) {\n                            detach(this.table);\n                        }\n                    }\n                    break;\n                case 'allowPushing':\n                    this.setProperties({ allowPushing: newProp.allowPushing }, true);\n                    break;\n                case 'panels':\n                    if (!this.isDynamicallyUpdated) {\n                        this.isRenderComplete = false;\n                        this.updatePanelsDynamically(newProp.panels);\n                        this.isRenderComplete = true;\n                        this.isDynamicallyUpdated = true;\n                    }\n                    else {\n                        this.isDynamicallyUpdated = false;\n                    }\n                    break;\n                case 'columns':\n                    this.isRenderComplete = false;\n                    if (newProp.panels && !this.isDynamicallyUpdated) {\n                        this.updatePanelsDynamically(newProp.panels);\n                        this.isDynamicallyUpdated = true;\n                    }\n                    else {\n                        this.isDynamicallyUpdated = false;\n                    }\n                    this.setProperties({ columns: newProp.columns }, true);\n                    this.panelCollection = [];\n                    this.maxColumnValue = this.columns;\n                    this.calculateCellSize();\n                    this.panels.forEach(function (panel) {\n                        _this.setMinMaxValues(panel);\n                        if (_this.maxColumnValue < panel.col || _this.maxColumnValue < (panel.col + panel.sizeX)) {\n                            var colValue = _this.maxColumnValue - panel.sizeX;\n                            _this.panelPropertyChange(panel, { col: colValue < 0 ? 0 : colValue });\n                            _this.setXYAttributes(document.getElementById(panel.id), panel);\n                        }\n                        _this.setHeightAndWidth(document.getElementById(panel.id), panel);\n                        _this.panelCollection.push(document.getElementById(panel.id));\n                        _this.setPanelPosition(document.getElementById(panel.id), panel.row, panel.col);\n                        _this.mainElement = document.getElementById(panel.id);\n                        _this.updatePanelLayout(document.getElementById(panel.id), panel);\n                        _this.mainElement = null;\n                    });\n                    this.updatePanels();\n                    this.updateCloneArrayObject();\n                    this.isRenderComplete = true;\n                    this.updateGridLines();\n                    break;\n            }\n        }\n    };\n    /**\n     * Gets the properties to be maintained upon browser refresh.\n     * @returns string\n     */\n    DashboardLayout.prototype.getPersistData = function () {\n        var keyEntity = ['panels'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    DashboardLayout.prototype.getModuleName = function () {\n        return 'DashboardLayout';\n    };\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowDragging\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowPushing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowFloating\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"cellAspectRatio\", void 0);\n    __decorate([\n        Property([5, 5])\n    ], DashboardLayout.prototype, \"cellSpacing\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"columns\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"showGridLines\", void 0);\n    __decorate([\n        Property(null)\n    ], DashboardLayout.prototype, \"draggableHandle\", void 0);\n    __decorate([\n        Property('en-US')\n    ], DashboardLayout.prototype, \"locale\", void 0);\n    __decorate([\n        Property('max-width: 600px')\n    ], DashboardLayout.prototype, \"mediaQuery\", void 0);\n    __decorate([\n        Collection([], Panel)\n    ], DashboardLayout.prototype, \"panels\", void 0);\n    __decorate([\n        Property(['e-south-east'])\n    ], DashboardLayout.prototype, \"resizableHandles\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"change\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"drag\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resize\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"destroyed\", void 0);\n    DashboardLayout = __decorate([\n        NotifyPropertyChanges\n    ], DashboardLayout);\n    return DashboardLayout;\n}(Component));\nexport { DashboardLayout };\n"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","ROOT","PANE","SPLIT_H_PANE","SPLIT_V_PANE","STATIC_PANE","RESIZE_BAR","ARROW_LEFT","ARROW_UP","HIDE_ICON","PaneProperties","_super","apply","Property","ChildProperty","Splitter","options","element","_this","call","allPanes","paneOrder","separatorOrder","allBars","previousCoordinates","currentCoordinates","updatePrePaneInPercentage","updateNextPaneInPercentage","panesDimensions","border","validDataAttributes","validElementAttributes","iconsDelay","onPropertyChanged","newProp","oldProp","classList","contains","_i","_a","keys","setSplitterSize","height","width","setCssClass","cssClass","isEnabled","enabled","setSeparatorSize","separatorSize","changeOrientation","orientation","paneSettings","destroyPaneSettings","createSplitPane","addSeparator","getPanesDimensions","setRTL","enableRtl","isCollapsed","paneCounts","index","parseInt","changedPropsCount","j","property","newValue","isNullOrUndefined","innerHTML","setTemplate","newVal","resizableModel","collapsibleModelUpdate","collapsed","collapsedOnchange","newValSize","style","flexBasis","add","preRender","wrapper","cloneNode","wrapperParent","parentElement","removeClass","addClass","Browser","isDevice","getPersistData","addOnPersist","getModuleName","render","checkDataAttributes","setDimension","getHeight","getWidth","setPaneSettings","EventHandler","document","onDocumentClick","e","currentSeparator","remove","api","value","dataIndex","getAttribute","removeDataPrefix","paneIndex","children","dataAttr","size","min","max","content","resizable","collapsible","paneAPI","slice","forEach","el","detach","childCount","paneCollection","paneValue","setProperties","checkArrow","targetArrow","querySelector","attribute","lastIndexOf","rtl","formatUnit","setStyleAttribute","push","getBoundingClientRect","className","split","indexOf","hideResizer","select","showResizer","previousPane","nextPane","onMouseDown","isResizable","updateResizablePanes","arrow2","arrow1","paneCollapsible","updateCollapseIcons","collapseArrow","barIndex","arrow","selectAll","updateIsCollapsed","lastBarArrow","lastBarIndex","click","m","targetArrows","splitterProperty","sizeValue","seaprator","splitBar","resizeBar","isVertical","checkSplitPane","currentBar","elementIndex","paneEle","getElementsByClassName","getPrevPane","order","getNextPane","addResizeHandler","resizeHanlder","createElement","appendChild","createSeparator","separator","leftArrow","rightArrow","addMouseActions","getPaneDetails","clonedEle","parentNode","setAttribute","toLowerCase","wireClickEvents","eventName","info","name","getPreviousPaneIndex","getNextPaneIndex","sTout","hoverTimeOut","addEventListener","setTimeout","clearTimeout","getEventType","updateCurrentSeparator","isSeparator","isMouseEvent","isMouse","type","pointerType","updateCursorPosition","changeCoordinates","x","pageX","y","pageY","eventType","touches","coordinates","wireResizeEvents","onMouseMove","onMouseUp","touchMoveEvent","touchEndEvent","unwireResizeEvents","clickHandler","hoverBars","icon","collapseAction","expandAction","splitterDetails","collapseClass","eventArgs","beforeAction","trigger","beforeExpandArgs","cancel","flexGrow","currentBarIndex","previousElementSibling","updateIconsOnExpand","expandEventArgs","afterAction","hideTargetBarIcon","targetBar","showTargetBarIcon","updateIconsOnCollapse","splitInstance","prevPaneCollapsed","nextPaneExpanded","showCurrentBarIcon","prevBar","nextPaneNextEle","nextBar","nextPaneIndex","beforeCollapseArgs","collapseEventArgs","event","pane","prevPaneIndex","nextPaneCollapsible","prevPaneCollapsible","prevPaneExpanded","nextPaneCollapsed","nextElementSibling","prevPanePreEle","currentIndex","getSeparatorIndex","getPrevBar","getNextBar","updateBars","preventDefault","resizeStartArgs","previousFlexBasis","updatePaneFlexBasis","nextFlexBasis","totalPercent","totalWidth","convertPercentageToPixel","offsetWidth","offsetHeight","previous","removePercentageUnit","convertPixelToPercentage","convertPixelToNumber","offset","parseFloat","targetElement","convertedValue","percentage","toString","offsetValue","Math","ceil","calcDragPosition","rectValue","separatorPosition","getSeparatorPosition","rectBound","left","top","offSet","getMinMax","selection","defaultVal","prevPane","getPaneHeight","isValidSize","isValid","getPaneDimensions","previousPaneHeightWidth","nextPaneHeightWidth","prePaneDimenson","nextPaneDimension","checkCoordinates","coordinatesChanged","isCursorMoved","getBorder","clientWidth","clientHeight","paneSize","separatorNewPosition","validateDraggedPosition","prevPaneCurrentWidth","nextPaneCurrentWidth","validateMinMaxValues","difference","calculateCurrentDimensions","addStaticPaneClass","validateMinRange","paneCurrentWidth","paneMinDimensions","validatedVal","paneMinRange","validateMaxRange","paneMaxDimensions","paneMaxRange","equatePaneWidths","round","Number","draggedPos","prevPaneHeightWidth","separatorTopLeft","offsetLeft","offsetTop","prePaneRange","nextPaneRange","pane1MinSize","pane2MinSize","pane1MaxSize","pane2MaxSize","validatedSize","panesDimension","child","sizeFlag","flex-basis","template","toElement","templateCompile","ele","cnt","blazorContain","window","tempEle","compileElement","childNodes","childEle","isStringTemplate","updateBlazorTemplate","id","val","prop","trim","templateFn","outerHTML","compile","templateFUN","childElement","nodeName","expand","collapse","destroy","isDestroyed","addPaneClass","removePaneOrders","paneClass","panes","querySelectorAll","removeProperty","setPaneOrder","removeSeparator","updatePanes","addPane","paneProperties","newPane","paneDetails","splice","insertBefore","removePane","elementClass","Collection","Event","NotifyPropertyChanges","Component","Panel","DashboardLayout","rows","panelID","movePanelCalled","resizeCalled","mOffX","mOffY","maxTop","maxRows","mouseX","mouseY","minTop","minLeft","panelCollection","sortedArray","gridPanelCollection","overlapElement","overlapElementClone","overlapSubElementClone","collisionChecker","dragCollection","elementRef","dimensions","allItems","oldRowCol","isDynamicallyUpdated","availableClasses","setOldRowCol","calculateCellSize","panels","panelPropertyChange","row","col","createPanelElement","idValue","initialize","isRenderComplete","showGridLines","checkMediaQuery","initGridLines","table","tbody","maxRow","tr","columns","td","setAttributes","sizeX","sizeY","setPanelPosition","setHeightAndWidth","updateRowHeight","childElementCount","panelElements","panelElement","getInlinePanels","maxCol","setMinMaxValues","maxColumnValue","colValue","setXYAttributes","panel_1","renderPanels","tempObject","mediaQuery","matchMedia","matches","mainElement","updatePanelLayout","setClasses","checkMediaQuerySizing","renderDashBoardCells","allowDragging","enableDraggingContent","sortedPanel","bindEvents","updatePanels","updateCloneArrayObject","checkColumnValue","panelResponsiveUpdate","setEnableRtl","cellSize","floor","cellAspectRatio","cellSpacing","updateOldRowColumn","getElementById","createSubElement","templateParser","error","renderTemplate","appendElement","templateElements","item","append","cellElement","panelModel","panelId","panelContent","disablePanel","header","headerTemplateElement","panelBody","contentHeightValue","getComputedStyle","setStyle","model","hasAttribute","minSizeX","minSizeY","maxSizeX","maxSizeY","zIndex","isUndefined","panelProp","resizeEvents","allowResizing","downResizeHandler","touchDownResizeHandler","refresh","bind","downHandler","lastMouseX","lastMouseY","moveEventName","upEventName","moveResizeHandler","isMouseUpBound","upResizeHandler","closest","args","downTarget","currentTarget","shadowEle","elementX","elementY","elementWidth","elementHeight","originalWidth","getCellInstance","originalHeight","changedTouches","touchMoveResizeHandler","getCellSize","updateMaxTopLeft","moveTarget","updateResizeElement","maxLeft","handleArray","handleClass","diffY","diffX","resizingPanel","currentX","currentY","oldSizeX","oldSizeY","dY","dX","getMinHeight","getMaxHeight","getMinWidth","getMaxWidth","getResizeRowColumn","attributes","upTarget","undefined","allowFloating","moveItemsUpwards","pixelsToColumns","pixelsToRows","collisions","getPanelBase","allowPushing","pixels","isCeil","curColWidth","l","sortItem","rowIndex","colIndex","len","moveItemUpwards","updateGridLines","availableRow","availableColumn","rowValue","columnValue","ignoreItems","column","oldRow","updateLayout","cellInstance","removeResizeClasses","checkDragging","sortPanels","this_1","filter","panel","updatedPanel","updatedRows","getRowColumn","setHeightWidth","heightValue","widthValue","setXYDimensions","renderCell","dashBoardCell","xValue","checkMinMaxValues","cells","cell","ignore","items","h","w","getPanel","rightWardsSpaceChecking","rowElements","spacedColumns","sizeXValue","occupiedValues","getOccupiedColumns","checkingElement","sort","next","occupiedItems","leftWardsSpaceChecking","prev","reverse","adjustmentAvailable","leftAdjustable","rightAdjustable","leftSpacing","rightSpacing","isAdjustable","rowElement","topAdjustable","eleSizeX","eleCol","getRowElements","isLeftAdjustable","spacedColumnValue","isRightAdjustable","endRow","topCheck","startRow","spacedRowValue","isXSpacingAvailable","spacing","isSpaceAvailable","subSpacingColumns","base","spaces","isLeftAdjudtable","xAdjust","replacable","isRightAdjudtable","collisionValue","collision","updatedCollision","exclusions","sortCollisionItems","collisionItems","this_2","updatedModels","adjust","resetLayout","addPanelCalled","cloneObject","element_1","cloneArray","checkCollision","swapAvailability","available","eleModel","count","collideModel","excludeEle","checkForSwapping","direction","eleSwapRow","isSwappable","count1","updatedRow","collideInstance","elementinstance","swapItems","swappedElements","collisionItemsRow","itemModel","initialModel","collisionModels","proxy_1","item1","updateRowColumn","checkForCompletePushing","isSubValue","srcEle","updateCollisionChecked","eleSizeY","eleRow","shouldRestrict","i_1","collisionY","collisionCol","collisionX","overlapElementModel","ele_1","k","eleRow_1","excludeElements","collisionPanel","clone","proxy_2","overlapElementRow1","this_3","rowVal","colValue_1","collisionModels1","proxy","resizerElements","i_2","containerEle","draggableHandle","setResizingClass","container","resizableHandles","spanEle","addClassValue","heigthValue","cellHeight","cellWidth","getRowColumnDragValues","elementTop","elementLeft","collections","dragobj","Draggable","dragArea","handle","abort","dragStart","onDraggingStart","dragStop","setHolderPosition","changedPanels","panelInstance","i_3","panelsInitialModel","changedArgs","dragStopEventArgs","drag","draggedEventArgs","onDragStart","dragStartArgs","cloneModels","JSON","parse","stringify","eleRowValue","startCol","setDragArea","position","source","endCol","dragCol","excludeItems","cellSizeOne","cellSizeZero","currentCellInstance","addPanel","insertAdjacentElement","updatePanel","serialize","cloneModel","customObject","removeAll","removePanel","movePanel","resizePanel","removeAttribute","getDragInstance","draggableInstance","updateCellSizeAndSpacing","updatePanelsDynamically","checkForIDValues","keyEntity"],"mappings":"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"}