@model ABMODELE.Models.Producto

@{
    ViewBag.Title = "Edit";
    
    //Index para hacer seguimiento de la cantidad de ProdutcoToIngredientes
    int i = 0;
}

<h2>Edit</h2>

<script type="text/javascript" src="http://code.jquery.com/jquery-1.10.0.min.js"></script>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Producto</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ProductoId)

        <div class="form-group">
            @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Precio, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Precio, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Precio, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ConJuna, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.ConJuna)
                    @Html.ValidationMessageFor(model => model.ConJuna, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Destacado, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Destacado)
                    @Html.ValidationMessageFor(model => model.Destacado, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TiempoPreparacion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TiempoPreparacion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TiempoPreparacion, "", new { @class = "text-danger" })
            </div>
        </div>

        <h2>Ingredientes</h2>

        <ul id="Ingredientes">


            @if (Model.ProductoToIngredientes != null)
            {
                foreach (var ingrediente in Model.ProductoToIngredientes)
                {
                    Html.RenderPartial("IngredientePartial", new ABMODELE.Models.ViewModel.ProductoToIngredienteViewModel() { productoToIngrediente = ingrediente, index = i });
                    i++;
                }
            }
            else
            {
                <li id="nada">Ninguno</li>
            }


        </ul>
        <div id="comboBoxIngredientes">
            <!--Aca va el combobox desde el partial ComboBoxIngredientes-->
            <label>Seleccione ingrediente a agregar:</label>
        </div>
        <a id="agregarIngrediente" onclick="agregarIngrediente()">Agregar Ingrediente</a>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script>
    var index = @i;
    function agregarIngrediente() {
        var seleccionado = $("#selectIngredientes option:selected").val();
        alert(seleccionado);
        $.get('/Productos/IngredienteRow', {i : index, idProd: @Model.ProductoId, idIngrediente: seleccionado },  function (template) {
            $("#Ingredientes").append(template);
        });
        $("#selectIngredientes option:selected").remove();
        index++;
    }
    $(document).ready(function () {
        $.get('/Ingredientes/ComboBoxIngredientes', { idProd: @Model.ProductoId},
            function (template) {
                $("#comboBoxIngredientes").append(template);
            })
    });

    function eliminar(elemento, idOpcion, nameOpcion) {

        //Agregamos dicho ingrediente al comboBox
        $("#selectIngredientes").append(new Option(nameOpcion, idOpcion));

        //Eliminamos el ingrediente
        document.getElementById("ingrediente" + elemento).remove();

        for (i = elemento + 1; i < index; i++) {
            var j = i - 1;

            //Editamos el index del id
            var ingredienteId = document.getElementById("ProductoToIngredientes_" + i + "__IngredienteId");
            ingredienteId.setAttribute("name", "ProductoToIngredientes[" + j + "].IngredienteId")


            //Editamos el index del ProductoId
            var productoId = document.getElementById("ProductoToIngredientes_" + i + "__ProductoId");
            productoId.setAttribute("name", "ProductoToIngredientes[" + j + "].ProductoId")
            
            
            //Editamos el index de la cantidad
            var ingredienteCant = document.getElementById("ProductoToIngredientes_" + i + "__CantidadProducto");
            ingredienteCant.setAttribute("name", "ProductoToIngredientes[" + j + "].CantidadProducto")
        }
        index--;

    }


</script>

